public static String unEscapeString(String str,char escapeChar,char charToEscape){$  return unEscapeString(str,escapeChar,new char[]{charToEscape});$}$
public void checkNextPoissonConsistency(double mean){$  final int sampleSize=1000;$  final int minExpectedCount=7;$  long maxObservedValue=0;$  final double alpha=0.001;$  UnitTestUtils.Frequency<Long> frequency=new UnitTestUtils.Frequency<Long>();$  for (int i=0; i < sampleSize; i++) {$    long value=randomData.nextPoisson(mean);$    if (value > maxObservedValue) {$      maxObservedValue=value;$    }$    frequency.addValue(value);$  }$  PoissonDistribution poissonDistribution=new PoissonDistribution(mean);$  int lower=1;$  while (poissonDistribution.cumulativeProbability(lower - 1) * sampleSize < minExpectedCount) {$    lower++;$  }$  int upper=(int)(5 * mean);$  while ((1 - poissonDistribution.cumulativeProbability(upper - 1)) * sampleSize < minExpectedCount) {$    upper--;$  }$  int binWidth=0;$  boolean widthSufficient=false;$  double lowerBinMass=0;$  double upperBinMass=0;$  while (!widthSufficient) {$    binWidth++;$    lowerBinMass=poissonDistribution.probability(lower - 1,lower + binWidth - 1);$    upperBinMass=poissonDistribution.probability(upper - binWidth - 1,upper - 1);$    widthSufficient=FastMath.min(lowerBinMass,upperBinMass) * sampleSize >= minExpectedCount;$  }$  List<Integer> binBounds=new ArrayList<Integer>();$  binBounds.add(lower);$  int bound=lower + binWidth;$  while (bound < upper - binWidth) {$    binBounds.add(bound);$    bound+=binWidth;$  }$  binBounds.add(upper);$  final int binCount=binBounds.size() + 1;$  long[] observed=new long[binCount];$  double[] expected=new double[binCount];$  observed[0]=0;$  for (int i=0; i < lower; i++) {$    observed[0]+=frequency.getCount((long)i);$  }$  expected[0]=poissonDistribution.cumulativeProbability(lower - 1) * sampleSize;$  observed[binCount - 1]=0;$  for (int i=upper; i <= maxObservedValue; i++) {$    observed[binCount - 1]+=frequency.getCount((long)i);$  }$  expected[binCount - 1]=(1 - poissonDistribution.cumulativeProbability(upper - 1)) * sampleSize;$  for (int i=1; i < binCount - 1; i++) {$    observed[i]=0;$    for (int j=binBounds.get(i - 1); j < binBounds.get(i); j++) {$      observed[i]+=frequency.getCount((long)j);$    }$    expected[i]=(poissonDistribution.cumulativeProbability(binBounds.get(i) - 1) - poissonDistribution.cumulativeProbability(binBounds.get(i - 1) - 1)) * sampleSize;$  }$  if (UnitTestUtils.chiSquareTest(expected,observed) < alpha) {$    StringBuilder msgBuffer=new StringBuilder();$    DecimalFormat df=new DecimalFormat("#.##");$    msgBuffer.append("Chisquare test failed for mean = ");$    msgBuffer.append(mean);$    msgBuffer.append(" p-value = ");$    msgBuffer.append(UnitTestUtils.chiSquareTest(expected,observed));$    msgBuffer.append(" chisquare statistic = ");$    msgBuffer.append(UnitTestUtils.chiSquare(expected,observed));$    msgBuffer.append(". \n");$    msgBuffer.append("bin\t\texpected\tobserved\n");$    for (int i=0; i < expected.length; i++) {$      msgBuffer.append("[");$      msgBuffer.append(i == 0 ? 1 : binBounds.get(i - 1));$      msgBuffer.append(",");$      msgBuffer.append(i == binBounds.size() ? "inf" : binBounds.get(i));$      msgBuffer.append(")");$      msgBuffer.append("\t\t");$      msgBuffer.append(df.format(expected[i]));$      msgBuffer.append("\t\t");$      msgBuffer.append(observed[i]);$      msgBuffer.append("\n");$    }$    msgBuffer.append("This test can fail randomly due to sampling error with probability ");$    msgBuffer.append(alpha);$    msgBuffer.append(".");$    Assert.fail(msgBuffer.toString());$  }$}$
public DefaultJobRowBuilder(Function<Map<JobField,String>,String> idGenerator,Function<SecurityContext,String> userIdExtractor,Clock timestampGenerator){$  this.idGenerator=idGenerator;$  this.userIdExtractor=userIdExtractor;$  this.timestampGenerator=timestampGenerator;$}$
protected final boolean handleAllocNode(AllocNode src){$  boolean ret=false;$  Node[] targets=pag.allocLookup(src);$  for (  Node element : targets) {$    if (element.makeP2Set().add(src)) {$      varNodeWorkList.add((VarNode)element);$      ret=true;$    }$  }$  return ret;$}$
@Override protected FieldConfigBase createCopy(FieldConfigBase fieldConfigBase){$  FieldConfigWKT copy=null;$  if (fieldConfigBase != null) {$    copy=new FieldConfigWKT(fieldConfigBase.getCommonData());$  }$  return copy;$}$
public void handleEntryExpiredSA(EntryExpiredBusPacket packet) throws Exception {$  handleEntryExpiredCoreSA(packet.getEntryHolder(),packet.getTransaction(),packet.isFromReplication());$}$
public static SM_SYSTEM_MESSAGE STR_EXTRACT_GATHER_SUCCESS_1_BASIC(DescriptionId descriptionId){$  return new SM_SYSTEM_MESSAGE(1330078,descriptionId);$}$
public void toggle(Animation animIn,Animation animOut){$  toggle(true,animIn,animOut);$}$
private boolean isInSameEvolutionChain(Pokemon p1,Pokemon p2){$  ArrayList<Pokemon> evolutionLine=getEvolutionLine(p1);$  for (  Pokemon poke : evolutionLine) {$    if (poke.number == p2.number) {$      return true;$    }$  }$  return false;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Aura_END_ME_TO_B(String skillname){$  return new SM_SYSTEM_MESSAGE(1200459,skillname);$}$
public PhotosGetUploadServerQuery(VkApiClient client,UserActor actor){$  super(client,"photos.getUploadServer",PhotoUpload.class);$  accessToken(actor.getAccessToken());$}$
public ChangeReport onEquipmentUnitAdd(final EquipmentUnitAdd equipmentUnitAdd){$  log.debug("onEquipmentUnitAdd - entering onEquipmentUnitAdd()..");$  ChangeReport changeReport=new ChangeReport(equipmentUnitAdd);$  changeReport.setState(CHANGE_STATE.SUCCESS);$  ProcessConfiguration processConfiguration=configurationController.getProcessConfiguration();$  if (processConfiguration.getEquipmentConfiguration(equipmentUnitAdd.getEquipmentId()) != null) {$    changeReport.appendError("onEquipmentUnitAdd - Equipment unit id: " + equipmentUnitAdd.getEquipmentId() + " is already registered");$    changeReport.setState(CHANGE_STATE.FAIL);$    return changeReport;$  }$  EquipmentConfiguration conf=null;$  try {$    conf=equipmentConfigurationFactory.createEquipmentConfiguration(equipmentUnitAdd.getEquipmentUnitXml());$  }$ catch (  Exception ex) {$    changeReport.setState(CHANGE_STATE.FAIL);$    changeReport.appendError(StackTraceHelper.getStackTrace(ex));$    return changeReport;$  }$  EquipmentMessageHandler equnit=null;$  boolean dynamicTimeDeadbandEnabled=environment.getRequiredProperty(Options.DYNAMIC_TIME_DEADBAND_ENABLED,Boolean.class);$  conf.setDynamicTimeDeadbandEnabled(dynamicTimeDeadbandEnabled);$  log.info("onEquipmentUnitAdd - Dynamic timedeadband enabled for equipment id: " + conf.getId() + " enabled: "+ dynamicTimeDeadbandEnabled);$  EquipmentLoggerFactory equipmentLoggerFactory=EquipmentLoggerFactory.createFactory(conf,processConfiguration,environment.getProperty("c2mon.daq.logging.useEquipmentLoggers",Boolean.class,false),environment.getProperty("c2mon.daq.logging.useEquipmentAppendersOnly",Boolean.class,false));$  EquipmentMessageSender equipmentMessageSender=(EquipmentMessageSender)applicationContext.getBean(EQUIPMENT_MESSAGE_SENDER);$  equipmentMessageSender.init(conf,equipmentLoggerFactory);$  configurationController.addCoreDataTagChanger(conf.getId(),equipmentMessageSender);$  try {$    validateDataTags(conf,equipmentMessageSender);$    validateCommandTags(conf,equipmentMessageSender);$    equnit=EquipmentMessageHandler.createEquipmentMessageHandler(conf.getHandlerClassName(),new EquipmentCommandHandler(conf.getId(),requestController),new EquipmentConfigurationHandler(conf.getId(),configurationController),equipmentMessageSender);$    equnit.setEquipmentLoggerFactory(equipmentLoggerFactory);$    processConfiguration.addEquipmentConfiguration(conf);$  }$ catch (  InstantiationException e) {$    String msg="Error while instantiating " + conf.getHandlerClassName();$    equipmentMessageSender.confirmEquipmentStateIncorrect(msg + ": " + e.getMessage());$    log.error(msg,e);$  }$catch (  IllegalAccessException e) {$    String msg="Access error while calling constructor of " + conf.getHandlerClassName();$    equipmentMessageSender.confirmEquipmentStateIncorrect("Error in code: " + msg);$    log.error(msg,e);$  }$catch (  ClassNotFoundException e) {$    String msg="Handler class not found: " + conf.getHandlerClassName();$    equipmentMessageSender.confirmEquipmentStateIncorrect("Error during configuration: " + msg);$    log.error(msg,e);$  }$  if (equnit != null) {$    if (!registerNewEquipmentUnit(equnit)) {$      changeReport.setState(CHANGE_STATE.REBOOT);$      changeReport.appendWarn("problem detected while registering new equipment. You need to restart the DAQ");$    }$  }$  return changeReport;$}$
private void requestNewPhotosOrders(Context c,int page,boolean refresh){$  page=refresh ? 1 : page + 1;$  listener=new OnRequestPhotosListener(c,page,Mysplash.CATEGORY_TOTAL_NEW,refresh,false);$  model.getService().requestPhotos(page,Mysplash.DEFAULT_PER_PAGE,model.getPhotosOrder(),listener);$}$
public static void picture(double x,double y,String filename,double scaledWidth,double scaledHeight,double degrees){$  if (scaledWidth < 0)   throw new IllegalArgumentException("width is negative: " + scaledWidth);$  if (scaledHeight < 0)   throw new IllegalArgumentException("height is negative: " + scaledHeight);$  Image image=getImage(filename);$  double xs=scaleX(x);$  double ys=scaleY(y);$  double ws=factorX(scaledWidth);$  double hs=factorY(scaledHeight);$  if (ws < 0 || hs < 0)   throw new IllegalArgumentException("image " + filename + " is corrupt");$  if (ws <= 1 && hs <= 1)   pixel(x,y);$  offscreen.rotate(Math.toRadians(-degrees),xs,ys);$  offscreen.drawImage(image,(int)Math.round(xs - ws / 2.0),(int)Math.round(ys - hs / 2.0),(int)Math.round(ws),(int)Math.round(hs),null);$  offscreen.rotate(Math.toRadians(+degrees),xs,ys);$  draw();$}$
public VisualTable(Visualization vis,String group,Schema schema){$  super(TableVisualItem.class);$  init(vis,group,schema);$}$
public boolean isCritical(){$  return false;$}$
public static DataTag buildCreateBasicDataTag(Properties properties){$  if (properties == null) {$    properties=new Properties();$  }$  DataTag dataTag=DataTag.create("DataTag",Integer.class,new DataTagAddress()).build();$  dataTag.setEquipmentId(10L);$  properties.setProperty("name","DataTag");$  properties.setProperty("description","<no description provided>");$  properties.setProperty("mode",String.valueOf(TagMode.OPERATIONAL.ordinal()));$  properties.setProperty("dataType",Integer.class.getName());$  properties.setProperty("isLogged",String.valueOf(true));$  properties.setProperty("equipmentId",String.valueOf(10l));$  properties.setProperty("address",new DataTagAddress().toConfigXML());$  return dataTag;$}$
protected void updateRowCount(){$  int maxrow=m_rows.getMaximumRow() + 1;$  Iterator cols=getColumns();$  while (cols.hasNext()) {$    Column c=(Column)cols.next();$    c.setMaximumRow(maxrow);$  }$}$
public boolean isSelected(){$  ClusterViewer viewer=getViewer();$  return viewer.getPcoaTab() != null && viewer.getPcoaTab().isShowTriPlot();$}$
public int hashCode(){$  return (int)(ConnectionRelativeTime.class.hashCode() + time);$}$
protected VideoRemoveTagQuery videoId(int value){$  return unsafeParam("video_id",value);$}$
public static void cover(String dest,int w,int h,List<String> sources) throws Exception {$  if (sources == null) {$    throw new Exception("no source!");$  }$  int len=sources.size();$  if (len == 4 || len == 9) {$    BufferedImage src[]=new BufferedImage[len];$    for (int i=0; i < len; i++) {$      src[i]=ImageIO.read(new File(sources.get(i)));$    }$    BufferedImage out=new BufferedImage(w,h,BufferedImage.TYPE_3BYTE_BGR);$    Graphics g=out.getGraphics();$    g.setColor(Color.WHITE);$    g.fillRect(0,0,w,h);$    g.setColor(new Color(0xCCD4D0));$    int size=len == 4 ? 2 : 3;$    int space=len == 4 ? 4 : 2;$    int w1=(w - 1) / size;$    int h1=(h - 1) / size;$    float fd=((float)w1) / h1;$    for (int i=0; i < len; i++) {$      BufferedImage img=src[i];$      int w2=img.getWidth();$      int h2=img.getHeight();$      float fs=((float)w2) / h2;$      if (fs > fd) {$        w2=w1;$        h2=(int)(w2 / fs);$      }$ else       if (fs < fd) {$        h2=h1;$        w2=(int)(h2 * fs);$      }$ else {$        w2=w1;$        h2=h1;$      }$      Image tmp=img.getScaledInstance(w2,h2,Image.SCALE_SMOOTH);$      int x=(i % size) * w1;$      int y=(i / size) * h1;$      g.drawImage(tmp,x + space + (w1 - w2) / 2,y + space + (h1 - h2) / 2,w2 - 2 * space,h2 - 2 * space,null);$      g.drawRect(x,y,w1,h1);$    }$    ImageIO.write(out,"jpg",new File(dest));$  }$ else {$    throw new Exception("sources MUST is 4 or 9 picutures!" + len);$  }$}$
public Bindings add(String property,JRadioButton[] cs,int defaultValue){$  registerPropertyChangeListener(cs);$  return add(new JRadioButtonBinding(property,cs,defaultValue));$}$
public void cancelAlarm(Context context){$  if (alarmMgr != null) {$    alarmMgr.cancel(alarmIntent);$  }$  ComponentName receiver=new ComponentName(context,BootReceiver.class);$  PackageManager pm=context.getPackageManager();$  pm.setComponentEnabledSetting(receiver,PackageManager.COMPONENT_ENABLED_STATE_DISABLED,PackageManager.DONT_KILL_APP);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DispelNPCBuff_A_TO_SELF(String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1201257,skillcaster,skillname);$}$
public static <T>T findValueOfType(Collection<T> collection,Class<? extends T>[] types){$  if (isEmpty(collection) || ObjectUtils.isEmpty(types))   return null;$  for (  Class<? extends T> type : types) {$    T value=findValueOfType(collection,type);$    if (value != null)     return value;$  }$  return null;$}$
private static long writeLogSegment(DistributedLogManager dlm,int numRecords,long startTxId,int flushPerNumRecords,boolean emptyRecord) throws IOException {$  long txid=startTxId;$  LogWriter writer=dlm.startLogSegmentNonPartitioned();$  for (long j=1; j <= numRecords; j++) {$    if (emptyRecord) {$      writer.write(DLMTestUtil.getEmptyLogRecordInstance(txid++));$    }$ else {$      writer.write(DLMTestUtil.getLargeLogRecordInstance(txid++));$    }$    if (j % flushPerNumRecords == 0) {$      writer.setReadyToFlush();$      writer.flushAndSync();$    }$  }$  writer.setReadyToFlush();$  writer.flushAndSync();$  writer.close();$  return txid;$}$
@Override public void characters(char[] ch,int start,int length) throws SAXException {$}$
protected boolean runTestsOnEdt(){$  return true;$}$
@Override public Histogram histogram(){$  return hist;$}$
public CountriesExample(){$  oredCriteria=new ArrayList<Criteria>();$}$
public Pair<Integer,Set<Long>> writeTable(long uuid){$  preBufferAccess();$  int offset=_buffer.position();$  try {$    if (_buffer.remaining() < 4) {$      return Pair.<Integer,Set<Long>>create(-1,ImmutableSet.<Long>of());$    }$    _buffer.position(offset + 4);$    Set<Long> uuids;$    try {$      ByteBuffer tableBuffer=_buffer.slice();$      uuids=getTableSerializer().loadAndSerialize(uuid,new ByteBufferOutputStream(tableBuffer));$      tableBuffer.flip();$      int length=tableBuffer.limit();$      _buffer.position(offset);$      _buffer.putInt(length);$      _buffer.position(offset + 4 + length);$    }$ catch (    UnknownTableException|DroppedTableException e) {$      uuids=ImmutableSet.of(uuid);$      writeUnknownOrDroppedTable(offset,e);$    }$    _modified=true;$    return Pair.create(offset,uuids);$  }$ catch (  BufferOverflowException e) {$    _buffer.position(offset);$    if (offset == 0) {$      _log.error("Table with UUID {} is too large to fit in a single block",uuid);$      throw new IllegalArgumentException("Table too large");$    }$    return Pair.<Integer,Set<Long>>create(-1,ImmutableSet.<Long>of());$  }$catch (  IOException e) {$    throw Throwables.propagate(e);$  }$ finally {$    postBufferAccess();$  }$}$
public static boolean isBehind(VisibleObject object1,VisibleObject object2){$  float angle=MathUtil.convertHeadingToDegree(object1.getHeading()) + 90;$  if (angle >= 360) {$    angle-=360;$  }$  double radian=Math.toRadians(angle);$  float x0=object1.getX();$  float y0=object1.getY();$  float x1=(float)(Math.cos(radian) * 5) + x0;$  float y1=(float)(Math.sin(radian) * 5) + y0;$  float xA=object2.getX();$  float yA=object2.getY();$  float temp=(x1 - x0) * (yA - y0) - (y1 - y0) * (xA - x0);$  return temp > 0;$}$
void assignToBlock(BlockId blk){$  internalLock.writeLock().lock();$  try {$    flush();$    this.blk=blk;$    contents.read(blk);$    pins=0;$    lastLsn=LogSeqNum.readFromPage(contents,LAST_LSN_OFFSET);$  }$  finally {$    internalLock.writeLock().unlock();$  }$}$
public boolean contains(int index){$  return index >= getFirst() && index <= getLast();$}$
@Override public boolean hasPassword(){$  return propertyMap.containsKey(PASSWORD_KEY);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Protect_A_TO_ME(String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200701,skillcaster,skillname);$}$
protected Highlight buildHighlight(IDataSet set,int dataSetIndex,float xVal,DataSet.Rounding rounding){$  final Entry e=set.getEntryForXPos(xVal,rounding);$  if (e == null)   return null;$  MPPointD pixels=mChart.getTransformer(set.getAxisDependency()).getPixelsForValues(e.getX(),e.getY());$  return new Highlight(e.getX(),e.getY(),(float)pixels.x,(float)pixels.y,dataSetIndex,set.getAxisDependency());$}$
public static SM_SYSTEM_MESSAGE STR_MSG_MY_PARTY_STATE(String value0){$  return new SM_SYSTEM_MESSAGE(1390135,value0);$}$
private static void storeAsTypeWithSignaturesImport(String strTypeToImport,@Nullable Function objScope,PhpIndex objIndex,HashSet<String> objTypesSet){$  if (strTypeToImport.contains("|")) {$    for (    String strOneType : strTypeToImport.split("\\|")) {$      storeAsTypeWithSignaturesImport(Types.getType(strOneType),objScope,objIndex,objTypesSet);$    }$    return;$  }$  if (StringUtil.isEmpty(strTypeToImport) || strTypeToImport.equals("?")) {$    return;$  }$  if (strTypeToImport.contains("#")) {$    TypeFromSignatureResolvingUtil.resolveSignature(strTypeToImport,objScope,objIndex,objTypesSet);$    return;$  }$  objTypesSet.add(Types.getType(strTypeToImport));$}$
private V doGet(Object okey){$  Comparable<? super K> key=comparable(okey);$  for (; ; ) {$    Node<K,V> n=findNode(key);$    if (n == null)     return null;$    Object v=n.value;$    if (v != null)     return (V)v;$  }$}$
public JSONWriter key(String string) throws JSONException {$  if (string == null) {$    throw new JSONException("Null key.");$  }$  if (this.mode == 'k') {$    try {$      this.stack[this.top - 1].putOnce(string,Boolean.TRUE);$      if (this.comma) {$        this.writer.write(',');$      }$      this.writer.write(JSONObject.quote(string));$      this.writer.write(':');$      this.comma=false;$      this.mode='o';$      return this;$    }$ catch (    IOException e) {$      throw new JSONException(e);$    }$  }$  throw new JSONException("Misplaced key.");$}$
private boolean useIsSameNode(Node node){$  if (node instanceof NodeImpl) {$    return false;$  }$  Document doc=node.getNodeType() == Node.DOCUMENT_NODE ? (Document)node : node.getOwnerDocument();$  return (doc != null && doc.getImplementation().hasFeature("Core","3.0"));$}$
public boolean isExpired(Period period,Date now){$  int expiryDays=getExpiryDays();$  return expiryDays != DataSet.NO_EXPIRY && new DateTime(period.getEndDate()).plusDays(expiryDays).isBefore(new DateTime(now));$}$
protected void at(String msg,boolean condition){$  Assert.assertTrue(msg,condition);$}$
@Deprecated public boolean isAssignableFrom(Type from){$  if (from == null) {$    return false;$  }$  if (type.equals(from)) {$    return true;$  }$  if (type instanceof Class<?>) {$    return rawType.isAssignableFrom($Gson$Types.getRawType(from));$  }$ else   if (type instanceof ParameterizedType) {$    return isAssignableFrom(from,(ParameterizedType)type,new HashMap<String,Type>());$  }$ else   if (type instanceof GenericArrayType) {$    return rawType.isAssignableFrom($Gson$Types.getRawType(from)) && isAssignableFrom(from,(GenericArrayType)type);$  }$ else {$    throw buildUnexpectedTypeError(type,Class.class,ParameterizedType.class,GenericArrayType.class);$  }$}$
private Collection<Var> migrateColumnValueAsRelation(Var parent,String fkName,String childType,Object childId){$  if (childId == null) {$    return Collections.emptyList();$  }$  String relationType=namer.relationName(fkName);$  String childRole=namer.roleChildName(fkName);$  String parentRole=namer.roleParentName(fkName);$  String foreignPrimaryKey=namer.primaryKey(childType,Collections.singleton(childId.toString()));$  Var child=var().isa(childType).id(foreignPrimaryKey);$  Var relation=var().rel(childRole,var().id(id(child))).rel(parentRole,var().id(id(parent))).isa(relationType);$  return Arrays.asList(child,relation);$}$
protected void animateToState(boolean checked){$  if (mProcessAnimator == null) {$    return;$  }$  if (mProcessAnimator.isRunning()) {$    mProcessAnimator.cancel();$  }$  mProcessAnimator.setDuration(mAnimationDuration);$  if (checked) {$    mProcessAnimator.setFloatValues(mProcess,1f);$  }$ else {$    mProcessAnimator.setFloatValues(mProcess,0);$  }$  mProcessAnimator.start();$}$
@Override public Fraction reciprocal(){$  return new Fraction(denominator,numerator);$}$
public String listTargetFeatures(TargetFeatureComputer featureComputer,List<Element> segmentsAndBoundaries){$  String pauseSymbol=featureComputer.getPauseSymbol();$  List<Target> targets=overridableCreateTargetsWithPauses(segmentsAndBoundaries,pauseSymbol);$  String header=featureComputer.getAllFeatureProcessorNamesAndValues();$  StringBuilder text=new StringBuilder();$  StringBuilder bin=new StringBuilder();$  for (  Target target : targets) {$    FeatureVector features=featureComputer.computeFeatureVector(target);$    text.append(featureComputer.toStringValues(features)).append("\n");$    bin.append(features.toString()).append("\n");$  }$  String out=header + "\n" + text+ "\n"+ bin;$  return out;$}$
public void type(int... keys) throws InterruptedException {$  for (  int key : keys) {$    type(key);$  }$}$
public FriendsAddQuery(VkApiClient client,UserActor actor,int userId){$  super(client,"friends.add",AddResponse.class);$  accessToken(actor.getAccessToken());$  userId(userId);$}$
public void clear(){$  cache.invalidateAllData();$}$
@Override public void onConfigsUpdated(List<ConfigItem> configItems){$  if (configItems != null && !configItems.isEmpty()) {$    for (    ConfigItem configItem : configItems) {$      configValues.put(configItem.getName(),configItem.getValue());$    }$  }$}$
@Override public boolean shouldSkipClass(Class<?> aClass){$  return false;$}$
private static Field[] fieldInfo(Entry entry){$  Field[] fields=null;$synchronized (AbstractEntry.class) {$    if (fieldArrays == null)     fieldArrays=new WeakHashMap();$ else {$      fields=(Field[])fieldArrays.get(entry.getClass());$      if (fields != null)       return fields;$    }$  }$  final int SKIP_MODIFIERS=(Modifier.STATIC | Modifier.TRANSIENT | Modifier.FINAL);$  fields=entry.getClass().getFields();$  ArrayList usable=null;$  for (int i=0; i < fields.length; i++) {$    if ((fields[i].getModifiers() & SKIP_MODIFIERS) != 0 || (fields[i].getType().isPrimitive())) {$      if (usable == null) {$        usable=new ArrayList();$        for (int j=0; j < i; j++)         usable.add(fields[j]);$      }$    }$ else {$      if (usable != null)       usable.add(fields[i]);$    }$  }$  if (usable != null)   fields=(Field[])usable.toArray(new Field[usable.size()]);$synchronized (AbstractEntry.class) {$    fieldArrays.put(entry.getClass(),fields);$  }$  return fields;$}$
public boolean equals(Object obj){$  return obj == this || (obj != null && obj.getClass() == getClass() && instance.equals(((MarshalledWrapper)obj).instance));$}$
protected static Dfp atanInternal(final Dfp a){$  Dfp y=new Dfp(a);$  Dfp x=new Dfp(y);$  Dfp py=new Dfp(y);$  for (int i=3; i < 90; i+=2) {$    x=x.multiply(a);$    x=x.multiply(a);$    x=x.negate();$    y=y.add(x.divide(i));$    if (y.equals(py)) {$      break;$    }$    py=new Dfp(y);$  }$  return y;$}$
private void flush(){$  myPage.write(currentBlk);$  lastFlushedLsn=lastLsn;$}$
private XtnConfilctCheckIndicators checkTransactionConflict(Context context,IEntryHolder entry,ITemplateHolder template,boolean isShadow){$  XtnEntry xtnEntry;$  if ((template.getTemplateOperation() == SpaceOperations.READ || template.getTemplateOperation() == SpaceOperations.READ_IE) && !template.isExclusiveReadLockOperation()) {$    ITransactionalEntryData edata=context.isNonBlockingReadOp() ? context.getLastRawMatchSnapshot() : entry.getTxnEntryData();$    xtnEntry=edata.getWriteLockOwner();$    if (xtnEntry == null)     return XtnConfilctCheckIndicators.NO_CONFLICT;$    final XtnStatus entryWriteLockStatus=xtnEntry.getStatus();$    final int entryWriteLockOperation=edata.getWriteLockOperation();$    final boolean isDirtyRead=indicateDirtyRead(template);$    final boolean isReadCommitted=indicateReadCommitted(edata,template);$    if (template.getXidOriginatedTransaction() == null || !edata.getWriteLockTransaction().equals(template.getXidOriginatedTransaction())) {$      if (isDirtyRead)       return checkTransactionConflictDirtyRead(context,xtnEntry,entryWriteLockStatus,entryWriteLockOperation,entry,edata,isShadow);$      if (isReadCommitted)       return checkTransactionConflictReadCommitted(context,xtnEntry,entryWriteLockStatus,entryWriteLockOperation,entry,edata,isShadow);$      return checkTransactionConflict(xtnEntry,entryWriteLockStatus,entryWriteLockOperation);$    }$    if (entryWriteLockOperation == SpaceOperations.TAKE || entryWriteLockOperation == SpaceOperations.TAKE_IE)     return XtnConfilctCheckIndicators.DELETED_BY_OWN_XTN;$    if (isReadCommitted && isShadow)     return XtnConfilctCheckIndicators.XTN_CONFLICT;$    return XtnConfilctCheckIndicators.NO_CONFLICT;$  }$  if ((template.getTemplateOperation() == SpaceOperations.TAKE_IE || template.getTemplateOperation() == SpaceOperations.TAKE)) {$    List<XtnEntry> readWriteLock=entry.getReadLockOwners();$    if (entry.getWriteLockTransaction() == null && (readWriteLock == null || readWriteLock.isEmpty()))     return XtnConfilctCheckIndicators.NO_CONFLICT;$    if (readWriteLock != null && !readWriteLock.isEmpty()) {$      for (      XtnEntry readLockOwner : readWriteLock) {$        xtnEntry=readLockOwner;$        if (xtnEntry != null) {$          XtnStatus entryReadLockStatus=xtnEntry.getStatus();$          if (entryReadLockStatus == XtnStatus.COMMITED || entryReadLockStatus == XtnStatus.COMMITING || (entryReadLockStatus == XtnStatus.PREPARED && xtnEntry.m_SingleParticipant) || entryReadLockStatus == XtnStatus.ROLLED || (entryReadLockStatus == XtnStatus.ROLLING && !xtnEntry.m_AlreadyPrepared))           continue;$          if (template.getXidOriginatedTransaction() == null || !readLockOwner.m_Transaction.equals(template.getXidOriginatedTransaction()))           return XtnConfilctCheckIndicators.XTN_CONFLICT;$        }$      }$    }$    xtnEntry=entry.getWriteLockOwner();$    if (xtnEntry == null)     return XtnConfilctCheckIndicators.NO_CONFLICT;$    XtnStatus entryWriteLockStatus=xtnEntry.getStatus();$    int entryWriteLockOperation=entry.getWriteLockOperation();$    if (template.getXidOriginatedTransaction() == null || !entry.getWriteLockTransaction().equals(template.getXidOriginatedTransaction())) {$      return checkTransactionConflict(xtnEntry,entryWriteLockStatus,entryWriteLockOperation);$    }$    if (entryWriteLockOperation == SpaceOperations.TAKE || entryWriteLockOperation == SpaceOperations.TAKE_IE)     return XtnConfilctCheckIndicators.DELETED_BY_OWN_XTN;$    return XtnConfilctCheckIndicators.NO_CONFLICT;$  }$  if (template.getTemplateOperation() == SpaceOperations.UPDATE || template.isExclusiveReadLockOperation()) {$    List<XtnEntry> rwLock=entry.getReadLockOwners();$    if (entry.getWriteLockTransaction() == null && (rwLock == null || rwLock.isEmpty()))     return XtnConfilctCheckIndicators.NO_CONFLICT;$    if (rwLock != null && !rwLock.isEmpty()) {$      for (      XtnEntry readLockOwner : rwLock) {$        xtnEntry=readLockOwner;$        if (xtnEntry != null) {$          XtnStatus entryReadLockStatus=xtnEntry.getStatus();$          if (entryReadLockStatus == XtnStatus.COMMITED || entryReadLockStatus == XtnStatus.COMMITING || (entryReadLockStatus == XtnStatus.PREPARED && xtnEntry.m_SingleParticipant) || entryReadLockStatus == XtnStatus.ROLLED || (entryReadLockStatus == XtnStatus.ROLLING && !xtnEntry.m_AlreadyPrepared))           continue;$          if (template.getXidOriginatedTransaction() == null || !readLockOwner.m_Transaction.equals(template.getXidOriginatedTransaction()))           return XtnConfilctCheckIndicators.XTN_CONFLICT;$        }$      }$    }$    xtnEntry=entry.getWriteLockOwner();$    if (xtnEntry == null)     return XtnConfilctCheckIndicators.NO_CONFLICT;$    XtnStatus entryWriteLockStatus=xtnEntry.getStatus();$    int entryWriteLockOperation=entry.getWriteLockOperation();$    if (template.getXidOriginatedTransaction() == null || !entry.getWriteLockTransaction().equals(template.getXidOriginatedTransaction())) {$      return checkTransactionConflict(xtnEntry,entryWriteLockStatus,entryWriteLockOperation);$    }$    if (entryWriteLockOperation == SpaceOperations.TAKE || entryWriteLockOperation == SpaceOperations.TAKE_IE)     return UpdateModifiers.isUpdateOrWrite(template.getOperationModifiers()) ? XtnConfilctCheckIndicators.NO_CONFLICT : XtnConfilctCheckIndicators.DELETED_BY_OWN_XTN;$    if (template.isFifoGroupPoll() && xtnEntry == template.getXidOriginated() && template.isExclusiveReadLockOperation())     return XtnConfilctCheckIndicators.DELETED_BY_OWN_XTN;$    return XtnConfilctCheckIndicators.NO_CONFLICT;$  }$  return XtnConfilctCheckIndicators.NO_CONFLICT;$}$
public boolean freePage(int pageNum){$  Page p;$  try {$    p=fetchPage(pageNum);$  }$ catch (  PageException e) {$    return false;$  }$  return freePage(p);$}$
public synchronized void openDriver(SurfaceHolder holder) throws IOException {$  Camera theCamera=camera;$  if (theCamera == null) {$    if (requestedCameraId >= 0) {$      theCamera=OpenCameraInterface.open(requestedCameraId);$    }$ else {$      theCamera=OpenCameraInterface.open();$    }$    if (theCamera == null) {$      throw new IOException();$    }$    camera=theCamera;$  }$  theCamera.setPreviewDisplay(holder);$  if (!initialized) {$    initialized=true;$    configManager.initFromCameraParameters(theCamera);$  }$  Camera.Parameters parameters=theCamera.getParameters();$  String parametersFlattened=parameters == null ? null : parameters.flatten();$  try {$    configManager.setDesiredCameraParameters(theCamera,false);$  }$ catch (  RuntimeException re) {$    Log.w(TAG,"Camera rejected parameters. Setting only minimal safe-mode parameters");$    Log.i(TAG,"Resetting to saved camera params: " + parametersFlattened);$    if (parametersFlattened != null) {$      parameters=theCamera.getParameters();$      parameters.unflatten(parametersFlattened);$      try {$        theCamera.setParameters(parameters);$        configManager.setDesiredCameraParameters(theCamera,true);$      }$ catch (      RuntimeException re2) {$        Log.w(TAG,"Camera rejected even safe-mode parameters! No configuration");$      }$    }$  }$}$
@Override public IntegerDistribution makeDistribution(){$  return new GeometricDistribution(0.40);$}$
public final boolean isOverridingLocale(){$  return (myOverride & CFG_LOCALE) != 0;$}$
public static ContourNextLinkMessage fromBytes(MedtronicCNLSession pumpSession,byte[] bytes) throws ChecksumException, EncryptionException {$  ContourNextLinkMessage message=MedtronicMessage.fromBytes(bytes);$  if (bytes.length >= 57) {$    byte encryptedPayloadSize=bytes[56];$    ByteBuffer encryptedPayload=ByteBuffer.allocate(encryptedPayloadSize);$    encryptedPayload.put(bytes,57,encryptedPayloadSize);$    byte[] decryptedPayload=decrypt(pumpSession.getKey(),pumpSession.getIV(),encryptedPayload.array());$    message.mPayload.position(57);$    message.mPayload.put(decryptedPayload);$  }$  return message;$}$
public Builder popupAnchor(Point popupAnchor){$  this.popupAnchor=popupAnchor;$  return this;$}$
@deprecated protected DictionaryBasedBreakIterator(InputStream compiledRules) throws IOException {$  this.fRData=RBBIDataWrapper.get(compiledRules);$  this.dictionary=null;$  this.usingCTDictionary=true;$}$
public Builder boxZoom(Boolean boxZoom){$  this.boxZoom=boxZoom;$  return this;$}$
@Override public void undoAction(UndoInterface undoRedoObject){$  if (comboBox != null) {$    String oldValue=(String)undoRedoObject.getOldValue();$    comboBox.setSelectValueKey(oldValue);$  }$}$
public void removeRule(Rule ruleToDelete){$  List<Rule> ruleList=(List<Rule>)this.symbolData.getFeatureTypeStyle().rules();$  int indexFound=-1;$  int index=0;$  for (  Rule rule : ruleList) {$    if (rule == ruleToDelete) {$      indexFound=index;$      break;$    }$ else {$      index++;$    }$  }$  if (indexFound > -1) {$    ruleList.remove(indexFound);$  }$}$
public void loadMoreComplate(){$  isLoadingMoreData=false;$  if (mFooterView != null) {$    if (isManualLoadMoreData) {$      mFooterView.getLayoutParams().height=0;$    }$ else {$      mFooterView.setVisibility(GONE);$    }$  }$  getAdapter().notifyDataSetChanged();$}$
protected String renderUri(URI uri){$  return uri.toASCIIString();$}$
public JsonArray(){$  values=new ArrayList<JsonValue>();$}$
public void actionPerformed(ActionEvent ev){$  executeImmediately("close what=current;");$}$
public static long parseDateAsEpoch(String dateStr){$  try {$    return DateUtils.parseDate(dateStr).getTime();$  }$ catch (  DateParseException e) {$    return 0;$  }$}$
public static String nullSafeToString(byte[] array){$  if (array == null) {$    return NULL_STRING;$  }$  int length=array.length;$  if (length == 0) {$    return EMPTY_ARRAY;$  }$  StringBuffer buffer=new StringBuffer();$  for (int i=0; i < length; i++) {$    if (i == 0) {$      buffer.append(ARRAY_START);$    }$ else {$      buffer.append(ARRAY_ELEMENT_SEPARATOR);$    }$    buffer.append(array[i]);$  }$  buffer.append(ARRAY_END);$  return buffer.toString();$}$
public static void writeStringToFile(File file,String data) throws IOException {$  writeStringToFile(file,data,Charset.defaultCharset(),false);$}$
public boolean removeTuple(Tuple t){$  Table table=t.getTable();$  if (m_sets.contains(table)) {$    return table.removeTuple(t);$  }$ else {$    return false;$  }$}$
private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException {$}$
@SuppressWarnings("unchecked") public final S withValueSupplier(Splittable.BigIntegerIndexed<T> valueSupplier){$  this.valueSupplier=valueSupplier;$  return (S)this;$}$
public static boolean hasNextKeyTyped(){$synchronized (keyLock) {$    return !keysTyped.isEmpty();$  }$}$
public void loadSavedApi(){$  String savedApiLevel=PropertiesComponent.getInstance().getValue(FormFactorUtils.getPropertiesComponentMinSdkKey(myFormFactor),Integer.toString(myFormFactor.defaultApi));$  setSelectedApiLevel(savedApiLevel);$  if (getSelectedIndex() < 0 && getItemCount() > 0) {$    setSelectedIndex(0);$  }$}$
private void createFilter(Rule rule,JsonElement fieldsElement,JsonElement fieldDelimiterElement,String value){$  if (fieldsElement == null)   return;$  if (value == null) {$    rule.setElseFilter(true);$  }$ else {$    List<String> fieldList=new ArrayList<String>();$    JsonArray fieldArray=fieldsElement.getAsJsonArray();$    for (int fieldIndex=0; fieldIndex < fieldArray.size(); fieldIndex++) {$      JsonElement jsonFieldElement=fieldArray.get(fieldIndex);$      if (jsonFieldElement != null) {$        JsonObject fieldObj=jsonFieldElement.getAsJsonObject();$        fieldList.add(fieldObj.get("name").getAsString());$      }$    }$    String[] values=null;$    if (fieldDelimiterElement != null) {$      values=value.split(fieldDelimiterElement.getAsString());$    }$ else {$      values=new String[1];$      values[0]=value;$    }$    List<Filter> filterList=new ArrayList<Filter>();$    int index=0;$    while (index < values.length) {$      Expression fieldExpression=filterFactory.property(fieldList.get(index));$      Expression valueExpression=filterFactory.literal(values[index]);$      PropertyIsEqualTo filter=filterFactory.equals(fieldExpression,valueExpression);$      filterList.add(filter);$      index++;$    }$    Filter completeFilter=null;$    if (filterList.size() > 1) {$      completeFilter=filterFactory.and(filterList);$    }$ else     if (filterList.size() == 1) {$      completeFilter=filterList.get(0);$    }$    rule.setFilter(completeFilter);$  }$}$
public static void computeReachableFromObject(Object root,Class<?> declaredRootClass,List<String> currentPath,ReachableClasses reachableClasses) throws IllegalAccessException, ClassNotFoundException {$  final Class<?> concreteRootClass=DeepEqualsTesterUtil.getClass(declaredRootClass,root);$  List<Field> allFields=DeepEqualsTesterUtil.getAllFields(concreteRootClass);$  for (  Field field : allFields) {$    if (!Modifier.isStatic(field.getModifiers())) {$      field.setAccessible(true);$      final Object fieldObject;$      if (root == null) {$        fieldObject=null;$      }$ else {$        fieldObject=field.get(root);$      }$      List<String> childPath=Lists.newArrayList();$      childPath.addAll(currentPath);$      childPath.add(field.toString());$      addToReachableAndRecurse(fieldObject,field.getType(),field.getGenericType(),childPath,reachableClasses);$    }$  }$}$
public int next(){$  if (!hasNextLine())   return -1;$  String line=nextLine();$  while (hasNextLine() && !line.startsWith(">")) {$    line=nextLine();$  }$  if (line == null || !line.startsWith(">"))   return -1;$  final String queryName=Basic.getReadName(line);$  matchesTextLength=0;$  byte[] bytes=makeSAM(queryName,Basic.replaceSpaces(line,' ')).getBytes();$  if (matchesTextLength + bytes.length >= matchesText.length) {$    byte[] tmp=new byte[2 * (matchesTextLength + bytes.length)];$    System.arraycopy(matchesText,0,tmp,0,matchesTextLength);$    matchesText=tmp;$  }$  System.arraycopy(bytes,0,matchesText,matchesTextLength,bytes.length);$  matchesTextLength+=bytes.length;$  return 1;$}$
public boolean isUnknown(){$  return true;$}$
@Override public void touchAuthorAvatar(){$  User u=User.buildUser(model.getPhoto());$  Mysplash.getInstance().setUser(u);$  view.touchAuthorAvatar();$}$
private void requestUserPhotos(Context c,int page,boolean refresh,String order){$  page=refresh ? 1 : page + 1;$  listener=new OnRequestPhotosListener(c,page,refresh);$  model.getService().requestUserPhotos((User)model.getRequestKey(),page,Mysplash.DEFAULT_PER_PAGE,order,listener);$}$
private void listSelectionChanged(IStructuredSelection selection){$  if (editor == null || editor.getSelectionProvider() == null) {$    try {$      contents.reset();$      showAnnotations(svnFile,svnAnnotateBlocks,contents,false);$    }$ catch (    PartInitException e) {$      return;$    }$catch (    IOException e) {$      return;$    }$  }$  ISelectionProvider selectionProvider=editor.getSelectionProvider();$  if (selectionProvider == null) {$    return;$  }$  ITextSelection textSelection=(ITextSelection)selectionProvider.getSelection();$  AnnotateBlock listSelection=null;$  try {$    listSelection=(AnnotateBlock)selection.getFirstElement();$  }$ catch (  ClassCastException cce) {$    return;$  }$  if (listSelection == null) {$    return;$  }$  if (textSelection.getStartLine() == listSelection.getStartLine() && textSelection.getEndLine() == listSelection.getEndLine() && selection.equals(previousListSelection)) {$    return;$  }$  if (!lastSelectionWasText) {$    try {$      int start=document.getLineOffset(listSelection.getStartLine());$      int end=document.getLineOffset(listSelection.getEndLine() + 1);$      editor.selectAndReveal(start,end - start);$      if (editor != null && !page.isPartVisible(editor)) {$        page.activate(editor);$      }$    }$ catch (    BadLocationException e) {$    }$  }$  if (historyView != null) {$    SVNHistoryPage page=(SVNHistoryPage)historyView.getHistoryPage();$    page.selectRevision(new SVNRevision.Number(listSelection.getRevision()));$  }$  lastSelectionWasText=false;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_ME_TO_SELF(String skillname){$  return new SM_SYSTEM_MESSAGE(1200280,skillname);$}$
public static void o(double[][] A){$  o(A,Parameters.OutputFieldWidth,Parameters.OutputFracPlaces);$}$
public void addClickingListener(OnWheelClickedListener listener){$  clickingListeners.add(listener);$}$
public boolean hasSuperClassAccess(){$  return getSuperClassAccessOpt().getNumChild() != 0;$}$
public static byte[] compressForGzip(String string){$  ByteArrayOutputStream os=null;$  GZIPOutputStream gos=null;$  try {$    os=new ByteArrayOutputStream(string.length());$    gos=new GZIPOutputStream(os);$    gos.write(string.getBytes("UTF-8"));$    byte[] compressed=os.toByteArray();$    return compressed;$  }$ catch (  IOException e) {$    e.printStackTrace();$  }$ finally {$    okhttp3.internal.Util.closeQuietly(gos);$    okhttp3.internal.Util.closeQuietly(os);$  }$  return null;$}$
public SimpleAsyncPollingContainerConfigurer eventListenerMethod(Object eventListener,String methodName){$  MethodEventListenerAdapter methodEventListenerAdapter=new MethodEventListenerAdapter();$  methodEventListenerAdapter.setDelegate(eventListener);$  methodEventListenerAdapter.setMethodName(methodName);$  methodEventListenerAdapter.afterPropertiesSet();$  pollingEventListenerContainer.setEventListener(methodEventListenerAdapter);$  return this;$}$
public void waitUntilFinished(){$  flushTermination();$  flushUpdate();$  flushInsert();$  shutdown();$  for (int i=0; i < numberOfQueues; i++) {$    while (!executors[i].isTerminated()) {$      try {$        executors[i].awaitTermination(10000000,TimeUnit.SECONDS);$      }$ catch (      InterruptedException e) {$      }$    }$  }$  if (useBulkInsert) {$    bulkInsert();$  }$  logFinalResults();$  if (this.error != null) {$    if (error instanceof RuntimeException) {$      throw (RuntimeException)error;$    }$ else {$      throw new RuntimeException("One or more parallel tasks failed",this.error);$    }$  }$}$
public void onCreate(K key,R resource){$}$
public static String formatMillis(int millisec){$  int seconds=(int)(millisec / 1000);$  int hours=seconds / (60 * 60);$  seconds%=(60 * 60);$  int minutes=seconds / 60;$  seconds%=60;$  String time;$  if (hours > 0) {$    time=String.format(Locale.ROOT,"%d:%02d:%02d",hours,minutes,seconds);$  }$ else {$    time=String.format(Locale.ROOT,"%d:%02d",minutes,seconds);$  }$  return time;$}$
public Matrix3f adjoint(){$  return adjoint(null);$}$
@Override public void unparsedEntityDecl(String name,String publicId,String systemId,String notationName) throws SAXException {$  allowXMLCatalogPI=false;$  if (dtdHandler != null) {$    dtdHandler.unparsedEntityDecl(name,publicId,systemId,notationName);$  }$}$
protected void createNetwork() throws Throwable {$  sendContainerNetworkRequest(NetworkOperationType.CREATE);$  verifyNetworkStateExists(networkStateReference);$  sendGetNetworkStateRequest();$}$
private void pickCenterOverlap(ScoutWidget[] list){$  for (int i=0; i < list.length; i++) {$    ScoutWidget scoutWidget=list[i];$    float centerX=scoutWidget.getX() + scoutWidget.getWidth() / 2;$    float centerY=scoutWidget.getY() + scoutWidget.getHeight() / 2;$    for (int j=0; j < list.length; j++) {$      if (i == j)       continue;$      ScoutWidget widget=list[j];$      if (scoutWidget.isGuideline()) {$        continue;$      }$      if (!widget.isGuideline() && ScoutWidget.distance(scoutWidget,widget) > MAX_DIST_FOR_CENTER_OVERLAP) {$        continue;$      }$      if (!widget.isGuideline() || widget.isVerticalGuideline()) {$        if (Math.abs(widget.getX() - centerX) < CENTER_ERROR) {$          scoutWidget.setEdgeCentered(1,widget,Direction.WEST);$        }$        if (Math.abs(widget.getX() + widget.getWidth() - centerX) < CENTER_ERROR) {$          scoutWidget.setEdgeCentered(1,widget,Direction.EAST);$        }$      }$      if (!widget.isGuideline() || widget.isHorizontalGuideline()) {$        if (Math.abs(widget.getY() - centerY) < CENTER_ERROR) {$          scoutWidget.setEdgeCentered(0,widget,Direction.NORTH);$        }$        if (Math.abs(widget.getY() + widget.getHeight() - centerY) < CENTER_ERROR) {$          scoutWidget.setEdgeCentered(0,widget,Direction.SOUTH);$        }$      }$    }$  }$}$
public JSONObject optJSONObject(String key){$  Object o=opt(key);$  return o instanceof JSONObject ? (JSONObject)o : null;$}$
private BSPTree<Euclidean1D> childAfter(BSPTree<Euclidean1D> node){$  if (isDirect(node)) {$    return node.getPlus();$  }$ else {$    return node.getMinus();$  }$}$
@Override public Object[] toArray(){$  return backedSet.toArray();$}$
public void init(String title){$  mTitleView=(TextView)findViewById(R.id.most_visited_title);$  mThumbnailView=(MostVisitedThumbnail)findViewById(R.id.most_visited_thumbnail);$  mTitleView.setText(title);$  mTitlePaddingStart=ApiCompatibilityUtils.getPaddingStart(mTitleView);$  mFaviconSize=getResources().getDimensionPixelSize(R.dimen.default_favicon_size);$  int extraPaddingStart=mFaviconSize + mTitleView.getCompoundDrawablePadding();$  ApiCompatibilityUtils.setPaddingRelative(mTitleView,mTitlePaddingStart + extraPaddingStart,0,0,0);$}$
public JSONArray(){$  this.myArrayList=new ArrayList<Object>();$}$
public boolean start(){$  if (!mIsStarted && !mIsStopped) {$    mStopWatch.start();$    mIsStarted=true;$    return true;$  }$  return false;$}$
public boolean isCritical(){$  return false;$}$
public static long floorDiv(final long a,final long b) throws MathRuntimeException {$  if (b == 0l) {$    throw new MathRuntimeException(LocalizedCoreFormats.ZERO_DENOMINATOR);$  }$  final long m=a % b;$  if ((a ^ b) >= 0l || m == 0l) {$    return a / b;$  }$ else {$    return (a / b) - 1l;$  }$}$
public void compose(final double[] operand,final int operandOffset,final double[] f,final double[] result,final int resultOffset){$  for (int i=0; i < compIndirection.length; ++i) {$    final int[][] mappingI=compIndirection[i];$    double r=0;$    for (int j=0; j < mappingI.length; ++j) {$      final int[] mappingIJ=mappingI[j];$      double product=mappingIJ[0] * f[mappingIJ[1]];$      for (int k=2; k < mappingIJ.length; ++k) {$        product*=operand[operandOffset + mappingIJ[k]];$      }$      r+=product;$    }$    result[resultOffset + i]=r;$  }$}$
public static Value local(Value val){$  if (val != null && isLocal(val))   return val;$ else   return null;$}$
public static boolean isEmpty(Object s){$  return s == null || X.EMPTY.equals(s) || X.EMPTY.equals(s.toString().trim());$}$
public void testIntegerField() throws Exception {$  AnObject empty=new AnObject();$  AnObject full=helper.fill(new AnObject());$  assertTrue(helper.areEquals(full,full));$  assertFalse(helper.areEquals(empty,full));$}$
public static Integer toIntegerObject(Object obj){$  if (obj == null) {$    return null;$  }$  if (obj instanceof Integer) {$    return (Integer)obj;$  }$  if (obj instanceof Number) {$    return ((Number)obj).intValue();$  }$  Integer result=null;$  try {$    result=Integer.parseInt(obj.toString());$  }$ catch (  Exception e) {$  }$  return result;$}$
@Nullable public TypeRef lookupType(String fullName){$  return typeByName.get(getTypeNameInSymbolTable(fullName));$}$
public AtomicFile(File baseName){$  mBaseName=baseName;$  mBackupName=new File(baseName.getPath() + ".bak");$}$
public FieldRotation<T> revert(){$  return new FieldRotation<T>(q0.negate(),q1,q2,q3,false);$}$
boolean doesProfileMatch(Experiment experiment,SegmentationProfile segmentationProfile,HttpHeaders headers,Context context){$  return doesProfileMatch(experiment,segmentationProfile,headers,context,false);$}$
private static final void addSuperClasses(final TypeDecl t,final HashSet result){$  if (t == null)   return;$  if (t.isClassDecl() && !result.contains(t)) {$    result.add((ClassDecl)t);$  }$ else   if (t.isTypeVariable()) {$    TypeVariable var=(TypeVariable)t;$    for (int i=0; i < var.getNumTypeBound(); i++)     addSuperClasses(var.getTypeBound(i).type(),result);$  }$ else   if (t instanceof LUBType || t instanceof GLBType) {$    result.add(t);$  }$ else   if (t.isInterfaceDecl())   result.add((ClassDecl)t.typeObject());$}$
private ChannelSelection createChannelSelectionError(StyleFactoryImpl styleFactory,ContrastMethod contrastMethod){$  ContrastEnhancement contrastEnhancement=(ContrastEnhancement)styleFactory.contrastEnhancement(null,contrastMethod.name());$  FilterFactory ff=CommonFactoryFinder.getFilterFactory();$  Map<String,Expression> options=contrastEnhancement.getOptions();$  options.put("algorithm",ff.literal("TestStretchToMinimumMaximum"));$  options.put("minValue",ff.literal("1.0"));$  options.put("maxValue",ff.literal("5.0"));$  SelectedChannelType channelType=styleFactory.createSelectedChannelType("channel name",contrastEnhancement);$  SelectedChannelType[] channels=new SelectedChannelType[3];$  channels[0]=channelType;$  channels[1]=channelType;$  channels[2]=channelType;$  ChannelSelection channelSelection=styleFactory.createChannelSelection(channels);$  return channelSelection;$}$
public static boolean isNativePageUrl(String url,boolean isIncognito){$  return nativePageType(url,null,isIncognito) != NativePageType.NONE;$}$
@NotNull @VisibleForTesting public static ModuleResourceRepository createForTest(@NotNull AndroidFacet facet,@NotNull Collection<VirtualFile> resourceDirectories){$  return createForTest(facet,resourceDirectories,Collections.<LocalResourceRepository>emptyList());$}$
public LazyConnectionDataSourceProxy(AbstractReadRoutingDataSource abstractReadRoutingDataSource){$  this.abstractReadRoutingDataSource=abstractReadRoutingDataSource;$}$
public static List<List<Double>> partitionVariable(List<Double> arr,int chunk){$  int count=0;$  List<List<Double>> ret=new ArrayList<List<Double>>();$  while (count < arr.size()) {$    List<Double> sublist=arr.subList(count,count + chunk);$    count+=chunk;$    ret.add(sublist);$  }$  for (  List<Double> lists : ret) {$    if (lists.size() < chunk)     ret.remove(lists);$  }$  return ret;$}$
private void encodeContexts(){$  int i, j;$  int n_reachable=0, n_scc_reachable=0;$  int n_full=0;$  long max_contexts=Long.MIN_VALUE;$  CgEdge p;$  Random rGen=new Random();$  pre_cnt=1;$  max_scc_size=1;$  for (i=0; i < n_func; ++i) {$    vis_cg[i]=0;$    indeg_cg[i]=0;$    max_context_size_block[i]=0;$  }$  queue_cg.clear();$  callGraphDFS(Constants.SUPER_MAIN);$  for (i=0; i < n_func; ++i) {$    if (vis_cg[i] == 0)     continue;$    p=call_graph[i];$    while (p != null) {$      if (rep_cg[i] == rep_cg[p.t]) {$        p.scc_edge=true;$      }$ else {$        p.scc_edge=false;$        ++indeg_cg[rep_cg[p.t]];$      }$      p=p.next;$    }$    ++n_reachable;$    if (rep_cg[i] == i)     ++n_scc_reachable;$  }$  for (i=0; i < n_func; ++i)   if (vis_cg[i] != 0 && rep_cg[i] != i) {$    p=call_graph[i];$    while (p.next != null)     p=p.next;$    p.next=call_graph[rep_cg[i]];$    call_graph[rep_cg[i]]=call_graph[i];$  }$  max_context_size_block[Constants.SUPER_MAIN]=1;$  queue_cg.addLast(Constants.SUPER_MAIN);$  while (!queue_cg.isEmpty()) {$    i=queue_cg.getFirst();$    queue_cg.removeFirst();$    p=call_graph[i];$    while (p != null) {$      if (p.scc_edge == false) {$        j=rep_cg[p.t];$        if (Constants.MAX_CONTEXTS - max_context_size_block[i] < max_context_size_block[j]) {$          long start=rGen.nextLong();$          if (start < 0)           start=-start;$          if (start > Constants.MAX_CONTEXTS - max_context_size_block[i]) {$            start=Constants.MAX_CONTEXTS - max_context_size_block[i];$            max_context_size_block[j]=Constants.MAX_CONTEXTS;$          }$ else {$            if (max_context_size_block[j] < start + max_context_size_block[i])             max_context_size_block[j]=start + max_context_size_block[i];$          }$          p.map_offset=start + 1;$        }$ else {$          p.map_offset=max_context_size_block[j] + 1;$          max_context_size_block[j]+=max_context_size_block[i];$        }$        if (--indeg_cg[j] == 0)         queue_cg.addLast(j);$      }$ else {$        p.map_offset=1;$      }$      p=p.next;$    }$    if (max_context_size_block[i] > max_contexts)     max_contexts=max_context_size_block[i];$  }$  for (i=n_func - 1; i > -1; --i) {$    if (vis_cg[i] == 0)     continue;$    if (rep_cg[i] != i) {$      max_context_size_block[i]=max_context_size_block[rep_cg[i]];$      p=call_graph[i];$      while (p.next.s == i)       p=p.next;$      call_graph[rep_cg[i]]=p.next;$      p.next=null;$    }$    if (max_context_size_block[i] == Constants.MAX_CONTEXTS)     ++n_full;$    context_size[i]=max_context_size_block[i];$    block_num[i]=1;$  }$  if (getOpts().geom_blocking()) {$    for (i=0; i < n_func; ++i) {$      if (vis_cg[i] == 0)       continue;$      p=call_graph[i];$      while (p != null) {$        j=p.t;$        if (j != i && p.scc_edge == true) {$          if (context_size[j] <= Constants.MAX_CONTEXTS - max_context_size_block[i]) {$            p.map_offset=context_size[j] + 1;$            context_size[j]+=max_context_size_block[i];$            ++block_num[j];$          }$ else {$            int iBlock=0;$            if (block_num[j] > 1)             iBlock=rGen.nextInt(block_num[j] - 1) + 1;$            p.map_offset=iBlock * max_context_size_block[j] + 1;$          }$        }$        p=p.next;$      }$    }$  }$  ps.printf("Reachable Methods = %d, in which #Condensed Nodes = %d, #Full Context Nodes = %d \n",n_reachable - 1,n_scc_reachable - 1,n_full);$  ps.printf("Maximum SCC = %d \n",max_scc_size);$  ps.printf("The maximum context size = %e\n",(double)max_contexts);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_END_A_TO_B(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200935,skilltarget);$}$
protected double populationVariance(double[] v){$  double mean=StatUtils.mean(v);$  double sum=0;$  for (  double val : v) {$    sum+=(val - mean) * (val - mean);$  }$  return sum / v.length;$}$
@Override public boolean hasField(String fldName){$  return currentScan.hasField(fldName);$}$
public static boolean searchInArray(int[] data,int key){$  for (int i=0; i < data.length; i++) {$    if (key == data[i]) {$      return true;$    }$  }$  return false;$}$
private void initialize(Context context,AttributeSet attrs,int defStyleAttr,int defStyleRes){$  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {$    Log.e("GradientRadioLayout","GradientRadioLayout is only Android 21+ compatible. The view will crash !");$  }$  final TypedArray styleAttributes=context.obtainStyledAttributes(attrs,R.styleable.GradientRadioLayout,defStyleAttr,defStyleRes);$  mColorA=styleAttributes.getColor(R.styleable.GradientRadioLayout_colorA,getResources().getColor(R.color.color_a_default));$  mColorB=styleAttributes.getColor(R.styleable.GradientRadioLayout_colorB,getResources().getColor(R.color.color_b_default));$  mDegreesAngle=styleAttributes.getInt(R.styleable.GradientRadioLayout_angle,0);$  styleAttributes.recycle();$}$
protected WSService importService(Service service){$  String name=service.getQName().getLocalPart();$  Port port=(Port)service.getPorts().values().iterator().next();$  String location="";$  List extensionElements=port.getExtensibilityElements();$  for (  Object extension : extensionElements) {$    if (extension instanceof SOAPAddress) {$      SOAPAddress address=(SOAPAddress)extension;$      location=address.getLocationURI();$    }$  }$  WSService wsService=new WSService(this.namespace + name,location,this.wsdlLocation);$  return wsService;$}$
public ApplicationType createApplicationTypeFor(Application app,Jvm jvm,String mainClass){$  String[] appDesc=map.get(mainClass);$  if (appDesc != null) {$    return new MainClassApplicationType(app,appDesc[NAME],appDesc[DESCRIPTION],appDesc[ICON_PATH]);$  }$  return null;$}$
public static Map<String,Object> makeValidContext(ModelService model,String mode,Map<String,? extends Object> context) throws GenericServiceException {$  Map<String,Object> newContext;$  int modeInt=0;$  if (mode.equalsIgnoreCase("in")) {$    modeInt=1;$  }$ else   if (mode.equalsIgnoreCase("out")) {$    modeInt=2;$  }$  if (model == null) {$    throw new GenericServiceException("Model service is null! Should never happen.");$  }$ else {$switch (modeInt) {$case 2:$      newContext=model.makeValid(context,ModelService.OUT_PARAM,true,null);$    break;$case 1:$  newContext=model.makeValid(context,ModelService.IN_PARAM,true,null);$break;$default :$throw new GenericServiceException("Invalid mode, should be either IN or OUT");$}$return newContext;$}$}$
public UsersReportQuery comment(String value){$  return unsafeParam("comment",value);$}$
public Vector2f(){$  x=y=0;$}$
@Override public int addAttribute(QName qname,String attrType,String attrValue){$  int index=fElement.getXercesAttribute(qname.uri,qname.localpart);$  if (index < 0) {$    AttrImpl attr=(AttrImpl)((CoreDocumentImpl)fElement.getOwnerDocument()).createAttributeNS(qname.uri,qname.rawname,qname.localpart);$    attr.setNodeValue(attrValue);$    index=fElement.setXercesAttributeNode(attr);$    fDTDTypes.insertElementAt(attrType,index);$    fAugmentations.insertElementAt(new AugmentationsImpl(),index);$    attr.setSpecified(false);$  }$ else {$  }$  return index;$}$
public boolean exists(){$  return scanner != null;$}$
public void startDeleteJob(){$  try {$    Scheduler scheduler=Singleton.getScheduler();$    JobDetail job=newJob(DeleteRepositoryJob.class).withIdentity("deletejob").build();$    SimpleTrigger trigger=newTrigger().withIdentity("deletejob").withSchedule(simpleSchedule().withIntervalInSeconds(1).repeatForever()).build();$    scheduler.scheduleJob(job,trigger);$    scheduler.start();$  }$ catch (  SchedulerException ex) {$    LOGGER.severe(" caught a " + ex.getClass() + "\n with message: "+ ex.getMessage());$  }$}$
public static GsAuthResponse registerGameServer(GsConnection gsConnection,byte requestedId,byte[] defaultAddress,List<IPRange> ipRanges,int port,int maxPlayers,String password){$  GameServerInfo gsi=gameservers.get(requestedId);$  if (gsi == null) {$    log.info(gsConnection + " requestedID=" + requestedId+ " not aviable!");$    return GsAuthResponse.NOT_AUTHED;$  }$  if (gsi.getConnection() != null) {$    return GsAuthResponse.ALREADY_REGISTERED;$  }$  if (!gsi.getPassword().equals(password) || !NetworkUtils.checkIPMatching(gsi.getIp(),gsConnection.getIP())) {$    log.info(gsi.getPassword() + " " + password);$    log.info(gsConnection + " wrong ip or password!");$    return GsAuthResponse.NOT_AUTHED;$  }$  gsi.setDefaultAddress(defaultAddress);$  gsi.setIpRanges(ipRanges);$  gsi.setPort(port);$  gsi.setMaxPlayers(maxPlayers);$  gsi.setConnection(gsConnection);$  gsConnection.setGameServerInfo(gsi);$  return GsAuthResponse.AUTHED;$}$
public boolean handleResponse(ZWaveController zController,SerialMessage lastSentMessage,SerialMessage incomingMessage) throws ZWaveSerialMessageException {$  logger.warn("TODO: {} unsupported RESPONSE.",incomingMessage.getMessageClass().getLabel());$  return false;$}$
public static void buildUnpaidOrderTable(Connection conn){$  try {$    Statement stmt=conn.createStatement();$    stmt.execute("CREATE TABLE UnpaidOrder " + "( CustomerNumber CHAR(10) NOT NULL REFERENCES Customer(CustomerNumber), " + "  ProdNum CHAR(10) NOT NULL REFERENCES Coffee(ProdNum),"+ "  OrderDate CHAR(10),"+ "  Quantity DOUBLE,"+ "  Cost DOUBLE )");$  }$ catch (  SQLException ex) {$    System.out.println("ERROR: " + ex.getMessage());$  }$}$
public void addTypeBound(Access node){$  List<Access> list=(parent == null || state == null) ? getTypeBoundListNoTransform() : getTypeBoundList();$  list.addChild(node);$}$
public int compareTo(cp_info constant_pool[],cp_info cp,cp_info cp_constant_pool[]){$  if (tag != cp.tag)   return tag - cp.tag;$  CONSTANT_Integer_info cu=(CONSTANT_Integer_info)cp;$  return ((int)bytes) - (int)cu.bytes;$}$
public <T>T recall(File file,Class<T> type) throws IOException {$  try (FileInputStream fis=new FileInputStream(file)){$    return serializer.read(fis,type);$  }$ }$
private void handleFinishedH(boolean reschedule){$switch (mVerb) {$case VERB_EXECUTING:$case VERB_STOPPING:$    closeAndCleanupJobH(reschedule);$  break;$default :$break;$}$}$
public static int bestFactor(long size,Transaction tx){$  int avail=tx.bufferMgr().available();$  if (avail <= 1)   return 1;$  long k=size;$  double i=1.0;$  while (k > avail) {$    i++;$    k=(int)Math.ceil(size / i);$  }$  return (int)k;$}$
protected void restoreBaseURI(){$  fBaseURI.pop();$  fLiteralSystemID.pop();$  fExpandedSystemID.pop();$  fBaseURIScope.pop();$  fCurrentBaseURI.setBaseSystemId((String)fBaseURI.peek());$  fCurrentBaseURI.setLiteralSystemId((String)fLiteralSystemID.peek());$  fCurrentBaseURI.setExpandedSystemId((String)fExpandedSystemID.peek());$}$
@Deprecated public MapCursor addCursor(int x,int y,byte direction,byte type){$  return addCursor(x,y,direction,type,true);$}$
public synchronized static LuaState newLuaState(){$  int i=getNextStateIndex();$  LuaState L=new LuaState(i);$  states.add(i,L);$  return L;$}$
public boolean equals(final Quaternion q,final double eps){$  return Precision.equals(q0,q.getQ0(),eps) && Precision.equals(q1,q.getQ1(),eps) && Precision.equals(q2,q.getQ2(),eps)&& Precision.equals(q3,q.getQ3(),eps);$}$
@Override public Collection<SerialMessage> initialize(boolean refresh){$  ArrayList<SerialMessage> result=new ArrayList<SerialMessage>();$  if (isSupportRequestSupported == true && (refresh == true || initialiseDone == false) && getVersion() > 1) {$    result.add(getSupportedMessage());$  }$  return result;$}$
@SuppressWarnings("WeakerAccess") public boolean hasHeader(){$  return header != null;$}$
protected Criteria createCriteriaInternal(){$  Criteria criteria=new Criteria();$  return criteria;$}$
public boolean isCritical(){$  return true;$}$
public static Zmat o(Zdiagmat D,Zmat A) throws JampackException {$  if (D.order != A.nrow) {$    throw new JampackException("Unconformity in product.");$  }$  Zmat B=new Zmat(A.nrow,A.ncol);$  for (int i=0; i < A.nrow; i++) {$    for (int j=0; j < A.nc; j++) {$      B.re[i][j]=D.re[i] * A.re[i][j] - D.im[i] * A.im[i][j];$      B.im[i][j]=D.re[i] * A.im[i][j] + D.im[i] * A.re[i][j];$    }$  }$  return B;$}$
protected AbstractLeaseMap(Map map,Lease lease,long duration){$  this(map);$  map.put(lease,new Long(duration));$}$
public static String grabQueryString(String text) throws IOException {$  BufferedReader r=new BufferedReader(new StringReader(text));$  String aLine;$  StringBuilder buf=new StringBuilder();$  boolean passedScore=false;$  while ((aLine=r.readLine()) != null) {$    aLine=aLine.trim();$    if (aLine.startsWith("Score")) {$      if (!passedScore)       passedScore=true;$ else       break;$    }$    if (aLine.startsWith("Query")) {$      String[] words=aLine.split(" +");$      buf.append(words[2]);$    }$  }$  return buf.toString().replaceAll("\n","").replaceAll("\r","");$}$
public Math_Vector add(Math_Vector other){$  this.x+=other.x;$  this.y+=other.y;$  return this;$}$
@deprecated public LanguageMatcherData addDistance(String desired,String supported,int percent,String comment){$  return addDistance(desired,supported,percent,false,comment);$}$
public Location(int x,int y,int z){$  this.x=x;$  this.y=y;$  this.z=z;$}$
public static String dottedClassName(String typeDescriptor){$  if (!isByteCodeClassName(typeDescriptor)) {$    String t=typeDescriptor;$    int idx=0;$    while (idx < t.length() && t.charAt(idx) == '[') {$      idx++;$    }$    String c=t.substring(idx);$    if (c.length() == 1 && (c.startsWith("I") || c.startsWith("B") || c.startsWith("C")|| c.startsWith("S")|| c.startsWith("J")|| c.startsWith("D")|| c.startsWith("F")|| c.startsWith("Z"))) {$      Type ty=getType(t);$      return ty == null ? "" : getType(t).toString();$    }$    throw new IllegalArgumentException("typeDescriptor is not a class typedescriptor: '" + typeDescriptor + "'");$  }$  String t=typeDescriptor;$  int idx=0;$  while (idx < t.length() && t.charAt(idx) == '[') {$    idx++;$  }$  String className=typeDescriptor.substring(idx);$  className=className.substring(className.indexOf('L') + 1,className.indexOf(';'));$  className=className.replace('/','.');$  return className;$}$
private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {$  in.defaultReadObject();$  if (cookie == null)   throw new InvalidObjectException("null cookie reference");$  if (landlord == null)   throw new InvalidObjectException("null landlord reference");$  if (landlordUuid == null)   throw new InvalidObjectException("null landlordUuid reference");$}$
@Override public long skip(long n){$  if (n < 0) {$    throw new IllegalArgumentException("Number of characters to skip is less than zero: " + n);$  }$  if (idx >= charSequence.length()) {$    return -1;$  }$  int dest=(int)Math.min(charSequence.length(),idx + n);$  int count=dest - idx;$  idx=dest;$  return count;$}$
@SuppressWarnings({"unchecked","cast"}) public IntType fullCopy(){$  IntType tree=(IntType)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public static void deleteConnection(GeoServerConnection connection){$  getInstance().internal_deleteConnection(connection);$}$
public boolean isAssumedNonNullBefore(Unit s,Immediate i){$  AnalysisInfo ai=(AnalysisInfo)getFlowBefore(s);$  return ai.get(i) == NON_NULL;$}$
public boolean hasSet(String name){$  return m_map.containsKey(name);$}$
protected AbstractJmsListener(Delegator delegator){$  this.dispatcher=ServiceContainer.getLocalDispatcher("JMSDispatcher",delegator);$}$
public static String millisToString(long millis){$  return Strings.millisToString(millis,false);$}$
public final void incrementIdCounterTo(int id){$  int diff=id - mIdCounter.get();$  if (diff < 0)   return;$  mIdCounter.addAndGet(diff);$  updateSharedPreference();$}$
public static String join(Collection<? extends IdentifiableObject> objects){$  if (objects != null && objects.size() > 0) {$    Iterator<? extends IdentifiableObject> iterator=objects.iterator();$    StringBuilder builder=new StringBuilder(iterator.next().getDisplayName());$    while (iterator.hasNext()) {$      builder.append(SEPARATOR_JOIN).append(iterator.next().getDisplayName());$    }$    return builder.toString();$  }$  return null;$}$
public static boolean isMeganizedDAAFile(String fileName,boolean meganized) throws IOException {$  try (InputReaderLittleEndian ins=new InputReaderLittleEndian(new FileInputStreamAdapter(fileName))){$    long magicNumber=ins.readLong();$    if (magicNumber != DAAHeader.MAGIC_NUMBER)     throw new IOException("Input file is not a DAA file.");$    long version=ins.readLong();$    if (version > DAAHeader.DAA_VERSION)     throw new IOException("DAA version requires later version of MEGAN.");$    if (!meganized)     return true;$    ins.skip(76);$    int meganVersion=ins.readInt();$    if (meganVersion <= 0)     return false;$    if (meganVersion > DAAHeader.MEGAN_VERSION)     throw new IOException("DAA version requires later version of MEGAN.");$ else     return true;$  }$ }$
public PollsDeleteVoteQuery(VkApiClient client,UserActor actor,int pollId,int answerId){$  super(client,"polls.deleteVote",BoolInt.class);$  accessToken(actor.getAccessToken());$  pollId(pollId);$  answerId(answerId);$}$
public static String callPayPal(HttpServletRequest request,HttpServletResponse response){$  Locale locale=UtilHttp.getLocale(request);$  Delegator delegator=(Delegator)request.getAttribute("delegator");$  GenericValue userLogin=(GenericValue)request.getSession().getAttribute("userLogin");$  String orderId=(String)request.getAttribute("orderId");$  GenericValue orderHeader=null;$  try {$    orderHeader=EntityQuery.use(delegator).from("OrderHeader").where("orderId",orderId).queryOne();$  }$ catch (  GenericEntityException e) {$    Debug.logError(e,"Cannot get the order header for order: " + orderId,module);$    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resourceErr,"payPalEvents.problemsGettingOrderHeader",locale));$    return "error";$  }$  String orderTotal=orderHeader.getBigDecimal("grandTotal").toPlainString();$  String currencyUom=orderHeader.getString("currencyUom");$  GenericValue productStore=ProductStoreWorker.getProductStore(request);$  if (productStore == null) {$    Debug.logError("ProductStore is null",module);$    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resourceErr,"payPalEvents.problemsGettingMerchantConfiguration",locale));$    return "error";$  }$  GenericValue paymentConfig=ProductStoreWorker.getProductStorePaymentSetting(delegator,productStore.getString("productStoreId"),"EXT_PAYPAL",null,true);$  String configString=null;$  String paymentGatewayConfigId=null;$  if (paymentConfig != null) {$    paymentGatewayConfigId=paymentConfig.getString("paymentGatewayConfigId");$    configString=paymentConfig.getString("paymentPropertiesPath");$  }$  if (configString == null) {$    configString="payment.properties";$  }$  String company=UtilFormatOut.checkEmpty(productStore.getString("companyName"),"");$  String itemName=UtilProperties.getMessage(resource,"AccountingOrderNr",locale) + orderId + " "+ (company != null ? UtilProperties.getMessage(commonResource,"CommonFrom",locale) + " " + company : "");$  String itemNumber="0";$  String redirectUrl=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"redirectUrl",configString,"payment.paypal.redirect");$  String notifyUrl=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"notifyUrl",configString,"payment.paypal.notify");$  String returnUrl=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"returnUrl",configString,"payment.paypal.return");$  String cancelReturnUrl=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"cancelReturnUrl",configString,"payment.paypal.cancelReturn");$  String imageUrl=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"imageUrl",configString,"payment.paypal.image");$  String payPalAccount=getPaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"businessEmail",configString,"payment.paypal.business");$  if (UtilValidate.isEmpty(redirectUrl) || UtilValidate.isEmpty(notifyUrl) || UtilValidate.isEmpty(returnUrl)|| UtilValidate.isEmpty(imageUrl)|| UtilValidate.isEmpty(payPalAccount)) {$    Debug.logError("Payment properties is not configured properly, some notify URL from PayPal is not correctly defined!",module);$    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resourceErr,"payPalEvents.problemsGettingMerchantConfiguration",locale));$    return "error";$  }$  Map<String,Object> parameters=new LinkedHashMap<String,Object>();$  parameters.put("cmd","_xclick");$  parameters.put("business",payPalAccount);$  parameters.put("item_name",itemName);$  parameters.put("item_number",itemNumber);$  parameters.put("invoice",orderId);$  parameters.put("custom",userLogin.getString("userLoginId"));$  parameters.put("amount",orderTotal);$  parameters.put("currency_code",currencyUom);$  parameters.put("return",returnUrl);$  if (UtilValidate.isNotEmpty(cancelReturnUrl))   parameters.put("cancel_return",cancelReturnUrl);$  parameters.put("notify_url",notifyUrl);$  parameters.put("image_url",imageUrl);$  parameters.put("no_note","1");$  parameters.put("no_shipping","1");$  String encodedParameters=UtilHttp.urlEncodeArgs(parameters,false);$  String redirectString=redirectUrl + "?" + encodedParameters;$  request.getSession().setAttribute("PAYPAL_ORDER",orderId);$  try {$    response.sendRedirect(redirectString);$  }$ catch (  IOException e) {$    Debug.logError(e,"Problems redirecting to PayPal",module);$    request.setAttribute("_ERROR_MESSAGE_",UtilProperties.getMessage(resourceErr,"payPalEvents.problemsConnectingWithPayPal",locale));$    return "error";$  }$  return "success";$}$
@Override public void doNamespaceBundleSplit() throws Exception {$  int maxBundleCount=pulsar.getConfiguration().getLoadBalancerNamespaceMaximumBundles();$  long maxBundleTopics=pulsar.getConfiguration().getLoadBalancerNamespaceBundleMaxTopics();$  long maxBundleSessions=pulsar.getConfiguration().getLoadBalancerNamespaceBundleMaxSessions();$  long maxBundleMsgRate=pulsar.getConfiguration().getLoadBalancerNamespaceBundleMaxMsgRate();$  long maxBundleBandwidth=pulsar.getConfiguration().getLoadBalancerNamespaceBundleMaxBandwidthMbytes() * MBytes;$  log.info("Running namespace bundle split with thresholds: topics {}, sessions {}, msgRate {}, bandwidth {}, maxBundles {}",maxBundleTopics,maxBundleSessions,maxBundleMsgRate,maxBundleBandwidth,maxBundleCount);$  if (this.lastLoadReport == null || this.lastLoadReport.getBundleStats() == null) {$    return;$  }$  Map<String,NamespaceBundleStats> bundleStats=this.lastLoadReport.getBundleStats();$  Set<String> bundlesToBeSplit=new HashSet<>();$  for (  Map.Entry<String,NamespaceBundleStats> statsEntry : bundleStats.entrySet()) {$    String bundleName=statsEntry.getKey();$    NamespaceBundleStats stats=statsEntry.getValue();$    long totalSessions=stats.consumerCount + stats.producerCount;$    double totalMsgRate=stats.msgRateIn + stats.msgRateOut;$    double totalBandwidth=stats.msgThroughputIn + stats.msgThroughputOut;$    boolean needSplit=false;$    if (stats.topics > maxBundleTopics || totalSessions > maxBundleSessions || totalMsgRate > maxBundleMsgRate || totalBandwidth > maxBundleBandwidth) {$      if (stats.topics <= 1) {$        log.info("Unable to split hot namespace bundle {} since there is only one topic.",bundleName);$      }$ else {$        NamespaceName namespaceName=new NamespaceName(getNamespaceNameFromBundleName(bundleName));$        int numBundles=pulsar.getNamespaceService().getBundleCount(namespaceName);$        if (numBundles >= maxBundleCount) {$          log.info("Unable to split hot namespace bundle {} since the namespace has too many bundles.",bundleName);$        }$ else {$          needSplit=true;$        }$      }$    }$    if (needSplit) {$      if (this.getLoadBalancerAutoBundleSplitEnabled()) {$        log.info("Will split hot namespace bundle {}, topics {}, producers+consumers {}, msgRate in+out {}, bandwidth in+out {}",bundleName,stats.topics,totalSessions,totalMsgRate,totalBandwidth);$        bundlesToBeSplit.add(bundleName);$      }$ else {$        log.info("DRY RUN - split hot namespace bundle {}, topics {}, producers+consumers {}, msgRate in+out {}, bandwidth in+out {}",bundleName,stats.topics,totalSessions,totalMsgRate,totalBandwidth);$      }$    }$  }$  if (bundlesToBeSplit.size() > 0) {$    for (    String bundleName : bundlesToBeSplit) {$      try {$        pulsar.getAdminClient().namespaces().splitNamespaceBundle(getNamespaceNameFromBundleName(bundleName),getBundleRangeFromBundleName(bundleName));$        log.info("Successfully split namespace bundle {}",bundleName);$      }$ catch (      Exception e) {$        log.error("Failed to split namespace bundle {}",bundleName,e);$      }$    }$    this.setLoadReportForceUpdateFlag();$  }$}$
public void writeByteByteInt(ByteByteInt a) throws IOException {$  io.write(a.getByte1());$  io.write(a.getByte2());$  writeInt(a.getValue());$}$
public ShortArrayCodeOutput(short[] array){$  if (array == null) {$    throw new IllegalArgumentException("array is null.");$  }$  this.array=array;$}$
private void parseLayoutAttributes(String layoutFile,SootClass layoutClass,AXmlNode rootNode){$  boolean isSensitive=false;$  int id=-1;$  for (  Entry<String,AXmlAttribute<?>> entry : rootNode.getAttributes().entrySet()) {$    String attrName=entry.getKey().trim();$    AXmlAttribute<?> attr=entry.getValue();$    if (attrName.isEmpty())     continue;$    if (!isAndroidNamespace(attr.getNamespace()))     continue;$    if (attrName.equals("id") && (attr.getType() == AxmlVisitor.TYPE_REFERENCE || attr.getType() == AxmlVisitor.TYPE_INT_HEX))     id=(Integer)attr.getValue();$ else     if (attrName.equals("password")) {$      if (attr.getType() == AxmlVisitor.TYPE_INT_HEX)       isSensitive=((Integer)attr.getValue()) != 0;$ else       if (attr.getType() == AxmlVisitor.TYPE_INT_BOOLEAN)       isSensitive=(Boolean)attr.getValue();$ else       throw new RuntimeException("Unknown representation of boolean data type");$    }$ else     if (!isSensitive && attrName.equals("inputType") && attr.getType() == AxmlVisitor.TYPE_INT_HEX) {$      int tp=(Integer)attr.getValue();$      isSensitive=((tp & TYPE_NUMBER_VARIATION_PASSWORD) == TYPE_NUMBER_VARIATION_PASSWORD) || ((tp & TYPE_TEXT_VARIATION_PASSWORD) == TYPE_TEXT_VARIATION_PASSWORD) || ((tp & TYPE_TEXT_VARIATION_VISIBLE_PASSWORD) == TYPE_TEXT_VARIATION_VISIBLE_PASSWORD)|| ((tp & TYPE_TEXT_VARIATION_WEB_PASSWORD) == TYPE_TEXT_VARIATION_WEB_PASSWORD);$    }$ else     if (isActionListener(attrName) && attr.getType() == AxmlVisitor.TYPE_STRING && attr.getValue() instanceof String) {$      String strData=((String)attr.getValue()).trim();$      addCallbackMethod(layoutFile,strData);$    }$ else     if (attr.getType() == AxmlVisitor.TYPE_STRING && attrName.equals("text")) {$    }$ else     if (DEBUG && attr.getType() == AxmlVisitor.TYPE_STRING) {$      System.out.println("Found unrecognized XML attribute:  " + attrName);$    }$  }$  addToMapSet(this.userControls,layoutFile,new LayoutControl(id,layoutClass,isSensitive));$}$
@PostConstruct public void init(){$  listenerContainer=cacheRegistrationService.registerToAlarms(this);$}$
@Override public void run(){$  while (!shutdownRequestMade) {$    try {$      ObjectAndMethod objectAndMethod=taskQueue.poll(THREAD_SHUTDOWN_CHECK_INTERVAL,TimeUnit.MILLISECONDS);$      if (objectAndMethod != null) {$        callCorrectMethod(objectAndMethod);$      }$    }$ catch (    InterruptedException e) {$      LOGGER.warn("Cache Listener thread interrupted in MultiThreadedListener.",e);$    }$  }$  ObjectAndMethod objectAndMethod;$  while ((objectAndMethod=taskQueue.poll()) != null) {$    callCorrectMethod(objectAndMethod);$  }$}$
public JSONObject put(String key,boolean value) throws JSONException {$  this.put(key,value ? Boolean.TRUE : Boolean.FALSE);$  return this;$}$
public boolean hasNext(){$  if (error || currentClass == null)   return false;$  if (currentCount < currentClass.getFirst())   return true;$  currentClass=null;$  while (classes.size() > 0) {$    currentCount=0;$    Pair<Integer,Long> next=classes.remove(0);$    if (next != null && next.getFirst() > 0 && next.getSecond() >= 0) {$      try {$        classDumpReader.seek(next.getSecond());$      }$ catch (      IOException e) {$        Basic.caught(e);$        return false;$      }$      currentClass=next;$      return true;$    }$  }$  return false;$}$
public void writeLong(long value) throws JMSException {$  initializeWriting();$  try {$    this.dataOut.write(_LONG);$    this.dataOut.writeLong(value);$  }$ catch (  IOException ioe) {$    raise(ioe);$  }$}$
public static void write(File file,CharSequence data,Charset encoding,boolean append) throws IOException {$  String str=data == null ? null : data.toString();$  writeStringToFile(file,str,encoding,append);$}$
public SpaceConfigurationException(String str,Throwable cause){$  super(str,cause);$}$
@Override public void disconnect(long timeout) throws AWSIotException, AWSIotTimeoutException {$  super.disconnect(timeout);$}$
@NonNull public static StorableFence or(@NonNull StorableFence... fences){$  return StorableFence.or(Arrays.asList(fences));$}$
public LoadInfo(LoadInfo other){$  __isset_bit_vector.clear();$  __isset_bit_vector.or(other.__isset_bit_vector);$  this.averageLoad=other.averageLoad;$  this.oldGC=other.oldGC;$  this.threadNum=other.threadNum;$  this.queueSize=other.queueSize;$  if (other.isSetMethodQpsMap()) {$    Map<String,Double> __this__methodQpsMap=new HashMap<String,Double>();$    for (    Map.Entry<String,Double> other_element : other.methodQpsMap.entrySet()) {$      String other_element_key=other_element.getKey();$      Double other_element_value=other_element.getValue();$      String __this__methodQpsMap_copy_key=other_element_key;$      Double __this__methodQpsMap_copy_value=other_element_value;$      __this__methodQpsMap.put(__this__methodQpsMap_copy_key,__this__methodQpsMap_copy_value);$    }$    this.methodQpsMap=__this__methodQpsMap;$  }$}$
private void checkPathParameterConditions(Method method,FieldSelector selector){$  TypeRef type=selector.getType();$  WellKnownType wkt=type.getWellKnownType();$  if (type.isMap()) {$    error(method,"map field not allowed: reached via '%s' on message '%s'.",selector.toString(),getInputMessageName(method));$  }$ else   if (type.isRepeated()) {$    error(method,"repeated field not allowed: reached via '%s' on message '%s'.",selector,getInputMessageName(method));$  }$ else   if (type.isMessage() && !wkt.allowedAsPathParameter()) {$    error(method,"message field not allowed: reached via '%s' on message '%s'.",selector,getInputMessageName(method));$  }$}$
public CacheHeader(String key,Entry entry){$  this.key=key;$  this.size=entry.data.length;$  this.etag=entry.etag;$  this.serverDate=entry.serverDate;$  this.lastModified=entry.lastModified;$  this.ttl=entry.ttl;$  this.softTtl=entry.softTtl;$  this.responseHeaders=entry.responseHeaders;$}$
private Style renderSymbol(Style style,FeatureTypeStyle ftsToRender,Rule ruleToRender,RuleRenderOptions options){$  int symbolIndex=SelectedSymbol.getInstance().getSymbolIndex();$  RuleRenderVisitor visitor=new RuleRenderVisitor(ftsToRender,ruleToRender,symbolIndex,options);$  style.accept(visitor);$  Style copy=(Style)visitor.getCopy();$  return copy;$}$
@Inject public Jersey2UnhandledExceptionHandler(ProjectApiErrors projectApiErrors,ApiExceptionHandlerUtils utils){$  super(projectApiErrors,utils);$  this.singletonGenericServiceError=Collections.singleton(projectApiErrors.getGenericServiceError());$  this.genericServiceErrorHttpStatusCode=projectApiErrors.getGenericServiceError().getHttpStatusCode();$}$
public SuffixFileFilter(String[] suffixes,IOCase caseSensitivity){$  if (suffixes == null) {$    throw new IllegalArgumentException("The array of suffixes must not be null");$  }$  this.suffixes=new String[suffixes.length];$  System.arraycopy(suffixes,0,this.suffixes,0,suffixes.length);$  this.caseSensitivity=caseSensitivity == null ? IOCase.SENSITIVE : caseSensitivity;$}$
boolean descendsFrom(ClassFile cf){$  return descendsFrom(cf.toString());$}$
public DocumentNGramDistroGraph allNotIn(DocumentNGramDistroGraph dgOtherGraph){$  EdgeCachedLocator eclLocator=new EdgeCachedLocator(100);$  DocumentNGramDistroGraph dgClone=(DocumentNGramDistroGraph)clone();$  for (int iCurLvl=MinSize; iCurLvl <= MaxSize; iCurLvl++) {$    UniqueVertexGraph gCloneLevel=dgClone.getGraphLevelByNGramSize(iCurLvl);$    UniqueVertexGraph gOtherGraphLevel=dgOtherGraph.getGraphLevelByNGramSize(iCurLvl);$    if (gOtherGraphLevel == null)     continue;$    java.util.Iterator iIter=gCloneLevel.getEdgeSet().iterator();$    while (iIter.hasNext()) {$      WeightedEdge weCurItem=(WeightedEdge)iIter.next();$      Edge eEdge=eclLocator.locateDirectedEdgeInGraph(gOtherGraphLevel,weCurItem.getVertexA(),weCurItem.getVertexB());$      if (eEdge != null)       try {$        gCloneLevel.removeEdge(weCurItem);$        dgClone.getEdgesToDistros().remove(weCurItem);$        iIter=gCloneLevel.getEdgeSet().iterator();$      }$ catch (      Exception ex) {$        ex.printStackTrace();$      }$    }$  }$  return dgClone;$}$
public void received(ByteBuffer buffer){$  hasReceivedData=true;$  lastReceiveTime=System.currentTimeMillis();$}$
public void populateField(FieldIdEnum fieldId,Expression value){$  if (fieldConfigManager == null) {$    return;$  }$  FieldConfigBase fieldConfig=fieldConfigManager.get(fieldId);$  if (fieldConfig != null) {$    fieldConfig.populate(value);$  }$ else {$    ConsoleManager.getInstance().error(this,String.format("populateField - %s : %s",Localisation.getString(StandardPanel.class,"StandardPanel.unknownField"),fieldId));$  }$}$
public void onSuccess(JSONObject response){$}$
@Override public void initialize(){$  getUserList();$}$
public static void deleteAll(){$  Helper.delete(new BasicDBObject(),AccessLog.class);$}$
public static final void shuffle(long[] a,Random r){$  shuffle(a,0,a.length,r);$}$
public static CharSequence extractFlagsForEditText(CharSequence text){$  char[] textChars=text.toString().toCharArray();$  ArrayList<Character> characters=new ArrayList<>();$  ArrayList<WhatsappUtil.Flag> flags=new ArrayList<>();$  WhatsappUtil.Flag boldFlag=new WhatsappUtil.Flag(INVALID_INDEX,INVALID_INDEX,BOLD_FLAG);$  WhatsappUtil.Flag strikeFlag=new WhatsappUtil.Flag(INVALID_INDEX,INVALID_INDEX,STRIKE_FLAG);$  WhatsappUtil.Flag italicFlag=new WhatsappUtil.Flag(INVALID_INDEX,INVALID_INDEX,ITALIC_FLAG);$  for (int i=0, j=0; i < textChars.length; i++) {$    char c=textChars[i];$    if (c == BOLD_FLAG) {$      if (boldFlag.start == INVALID_INDEX) {$        if (WhatsappUtil.hasFlagSameLine(text,BOLD_FLAG,i + 1)) {$          boldFlag.start=j + 1;$        }$      }$ else {$        boldFlag.end=j;$        flags.add(boldFlag);$        boldFlag=new WhatsappUtil.Flag(INVALID_INDEX,INVALID_INDEX,BOLD_FLAG);$      }$    }$ else     if (c == STRIKE_FLAG) {$      if (strikeFlag.start == INVALID_INDEX) {$        if (WhatsappUtil.hasFlagSameLine(text,STRIKE_FLAG,i + 1)) {$          strikeFlag.start=j + 1;$        }$      }$ else {$        strikeFlag.end=j;$        flags.add(strikeFlag);$        strikeFlag=new WhatsappUtil.Flag(INVALID_INDEX,INVALID_INDEX,STRIKE_FLAG);$      }$    }$ else     if (c == ITALIC_FLAG) {$      if (italicFlag.start == INVALID_INDEX) {$        if (WhatsappUtil.hasFlagSameLine(text,ITALIC_FLAG,i + 1)) {$          italicFlag.start=j + 1;$        }$      }$ else {$        italicFlag.end=j;$        flags.add(italicFlag);$        italicFlag=new WhatsappUtil.Flag(INVALID_INDEX,INVALID_INDEX,ITALIC_FLAG);$      }$    }$    characters.add(c);$    j++;$  }$  String formatted=WhatsappUtil.getText(characters);$  SpannableStringBuilder builder=new SpannableStringBuilder(formatted);$  for (int i=0; i < flags.size(); i++) {$    WhatsappUtil.Flag flag=flags.get(i);$    if (flag.flag == BOLD_FLAG) {$      StyleSpan bss=new StyleSpan(Typeface.BOLD);$      builder.setSpan(bss,flag.start,flag.end,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$      builder.setSpan(new ForegroundColorSpan(Color.GRAY),flag.start - 1,flag.start,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$      builder.setSpan(new ForegroundColorSpan(Color.GRAY),flag.end,flag.end + 1,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$    }$ else     if (flag.flag == STRIKE_FLAG) {$      builder.setSpan(new StrikethroughSpan(),flag.start,flag.end,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$      builder.setSpan(new ForegroundColorSpan(Color.GRAY),flag.start - 1,flag.start,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$      builder.setSpan(new ForegroundColorSpan(Color.GRAY),flag.end,flag.end + 1,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$    }$ else     if (flag.flag == ITALIC_FLAG) {$      StyleSpan iss=new StyleSpan(Typeface.ITALIC);$      builder.setSpan(iss,flag.start,flag.end,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$      builder.setSpan(new ForegroundColorSpan(Color.GRAY),flag.start - 1,flag.start,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$      builder.setSpan(new ForegroundColorSpan(Color.GRAY),flag.end,flag.end + 1,Spanned.SPAN_INCLUSIVE_INCLUSIVE);$    }$  }$  return builder;$}$
private void bindViewType(WXComponent component){$  int id=generateViewType(component);$  if (mViewTypes == null) {$    mViewTypes=new SparseArray<>();$  }$  ArrayList<WXComponent> mTypes=mViewTypes.get(id);$  if (mTypes == null) {$    mTypes=new ArrayList<>();$    mViewTypes.put(id,mTypes);$  }$  mTypes.add(component);$}$
public AudioMoveToAlbumQuery groupId(Integer value){$  return unsafeParam("group_id",value);$}$
public void startFirstSampleTimer(){$}$
public void startPlaying(String file){$  if (this.readyPlayer(file) && this.player != null) {$    this.player.start();$    this.setState(STATE.MEDIA_RUNNING);$    this.seekOnPrepared=0;$  }$ else {$    this.prepareOnly=false;$  }$}$
protected void checkForNumericAttribute(ProposedTuples tuples,SemanticGraph sg,IndexedWord word){$  if (sg.hasChildWithReln(word,UniversalEnglishGrammaticalRelations.NUMERIC_MODIFIER)) {$    IndexedWord nummod=sg.getChildWithReln(word,UniversalEnglishGrammaticalRelations.NUMERIC_MODIFIER);$    if (nummod.index() < word.index()) {$      tuples.addTuple(word,nummod);$    }$  }$ else   if (sg.hasChildWithReln(word,SemanticGraphEnhancer.QMOD_RELATION)) {$    IndexedWord qmod=sg.getChildWithReln(word,SemanticGraphEnhancer.QMOD_RELATION);$    tuples.addTuple(word,qmod);$  }$}$
public static int nullSafeHashCode(double[] array){$  if (array == null) {$    return 0;$  }$  int hash=INITIAL_HASH;$  int arraySize=array.length;$  for (int i=0; i < arraySize; i++) {$    hash=MULTIPLIER * hash + hashCode(array[i]);$  }$  return hash;$}$
public static void showToast(Context context,String message){$  Toast.makeText(context,message,Toast.LENGTH_SHORT).show();$}$
public boolean hasItem(){$  return this.item != null;$}$
@Override public long blocksAccessed(){$  return p.blocksAccessed();$}$
public IntObjectHashMap(){$  this(defaultCapacity);$}$
private void createClassBody(polyglot.ast.ClassBody classBody){$  staticFieldInits=null;$  fieldInits=null;$  initializerBlocks=null;$  staticInitializerBlocks=null;$  Iterator it=classBody.members().iterator();$  while (it.hasNext()) {$    Object next=it.next();$    if (next instanceof polyglot.ast.MethodDecl) {$      createMethodDecl((polyglot.ast.MethodDecl)next);$    }$ else     if (next instanceof polyglot.ast.FieldDecl) {$      createFieldDecl((polyglot.ast.FieldDecl)next);$    }$ else     if (next instanceof polyglot.ast.ConstructorDecl) {$      createConstructorDecl((polyglot.ast.ConstructorDecl)next);$    }$ else     if (next instanceof polyglot.ast.ClassDecl) {$      Util.addInnerClassTag(sootClass,Util.getSootType(((polyglot.ast.ClassDecl)next).type()).toString(),sootClass.getName(),((polyglot.ast.ClassDecl)next).name().toString(),Util.getModifier(((polyglot.ast.ClassDecl)next).flags()));$    }$ else     if (next instanceof polyglot.ast.Initializer) {$      createInitializer((polyglot.ast.Initializer)next);$    }$ else     if (Options.v().verbose()) {$      G.v().out.println("Class Body Member not implemented for type " + next.getClass().getName());$    }$  }$  handleInnerClassTags(classBody);$  handleClassLiteral(classBody);$  handleAssert(classBody);$}$
public Matrix copy(){$  Matrix X=new Matrix(m,n);$  double[][] C=X.getArray();$  for (int i=0; i < m; i++) {$    for (int j=0; j < n; j++) {$      C[i][j]=A[i][j];$    }$  }$  return X;$}$
public Iterator items(String group,String expr){$  Expression e=ExpressionParser.parse(expr);$  if (!(e instanceof Predicate) || ExpressionParser.getError() != null)   return Collections.EMPTY_LIST.iterator();$  return items(group,(Predicate)e);$}$
public void write(IOutputWriter indexWriter) throws IOException {$  for (  Object[] dataRecord : data) {$switch ((Character)dataRecord[1]) {$case 'i':$      indexWriter.writeInt((Integer)dataRecord[2]);$    break;$case 'f':$  indexWriter.writeFloat((Float)dataRecord[2]);$break;$case 'l':$indexWriter.writeLong((Long)dataRecord[2]);$break;$case 'b':$indexWriter.write((Byte)dataRecord[2]);$break;$case 'B':$indexWriter.writeByteByteInt((ByteByteInt)dataRecord[2]);$break;$case 'c':$indexWriter.writeChar((Character)dataRecord[2]);$break;$}$}$}$
public boolean check(Player player,boolean warn){$  QuestStateList qsl=player.getQuestStateList();$  return checkFinishedQuests(qsl) && checkUnfinishedQuests(qsl) && checkAcquiredQuests(qsl)&& checkNoAcquiredQuests(qsl)&& checkEquippedItems(player,warn);$}$
public static boolean checkComplete(Context context,String directory,ShareSecurityCheck securityCheck,Intent intentResult){$  String meta=securityCheck.getMetaContentMap().get(RESOURCE_META_FILE);$  if (meta == null) {$    return true;$  }$  ShareResPatchInfo.parseResPatchInfoFirstLine(meta,resPatchInfo);$  if (resPatchInfo.resArscMd5 == null) {$    return true;$  }$  if (!ShareResPatchInfo.checkResPatchInfo(resPatchInfo)) {$    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_RESOURCE_META_CORRUPTED);$    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);$    return false;$  }$  String resourcePath=directory + "/" + RESOURCE_PATH+ "/";$  File resourceDir=new File(resourcePath);$  if (!resourceDir.exists() || !resourceDir.isDirectory()) {$    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_RESOURCE_DIRECTORY_NOT_EXIST);$    return false;$  }$  File resourceFile=new File(resourcePath + RESOURCE_FILE);$  if (!resourceFile.exists()) {$    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_RESOURCE_FILE_NOT_EXIST);$    return false;$  }$  try {$    TinkerResourcePatcher.isResourceCanPatch(context);$  }$ catch (  Throwable e) {$    Log.e(TAG,"resource hook check failed.",e);$    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_EXCEPTION,e);$    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_RESOURCE_LOAD_EXCEPTION);$    return false;$  }$  return true;$}$
protected void transform(byte[] in,int off){$  updateCheckSumAndEncryptBlock(in,off);$}$
public void seekToPlaying(int milliseconds){$  if (this.readyPlayer(this.audioFile)) {$    this.player.seekTo(milliseconds);$    Log.d(LOG_TAG,"Send a onStatus update for the new seek");$    sendStatusChange(MEDIA_POSITION,null,(milliseconds / 1000.0f));$  }$ else {$    this.seekOnPrepared=milliseconds;$  }$}$
@Override public void actionPerformed(ActionEvent e){$}$
public PollsCreateQuery question(String value){$  return unsafeParam("question",value);$}$
public boolean isEmptyResponse(){$  return isOptionEnabled(UrlFilterRuleOption.EMPTY_RESPONSE);$}$
protected VirtualFile createFile(String filePath,String contents){$  assertPathIsNotAbsolute(filePath);$  try {$    return testFixture.getTempDirFixture().createFile(filePath,contents);$  }$ catch (  IOException e) {$    throw new RuntimeException(e);$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Stagger_A_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200898,skilltarget,skillcaster,skillname);$}$
private static BigDecimal normalizeDecimalValue(BigDecimal bigDecimal,int allowedPrecision){$  if (bigDecimal.precision() > allowedPrecision) {$    return null;$  }$  return bigDecimal;$}$
public Boolean removeColumn(Column columnToRemove){$  return this.columns.remove(columnToRemove);$}$
private static boolean extractDexToJar(ZipFile zipFile,ZipEntry entryFile,File extractTo,String targetMd5) throws IOException {$  int numAttempts=0;$  boolean isExtractionSuccessful=false;$  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isExtractionSuccessful) {$    numAttempts++;$    FileOutputStream fos=new FileOutputStream(extractTo);$    InputStream in=zipFile.getInputStream(entryFile);$    ZipOutputStream zos=null;$    BufferedInputStream bis=null;$    TinkerLog.i(TAG,"try Extracting " + extractTo.getPath());$    try {$      zos=new ZipOutputStream(new BufferedOutputStream(fos));$      bis=new BufferedInputStream(in);$      byte[] buffer=new byte[ShareConstants.BUFFER_SIZE];$      ZipEntry entry=new ZipEntry(ShareConstants.DEX_IN_JAR);$      zos.putNextEntry(entry);$      int length=bis.read(buffer);$      while (length != -1) {$        zos.write(buffer,0,length);$        length=bis.read(buffer);$      }$      zos.closeEntry();$    }$  finally {$      SharePatchFileUtil.closeQuietly(bis);$      SharePatchFileUtil.closeQuietly(zos);$    }$    isExtractionSuccessful=SharePatchFileUtil.verifyDexFileMd5(extractTo,targetMd5);$    TinkerLog.i(TAG,"isExtractionSuccessful: %b",isExtractionSuccessful);$    if (!isExtractionSuccessful) {$      extractTo.delete();$      if (extractTo.exists()) {$        TinkerLog.e(TAG,"Failed to delete corrupted dex " + extractTo.getPath());$      }$    }$  }$  return isExtractionSuccessful;$}$
private void initCache(){$  lruCacheMap=new LinkedHashMap<String,Cacheable>(CarbonCommonConstants.DEFAULT_COLLECTION_SIZE,1.0f,true);$}$
public String process(Item item) throws ProcessException {$  int count=0;$  for (Item p=item.getItemAs(Relation.SYLLABLE); p != null; p=p.getPrevious(), count++) {$    if (isAccented(p)) {$      break;$    }$  }$  return Integer.toString(rail(count));$}$
public VOGeoServerShapeSymbol(){$  String fullResourceName="geoserver/GeoServerShapeSymbol.xml";$  SymbolTypeConfigReader.readConfig(VOGeoServerShapeSymbol.class,fullResourceName,fieldEnableMap);$}$
private void updateButtonState(boolean dataChanged){$  btnApply.setEnabled(dataChanged);$  btnRevert.setEnabled(dataChanged);$}$
protected SchedulerDriver createInternal(final Scheduler scheduler,final FrameworkInfo frameworkInfo,final String masterUrl,final Credential credential){$  if (credential == null) {$    return new MesosSchedulerDriver(scheduler,frameworkInfo,masterUrl);$  }$ else {$    return new MesosSchedulerDriver(scheduler,frameworkInfo,masterUrl,credential);$  }$}$
private void resize(int newCapacity){$  Entry[] oldTable=getTable();$  int oldCapacity=oldTable.length;$  if (oldCapacity == MAXIMUM_CAPACITY) {$    threshold=Integer.MAX_VALUE;$    return;$  }$  Entry[] newTable=new Entry[newCapacity];$  transfer(oldTable,newTable);$  table=newTable;$  threshold=(int)(newCapacity * loadFactor);$}$
public static Call checkCoordinate(Coordinate coordinate,@Nullable Double buffer,List<MappingService.AirMapAirspaceType> types,List<MappingService.AirMapAirspaceType> ignoredTypes,boolean weather,Date date,AirMapCallback<AirMapStatus> listener){$  String url=statusPointUrl;$  Map<String,String> params=AirMapStatus.getAsParams(coordinate,types,ignoredTypes,weather,date);$  if (buffer != null) {$    params.put("buffer",String.valueOf(buffer));$  }$  return AirMap.getClient().get(url,params,new GenericOkHttpCallback(listener,AirMapStatus.class));$}$
public Object[] call(Object[] args,int nres) throws LuaException {$synchronized (L) {$    if (!isFunction() && !isTable() && !isUserdata())     throw new LuaException("Invalid object. Not a function, table or userdata .");$    int top=L.getTop();$    push();$    int nargs;$    if (args != null) {$      nargs=args.length;$      for (int i=0; i < nargs; i++) {$        Object obj=args[i];$        L.pushObjectValue(obj);$      }$    }$ else     nargs=0;$    int err=L.pcall(nargs,nres,0);$    if (err != 0) {$      String str;$      if (L.isString(-1)) {$        str=L.toString(-1);$        L.pop(1);$      }$ else       str="";$      if (err == LuaState.LUA_ERRRUN.intValue()) {$        str="Runtime error. " + str;$      }$ else       if (err == LuaState.LUA_ERRMEM.intValue()) {$        str="Memory allocation error. " + str;$      }$ else       if (err == LuaState.LUA_ERRERR.intValue()) {$        str="Error while running the error handler function. " + str;$      }$ else {$        str="Lua Error code " + err + ". "+ str;$      }$      throw new LuaException(str);$    }$    if (nres == LuaState.LUA_MULTRET.intValue())     nres=L.getTop() - top;$    if (L.getTop() - top < nres) {$      throw new LuaException("Invalid Number of Results .");$    }$    Object[] res=new Object[nres];$    for (int i=nres; i > 0; i--) {$      res[i - 1]=L.toJavaObject(-1);$      L.pop(1);$    }$    return res;$  }$}$
@Override protected AudioInputStream generateAudioStream(List<SelectedUnit> units) throws IOException {$  int len=units.size();$  Datagram[][] datagrams=new Datagram[len][];$  Datagram[] rightContexts=new Datagram[len];$  for (int i=0; i < len; i++) {$    SelectedUnit unit=units.get(i);$    OverlapUnitData unitData=(OverlapUnitData)unit.getConcatenationData();$    assert unitData != null : "Should not have null unitdata here";$    Datagram[] frames=unitData.getFrames();$    assert frames != null : "Cannot generate audio from null frames";$    datagrams[i]=frames;$    Unit nextInDB=database.getUnitFileReader().getNextUnit(unit.getUnit());$    Unit nextSelected;$    if (i + 1 == len)     nextSelected=null;$ else     nextSelected=units.get(i + 1).getUnit();$    if (nextInDB != null && !nextInDB.equals(nextSelected)) {$      rightContexts[i]=unitData.getRightContextFrame();$    }$  }$  DoubleDataSource audioSource=new DatagramOverlapDoubleDataSource(datagrams,rightContexts);$  return new DDSAudioInputStream(new BufferedDoubleDataSource(audioSource),audioformat);$}$
public void addDiscoveryListener(DiscoveryListener listener){$  if (listener == null) {$    throw new NullPointerException("can't add null listener");$  }$  if (!listeners.contains(listener)) {$    listeners.add(listener);$  }$  HashMap groupsMap;$synchronized (discoveredSet) {$    groupsMap=new HashMap(discoveredSet.size());$    if (discoveredSet.isEmpty())     return;$    for (int i=0; i < discoveredSet.size(); i++) {$      ProxyReg reg=(ProxyReg)discoveredSet.get(i);$      groupsMap.put(reg.proxy,reg.getMemberGroups());$    }$  }$  notifyListener(listener,groupsMap,DISCOVERED);$}$
public boolean implies(Permission permission){$  if (!(permission instanceof GrantPermission)) {$    return false;$  }$  if (implier == null) {$    Implier imp=new Implier();$    imp.add(this);$    implier=imp;$  }$  return implier.implies(permission);$}$
public void recordFocusedOmnibox(){$  setFirstAction(FOCUSED_OMNIBOX);$}$
public static String graphToDot(UniqueVertexGraph gTree,boolean bDirected,Map hEdgeDistros){$  StringBuffer sb=new StringBuffer();$  String sConnector;$  boolean bDistroGraph=(hEdgeDistros != null);$  if (!bDirected) {$    sb.append("graph {\n");$    sConnector="--";$  }$ else {$    sb.append("digraph {\n");$    sConnector="->";$  }$  Iterator iIter=gTree.getEdgeSet().iterator();$  while (iIter.hasNext()) {$    Edge e=(Edge)iIter.next();$    String sA="_" + e.getVertexA().toString().replaceAll("\\W","_");$    String sB="_" + e.getVertexB().toString().replaceAll("\\W","_");$    String sLabel="";$    if (e instanceof WeightedEdge) {$      sLabel+=String.format("%4.2f",((WeightedEdge)e).getWeight());$    }$    if (bDistroGraph) {$      Distribution dTmp;$      if ((dTmp=(Distribution)(hEdgeDistros.get(e))) != null)       sLabel+=" - Distro: " + dTmp.toString();$    }$    if (e instanceof WeightedEdge)     sb.append("\t" + sA + " "+ sConnector+ " "+ sB+ " [label=\""+ sLabel.replaceAll("\\s+"," ")+ "\"]\n");$ else     sb.append("\t" + sA + " "+ sConnector+ " "+ sB+ "\n");$    sb.append("\t" + sA + " [label=\""+ sA+ "\"] "+ "\n");$  }$  sb.append("}");$  return sb.toString();$}$
public boolean isNative(){$  return Modifier.isNative(this.getModifiers());$}$
public void addFirst(E u){$  innerChain.addFirst(u);$}$
public MarketSearchQuery(VkApiClient client,UserActor actor,int ownerId){$  super(client,"market.search",SearchResponse.class);$  accessToken(actor.getAccessToken());$  ownerId(ownerId);$}$
public void addToken(View v){$  if (selectedToken != null) {$    cth.addToken(selectedToken);$    updateEditField();$    updateClipPreview();$  }$ else {$    Toast.makeText(this,R.string.clipboard_no_token_selected,Toast.LENGTH_LONG).show();$  }$}$
private void printSchema(XMLWriter xml,String group,Schema s,String[] ignore){$  String[] attr=new String[]{Tokens.ID,Tokens.FOR,Tokens.ATTRNAME,Tokens.ATTRTYPE};$  String[] vals=new String[4];$  OUTER:   for (int i=0; i < s.getColumnCount(); ++i) {$    vals[0]=s.getColumnName(i);$    for (int j=0; ignore != null && j < ignore.length; ++j) {$      if (vals[0].equals(ignore[j]))       continue OUTER;$    }$    vals[1]=group;$    vals[2]=vals[0];$    vals[3]=(String)TYPES.get(s.getColumnType(i));$    Object dflt=s.getDefault(i);$    if (dflt == null) {$      xml.tag(Tokens.KEY,attr,vals,4);$    }$ else {$      xml.start(Tokens.KEY,attr,vals,4);$      xml.contentTag(Tokens.DEFAULT,dflt.toString());$      xml.end();$    }$  }$}$
private void ensureStackCapacity(int newElementDepth){$  if (newElementDepth == fElementQNamePartsStack.length) {$    QName[] newStackOfQueue=new QName[newElementDepth * 2];$    System.arraycopy(this.fElementQNamePartsStack,0,newStackOfQueue,0,newElementDepth);$    fElementQNamePartsStack=newStackOfQueue;$    QName qname=fElementQNamePartsStack[newElementDepth];$    if (qname == null) {$      for (int i=newElementDepth; i < fElementQNamePartsStack.length; i++) {$        fElementQNamePartsStack[i]=new QName();$      }$    }$    int[] newStack=new int[newElementDepth * 2];$    System.arraycopy(fElementIndexStack,0,newStack,0,newElementDepth);$    fElementIndexStack=newStack;$    newStack=new int[newElementDepth * 2];$    System.arraycopy(fContentSpecTypeStack,0,newStack,0,newElementDepth);$    fContentSpecTypeStack=newStack;$  }$}$
public boolean deleteImage(String path){$  return new File(path).delete();$}$
public static void writeSwappedInteger(byte[] data,int offset,int value){$  data[offset + 0]=(byte)((value >> 0) & 0xff);$  data[offset + 1]=(byte)((value >> 8) & 0xff);$  data[offset + 2]=(byte)((value >> 16) & 0xff);$  data[offset + 3]=(byte)((value >> 24) & 0xff);$}$
private void readChunkHeader(InputStream stream,ResChunk_Header nextChunkHeader) throws IOException {$  byte[] header=new byte[8];$  stream.read(header);$  readChunkHeader(nextChunkHeader,header,0);$}$
public static String repeatString(String source,int repeat){$  if (repeat < 0) {$    throw new IllegalArgumentException("Cannot repeat " + repeat + " times.");$  }$  if (repeat == 0 || source == null || source.length() == 0) {$    return "";$  }$  StringBuffer buffer=new StringBuffer();$  for (int i=0; i < repeat; i++) {$    buffer.append(source);$  }$  return buffer.toString();$}$
public static Value concreteRef(Value val){$  if (val == null)   return null;$  if (val instanceof ConcreteRef)   return val;$  return null;$}$
public static boolean isExtension(String filename,String[] extensions){$  if (filename == null) {$    return false;$  }$  if (extensions == null || extensions.length == 0) {$    return indexOfExtension(filename) == -1;$  }$  String fileExt=getExtension(filename);$  for (  String extension : extensions) {$    if (fileExt.equals(extension)) {$      return true;$    }$  }$  return false;$}$
public static boolean putMapNotEmptyKey(Map<String,String> map,String key,String value){$  if (map == null || StringUtil.isEmpty(key)) {$    return false;$  }$  map.put(key,value);$  return true;$}$
public AccountChangePasswordQuery changePasswordHash(String value){$  return unsafeParam("change_password_hash",value);$}$
public void updateCache() throws SVNException {$  ensurePreferencesStored();$}$
public ResourcesPoet addStringArray(String name,@NotNull List<String> values){$  Element element=document.createElement("string-array");$  element.setAttribute("name",name);$  for (  String value : values) {$    Element valueElement=document.createElement("item");$    valueElement.appendChild(document.createTextNode(value));$    element.appendChild(valueElement);$  }$  resourceElement.appendChild(element);$  return this;$}$
public Template(ServiceTemplate tmpl) throws RemoteException {$  serviceID=tmpl.serviceID;$  serviceTypes=ClassMapper.toServiceType(tmpl.serviceTypes);$  attributeSetTemplates=EntryRep.toEntryRep(tmpl.attributeSetTemplates,false);$}$
public long nextLong(long least,long bound){$  if (least >= bound)   throw new IllegalArgumentException();$  return nextLong(bound - least) + least;$}$
public MessagesCreateChatQuery createChat(UserActor actor,List<Integer> userIds){$  return new MessagesCreateChatQuery(getClient(),actor,userIds);$}$
public WKTType(String name,boolean multipleCoordinates,int numOfPoints,String listItem,boolean canHaveMultipleShapes,boolean doFirstLastHaveToBeSame){$  super();$  this.name=name;$  this.multipleCoordinates=multipleCoordinates;$  this.numOfPoints=numOfPoints;$  this.listItem=listItem;$  this.canHaveMultipleShapes=canHaveMultipleShapes;$  this.doFirstLastHaveToBeSame=doFirstLastHaveToBeSame;$}$
public boolean addSample(String sample,Map<String,Object> attribute2value,boolean allowReplaceSample,boolean allowAddAttribute){$  if (!table.rowKeySet().contains(sample)) {$    sampleOrder.add(sample);$  }$  if (allowReplaceSample || !table.rowKeySet().contains(sample)) {$    for (    String attribute : attribute2value.keySet()) {$      if (allowAddAttribute || getAttributeSet().contains(attribute))       put(sample,attribute,attribute2value.get(attribute));$    }$    return true;$  }$  return false;$}$
public static Matrix constructWithCopy(double[][] A){$  int m=A.length;$  int n=A[0].length;$  Matrix X=new Matrix(m,n);$  double[][] C=X.getArray();$  for (int i=0; i < m; i++) {$    if (A[i].length != n) {$      throw new IllegalArgumentException("All rows must have the same length.");$    }$    for (int j=0; j < n; j++) {$      C[i][j]=A[i][j];$    }$  }$  return X;$}$
public boolean offer(E e){$  if (e == null) {$    throw new NullPointerException();$  }$  Node<E> n=new Node<E>(e,null);$  for (; ; ) {$    Node<E> t=tail;$    n.setNext(t);$    count.incrementAndGet();$    if (casTail(t,n)) {$      t.setPrev(n);$      return true;$    }$  }$}$
private void storeLegionMemberExInCache(Player player){$  if (this.allCachedLegionMembers.containsEx(player.getObjectId())) {$    LegionMemberEx legionMemberEx=allCachedLegionMembers.getMemberEx(player.getObjectId());$    legionMemberEx.setNickname(player.getLegionMember().getNickname());$    legionMemberEx.setSelfIntro(player.getLegionMember().getSelfIntro());$    legionMemberEx.setPlayerClass(player.getPlayerClass());$    legionMemberEx.setExp(player.getCommonData().getExp());$    legionMemberEx.setLastOnline(player.getCommonData().getLastOnline());$    legionMemberEx.setWorldId(player.getPosition().getMapId());$    legionMemberEx.setOnline(false);$  }$ else {$    LegionMemberEx legionMemberEx=new LegionMemberEx(player,player.getLegionMember(),false);$    addCachedLegionMemberEx(legionMemberEx);$  }$}$
public void unsubscribe(String subscriptionName) throws JMSException {$  ensureOpen();$  throw new JMSException("This version of JMS does not support durable subscribers.");$}$
public boolean isDistinct(){$  return distinct;$}$
public static boolean contentEquals(Reader input1,Reader input2) throws IOException {$  input1=toBufferedReader(input1);$  input2=toBufferedReader(input2);$  int ch=input1.read();$  while (EOF != ch) {$    int ch2=input2.read();$    if (ch != ch2) {$      return false;$    }$    ch=input1.read();$  }$  int ch2=input2.read();$  return ch2 == EOF;$}$
private void findEigenVectors(final double[][] householderMatrix){$  final double[][] z=householderMatrix.clone();$  final int n=main.length;$  realEigenvalues=new double[n];$  imagEigenvalues=new double[n];$  final double[] e=new double[n];$  for (int i=0; i < n - 1; i++) {$    realEigenvalues[i]=main[i];$    e[i]=secondary[i];$  }$  realEigenvalues[n - 1]=main[n - 1];$  e[n - 1]=0;$  double maxAbsoluteValue=0;$  for (int i=0; i < n; i++) {$    if (FastMath.abs(realEigenvalues[i]) > maxAbsoluteValue) {$      maxAbsoluteValue=FastMath.abs(realEigenvalues[i]);$    }$    if (FastMath.abs(e[i]) > maxAbsoluteValue) {$      maxAbsoluteValue=FastMath.abs(e[i]);$    }$  }$  if (maxAbsoluteValue != 0) {$    for (int i=0; i < n; i++) {$      if (FastMath.abs(realEigenvalues[i]) <= Precision.EPSILON * maxAbsoluteValue) {$        realEigenvalues[i]=0;$      }$      if (FastMath.abs(e[i]) <= Precision.EPSILON * maxAbsoluteValue) {$        e[i]=0;$      }$    }$  }$  for (int j=0; j < n; j++) {$    int its=0;$    int m;$    do {$      for (m=j; m < n - 1; m++) {$        double delta=FastMath.abs(realEigenvalues[m]) + FastMath.abs(realEigenvalues[m + 1]);$        if (FastMath.abs(e[m]) + delta == delta) {$          break;$        }$      }$      if (m != j) {$        if (its == MAX_ITER) {$          throw new MathIllegalStateException(LocalizedCoreFormats.CONVERGENCE_FAILED,MAX_ITER);$        }$        its++;$        double q=(realEigenvalues[j + 1] - realEigenvalues[j]) / (2 * e[j]);$        double t=FastMath.sqrt(1 + q * q);$        if (q < 0.0) {$          q=realEigenvalues[m] - realEigenvalues[j] + e[j] / (q - t);$        }$ else {$          q=realEigenvalues[m] - realEigenvalues[j] + e[j] / (q + t);$        }$        double u=0.0;$        double s=1.0;$        double c=1.0;$        int i;$        for (i=m - 1; i >= j; i--) {$          double p=s * e[i];$          double h=c * e[i];$          if (FastMath.abs(p) >= FastMath.abs(q)) {$            c=q / p;$            t=FastMath.sqrt(c * c + 1.0);$            e[i + 1]=p * t;$            s=1.0 / t;$            c*=s;$          }$ else {$            s=p / q;$            t=FastMath.sqrt(s * s + 1.0);$            e[i + 1]=q * t;$            c=1.0 / t;$            s*=c;$          }$          if (e[i + 1] == 0.0) {$            realEigenvalues[i + 1]-=u;$            e[m]=0.0;$            break;$          }$          q=realEigenvalues[i + 1] - u;$          t=(realEigenvalues[i] - q) * s + 2.0 * c * h;$          u=s * t;$          realEigenvalues[i + 1]=q + u;$          q=c * t - h;$          for (int ia=0; ia < n; ia++) {$            p=z[ia][i + 1];$            z[ia][i + 1]=s * z[ia][i] + c * p;$            z[ia][i]=c * z[ia][i] - s * p;$          }$        }$        if (t == 0.0 && i >= j) {$          continue;$        }$        realEigenvalues[j]-=u;$        e[j]=q;$        e[m]=0.0;$      }$    }$ while (m != j);$  }$  for (int i=0; i < n; i++) {$    int k=i;$    double p=realEigenvalues[i];$    for (int j=i + 1; j < n; j++) {$      if (realEigenvalues[j] > p) {$        k=j;$        p=realEigenvalues[j];$      }$    }$    if (k != i) {$      realEigenvalues[k]=realEigenvalues[i];$      realEigenvalues[i]=p;$      for (int j=0; j < n; j++) {$        p=z[j][i];$        z[j][i]=z[j][k];$        z[j][k]=p;$      }$    }$  }$  maxAbsoluteValue=0;$  for (int i=0; i < n; i++) {$    if (FastMath.abs(realEigenvalues[i]) > maxAbsoluteValue) {$      maxAbsoluteValue=FastMath.abs(realEigenvalues[i]);$    }$  }$  if (maxAbsoluteValue != 0.0) {$    for (int i=0; i < n; i++) {$      if (FastMath.abs(realEigenvalues[i]) < Precision.EPSILON * maxAbsoluteValue) {$        realEigenvalues[i]=0;$      }$    }$  }$  eigenvectors=new ArrayRealVector[n];$  final double[] tmp=new double[n];$  for (int i=0; i < n; i++) {$    for (int j=0; j < n; j++) {$      tmp[j]=z[j][i];$    }$    eigenvectors[i]=new ArrayRealVector(tmp);$  }$}$
public MonsterAilmentCursor queryAilmentsFromId(long id){$  return mHelper.queryAilmentsFromMonster(id);$}$
public SynchronizedSymbolTable(SymbolTable symbolTable){$  fSymbolTable=symbolTable;$}$
public HttpClient(URL url,Map<String,Object> parameters,Map<String,String> headers){$  this.url=url.toExternalForm();$  this.parameters=parameters;$  this.headers=headers;$}$
public void addTypeDecl(TypeDecl node){$  List<TypeDecl> list=(parent == null || state == null) ? getTypeDeclListNoTransform() : getTypeDeclList();$  list.addChild(node);$}$
public boolean isUrlWhiteListed(String uri){$  if (whiteList == null)   return true;$  Uri parsedUri=Uri.parse(uri);$  Iterator<URLPattern> pit=whiteList.iterator();$  while (pit.hasNext()) {$    URLPattern p=pit.next();$    if (p.matches(parsedUri)) {$      return true;$    }$  }$  return false;$}$
public Builder withStreaming(){$  this.streaming=true;$  return this;$}$
public boolean isDirty(){$  return isTextDirty() || isPropDirty();$}$
@Override public boolean equals(Object other){$  return this == other || (other instanceof Book && hashCode() == other.hashCode());$}$
public static boolean swordSimilar(ItemStack a,ItemStack b){$  if (a == null || b == null) {$    return a == b;$  }$  if (a.getItem() != b.getItem())   return false;$  if (a.getItem().isDamageable())   return true;$  return a.getItemDamage() == b.getItemDamage();$}$
public void initialiseNode(){$  nodeInitStageAdvancer.startInitialisation();$}$
@SuppressWarnings({"unchecked","cast"}) public SuperAccess fullCopy(){$  SuperAccess tree=(SuperAccess)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public DerivativeStructure(final int parameters,final int order) throws MathIllegalArgumentException {$  this(DSCompiler.getCompiler(parameters,order));$}$
public LabeledContext extract(List<Tuple2<String,String>> labeledSequence,int position){$  Set<String> fs=new HashSet<String>();$  fs.addAll(extractBasicFeatures(labeledSequence,position));$  fs.addAll(extractWordFormFeatures(labeledSequence,position));$  fs.addAll(extractJointFeatures(labeledSequence,position));$  StringBuilder features=new StringBuilder(64);$  for (  String s : fs) {$    features.append(s);$    features.append(' ');$  }$  LabeledContext context=new LabeledContext();$  context.setWord(labeledSequence.get(position)._1());$  context.setTag(labeledSequence.get(position)._2());$  context.setFeatureStrings(features.toString().trim());$  return context;$}$
public FriendsEditListQuery userIds(Integer... value){$  return unsafeParam("user_ids",value);$}$
public static boolean isNearBottom(EntityPlayer player){$  Block toCheck=player.getEntityWorld().getBlockState(player.getPosition().down()).getBlock();$  Block toCheck2=player.getEntityWorld().getBlockState(player.getPosition().down(2)).getBlock();$  return !toCheck.isReplaceable(player.getEntityWorld(),player.getPosition().down()) || !toCheck2.isReplaceable(player.getEntityWorld(),player.getPosition().down(2));$}$
public GossipService(String cluster,URI uri,String id,List<GossipMember> gossipMembers,GossipSettings settings,GossipListener listener) throws InterruptedException, UnknownHostException {$  gossipManager=RandomGossipManager.newBuilder().withId(id).cluster(cluster).uri(uri).settings(settings).gossipMembers(gossipMembers).listener(listener).build();$}$
private void responseJson(String jsonstr){$  this.setContentType(Model.MIME_JSON);$  this.print(jsonstr);$}$
protected BuildSystem buildSystem(){$  return BuildSystem.Blaze;$}$
public static void writeLines(Collection<?> lines,String lineEnding,OutputStream output,Charset encoding) throws IOException {$  if (lines == null) {$    return;$  }$  if (lineEnding == null) {$    lineEnding=LINE_SEPARATOR;$  }$  Charset cs=Charsets.toCharset(encoding);$  for (  Object line : lines) {$    if (line != null) {$      output.write(StringCodingUtils.getBytes(line.toString(),cs));$    }$    output.write(StringCodingUtils.getBytes(lineEnding,cs));$  }$}$
public DefaultCredentialsProvider(){$}$
public static synchronized DataSourceInterface createDataSource(DataSourceInterface override){$  if (override != null) {$    if ((dataSource == null) || override.getClass() != dataSource.getClass()) {$      dataSource=override;$      dataSource.setDataSourceCreation(internalDataSource,externalDataSource,inlineDataSource);$    }$  }$ else {$    if (dataSource == null) {$      dataSource=new DataSourceImpl();$      dataSource.setDataSourceCreation(internalDataSource,externalDataSource,inlineDataSource);$    }$  }$  return dataSource;$}$
public <T>Some<T> some(Task<T> task){$  return new Some<>(this.executor_,task);$}$
private SubHyperplane<Euclidean3D> boundaryFacet(final Vector3D point,final BSPTree<Euclidean3D> node){$  final Vector2D point2D=((Plane)node.getCut().getHyperplane()).toSubSpace((Point<Euclidean3D>)point);$  @SuppressWarnings("unchecked") final BoundaryAttribute<Euclidean3D> attribute=(BoundaryAttribute<Euclidean3D>)node.getAttribute();$  if ((attribute.getPlusOutside() != null) && (((SubPlane)attribute.getPlusOutside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {$    return attribute.getPlusOutside();$  }$  if ((attribute.getPlusInside() != null) && (((SubPlane)attribute.getPlusInside()).getRemainingRegion().checkPoint(point2D) == Location.INSIDE)) {$    return attribute.getPlusInside();$  }$  return null;$}$
@Path(path="check") public void check(){$  JSON jo=new JSON();$  String op=this.getString("op");$  if ("db".equals(op)) {$    String url=this.getHtml("url").trim();$    try {$      if (!X.isEmpty(url)) {$        Connection c1=DB.getConnectionByUrl(url);$        Statement stat=c1.createStatement();$        stat.execute("create table test_ppp(X char(1))");$        stat.execute("drop table test_ppp");$      }$      jo.put(X.STATE,200);$    }$ catch (    Exception e1) {$      log.error(e1.getMessage(),e1);$      OpLog.error(setup.class,"check",e1.getMessage(),e1,login,this.getRemoteHost());$      jo.put(X.STATE,201);$      jo.put(X.MESSAGE,e1.getMessage());$    }$  }$ else   if ("mongo".equals(op)) {$    String url=this.getHtml("url").trim();$    String dbname=this.getString("db").trim();$    if (!X.isEmpty(url) && !X.isEmpty(dbname)) {$      log.debug("url=" + url + ", db="+ dbname);$      try {$        MongoClientOptions.Builder opts=new MongoClientOptions.Builder().socketTimeout(5000).serverSelectionTimeout(1000);$        MongoClient client=new MongoClient(new MongoClientURI(url,opts));$        MongoDatabase g=client.getDatabase(dbname);$        String name="test_" + UID.digital(5);$        g.createCollection(name);$        MongoCollection<Document> c1=g.getCollection(name);$        if (c1 != null) {$          c1.drop();$          jo.put(X.STATE,200);$        }$ else {$          jo.put(X.STATE,201);$          jo.put(X.MESSAGE,"can not access");$        }$        client.close();$      }$ catch (      Exception e1) {$        log.error(e1.getMessage(),e1);$        OpLog.error(setup.class,"check",e1.getMessage(),e1,login,this.getRemoteHost());$        jo.put(X.STATE,201);$        jo.put(X.MESSAGE,e1.getMessage());$      }$    }$ else {$      jo.put(X.STATE,200);$    }$  }$ else   if ("cache".equals(op)) {$    String url=this.getHtml("url").trim();$    String group=this.getString("group").trim();$    try {$      if (!X.isEmpty(url)) {$        Configuration conf=Config.getConfig();$        conf.setProperty("cache.url",url);$        conf.setProperty("cache.group",group);$        Cache.init(conf);$        DefaultCachable v1=new DefaultCachable();$        Cache.set("test",v1);$        DefaultCachable v2=(DefaultCachable)Cache.get("test");$        if (v2 != null && v1.age() == v2.age()) {$          jo.put(X.STATE,200);$        }$ else {$          jo.put(X.STATE,201);$          jo.put(X.MESSAGE,"cache system failed");$        }$      }$ else {$        jo.put(X.STATE,200);$      }$    }$ catch (    Exception e) {$      log.error("url=" + url,e);$      jo.put(X.STATE,201);$      jo.put(X.MESSAGE,e.getMessage());$    }$  }$ else {$    jo.put(X.STATE,201);$  }$  this.response(jo);$}$
public static Fill createDefaultGraphicFill(){$  Graphic graphicFill=styleFactory.createDefaultGraphic();$  Expression colour=ff.literal(DEFAULT_FILL_COLOUR);$  Expression backgroundColour=null;$  Expression opacity=ff.literal(1.0);$  Fill fill=styleFactory.createFill(colour,backgroundColour,opacity,graphicFill);$  return fill;$}$
@Override public synchronized Edge addEdge(Vertex vHead,Vertex vTail) throws Exception {$  Vertex vH=null, vT=null;$  boolean bVertexMissed=false;$  if ((vH=locateVertex(vHead)) == null) {$    add(vH=vHead);$    bVertexMissed=true;$  }$  if ((vT=locateVertex(vTail)) == null) {$    add(vT=vTail);$    bVertexMissed=true;$  }$  Edge e=null;$  if (eclLocator == null) {$    if (!bVertexMissed)     e=utils.locateDirectedEdgeInGraph(this,vH,vT);$  }$ else {$    if (!bVertexMissed)     e=eclLocator.locateDirectedEdgeInGraph(this,vH,vT);$  }$  if (e == null) {$    e=super.addEdge(vH,vT);$    if (eclLocator != null)     eclLocator.addedEdge(e);$  }$  return e;$}$
public static Equipment buildCreateAllFieldsEquipment(Long id,Properties properties){$  if (properties == null) {$    properties=new Properties();$  }$  Equipment equipment=Equipment.create("E_TEST" + id,"cern.c2mon.daq.testhandler.TestMessageHandler").id(id).description("foo").commFaultTag(CommFaultTag.create("E_TEST" + id + ":COMM_FAULT").build()).aliveTag(AliveTag.create("E_TEST" + id + ":ALIVE").build(),70000).statusTag(StatusTag.create("E_TEST" + id + ":STATUS").build()).address("testAddress").build();$  equipment.setProcessId(1L);$  properties.setProperty("name","E_TEST" + id);$  properties.setProperty("description","foo");$  properties.setProperty("statusTagId",String.valueOf(101l));$  properties.setProperty("commFaultTagId",String.valueOf(102l));$  properties.setProperty("aliveInterval",String.valueOf(70000));$  properties.setProperty("aliveTagId",String.valueOf(100l));$  properties.setProperty("processId",String.valueOf(1l));$  properties.setProperty("handlerClass","cern.c2mon.daq.testhandler.TestMessageHandler");$  properties.setProperty("address","testAddress");$  return equipment;$}$
StackFrame(AsmMethodSource src){$  this.src=src;$}$
public static void clear(int notificationId){$  MediaNotificationManager manager=getManager(notificationId);$  if (manager == null)   return;$  manager.clearNotification();$  sManagers.remove(notificationId);$}$
private void updateSyncEverythingState(){$  boolean isSyncEnabled=mSyncSwitchPreference.isChecked();$  mSyncEverything.setEnabled(isSyncEnabled);$  mSyncEverything.setChecked(!isSyncEnabled || mProfileSyncService.hasKeepEverythingSynced());$}$
void reportNewIdleState(boolean isIdle){$synchronized (mTrackedTasks) {$    for (    JobStatus task : mTrackedTasks) {$      task.idleConstraintSatisfied.set(isIdle);$    }$  }$  mStateChangedListener.onControllerStateChanged();$}$
public void clear(){$  sharedPreferences.edit().clear().apply();$}$
public Matrix plus(Matrix B){$  checkMatrixDimensions(B);$  Matrix X=new Matrix(m,n);$  double[][] C=X.getArray();$  for (int i=0; i < m; i++) {$    for (int j=0; j < n; j++) {$      C[i][j]=A[i][j] + B.A[i][j];$    }$  }$  return X;$}$
public Code39Reader(boolean usingCheckDigit){$  this(usingCheckDigit,false);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_REMAIN_TIME_10(String durationtime0){$  return new SM_SYSTEM_MESSAGE(1400204,durationtime0);$}$
public void complainIfNotSupported(final String name) throws MathIllegalArgumentException {$  if (!isSupported(name)) {$    throw new MathIllegalArgumentException(LocalizedODEFormats.UNKNOWN_PARAMETER,name);$  }$}$
protected static LazyNode cNumberValue(int index){$  return new LazyNode(VALUE_INTEGER,index);$}$
public static SM_SYSTEM_MESSAGE STR_QUEST_ACQUIRE_ERROR_NPC_GUILD(String value0){$  return new SM_SYSTEM_MESSAGE(1300595,value0);$}$
public void clear(int code){$  MouseButton mb=this.buttons.get(code);$  if (mb == null) {$    return;$  }$  mb.clear();$}$
@Override public double evaluate(final double[] values,final int begin,final int length) throws MathIllegalArgumentException {$  if (MathArrays.verifyValues(values,begin,length)) {$    double sampleSize=length;$    double xbar=StatUtils.sum(values,begin,length) / sampleSize;$    double correction=0;$    for (int i=begin; i < begin + length; i++) {$      correction+=values[i] - xbar;$    }$    return xbar + (correction / sampleSize);$  }$  return Double.NaN;$}$
public static SM_SYSTEM_MESSAGE STR_STIGMA_CANNT_UNEQUIP_STONE_OTHER_STONE_NEED_ITS_SKILL(String value1,String value0){$  return new SM_SYSTEM_MESSAGE(1300410,value1,value0);$}$
public boolean publish(final String publicationTopic,final byte[] payload,final int qos,final boolean retained){$  if (canPublish()) {$    try {$      logger.info("Publishing message on topic \"" + publicationTopic + "\". Payload size = "+ payload.length);$      client.publish(publicationTopic,payload,qos,retained);$      logger.trace("Published message on topic \"" + publicationTopic + "\". Payload size = "+ payload.length);$      return true;$    }$ catch (    MqttException e) {$      logger.error("Cannot publish message on " + publicationTopic,e);$    }$  }$ else {$    logger.warn("Publication attempt failure - no connection available...");$  }$  return false;$}$
static final TypeKey valueOf(Class<?> rawType,java.lang.reflect.Type[] typeArguments){$  byte[] identityHashBytes=new byte[(typeArguments.length + 1) * 4];$  intToByteArray(getTypeIndex(rawType),identityHashBytes,0);$  for (int i=0, len=typeArguments.length; i < len; ++i) {$    intToByteArray(getTypeIndex(typeArguments[i]),identityHashBytes,i + 1);$  }$  return new TypeKey(identityHashBytes);$}$
private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt){$  if (JOptionPane.showConfirmDialog(this,"Do you wish to end the application?","Confirm",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {$    if (taskInProgress())     removeTask(getActiveTask());$    this.setVisible(false);$    this.dispose();$  }$}$
private void fillBuf() throws IOException {$  int result=in.read(buf,0,buf.length);$  if (result == -1) {$    throw new EOFException();$  }$  pos=0;$  end=result;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HealCastorOnTargetDead_ME_TO_B(String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200526,skilltarget,skillname);$}$
public static String valueOf(Boolean value){$  return value != null ? String.valueOf(value) : null;$}$
private void encXORPass(byte[] data,int offset,int length,int key){$  int stop=length - 8;$  int pos=4 + offset;$  int edx;$  int ecx=key;$  while (pos < stop) {$    edx=(data[pos] & 0xFF);$    edx|=(data[pos + 1] & 0xFF) << 8;$    edx|=(data[pos + 2] & 0xFF) << 16;$    edx|=(data[pos + 3] & 0xFF) << 24;$    ecx+=edx;$    edx^=ecx;$    data[pos++]=(byte)(edx & 0xFF);$    data[pos++]=(byte)(edx >> 8 & 0xFF);$    data[pos++]=(byte)(edx >> 16 & 0xFF);$    data[pos++]=(byte)(edx >> 24 & 0xFF);$  }$  data[pos++]=(byte)(ecx & 0xFF);$  data[pos++]=(byte)(ecx >> 8 & 0xFF);$  data[pos++]=(byte)(ecx >> 16 & 0xFF);$  data[pos]=(byte)(ecx >> 24 & 0xFF);$}$
public PolygonFillDetails(FunctionNameInterface functionManager){$  super(PolygonFillDetails.class,configFile,functionManager);$}$
public LevenbergMarquardtOptimizer(final double initialStepBoundFactor,final double costRelativeTolerance,final double parRelativeTolerance,final double orthoTolerance,final double qrRankingThreshold){$  this.initialStepBoundFactor=initialStepBoundFactor;$  this.costRelativeTolerance=costRelativeTolerance;$  this.parRelativeTolerance=parRelativeTolerance;$  this.orthoTolerance=orthoTolerance;$  this.qrRankingThreshold=qrRankingThreshold;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_INTERVAL_A_TO_B(String skilltarget,int num0,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200962,skilltarget,num0,skillcaster,skillname);$}$
@Override protected boolean scanRootElementHook() throws IOException, XNIException {$  if (fExternalSubsetResolver != null && !fSeenDoctypeDecl && !fDisallowDoctype && (fValidation || fLoadExternalDTD)) {$    scanStartElementName();$    resolveExternalSubsetAndRead();$    reconfigurePipeline();$    if (scanStartElementAfterName()) {$      setScannerState(SCANNER_STATE_TRAILING_MISC);$      setDispatcher(fTrailingMiscDispatcher);$      return true;$    }$  }$ else {$    reconfigurePipeline();$    if (scanStartElement()) {$      setScannerState(SCANNER_STATE_TRAILING_MISC);$      setDispatcher(fTrailingMiscDispatcher);$      return true;$    }$  }$  return false;$}$
public static ExpectedCondition<Boolean> listSizeIsConstant(final WebElement element,final By byElement){$  return null;$}$
public void drawChartTransposed(Graphics2D gc){$  SelectionGraphics<String[]> sgc=(gc instanceof SelectionGraphics ? (SelectionGraphics<String[]>)gc : null);$  gc.setFont(getFont(ChartViewer.FontKeys.XAxisFont.toString()));$  int y0=getHeight() - bottomMargin;$  int y1=topMargin;$  final String[] series=getChartData().getSeriesNames().toArray(new String[getChartData().getNumberOfSeries()]);$  final double topY;$  final double[] percentFactor;$switch (scalingType) {$case PERCENT:${$      final String[] seriesIncludingDisabled=getChartData().getSeriesNamesIncludingDisabled();$      percentFactor=computePercentFactorPerSampleForTransposedChart((DefaultChartData)getChartData(),seriesIncludingDisabled);$      topY=computeMaxClassValueUsingPercentFactorPerSeries((DefaultChartData)getChartData(),seriesIncludingDisabled,percentFactor);$      break;$    }$case LOG:${$    topY=computeMaxYAxisValueLogScale(getMaxValue());$    percentFactor=null;$    break;$  }$case SQRT:${$  topY=Math.sqrt(getMaxValue());$  percentFactor=null;$  break;$}$default :$case LINEAR:${$topY=1.1 * getMaxValue();$percentFactor=null;$}$}$final double yFactor=(y0 - y1) / topY;$final int x0=leftMargin;$final int x1=getWidth() - rightMargin;$if (x0 >= x1) return;$final int numberOfClasses=getChartData().getNumberOfClasses();$double xStep=(x1 - x0) / (2 * numberOfClasses);$final double bigSpace=Math.max(2,Math.min(10,xStep));$xStep=(x1 - x0 - bigSpace * numberOfClasses) / numberOfClasses;$Point[] previousPoint=new Point[getChartData().getNumberOfSeries()];$java.util.List<Triplet<String,String,int[]>> list=new LinkedList<>();$int c=0;$for (String className : getChartData().getClassNames()) {$if (showXAxis) {$double xLabel=x0 + bigSpace + c * bigSpace + (c + 0.5) * xStep;$Point2D apt=new Point2D.Double(xLabel,getHeight() - bottomMargin + 10);$Dimension labelSize=Basic.getStringSize(gc,className,gc.getFont()).getSize();$if (classLabelAngle == 0) {$apt.setLocation(apt.getX() - labelSize.getWidth() / 2,apt.getY());$}$ else if (classLabelAngle > Math.PI / 2) {$apt=Geometry.translateByAngle(apt,classLabelAngle,-labelSize.width);$}$if (getChartData().getChartSelection().isSelected(null,className)) {$gc.setColor(ProgramProperties.SELECTION_COLOR);$fillAndDrawRect(gc,apt.getX(),apt.getY(),labelSize.width,labelSize.height,classLabelAngle,ProgramProperties.SELECTION_COLOR,ProgramProperties.SELECTION_COLOR_DARKER);$}$gc.setColor(getFontColor(ChartViewer.FontKeys.XAxisFont.toString(),Color.BLACK));$if (sgc != null) sgc.setCurrentItem(new String[]{null,className});$drawString(gc,className,apt.getX(),apt.getY(),classLabelAngle);$if (sgc != null) sgc.clearCurrentItem();$}$double currentHeight=y0;$double currentValueForLog=0;$int d=0;$for (int i=0; i < series.length; i++) {$final String seriesName=series[i];$double value=getChartData().getValueAsDouble(seriesName,className);$switch (scalingType) {$case PERCENT:${$  value*=percentFactor[i];$  break;$}$case LOG:${$if (value >= 1) {$  if (currentValueForLog <= 1) {$    value=Math.log10(value);$  }$ else {$    value=Math.log10(value + currentValueForLog) - Math.log10(currentValueForLog);$  }$  currentValueForLog+=getChartData().getValueAsDouble(seriesName,className);$}$ else value=0;$break;$}$case SQRT:${$if (value >= 1) {$if (currentValueForLog <= 1) {$  value=Math.sqrt(value);$}$ else {$  value=Math.sqrt(value + currentValueForLog) - Math.sqrt(currentValueForLog);$}$currentValueForLog+=getChartData().getValueAsDouble(seriesName,className);$}$ else value=0;$break;$}$}$final double xBar=x0 + bigSpace + c * bigSpace + c * xStep;$final double height=value * yFactor;$final Point aPt=new Point((int)Math.round(xBar + xStep / 2.0),(int)Math.round(currentHeight - height));$currentHeight-=height;$Point bPt=previousPoint[d];$if (bPt == null && numberOfClasses == 1) bPt=new Point(aPt.x - 2,aPt.y);$if (bPt != null) {$Triplet<String,String,int[]> triplet=new Triplet<>(seriesName,className,new int[]{bPt.x,bPt.y,aPt.x,aPt.y});$list.add(triplet);$}$previousPoint[d]=aPt;$d++;$}$c++;$}$list=Basic.reverseList(list);$for (Triplet<String,String,int[]> triplet : list) {$String seriesName=triplet.get1();$String className=triplet.get2();$int[] coords=triplet.get3();$Color color=getChartColors().getSampleColor(seriesName);$gc.setColor(color);$int[] xs=new int[]{coords[0],coords[2],coords[2],coords[0]};$int[] ys=new int[]{coords[1],coords[3],y0,y0};$gc.fillPolygon(xs,ys,4);$gc.setColor(color.darker());$if (sgc != null) sgc.setCurrentItem(new String[]{seriesName,className});$gc.drawLine(coords[0],coords[1],coords[2],coords[3]);$if (sgc != null) sgc.clearCurrentItem();$}$Triplet<String,String,int[]> current=null;$for (Triplet<String,String,int[]> next : list) {$if (current != null) {$String seriesName=current.get1();$String className=current.get2();$int[] coords=current.get3();$if (getChartData().getChartSelection().isSelected(seriesName,null)) {$gc.setStroke(HEAVY_STROKE);$gc.setColor(ProgramProperties.SELECTION_COLOR);$gc.drawLine(coords[0],coords[1],coords[2],coords[3]);$coords=next.get3();$gc.drawLine(coords[0],coords[1],coords[2],coords[3]);$gc.setStroke(NORMAL_STROKE);$}$ else if (getChartData().getChartSelection().isSelected(null,className)) {$gc.setStroke(HEAVY_STROKE);$gc.setColor(ProgramProperties.SELECTION_COLOR);$gc.drawOval(coords[2] - 1,coords[3] - 1,2,2);$gc.setStroke(NORMAL_STROKE);$}$}$current=next;$}$if (current != null) {$String seriesName=current.get1();$String className=current.get2();$int[] coords=current.get3();$if (getChartData().getChartSelection().isSelected(seriesName,null)) {$gc.setStroke(HEAVY_STROKE);$gc.setColor(ProgramProperties.SELECTION_COLOR);$gc.drawLine(coords[0],coords[1],coords[2],coords[3]);$gc.setStroke(NORMAL_STROKE);$}$ else if (getChartData().getChartSelection().isSelected(null,className)) {$gc.setStroke(HEAVY_STROKE);$gc.setColor(ProgramProperties.SELECTION_COLOR);$gc.drawOval(coords[2] - 1,coords[3] - 1,2,2);$gc.setStroke(NORMAL_STROKE);$}$}$}$
public void processUtterance(Utterance utterance) throws ProcessException {$  Relation segmentRelation=utterance.getRelation(Relation.SEGMENT);$  Relation targetRelation=utterance.getRelation(Relation.TARGET);$  Item segment=segmentRelation.getHead();$  Item target=null;$  if (targetRelation != null)   target=targetRelation.getHead();$  float prevEnd=0f;$  while (segment != null) {$    String name=segment.getFeatures().getString("name");$    float end=segment.getFeatures().getFloat("end");$    int dur=(int)((end - prevEnd) * 1000);$    StringBuffer targetStringBuffer=new StringBuffer();$    while (target != null && target.getFeatures().getFloat("pos") <= end) {$      float pos=target.getFeatures().getFloat("pos");$      int percentage=((int)((pos - prevEnd) * 1000)) * 100 / dur;$      int f0=(int)target.getFeatures().getFloat("f0");$      targetStringBuffer.append(" ");$      targetStringBuffer.append(percentage);$      targetStringBuffer.append(" ");$      targetStringBuffer.append(f0);$      target=target.getNext();$    }$    segment.getFeatures().setInt("mbr_dur",dur);$    segment.getFeatures().setString("mbr_targets",targetStringBuffer.toString().trim());$    prevEnd=end;$    segment=segment.getNext();$  }$}$
static boolean isSystemWindows(){$  return SYSTEM_SEPARATOR == WINDOWS_SEPARATOR;$}$
public NewsfeedSearchQueryWithExtended latitude(Float value){$  return unsafeParam("latitude",value);$}$
public int[] toNativeArray(){$  return toNativeArray(0,_pos);$}$
public void safeTimeToSpeech(String time){$  try {$    if (time.equals("now")) {$      speakNow();$    }$ else {$      timeToSpeech(time);$    }$  }$ catch (  IllegalArgumentException iae) {$    System.err.println("Bad time format");$  }$}$
public synchronized final int evictionCount(){$  return evictionCount;$}$
public synchronized void flush() throws IOException {$  checkNotClosed();$  trimToSize();$  trimToFileCount();$  journalWriter.flush();$}$
final public boolean isSyncReplicationEnabled(){$  return _isSyncReplication;$}$
public GroupsSetCallbackSettingsQuery boardPostNew(Boolean value){$  return unsafeParam("board_post_new",value);$}$
@Override protected void synchronizeData(){$  needsSyncData(false);$  DeferredDocumentImpl ownerDocument=(DeferredDocumentImpl)this.ownerDocument();$  data=ownerDocument.getNodeValueString(fNodeIndex);$}$
public void addElementValue(ElementValue node){$  List<ElementValue> list=(parent == null || state == null) ? getElementValueListNoTransform() : getElementValueList();$  list.addChild(node);$}$
public static SM_SYSTEM_MESSAGE STR_ENSLAVE_PET_LEVEL_CHANGE(String value0,String value1){$  return new SM_SYSTEM_MESSAGE(1300086,value0,value1);$}$
@NotNull public AddFaceToPersonAction addFaceToPerson(@NotNull String personGroupId,@NotNull String personId,@Nullable String userData,@NotNull String url){$  Validation.validate(personGroupId,"^[a-z0-9_-]{1,64}$",new ParameterValidationException("personGroupId","Person group ID is invalid. Valid format should be a string composed by numbers, english letters in lower case, '-', '_', and no longer than 64 characters."));$  Validation.validate(userData,1,new ParameterValidationException("userData","User-specified data for any purpose. The maximum length is 1KB."));$  return new AddFaceToPersonAction(cognitiveContext,personGroupId,personId,userData,url);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ChangeHateOnAttacked_A_TO_ME(String skillcaster,String value0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200647,skillcaster,value0,skillname);$}$
public double crossProduct(final Vector2D p1,final Vector2D p2){$  final double x1=p2.getX() - p1.getX();$  final double y1=getY() - p1.getY();$  final double x2=getX() - p1.getX();$  final double y2=p2.getY() - p1.getY();$  return MathArrays.linearCombination(x1,y1,-x2,y2);$}$
private static File createReserveDiskCacheDir(Context context){$  File cacheDir=StorageUtils.getCacheDirectory(context,false);$  File individualDir=new File(cacheDir,"uil-images");$  if (individualDir.exists() || individualDir.mkdir()) {$    cacheDir=individualDir;$  }$  return cacheDir;$}$
public int peekChar() throws IOException {$  if (DEBUG_BUFFER) {$    System.out.print("(peekChar: ");$    XMLEntityManager.print(fCurrentEntity);$    System.out.println();$  }$  if (fCurrentEntity.position == fCurrentEntity.count) {$    load(0,true);$  }$  int c=fCurrentEntity.ch[fCurrentEntity.position];$  if (DEBUG_BUFFER) {$    System.out.print(")peekChar: ");$    XMLEntityManager.print(fCurrentEntity);$    if (fCurrentEntity.isExternal()) {$      System.out.println(" -> '" + (c != '\r' ? (char)c : '\n') + "'");$    }$ else {$      System.out.println(" -> '" + (char)c + "'");$    }$  }$  if (fCurrentEntity.isExternal()) {$    return c != '\r' ? c : '\n';$  }$ else {$    return c;$  }$}$
public static Token newToken(int ofKind,String image){$switch (ofKind) {$default :$    return new Token(ofKind,image);$}$}$
public boolean inRange(VersionData minimumVersion,VersionData maximumVersion){$  if ((minimumVersion == null) || (maximumVersion == null)) {$    return false;$  }$  boolean inRange=minimumVersion.greaterThan(this) && this.lessThan(maximumVersion);$  return inRange;$}$
public ControlScaleOptions build(){$  ControlScaleOptions options=new ControlScaleOptions();$  options.position=this.position;$  options.maxWidth=maxWidth;$  options.metric=metric;$  options.imperial=imperial;$  options.updateWhenIdle=updateWhenIdle;$  return options;$}$
@Override public synchronized long skip(final long length) throws IOException {$  final long skip=super.skip(length);$  this.count+=skip;$  return skip;$}$
private double mahalanobis(double[] v1,double[] v2,double[] sig2){$  if (v1.length != v2.length)   throw new RuntimeException("Given array lengths were not equal.");$  if (v1.length != sig2.length)   throw new RuntimeException("Given array lengths were not equal.");$  double sum=0.0;$  double diff=0.0;$  for (int i=0; i < v1.length; i++) {$    diff=v1[i] - v2[i];$    sum+=((diff * diff) / sig2[i]);$  }$  return (sum);$}$
public SingularValueDecomposition svd(){$  return new SingularValueDecomposition(this);$}$
@Override public int[] makeCumulativeTestPoints(){$  return makeDensityTestPoints();$}$
public static void w(String tag,String msg,Exception e){$  if (LOG_ENABLE) {$    Log.w(tag,buildMsg(msg),e);$  }$}$
private void updatePlacements(ResourcePoolService.ResourcePoolState resourcePoolState){$  QueryTask queryTask=QueryUtil.buildPropertyQuery(GroupResourcePlacementService.GroupResourcePlacementState.class,GroupResourcePlacementService.GroupResourcePlacementState.FIELD_NAME_RESOURCE_POOL_LINK,resourcePoolState.documentSelfLink);$  QueryUtil.addExpandOption(queryTask);$  ServiceDocumentQuery<GroupResourcePlacementState> query=new ServiceDocumentQuery<>(getHost(),GroupResourcePlacementState.class);$  List<GroupResourcePlacementState> placements=new ArrayList<>();$  query.query(queryTask,null);$}$
public ConflictsCompareInput(CompareConfiguration config){$  super(config);$}$
public void endObjectName(O object,String name){$}$
public T distance(final FieldVector3D<T> v){$  final T dx=v.x.subtract(x);$  final T dy=v.y.subtract(y);$  final T dz=v.z.subtract(z);$  return dx.multiply(dx).add(dy.multiply(dy)).add(dz.multiply(dz)).sqrt();$}$
public PointF mapViewToImage(PointF viewPoint){$  float[] points=mTempValues;$  points[0]=viewPoint.x;$  points[1]=viewPoint.y;$  mActiveTransform.invert(mActiveTransformInverse);$  mActiveTransformInverse.mapPoints(points,0,points,0,1);$  mapAbsoluteToRelative(points,points,1);$  return new PointF(points[0],points[1]);$}$
private double determineLMParameter(double[] qy,double delta,double[] diag,InternalData internalData,int solvedCols,double[] work1,double[] work2,double[] work3,double[] lmDir,double lmPar){$  final double[][] weightedJacobian=internalData.weightedJacobian;$  final int[] permutation=internalData.permutation;$  final int rank=internalData.rank;$  final double[] diagR=internalData.diagR;$  final int nC=weightedJacobian[0].length;$  for (int j=0; j < rank; ++j) {$    lmDir[permutation[j]]=qy[j];$  }$  for (int j=rank; j < nC; ++j) {$    lmDir[permutation[j]]=0;$  }$  for (int k=rank - 1; k >= 0; --k) {$    int pk=permutation[k];$    double ypk=lmDir[pk] / diagR[pk];$    for (int i=0; i < k; ++i) {$      lmDir[permutation[i]]-=ypk * weightedJacobian[i][pk];$    }$    lmDir[pk]=ypk;$  }$  double dxNorm=0;$  for (int j=0; j < solvedCols; ++j) {$    int pj=permutation[j];$    double s=diag[pj] * lmDir[pj];$    work1[pj]=s;$    dxNorm+=s * s;$  }$  dxNorm=FastMath.sqrt(dxNorm);$  double fp=dxNorm - delta;$  if (fp <= 0.1 * delta) {$    lmPar=0;$    return lmPar;$  }$  double sum2;$  double parl=0;$  if (rank == solvedCols) {$    for (int j=0; j < solvedCols; ++j) {$      int pj=permutation[j];$      work1[pj]*=diag[pj] / dxNorm;$    }$    sum2=0;$    for (int j=0; j < solvedCols; ++j) {$      int pj=permutation[j];$      double sum=0;$      for (int i=0; i < j; ++i) {$        sum+=weightedJacobian[i][pj] * work1[permutation[i]];$      }$      double s=(work1[pj] - sum) / diagR[pj];$      work1[pj]=s;$      sum2+=s * s;$    }$    parl=fp / (delta * sum2);$  }$  sum2=0;$  for (int j=0; j < solvedCols; ++j) {$    int pj=permutation[j];$    double sum=0;$    for (int i=0; i <= j; ++i) {$      sum+=weightedJacobian[i][pj] * qy[i];$    }$    sum/=diag[pj];$    sum2+=sum * sum;$  }$  double gNorm=FastMath.sqrt(sum2);$  double paru=gNorm / delta;$  if (paru == 0) {$    paru=Precision.SAFE_MIN / FastMath.min(delta,0.1);$  }$  lmPar=FastMath.min(paru,FastMath.max(lmPar,parl));$  if (lmPar == 0) {$    lmPar=gNorm / dxNorm;$  }$  for (int countdown=10; countdown >= 0; --countdown) {$    if (lmPar == 0) {$      lmPar=FastMath.max(Precision.SAFE_MIN,0.001 * paru);$    }$    double sPar=FastMath.sqrt(lmPar);$    for (int j=0; j < solvedCols; ++j) {$      int pj=permutation[j];$      work1[pj]=sPar * diag[pj];$    }$    determineLMDirection(qy,work1,work2,internalData,solvedCols,work3,lmDir);$    dxNorm=0;$    for (int j=0; j < solvedCols; ++j) {$      int pj=permutation[j];$      double s=diag[pj] * lmDir[pj];$      work3[pj]=s;$      dxNorm+=s * s;$    }$    dxNorm=FastMath.sqrt(dxNorm);$    double previousFP=fp;$    fp=dxNorm - delta;$    if (FastMath.abs(fp) <= 0.1 * delta || (parl == 0 && fp <= previousFP && previousFP < 0)) {$      return lmPar;$    }$    for (int j=0; j < solvedCols; ++j) {$      int pj=permutation[j];$      work1[pj]=work3[pj] * diag[pj] / dxNorm;$    }$    for (int j=0; j < solvedCols; ++j) {$      int pj=permutation[j];$      work1[pj]/=work2[j];$      double tmp=work1[pj];$      for (int i=j + 1; i < solvedCols; ++i) {$        work1[permutation[i]]-=weightedJacobian[i][pj] * tmp;$      }$    }$    sum2=0;$    for (int j=0; j < solvedCols; ++j) {$      double s=work1[permutation[j]];$      sum2+=s * s;$    }$    double correction=fp / (delta * sum2);$    if (fp > 0) {$      parl=FastMath.max(parl,lmPar);$    }$ else     if (fp < 0) {$      paru=FastMath.min(paru,lmPar);$    }$    lmPar=FastMath.max(parl,lmPar + correction);$  }$  return lmPar;$}$
public void writeBoolean(boolean value) throws JMSException {$  initializeWriting();$  try {$    this.dataOut.writeBoolean(value);$  }$ catch (  IOException ioe) {$    JMSException jmsEx=new JMSException("Could not write data:" + ioe.toString());$    jmsEx.setLinkedException(ioe);$    throw jmsEx;$  }$}$
public AggregateTranslator(final CharSequenceTranslator... translators){$  this.translators=clone(translators);$}$
public boolean hasAuthorities(){$  for (  UserAuthorityGroup group : userAuthorityGroups) {$    if (group != null && group.getAuthorities() != null && !group.getAuthorities().isEmpty()) {$      return true;$    }$  }$  return false;$}$
public final void yyclose() throws java.io.IOException {$  zzAtEOF=true;$  zzEndRead=zzStartRead;$  if (zzReader != null)   zzReader.close();$}$
@Override public String toString(){$  StringBuilder buffer=new StringBuilder();$  buffer.append(super.toString());$  buffer.append("(");$  if (names != null) {$    for (int i=0; i < names.length; i++) {$      if (i > 0) {$        buffer.append(",");$      }$      buffer.append(names[i]);$    }$  }$  buffer.append(")");$  return buffer.toString();$}$
public VideoGetAlbumByIdQuery ownerId(Integer value){$  return unsafeParam("owner_id",value);$}$
private void transferToSpecificBuilderAndReset(){$  if (currentTag == Tag.VERSION) {$    dataBuilder.setVersion(buffer.toString());$  }$  addToRobotBuilder();$  addToBrowserBuilder();$  addToOperatingSystemBuilder();$  addToBrowserPatternBuilder();$  addToBrowserTypeBuilder();$  addToBrowserOsMappingBuilder();$  addToOperatingSystemPatternBuilder();$  addToDeviceBuilder();$  addToDevicePatternBuilder();$  buffer=new StringBuilder();$}$
public boolean isInterfaceDirectSuperinterfaceOf(SootClass parent,SootClass possibleChild){$  parent.checkLevel(SootClass.HIERARCHY);$  possibleChild.checkLevel(SootClass.HIERARCHY);$  return getDirectSuperinterfacesOf(possibleChild).contains(parent);$}$
public void addSuperInterfaceId(Access node){$  List<Access> list=(parent == null || state == null) ? getSuperInterfaceIdListNoTransform() : getSuperInterfaceIdList();$  list.addChild(node);$}$
@Override public int hashCode(){$  final int prime=31;$  int result=1;$  result=prime * result + ((getId() == null) ? 0 : getId().hashCode());$  result=prime * result + ((getGroupName() == null) ? 0 : getGroupName().hashCode());$  result=prime * result + ((getTaskName() == null) ? 0 : getTaskName().hashCode());$  result=prime * result + ((getStartTime() == null) ? 0 : getStartTime().hashCode());$  result=prime * result + ((getEndTime() == null) ? 0 : getEndTime().hashCode());$  result=prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());$  result=prime * result + ((getServerHost() == null) ? 0 : getServerHost().hashCode());$  result=prime * result + ((getServerDuid() == null) ? 0 : getServerDuid().hashCode());$  result=prime * result + ((getFireInfo() == null) ? 0 : getFireInfo().hashCode());$  return result;$}$
public MessagesSearchQuery q(String value){$  return unsafeParam("q",value);$}$
protected final float calculateModuleSize(ResultPoint topLeft,ResultPoint topRight,ResultPoint bottomLeft){$  return (calculateModuleSizeOneWay(topLeft,topRight) + calculateModuleSizeOneWay(topLeft,bottomLeft)) / 2.0f;$}$
private void updateSharedPreferencesEntry(int notificationId,boolean remove){$  Set<String> notificationIds=new HashSet<String>(mSharedPreferences.getStringSet(WEBRTC_NOTIFICATION_IDS,new HashSet<String>()));$  if (remove && !notificationIds.isEmpty() && notificationIds.contains(String.valueOf(notificationId))) {$    notificationIds.remove(String.valueOf(notificationId));$  }$ else   if (!remove) {$    notificationIds.add(String.valueOf(notificationId));$  }$  SharedPreferences.Editor sharedPreferenceEditor=mSharedPreferences.edit();$  sharedPreferenceEditor.putStringSet(WEBRTC_NOTIFICATION_IDS,notificationIds);$  sharedPreferenceEditor.apply();$}$
static public void normalize(Node node){$  for (int i=0; i < node.getChildNodes().getLength(); i++) {$    Node childNode=node.getChildNodes().item(i);$    if (childNode.getNodeType() == Node.TEXT_NODE && childNode.getNodeValue().trim().length() == 0) {$      node.removeChild(childNode);$      i--;$    }$ else     normalize(childNode);$  }$}$
protected Dfp trap(int type,String what,Dfp oper,Dfp def,Dfp result){$  return def;$}$
@Override public void ignorableWhitespace(XMLString text,Augmentations augs) throws XNIException {$  fAllWhitespace=true;$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase(getSyntax());$  CompareWindow viewer=(CompareWindow)getParent();$  viewer.getJList().setSelectionInterval(0,viewer.getListModel().getSize() - 1);$  viewer.getJList().setSelectionInterval(0,viewer.getListModel().getSize() - 1);$}$
public DefaultingDictionary(V defaultValue){$  this.defaultValue=defaultValue;$}$
public static byte[] toByteArray(Reader input) throws IOException {$  return toByteArray(input,Charset.defaultCharset());$}$
public int addSeries(Color color){$  int i=this.series.size();$  this.series.add(new Series(color));$  return i;$}$
public void notifyDataChanged(){$  init();$}$
public BoardGetCommentsQuery offset(Integer value){$  return unsafeParam("offset",value);$}$
public double det(){$  return new LUDecomposition(this).det();$}$
void addNeighbourRegion(MapRegion neighbour){$  neighbours=(MapRegion[])ArrayUtils.add(neighbours,neighbour);$}$
private void updateSize(){$  int newLineCount=ActionUtils.getLineCount(pane);$  if (newLineCount == lineCount) {$    return;$  }$  lineCount=newLineCount;$  int h=lineCount * charHeight + pane.getHeight();$  int d=(int)Math.log10(lineCount) + 1;$  if (d < 1) {$    d=1;$  }$  int w=d * charWidth + r_margin + l_margin;$  format="%" + d + "d";$  setPreferredSize(new Dimension(w,h));$  if (getParent() != null) {$    getParent().doLayout();$  }$}$
public static char[] toCharArray(InputStream is) throws IOException {$  return toCharArray(is,Charset.defaultCharset());$}$
private boolean handleException(Throwable ex){$  if (ex == null) {$    return false;$  }$  collectDeviceInfo(mContext);$  return true;$}$
private void updateNamespaceBundles(NamespaceName nsname,NamespaceBundles nsBundles,StatCallback callback) throws Exception {$  checkNotNull(nsname);$  checkNotNull(nsBundles);$  String path=joinPath(LOCAL_POLICIES_ROOT,nsname.toString());$  LocalPolicies policies=null;$  try {$    policies=this.pulsar.getLocalZkCacheService().policiesCache().get(path);$  }$ catch (  KeeperException.NoNodeException ne) {$    this.pulsar.getLocalZkCacheService().createPolicies(path,false);$    policies=this.pulsar.getLocalZkCacheService().policiesCache().get(path);$  }$  policies.bundles=getBundlesData(nsBundles);$  this.pulsar.getLocalZkCache().getZooKeeper().setData(path,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(policies),-1,callback,null);$}$
@Override public List<Period> generatePeriods(DateTimeUnit dateTimeUnit){$  dateTimeUnit.setMonth(1);$  dateTimeUnit.setDay(1);$  List<Period> periods=Lists.newArrayList();$  int year=dateTimeUnit.getYear();$  Calendar calendar=getCalendar();$  while (year == dateTimeUnit.getYear()) {$    periods.add(createPeriod(dateTimeUnit,null));$    dateTimeUnit=calendar.plusDays(dateTimeUnit,1);$  }$  return periods;$}$
private Vector resolveAllLocalSystem(String systemId){$  Vector map=new Vector();$  String osname=System.getProperty("os.name");$  boolean windows=(osname.indexOf("Windows") >= 0);$  Enumeration en=catalogEntries.elements();$  while (en.hasMoreElements()) {$    CatalogEntry e=(CatalogEntry)en.nextElement();$    if (e.getEntryType() == SYSTEM && (e.getEntryArg(0).equals(systemId) || (windows && e.getEntryArg(0).equalsIgnoreCase(systemId)))) {$      map.addElement(e.getEntryArg(1));$    }$  }$  if (map.size() == 0) {$    return null;$  }$ else {$    return map;$  }$}$
@Override public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event){$  if (event.getEventType() == AccessibilityEvent.TYPE_WINDOW_STATE_CHANGED) {$    event.getText().clear();$    int flags=DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR | DateUtils.FORMAT_SHOW_WEEKDAY;$    String dateString=DateUtils.formatDateTime(getContext(),mDateMillis,flags);$    event.getText().add(dateString);$    return true;$  }$  return super.dispatchPopulateAccessibilityEvent(event);$}$
public int validSamplesInFrame(){$  return validSamplesInFrame;$}$
public int download_file1(String file_id,long file_offset,long download_bytes,DownloadCallback callback) throws IOException, MyException {$  String[] parts=new String[2];$  this.errno=this.split_file_id(file_id,parts);$  if (this.errno != 0) {$    return this.errno;$  }$  return this.download_file(parts[0],parts[1],file_offset,download_bytes,callback);$}$
@Override public void valueChanged(ListSelectionEvent e){$  if (!e.getValueIsAdjusting()) {$    int selectedIndex=multiList.getSelectedIndex();$    if (selectedIndex >= 0) {$      populateSegmentList(selectedIndex);$    }$  }$}$
private void createRecordHolderQueue(File[] listFiles){$  this.recordHolderHeapLocal=new PriorityQueue<SortTempFileChunkHolder>(listFiles.length);$}$
private static byte[] copyOfRange(byte[] from,int start,int end){$  int length=end - start;$  byte[] result=new byte[length];$  System.arraycopy(from,start,result,0,length);$  return result;$}$
public ArrayFieldVector<T> append(ArrayFieldVector<T> v){$  return new ArrayFieldVector<T>(this,v);$}$
public void addEntryForMigration(Entry entry){$  addTabId(getCount(),entry.tabId);$  if (mEntryMap.indexOfKey(entry.tabId) >= 0)   return;$  mEntryMap.put(entry.tabId,entry);$}$
public void testStandaloneTaskEvents() throws Exception {$  Task task=null;$  try {$    task=taskService.newTask();$    task.setCategory("123");$    task.setDescription("Description");$    taskService.saveTask(task);$    assertEquals(3,listener.getEventsReceived().size());$    ActivitiEntityEvent event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);$    assertEquals(ActivitiEventType.ENTITY_CREATED,event.getType());$    assertTrue(event.getEntity() instanceof Task);$    Task taskFromEvent=(Task)event.getEntity();$    assertEquals(task.getId(),taskFromEvent.getId());$    assertNull(event.getProcessDefinitionId());$    assertNull(event.getProcessInstanceId());$    assertNull(event.getExecutionId());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(1);$    assertEquals(ActivitiEventType.ENTITY_INITIALIZED,event.getType());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(2);$    assertEquals(ActivitiEventType.TASK_CREATED,event.getType());$    listener.clearEventsReceived();$    taskService.setOwner(task.getId(),"owner");$    assertEquals(1,listener.getEventsReceived().size());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);$    assertEquals(ActivitiEventType.ENTITY_UPDATED,event.getType());$    assertTrue(event.getEntity() instanceof Task);$    taskFromEvent=(Task)event.getEntity();$    assertEquals(task.getId(),taskFromEvent.getId());$    assertEquals("owner",taskFromEvent.getOwner());$    assertNull(event.getProcessDefinitionId());$    assertNull(event.getProcessInstanceId());$    assertNull(event.getExecutionId());$    listener.clearEventsReceived();$    taskService.setAssignee(task.getId(),"kermit");$    assertEquals(2,listener.getEventsReceived().size());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);$    assertEquals(ActivitiEventType.TASK_ASSIGNED,event.getType());$    assertTrue(event.getEntity() instanceof Task);$    taskFromEvent=(Task)event.getEntity();$    assertEquals(task.getId(),taskFromEvent.getId());$    assertEquals("kermit",taskFromEvent.getAssignee());$    assertNull(event.getProcessDefinitionId());$    assertNull(event.getProcessInstanceId());$    assertNull(event.getExecutionId());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(1);$    assertEquals(ActivitiEventType.ENTITY_UPDATED,event.getType());$    assertTrue(event.getEntity() instanceof Task);$    taskFromEvent=(Task)event.getEntity();$    assertEquals(task.getId(),taskFromEvent.getId());$    assertNull(event.getProcessDefinitionId());$    assertNull(event.getProcessInstanceId());$    assertNull(event.getExecutionId());$    listener.clearEventsReceived();$    taskService.complete(task.getId());$    assertEquals(2,listener.getEventsReceived().size());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(0);$    assertEquals(ActivitiEventType.TASK_COMPLETED,event.getType());$    assertTrue(event.getEntity() instanceof Task);$    taskFromEvent=(Task)event.getEntity();$    assertEquals(task.getId(),taskFromEvent.getId());$    assertNull(event.getProcessDefinitionId());$    assertNull(event.getProcessInstanceId());$    assertNull(event.getExecutionId());$    event=(ActivitiEntityEvent)listener.getEventsReceived().get(1);$    assertEquals(ActivitiEventType.ENTITY_DELETED,event.getType());$    assertTrue(event.getEntity() instanceof Task);$    taskFromEvent=(Task)event.getEntity();$    assertEquals(task.getId(),taskFromEvent.getId());$    assertNull(event.getProcessDefinitionId());$    assertNull(event.getProcessInstanceId());$    assertNull(event.getExecutionId());$  }$  finally {$    if (task != null) {$      String taskId=task.getId();$      task=taskService.createTaskQuery().taskId(taskId).singleResult();$      if (task != null) {$        taskService.deleteTask(taskId);$      }$      historyService.deleteHistoricTaskInstance(taskId);$    }$  }$}$
private Throwable afterConsumption(boolean successful,long lastProcessedKey){$  try {$    getReplicationInFacade().afterConsumption(getReplicationInContext(),successful,lastProcessedKey);$    return null;$  }$ catch (  Throwable ex) {$    if (_specificLogger.isLoggable(Level.SEVERE)) {$      _specificLogger.log(Level.SEVERE,"failure during after consumption",ex);$    }$    final long possibleRevertedKey=calcLastProcessedkey();$    if (possibleRevertedKey != _lastProcessedKey) {$      if (_specificLogger.isLoggable(Level.SEVERE)) {$        _specificLogger.log(Level.SEVERE,"reverting last processed redo key from: " + _lastProcessedKey + " to "+ possibleRevertedKey,ex);$      }$      _lastProcessedKey=possibleRevertedKey;$    }$    return ex;$  }$}$
private MetricName(List<String> path){$  path_=unmodifiableList(new ArrayList<>(path));$}$
public void add(Unit u){$  getBody().getUnits().add(u);$}$
public static String[] tokenizeToStringArray(String str,String delimiters,boolean trimTokens,boolean ignoreEmptyTokens){$  StringTokenizer st=new StringTokenizer(str,delimiters);$  List<String> tokens=new ArrayList<String>();$  while (st.hasMoreTokens()) {$    String token=st.nextToken();$    if (trimTokens) {$      token=token.trim();$    }$    if (!ignoreEmptyTokens || token.length() > 0) {$      tokens.add(token);$    }$  }$  return toStringArray(tokens);$}$
AsmClassSource(String cls,InputStream data){$  super(cls);$  this.data=data;$}$
private InferenceTestUtils(){$  super();$}$
private synchronized ContentModelValidator createChildModel(int contentSpecIndex){$  XMLContentSpec contentSpec=new XMLContentSpec();$  getContentSpec(contentSpecIndex,contentSpec);$  if ((contentSpec.type & 0x0f) == XMLContentSpec.CONTENTSPECNODE_ANY || (contentSpec.type & 0x0f) == XMLContentSpec.CONTENTSPECNODE_ANY_OTHER || (contentSpec.type & 0x0f) == XMLContentSpec.CONTENTSPECNODE_ANY_LOCAL) {$  }$ else   if (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_LEAF) {$    if (contentSpec.value == null && contentSpec.otherValue == null)     throw new RuntimeException("ImplementationMessages.VAL_NPCD");$    fQName.setValues(null,(String)contentSpec.value,(String)contentSpec.value,(String)contentSpec.otherValue);$    return new SimpleContentModel(contentSpec.type,fQName,null);$  }$ else   if ((contentSpec.type == XMLContentSpec.CONTENTSPECNODE_CHOICE) || (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_SEQ)) {$    XMLContentSpec contentSpecLeft=new XMLContentSpec();$    XMLContentSpec contentSpecRight=new XMLContentSpec();$    getContentSpec(((int[])contentSpec.value)[0],contentSpecLeft);$    getContentSpec(((int[])contentSpec.otherValue)[0],contentSpecRight);$    if ((contentSpecLeft.type == XMLContentSpec.CONTENTSPECNODE_LEAF) && (contentSpecRight.type == XMLContentSpec.CONTENTSPECNODE_LEAF)) {$      fQName.setValues(null,(String)contentSpecLeft.value,(String)contentSpecLeft.value,(String)contentSpecLeft.otherValue);$      fQName2.setValues(null,(String)contentSpecRight.value,(String)contentSpecRight.value,(String)contentSpecRight.otherValue);$      return new SimpleContentModel(contentSpec.type,fQName,fQName2);$    }$  }$ else   if ((contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_ONE) || (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ZERO_OR_MORE) || (contentSpec.type == XMLContentSpec.CONTENTSPECNODE_ONE_OR_MORE)) {$    XMLContentSpec contentSpecLeft=new XMLContentSpec();$    getContentSpec(((int[])contentSpec.value)[0],contentSpecLeft);$    if (contentSpecLeft.type == XMLContentSpec.CONTENTSPECNODE_LEAF) {$      fQName.setValues(null,(String)contentSpecLeft.value,(String)contentSpecLeft.value,(String)contentSpecLeft.otherValue);$      return new SimpleContentModel(contentSpec.type,fQName,null);$    }$  }$ else {$    throw new RuntimeException("ImplementationMessages.VAL_CST");$  }$  fLeafCount=0;$  fLeafCount=0;$  CMNode cmn=buildSyntaxTree(contentSpecIndex,contentSpec);$  return new DFAContentModel(cmn,fLeafCount,false);$}$
public static synchronized JSpaceAttributes loadConfigDCache(String fileName) throws SpaceConfigurationException, IOException, SAXException, ParserConfigurationException {$  JSpaceAttributes prop=dCacheConfigFilesMap.get(fileName);$  if (prop == null) {$    InputStream dCacheInputStream=ResourceLoader.findConfigDCache(fileName);$    if (dCacheInputStream != null) {$      prop=(JSpaceAttributes)JProperties.convertXML(dCacheInputStream);$      dCacheConfigFilesMap.put(fileName,prop);$    }$  }$  return (JSpaceAttributes)prop.clone();$}$
public static List<String> readLines(InputStream input) throws IOException {$  return readLines(input,Charset.defaultCharset());$}$
public void addHeaderView(View v,Object data,boolean isSelectable){$  ListAdapter adapter=getAdapter();$  if (adapter != null && !(adapter instanceof HeaderViewGridAdapter)) {$    throw new IllegalStateException("Cannot add header view to grid -- setAdapter has already been called.");$  }$  ViewGroup.LayoutParams lyp=v.getLayoutParams();$  FixedViewInfo info=new FixedViewInfo();$  FrameLayout fl=new FullWidthFixedViewLayout(getContext());$  if (lyp != null) {$    v.setLayoutParams(new FrameLayout.LayoutParams(lyp.width,lyp.height));$    fl.setLayoutParams(new AbsListView.LayoutParams(lyp.width,lyp.height));$  }$  fl.addView(v);$  info.view=v;$  info.viewContainer=fl;$  info.data=data;$  info.isSelectable=isSelectable;$  mHeaderViewInfos.add(info);$  if (adapter != null) {$    ((HeaderViewGridAdapter)adapter).notifyDataSetChanged();$  }$}$
public static final double footPoundsToNewtonMeters(double footPound){$  return footPound * FOOT_POUND_TO_NEWTON_METER;$}$
@Override public final void writeLong(long v) throws IOException {$  work[0]=(byte)v;$  work[1]=(byte)(v >> 8);$  work[2]=(byte)(v >> 16);$  work[3]=(byte)(v >> 24);$  work[4]=(byte)(v >> 32);$  work[5]=(byte)(v >> 40);$  work[6]=(byte)(v >> 48);$  work[7]=(byte)(v >> 56);$  dis.write(work,0,8);$}$
public static PublicKey generatePublicKey(String encodedPublicKey){$  try {$    byte[] decodedKey=Base64.decode(encodedPublicKey);$    KeyFactory keyFactory=KeyFactory.getInstance(KEY_FACTORY_ALGORITHM);$    return keyFactory.generatePublic(new X509EncodedKeySpec(decodedKey));$  }$ catch (  NoSuchAlgorithmException e) {$    throw new RuntimeException(e);$  }$catch (  InvalidKeySpecException e) {$    Log.e(TAG,"Invalid key specification.");$    throw new IllegalArgumentException(e);$  }$catch (  Base64DecoderException e) {$    Log.e(TAG,"Base64 decoding failed.");$    throw new IllegalArgumentException(e);$  }$}$
public void stop() throws IOException {$  logger.info("Stopping storage process...");$  ProcessBuilder stopBuilder=process(getStopCommand());$  Process stopper=stopBuilder.start();$  sleeper.sleepQuietly(SCRIPT_EXECUTE_WAIT_TIME_MS);$  try {$    int code=stopper.exitValue();$    if (code == 0) {$      logger.info("Storage process has been stopped");$      instanceState.setStorageProxyAlive(false);$    }$ else {$      logger.error("Unable to stop storage process. Error code: {}",code);$      logProcessOutput(stopper);$    }$  }$ catch (  Exception e) {$    logger.warn("Could not shut down storage process correctly: ",e);$  }$}$
@Override public Object call(){$  cachePersistenceDAO.persistBatch(keyList);$  return null;$}$
public static UserFeedback createUserFeedback(){$  UserFeedback userFeedback=new UserFeedback(Constants.DEFAULT_PREFIX_USER_FEEDBACK + internalId++);$  return userFeedback;$}$
public NeighborIterator(Node n,Iterator edges){$  m_node=n;$  m_edges=edges;$}$
public void rectValueToPixel(RectF r){$  mMatrixValueToPx.mapRect(r);$  mViewPortHandler.getMatrixTouch().mapRect(r);$  mMatrixOffset.mapRect(r);$}$
public void init$Children(){$  children=new ASTNode[3];$  setChild(new List(),1);$  setChild(new List(),2);$}$
public void connect(final MqttCallback callback,final Runnable connectionRunnable) throws SpyException {$  createClient(callback);$  final ReconnectionSettings reconnectionSettings=getMqttConnectionDetails().getReconnectionSettings();$  if (reconnectionSettings == null) {$    new Thread(connectionRunnable).start();$  }$ else {$    reconnectionManager.addConnection(this,connectionRunnable);$  }$}$
public VideoEditQuery privacyView(List<String> value){$  return unsafeParam("privacy_view",value);$}$
public LineIterator(final Reader reader){$  if (reader == null) {$    throw new IllegalArgumentException("Reader must not be null");$  }$  if (reader instanceof BufferedReader) {$    bufferedReader=(BufferedReader)reader;$  }$ else {$    bufferedReader=new BufferedReader(reader);$  }$}$
public static boolean startsWith(String columnPath,String tableName){$  if (tableName == null || columnPath == null)   return false;$  return columnPath.startsWith(tableName + ".");$}$
public boolean isCannotShare(){$  if (cannotShare == null) {$    return false;$  }$ else {$    return cannotShare;$  }$}$
public Object clone(){$  MultipleReturnValueRuleExpression clone=(MultipleReturnValueRuleExpression)super.clone();$  clone.conditions=new ArrayList<IRuleCondition>();$  Iterator<IRuleCondition> i=conditions.iterator();$  while (i.hasNext()) {$    clone.conditions.add((IRuleCondition)i.next().clone());$  }$  return clone;$}$
public static Charset toCharset(String charset){$  return charset == null ? Charset.defaultCharset() : Charset.forName(charset);$}$
private void hamming(int size){$  int start=(windowFunction.length - size) / 2;$  int stop=(windowFunction.length + size) / 2;$  double scale=1.0 / (double)size / 0.54;$  double factor=twoPI / (double)size;$  for (int i=0; start < stop; start++, i++)   windowFunction[i]=scale * (25.0 / 46.0 - 21.0 / 46.0 * Math.cos(factor * i));$}$
private static Class<?>[] reloadClasses(Class<?> root,Class<?>[] suiteClasses) throws InitializationError {$  URL[] urls=new URL[]{classpathOf(root),classpathOf(IsolatedClassLoaderSuite.class)};$  Class<?> sc=null;$  try {$    for (int i=0; i < suiteClasses.length; i++) {$      sc=suiteClasses[i];$      ClassLoader cl=new IsolatedClassLoader(urls,IsolatedClassLoaderSuite.class.getClassLoader());$      suiteClasses[i]=cl.loadClass(sc.getName());$    }$    return suiteClasses;$  }$ catch (  ClassNotFoundException cex) {$    throw new InitializationError("could not reload class: " + sc);$  }$}$
public static DataFrame zeromeanUnitVariance(DataFrame frame){$  return zeromeanUnitVariance(frame,Collections.<String>emptyList());$}$
@CallSuper public void bind(@NonNull PreferenceData preferenceData){$  if (DesignConfig.DEBUG_RECYCLER_VIEW) {$    Log.v(TAG,getLogPrefix() + "bind to " + preferenceData.title+ getLogSuffix());$  }$  bindTextView(titleView,preferenceData.title);$  bindTextView(summaryView,preferenceData.summary);$  boolean removeIcon=preferenceData.removeIconIfEmpty && preferenceData.icon == null;$  if (iconView != null) {$    if (preferenceData.icon != null) {$      iconView.setImageDrawable(preferenceData.icon);$    }$    iconView.setVisibility(removeIcon ? View.GONE : View.VISIBLE);$  }$  if (iconFrame != null) {$    iconFrame.setVisibility(removeIcon ? View.GONE : View.VISIBLE);$  }$}$
public boolean isCritical(){$  return true;$}$
public ZWaveMtpWindowCoveringCommandClass(ZWaveNode node,ZWaveController controller,ZWaveEndpoint endpoint){$  super(node,controller,endpoint);$}$
public static JavaRDD<List<Writable>> normalize(Schema schema,JavaRDD<List<Writable>> data,double min,double max,List<String> skipColumns){$  DataFrame frame=DataFrames.toDataFrame(schema,data);$  return DataFrames.toRecords(normalize(frame,min,max,skipColumns)).getSecond();$}$
@Override public List<Module> searchModule(Module module){$  return sessionTemplate.selectList(NAMESPACE + ".searchModule",module);$}$
public boolean select(Viewer viewer,Object parentElement,Object element){$  return false;$}$
protected static void showLogin(){$  if (loginListener != null) {$    loginListener.shouldAuthenticate();$  }$}$
private void indexSplitDoc(){$  try {$    _indexSplitDoc();$  }$  finally {$    shardState.indexState.globalState.indexingJobsRunning.release();$    semaphore.release();$    ctx.inFlightChunks.arriveAndDeregister();$  }$}$
public static byte[] decode(String s,int options) throws java.io.IOException {$  if (s == null) {$    throw new NullPointerException("Input string was null.");$  }$  byte[] bytes;$  try {$    bytes=s.getBytes(PREFERRED_ENCODING);$  }$ catch (  java.io.UnsupportedEncodingException uee) {$    bytes=s.getBytes();$  }$  bytes=decode(bytes,0,bytes.length,options);$  boolean dontGunzip=(options & DONT_GUNZIP) != 0;$  if ((bytes != null) && (bytes.length >= 4) && (!dontGunzip)) {$    int head=((int)bytes[0] & 0xff) | ((bytes[1] << 8) & 0xff00);$    if (java.util.zip.GZIPInputStream.GZIP_MAGIC == head) {$      java.io.ByteArrayInputStream bais=null;$      java.util.zip.GZIPInputStream gzis=null;$      java.io.ByteArrayOutputStream baos=null;$      byte[] buffer=new byte[2048];$      int length=0;$      try {$        baos=new java.io.ByteArrayOutputStream();$        bais=new java.io.ByteArrayInputStream(bytes);$        gzis=new java.util.zip.GZIPInputStream(bais);$        while ((length=gzis.read(buffer)) >= 0) {$          baos.write(buffer,0,length);$        }$        bytes=baos.toByteArray();$      }$ catch (      java.io.IOException e) {$        e.printStackTrace();$      }$ finally {$        try {$          baos.close();$        }$ catch (        Exception e) {$        }$        try {$          gzis.close();$        }$ catch (        Exception e) {$        }$        try {$          bais.close();$        }$ catch (        Exception e) {$        }$      }$    }$  }$  return bytes;$}$
public boolean isApplicable(){$  RemoteServiceBrowser remoteServiceBrowser=(RemoteServiceBrowser)getViewer();$  return remoteServiceBrowser != null && remoteServiceBrowser.getServicePanel() != null && remoteServiceBrowser.getServicePanel().getFileTree().getModel().getRoot() != null && remoteServiceBrowser.getServicePanel().getFileTree().getModel().getChildCount(remoteServiceBrowser.getServicePanel().getFileTree().getModel().getRoot()) > 0;$}$
public String process(Item item) throws ProcessException {$  int count=0;$  Item ss=item.getItemAs(Relation.SYLLABLE);$  Item firstSyllable=FIRST_SYLLABLE_PATH.findItem(item);$  for (Item p=ss.getPrevious(); p != null && !p.equalsShared(firstSyllable); p=p.getPrevious()) {$    if ("1".equals(p.getFeatures().getString("stress"))) {$      count++;$    }$  }$  return Integer.toString(rail(count));$}$
public static String checkNull(String string1){$  if (string1 != null)   return string1;$ else   return "";$}$
public void error(Object elementOrLocation,String message,Object... params){$  model.getDiagCollector().addDiag(Diag.error(getLocation(elementOrLocation),Model.diagPrefix(aspectName) + message,params));$}$
@Override public FDistribution makeDistribution(){$  return new FDistribution(5.0,6.0);$}$
@LegacyNetworkConstant private int convertConstraintsToLegacyNetConstant(int constraintMap){$  int reqNet=LEGACY_NETWORK_ANY;$  reqNet=(constraintMap & Constraint.ON_ANY_NETWORK) == Constraint.ON_ANY_NETWORK ? LEGACY_NETWORK_CONNECTED : reqNet;$  reqNet=(constraintMap & Constraint.ON_UNMETERED_NETWORK) == Constraint.ON_UNMETERED_NETWORK ? LEGACY_NETWORK_UNMETERED : reqNet;$  return reqNet;$}$
public Entry copy(){$  return new Entry(mVal,mXIndex,mData);$}$
private boolean equals(SimpleRegression model1,SimpleRegression model2,double tol){$  if (model1.getN() != model2.getN()) {$    return false;$  }$  if (FastMath.abs(model1.getIntercept() - model2.getIntercept()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getInterceptStdErr() - model2.getInterceptStdErr()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getMeanSquareError() - model2.getMeanSquareError()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getR() - model2.getR()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getRegressionSumSquares() - model2.getRegressionSumSquares()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getRSquare() - model2.getRSquare()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getSignificance() - model2.getSignificance()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getSlope() - model2.getSlope()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getSlopeConfidenceInterval() - model2.getSlopeConfidenceInterval()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getSlopeStdErr() - model2.getSlopeStdErr()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getSumOfCrossProducts() - model2.getSumOfCrossProducts()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getSumSquaredErrors() - model2.getSumSquaredErrors()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getTotalSumSquares() - model2.getTotalSumSquares()) > tol) {$    return false;$  }$  if (FastMath.abs(model1.getXSumSquares() - model2.getXSumSquares()) > tol) {$    return false;$  }$  return true;$}$
private boolean firstParamIsSelf(TypeElement classElement,SkylarkModule skyModule,DeclaredType objectType){$  return !skyModule.namespace() && objectType.toString().equals(classElement.toString());$}$
public SpaceTypeDescriptorBuilder addCompoundIndex(String[] paths,boolean unique){$  return addIndex(SpaceIndexFactory.createCompoundIndex(paths,SpaceIndexType.BASIC,null,unique));$}$
public static MultivaluedMap<String,String> decodeMatrix(String pathSegment,boolean decode){$  MultivaluedMap<String,String> matrixMap=EmoMultivaluedMap.create();$  int s=pathSegment.indexOf(';') + 1;$  if (s == 0 || s == pathSegment.length()) {$    return matrixMap;$  }$  do {$    int e=pathSegment.indexOf(';',s);$    if (e == -1) {$      decodeMatrixParam(matrixMap,pathSegment.substring(s),decode);$    }$ else     if (e > s) {$      decodeMatrixParam(matrixMap,pathSegment.substring(s,e),decode);$    }$    s=e + 1;$  }$ while (s > 0 && s < pathSegment.length());$  return matrixMap;$}$
public static UUID maximumUuid(){$  return new UUID(getMostSignificantBits(Long.MAX_VALUE),getLeastSignificantBits(Integer.MAX_VALUE,Long.MAX_VALUE));$}$
public String namespace(){$  return theNamespace;$}$
public void updateExpandableItem(int expandableItemPosition,ExpandableItem expandableItem){$  validateExpandableItem(expandableItem);$  expandableItems.remove(expandableItemPosition);$  expandableItems.add(expandableItemPosition,expandableItem);$  int buttonPosition=buttons.size() - 1 - expandableItemPosition;$  configureButtonContent(buttons.get(buttonPosition),expandableItem);$}$
public static Object deserialize(String content,Delegator delegator) throws SerializeException, SAXException, ParserConfigurationException, IOException {$  Document document=UtilXml.readXmlDocument(content,false);$  if (document != null) {$    if (!"ofbiz-ser".equals(document.getDocumentElement().getTagName())) {$      return UtilXml.fromXml(content);$    }$    return deserialize(document,delegator);$  }$ else {$    Debug.logWarning("Serialized document came back null",module);$    return null;$  }$}$
public void destroy(){$}$
public static void writeLines(Collection<?> lines,String lineEnding,OutputStream output,Charset encoding) throws IOException {$  if (lines == null) {$    return;$  }$  if (lineEnding == null) {$    lineEnding=LINE_SEPARATOR;$  }$  Charset cs=Charsets.toCharset(encoding);$  for (  Object line : lines) {$    if (line != null) {$      output.write(StringCodingUtils.getBytes(line.toString(),cs));$    }$    output.write(StringCodingUtils.getBytes(lineEnding,cs));$  }$}$
public FileWriterWithEncoding(File file,Charset encoding,boolean append) throws IOException {$  super();$  this.out=initWriter(file,encoding,append);$}$
public boolean isDrawEntryLabelsEnabled(){$  return mDrawEntryLabels;$}$
public ImageIcon loadImage(String imageName){$  try {$    ClassLoader classloader=getClass().getClassLoader();$    java.net.URL url=classloader.getResource(imageName);$    if (url != null) {$      ImageIcon icon=new ImageIcon(url);$      return icon;$    }$  }$ catch (  Exception e) {$    e.printStackTrace();$  }$  throw new IllegalArgumentException("Unable to load image: " + imageName);$}$
public void addTypeArgument(Access node){$  List<Access> list=(parent == null || state == null) ? getTypeArgumentListNoTransform() : getTypeArgumentList();$  list.addChild(node);$}$
@Override public void apply(NexusStreamParser np) throws Exception {$}$
public ASBSessionCursor queryASBSession(long id){$  QueryHelper qh=new QueryHelper();$  qh.Columns=null;$  qh.Table=S.TABLE_ASB_SETS;$  qh.Selection="ar." + S.COLUMN_ASB_SET_ID + " = ?";$  qh.SelectionArgs=new String[]{String.valueOf(id)};$  qh.GroupBy=null;$  qh.Having=null;$  qh.OrderBy=null;$  qh.Limit="1";$  return new ASBSessionCursor(wrapJoinHelper(builderASBSession(),qh));$}$
public DecorationCursor queryDecorationsSearch(String filter){$  filter=(filter == null) ? "" : filter.trim();$  if (filter.equals(""))   return mHelper.queryDecorations();$  return mHelper.queryDecorationsSearch(filter);$}$
private void movePos(float deltaY){$  if ((deltaY < 0 && mPtrIndicator.isInStartPosition())) {$    if (DEBUG) {$      PtrCLog.e(LOG_TAG,String.format("has reached the top"));$    }$    return;$  }$  int to=mPtrIndicator.getCurrentPosY() + (int)deltaY;$  if (mPtrIndicator.willOverTop(to)) {$    if (DEBUG) {$      PtrCLog.e(LOG_TAG,String.format("over top"));$    }$    to=PtrIndicator.POS_START;$  }$  mPtrIndicator.setCurrentPos(to);$  int change=to - mPtrIndicator.getLastPosY();$  updatePos(change);$}$
public static int generateBackgroundColor(BookmarkItem item){$  int normalizedIndex=MathUtils.positiveModulo(item.getUrl().hashCode(),DEFAULT_BACKGROUND_COLORS.length);$  return DEFAULT_BACKGROUND_COLORS[normalizedIndex];$}$
public GaussianRandomGenerator(final RandomGenerator generator){$  this.generator=generator;$}$
public static void write(File file,CharSequence data) throws IOException {$  write(file,data,Charset.defaultCharset(),false);$}$
public void scrollToFinishActivity(){$  final int childWidth=mContentView.getWidth();$  int left=0, top=0;$  left=childWidth + mShadowLeft.getIntrinsicWidth() + OVERSCROLL_DISTANCE;$  mDragHelper.smoothSlideViewTo(mContentView,left,top);$  invalidate();$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MoveBehindATK_A_TO_SELF(String skillcaster,int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200838,skillcaster,num0,skillname);$}$
private void terminateTaskMgr(){$synchronized (taskManager) {$    List pendingTasks=taskManager.getPending();$    for (int i=0; i < pendingTasks.size(); i++) {$      taskManager.remove((TaskManager.Task)pendingTasks.get(i));$    }$synchronized (pendingDiscoveries) {$      for (Iterator iter=pendingDiscoveries.iterator(); iter.hasNext(); ) {$        Object req=iter.next();$        iter.remove();$        if (req instanceof Socket) {$          try {$            ((Socket)req).close();$          }$ catch (          IOException e) {$          }$        }$      }$    }$    taskManager.terminate();$  }$synchronized (pendingNotifies) {$    pendingNotifies.clear();$  }$}$
public void clearParams(){$  params.clear();$}$
public boolean shouldInterceptNavigation(ExternalNavigationHandler externalNavHandler,NavigationParams navigationParams){$  return true;$}$
public boolean isShowLabel(){$  return showTitle;$}$
public static SM_SYSTEM_MESSAGE STR_FREE_EXPERIENCE_CHARACTER_CANT_TRADE(String value0){$  return new SM_SYSTEM_MESSAGE(1400400,value0);$}$
protected void actionPerformed(GuiButton button) throws IOException {$  if (button.id == 0) {$    this.mc.displayGuiScreen(new GuiAchievements(this,this.mc.thePlayer.getStatFileWriter()));$  }$  if (button.id == 1) {$    this.mc.displayGuiScreen(new GuiStats(this,this.mc.thePlayer.getStatFileWriter()));$  }$}$
public IsEqualToExtended(Expression expression1,Expression expression2,boolean matchCase){$  super(expression1,expression2,matchCase);$}$
public static boolean checkContentCanBePulledDown(PtrFrameLayout frame,View content,View header){$  return !canChildScrollUp(content);$}$
@Override protected void handleIOException(IOException e) throws IOException {$  throw new TaggedIOException(e,tag);$}$
public double cond(){$  return new SingularValueDecomposition(this).cond();$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SpellATK_Instant_ME_TO_SELF(int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200413,num0,skillname);$}$
protected PolicyAuditor(){$}$
public static Point size(URL url){$  if (url == null)   return null;$  try {$    return size(url.openStream());$  }$ catch (  Exception e) {$    log.error(e.getMessage(),e);$  }$  return null;$}$
public Interceptor[] buildRouteInterceptors(Interceptor[] defaultInters,Interceptor[] resourceInters,Class<? extends Resource> resourceClass,Interceptor[] methodInters,Method method){$  List<Interceptor> allInters=new ArrayList<Interceptor>();$  for (  Interceptor defaultInter : defaultInters) {$    allInters.add(defaultInter);$  }$  for (  Interceptor resourceInter : resourceInters) {$    allInters.add(resourceInter);$  }$  for (  Interceptor methodInter : methodInters) {$    allInters.add(methodInter);$  }$  Class<? extends Interceptor>[] resourceClears=getResourceClears(resourceClass);$  Class<? extends Interceptor>[] methodClears=getMethodClears(method);$  if ((resourceClears != null && resourceClears.length > 0) || (methodClears != null && methodClears.length > 0)) {$    for (int i=0; i < allInters.size(); i++) {$      i=clearInterceptor(allInters,resourceClears,i);$      i=clearInterceptor(allInters,methodClears,i);$    }$  }$  return allInters.toArray(new Interceptor[allInters.size()]);$}$
public Response<?> response(){$  return response;$}$
public static SM_SYSTEM_MESSAGE STR_FORCE_ITEM_WIN(String value0,String value1){$  return new SM_SYSTEM_MESSAGE(1390003,value0,value1);$}$
public Response(int init){$  out=new byte[init];$  offset=0;$}$
private int compareDates(Duration duration1,Duration duration2){$  int resultA=DatatypeConstants.INDETERMINATE;$  int resultB=DatatypeConstants.INDETERMINATE;$  XMLGregorianCalendar tempA=(XMLGregorianCalendar)TEST_POINTS[0].clone();$  XMLGregorianCalendar tempB=(XMLGregorianCalendar)TEST_POINTS[0].clone();$  tempA.add(duration1);$  tempB.add(duration2);$  resultA=tempA.compare(tempB);$  if (resultA == DatatypeConstants.INDETERMINATE) {$    return DatatypeConstants.INDETERMINATE;$  }$  tempA=(XMLGregorianCalendar)TEST_POINTS[1].clone();$  tempB=(XMLGregorianCalendar)TEST_POINTS[1].clone();$  tempA.add(duration1);$  tempB.add(duration2);$  resultB=tempA.compare(tempB);$  resultA=compareResults(resultA,resultB);$  if (resultA == DatatypeConstants.INDETERMINATE) {$    return DatatypeConstants.INDETERMINATE;$  }$  tempA=(XMLGregorianCalendar)TEST_POINTS[2].clone();$  tempB=(XMLGregorianCalendar)TEST_POINTS[2].clone();$  tempA.add(duration1);$  tempB.add(duration2);$  resultB=tempA.compare(tempB);$  resultA=compareResults(resultA,resultB);$  if (resultA == DatatypeConstants.INDETERMINATE) {$    return DatatypeConstants.INDETERMINATE;$  }$  tempA=(XMLGregorianCalendar)TEST_POINTS[3].clone();$  tempB=(XMLGregorianCalendar)TEST_POINTS[3].clone();$  tempA.add(duration1);$  tempB.add(duration2);$  resultB=tempA.compare(tempB);$  resultA=compareResults(resultA,resultB);$  return resultA;$}$
public static FragmentIntroBase newInstance(String type){$  FragmentIntroBase fragment=new FragmentIntroBase();$  Bundle args=new Bundle();$  args.putString("type",type);$  fragment.setArguments(args);$  return fragment;$}$
public boolean has(String key){$  return this.map.containsKey(key);$}$
public MarketGetQueryWithExtended offset(Integer value){$  return unsafeParam("offset",value);$}$
public boolean isRequiredEncode(){$  return requiredEncode;$}$
public int currentId(){$  return currentSlot;$}$
public String process(Item item) throws ProcessException {$  int count=0;$  Item ss=item.getItemAs(Relation.SYLLABLE);$  Item firstSyllable=LAST_LAST_SYLLABLE_PATH.findItem(item);$  for (Item p=ss; p != null; p=p.getNext()) {$    if (p.equalsShared(firstSyllable)) {$      break;$    }$    count++;$  }$  return Integer.toString(rail(count));$}$
private void parseAttributes(TypedArray a){$  barWidth=(int)a.getDimension(R.styleable.ProgressWheel_barWidth_progress,barWidth);$  rimWidth=(int)a.getDimension(R.styleable.ProgressWheel_rimWidth_progress,rimWidth);$  spinSpeed=(int)a.getInteger(R.styleable.ProgressWheel_spinSpeed_progress,spinSpeed);$  delayMillis=(int)a.getInteger(R.styleable.ProgressWheel_delayMillis_progress,delayMillis);$  if (delayMillis < 0) {$    delayMillis=0;$  }$  barColor=a.getColor(R.styleable.ProgressWheel_barColor_progress,barColor);$  barLength=(int)a.getDimension(R.styleable.ProgressWheel_barLength_progress,barLength);$  textSize=(int)a.getDimension(R.styleable.ProgressWheel_textSize_progress,textSize);$  textColor=(int)a.getColor(R.styleable.ProgressWheel_textColor_progress,textColor);$  setText(a.getString(R.styleable.ProgressWheel_text_progress));$  rimColor=(int)a.getColor(R.styleable.ProgressWheel_rimColor_progress,rimColor);$  spinRimColor=(int)a.getColor(R.styleable.ProgressWheel_spinRimColor_progress,spinRimColor);$  circleColor=(int)a.getColor(R.styleable.ProgressWheel_circleColor_progress,circleColor);$  spinCircleColor=(int)a.getColor(R.styleable.ProgressWheel_spinCircleColor_progress,spinCircleColor);$  barDegree=(int)a.getInteger(R.styleable.ProgressWheel_barDegree_progress,-1);$}$
@POST @Path("applications/{applicationName}/experiments/{experimentLabel}/users/{userID}") @Consumes(APPLICATION_JSON) @Produces(APPLICATION_JSON) @ApiOperation(value="Submit a single event or a batch of events for the specified assigned user(customer)",notes="*NOTE*: For a given user, please make sure that you have the user assignment done using the " + "assignments API before using this API. An event is either an impression, indicating the user " + "has been exposed to the treatment, or an action, indicating that the user has done something "+ "that you want to track. Please record impressions first and then action - use event "+ "name = \"IMPRESSION\" for impressions.") @Timed public Response recordEvents(@PathParam("applicationName") @ApiParam(value="Application Name") final Application.Name applicationName,@PathParam("experimentLabel") @ApiParam(value="Experiment Label") final Experiment.Label experimentLabel,@PathParam("userID") @ApiParam(value="Customer User ID that is already assigned using assignments API") final User.ID userID,@ApiParam(name="eventList",required=true,value="For impression",defaultValue=DEFAULT_EVENT) final EventList eventList) throws Exception {$  final Date NOW=new Date();$  Set<Context> contextSet=new HashSet<>();$  for (  Event event : eventList.getEvents()) {$    if (event.getTimestamp() == null) {$      event.setTimestamp(NOW);$    }$    contextSet.add(event.getContext());$    if (event.getName() == null || isBlank(event.getName().toString())) {$      throw new IllegalArgumentException("Event name cannot be null or an empty string");$    }$  }$  events.recordEvents(applicationName,experimentLabel,userID,eventList,contextSet);$  return httpHeader.headers(CREATED).build();$}$
public static synchronized List<Proxy> noProxyList(){$  if (noProxyList == null) {$    ArrayList<Proxy> list=new ArrayList<Proxy>(1);$    list.add(Proxy.NO_PROXY);$    noProxyList=Collections.unmodifiableList(list);$  }$  return noProxyList;$}$
public synchronized void add(String name,long threadId){$  if (mFinished) {$    throw new IllegalStateException("Marker added to finished log");$  }$  mMarkers.add(new Marker(name,threadId,SystemClock.elapsedRealtime()));$}$
@Override public void onConnectionCreated(Session session,Connection connection){$  WritableMap payload=Arguments.createMap();$  payload.putString("connectionId",connection.getConnectionId());$  payload.putString("creationTime",connection.getCreationTime().toString());$  payload.putString("data",connection.getData());$  sendEvent(Events.EVENT_CLIENT_CONNECTED,payload);$}$
public static void w(String tag,String msg){$  if (sLevel > LEVEL_WARNING) {$    return;$  }$  Log.w(tag,msg);$}$
public void init$Children(){$  children=new ASTNode[4];$  setChild(new List(),1);$  setChild(new List(),2);$  setChild(new Opt(),3);$}$
public void remove(int id){$  String name=id2name.get(id);$  if (name != null)   name2id.remove(name);$  id2name.remove(id);$}$
public void clearChanged(){$  changed.set(false);$}$
private void bindSession(){$  SessionFactory sessionFactory=(SessionFactory)getBean("sessionFactory");$  Session session=sessionFactory.openSession();$  TransactionSynchronizationManager.bindResource(sessionFactory,new SessionHolder(session));$}$
protected void notifyChangingListeners(int oldValue,int newValue){$  for (  OnWheelChangedListener listener : changingListeners) {$    listener.onChanged(this,oldValue,newValue);$  }$}$
public static boolean isEcKey(Key key){$  return "EC".equals(key.getAlgorithm());$}$
public static void overScrollBy(final PullToRefreshBase<?> view,final int deltaX,final int scrollX,final int deltaY,final int scrollY,final int scrollRange,final int fuzzyThreshold,final float scaleFactor,final boolean isTouchEvent){$  final int deltaValue, currentScrollValue, scrollValue;$switch (view.getPullToRefreshScrollDirection()) {$case HORIZONTAL:$    deltaValue=deltaX;$  scrollValue=scrollX;$currentScrollValue=view.getScrollX();$break;$case VERTICAL:$default :$deltaValue=deltaY;$scrollValue=scrollY;$currentScrollValue=view.getScrollY();$break;$}$if (view.isPullToRefreshOverScrollEnabled() && !view.isRefreshing()) {$final Mode mode=view.getMode();$if (mode.permitsPullToRefresh() && !isTouchEvent && deltaValue != 0) {$final int newScrollValue=(deltaValue + scrollValue);$if (PullToRefreshBase.DEBUG) {$Log.d(LOG_TAG,"OverScroll. DeltaX: " + deltaX + ", ScrollX: "+ scrollX+ ", DeltaY: "+ deltaY+ ", ScrollY: "+ scrollY+ ", NewY: "+ newScrollValue+ ", ScrollRange: "+ scrollRange+ ", CurrentScroll: "+ currentScrollValue);$}$if (newScrollValue < (0 - fuzzyThreshold)) {$if (mode.showHeaderLoadingLayout()) {$if (currentScrollValue == 0) {$view.setState(State.OVERSCROLLING);$}$view.setHeaderScroll((int)(scaleFactor * (currentScrollValue + newScrollValue)));$}$}$ else if (newScrollValue > (scrollRange + fuzzyThreshold)) {$if (mode.showFooterLoadingLayout()) {$if (currentScrollValue == 0) {$view.setState(State.OVERSCROLLING);$}$view.setHeaderScroll((int)(scaleFactor * (currentScrollValue + newScrollValue - scrollRange)));$}$}$ else if (Math.abs(newScrollValue) <= fuzzyThreshold || Math.abs(newScrollValue - scrollRange) <= fuzzyThreshold) {$view.setState(State.RESET);$}$}$ else if (isTouchEvent && State.OVERSCROLLING == view.getState()) {$view.setState(State.RESET);$}$}$}$
public EnumeratedRealDistribution(final double[] singletons,final double[] probabilities) throws MathIllegalArgumentException {$  super();$  innerDistribution=new EnumeratedDistribution<Double>(createDistribution(singletons,probabilities));$}$
private void rdp_decoding_rd(char[][] g_data,int disks,int stripe_unit_size,int w,int x,int y){$  int packet_size=stripe_unit_size / w;$  int ccount, count, rcount;$  char[] rdata, xdata, ydata, row_data, diag_data;$  int g, gx, gy, coffset, i, j, k, c;$  int row_disk, diag_disk;$  rcount=stripe_unit_size;$  rdata=g_data[0];$  xdata=g_data[x];$  ydata=g_data[y];$  gx=(x >= 3 ? x - 3 : pnumRdp - 1);$  gy=(y >= 3 ? y - 3 : pnumRdp - 1);$  row_disk=x;$  diag_disk=y;$  row_data=xdata;$  diag_data=ydata;$  g=gx;$  while (true) {$    if (g == pnumRdp - 1) {$      if (gx == (row_disk >= 3 ? row_disk - 3 : row_disk + pnumRdp - 3)) {$        row_disk=y;$        diag_disk=x;$        row_data=ydata;$        diag_data=xdata;$        g=gy;$        continue;$      }$ else       break;$    }$ else {$      int row_index;$      char[] cdata;$      int diag_count;$      int row_count;$      diag_count=stripe_unit_size;$      row_count=stripe_unit_size;$      row_index=(g - diag_disk + pnumRdp + 2) % pnumRdp;$      coffset=(row_index + diag_disk - 2 + pnumRdp) % pnumRdp * packet_size;$      cdata=g_data[1];$      for (i=row_index * packet_size, j=coffset, k=0; i < diag_count && k < packet_size; i++, j++, k++) {$        diag_data[i]=cdata[j];$      }$      for (c=2; c < (disks + 2); c++) {$        if (c == diag_disk)         continue;$        ccount=stripe_unit_size;$        cdata=g_data[c];$        coffset=(row_index + diag_disk - c + pnumRdp) % pnumRdp * packet_size;$        for (i=row_index * packet_size, j=coffset, k=0; i < diag_count && j < ccount && k < packet_size; i++, j++, k++) {$          diag_data[i]^=cdata[j];$        }$      }$      ccount=rcount;$      cdata=rdata;$      coffset=(row_index + diag_disk - 1 + pnumRdp) % pnumRdp * packet_size;$      for (i=row_index * packet_size, j=coffset, k=0; i < diag_count && j < ccount && k < packet_size; i++, j++, k++) {$        diag_data[i]^=cdata[j];$      }$      coffset=row_index * packet_size;$      for (c=2; c < (disks + 2); c++) {$        if (c == row_disk)         continue;$        ccount=stripe_unit_size;$        cdata=g_data[c];$        coffset=row_index * packet_size;$        for (i=coffset, k=0; i < ccount && k < packet_size; i++, k++) {$          row_data[i]^=cdata[i];$        }$      }$      cdata=rdata;$      coffset=row_index * packet_size;$      count=row_count;$      for (i=coffset, k=0; i < count && k < packet_size; i++, k++) {$        row_data[i]^=cdata[i];$      }$      g=(row_index + row_disk - 2) % pnumRdp;$    }$  }$}$
public FastFourierTransformer(final DftNormalization normalization){$  this.normalization=normalization;$}$
public void addCoreEquipmentConfigurationChanger(final long equipmentId,final ICoreEquipmentConfigurationChanger coreEquipmentConfigurationChanger){$  List<ICoreEquipmentConfigurationChanger> changers=coreEquipmentConfigurationChangers.get(equipmentId);$  if (changers == null) {$    changers=new ArrayList<>();$    coreEquipmentConfigurationChangers.put(equipmentId,changers);$  }$  changers.add(coreEquipmentConfigurationChanger);$}$
int baselineFrequency(int time){$  if (time < startTime || time > endTime) {$    throw new RuntimeException("Invalid time " + time + "(startTime "+ startTime+ ", endTime "+ endTime+ ")");$  }$  return baseStart + (int)(baseSlope * (time - startTime));$}$
@Override public int hashCode(){$  return this.name.hashCode();$}$
protected VideoReorderVideosQuery ownerId(int value){$  return unsafeParam("owner_id",value);$}$
public boolean testAttribute(String sldContentString,TreeSelectionData selectionData,FieldIdEnum field,XMLSetFieldAttribute testValue){$  boolean passed=false;$  Document doc=getXMLDocument(sldContentString);$  String extractedString=getString(doc,selectionData,field,XPATH_CHILD_ELEMENT_VALUE);$  String valueToTest=testValue.getAttribute();$  passed=(valueToTest.compareTo(extractedString) == 0);$  System.out.println("Checking : " + field + " "+ extractedString+ " "+ (passed ? "PASS" : "FAIL"));$  return passed;$}$
public void processUtterance(Utterance utterance) throws ProcessException {$  String silence=utterance.getVoice().getFeatures().getString(Voice.FEATURE_SILENCE);$  Item phraseHead=utterance.getRelation(Relation.PHRASE).getHead();$  if (phraseHead == null) {$    return;$  }$  Relation segment=utterance.getRelation(Relation.SEGMENT);$  Item s=segment.getHead();$  if (s == null) {$    s=segment.appendItem(null);$  }$ else {$    s=s.prependItem(null);$  }$  s.getFeatures().setString("name",silence);$  for (Item phrase=phraseHead; phrase != null; phrase=phrase.getNext()) {$    Item word=phrase.getLastDaughter();$    while (word != null) {$      Item seg=segmentPath.findItem(word);$      if (seg != null) {$        Item pause=seg.appendItem(null);$        pause.getFeatures().setString("name",silence);$        break;$      }$      word=word.getPrevious();$    }$  }$}$
public static String version(){$  return version;$}$
private void bringToBodies(SootClass sc){$  if (sc.resolvingLevel() >= SootClass.BODIES)   return;$  bringToSignatures(sc);$  if (Options.v().debug_resolver())   G.v().out.println("bringing to BODIES: " + sc);$  sc.setResolvingLevel(SootClass.BODIES);${$    Collection<Type> references=classToTypesHierarchy.get(sc);$    if (references != null) {$      Iterator<Type> it=references.iterator();$      while (it.hasNext()) {$        final Type t=it.next();$        addToResolveWorklist(t,SootClass.HIERARCHY);$      }$    }$  }${$    Collection<Type> references=classToTypesSignature.get(sc);$    if (references != null) {$      Iterator<Type> it=references.iterator();$      while (it.hasNext()) {$        final Type t=it.next();$        addToResolveWorklist(t,SootClass.SIGNATURES);$      }$    }$  }$}$
public void init$Children(){$  children=new ASTNode[1];$}$
public GuiControllerSettings(){$  title="";$  resizeable=true;$  maximized=false;$  stageStyle=StageStyle.DECORATED;$  changeToPrimaryStage=true;$}$
public boolean isSetLoadInfo(){$  return this.loadInfo != null;$}$
public ZWaveAlarmCommandClass(ZWaveNode node,ZWaveController controller,ZWaveEndpoint endpoint){$  super(node,controller,endpoint);$  versionMax=MAX_SUPPORTED_VERSION;$}$
public void save() throws IOException {$  if (myFilename == null) {$    throw new IOException("No filename specified for PreferenceStore.");$  }$  if (myChanged) {$    FileOutputStream out=new FileOutputStream(myFilename);$    try {$      save(out,null);$      myChanged=false;$    }$  finally {$      out.close();$    }$  }$}$
public XMLStreamException(String msg,Location location,Throwable th){$  super("ParseError at [row,col]:[" + location.getLineNumber() + ","+ location.getColumnNumber()+ "]\n"+ "Message: "+ msg);$  nested=th;$  this.location=location;$}$
public SuffixFSM(URL url) throws IOException {$  super(url,false);$}$
@Override public void write(byte[] b,int off,int len){$  if (off < 0 || off > b.length || len < 0 || off + len > b.length || off + len < 0) {$    throw new IndexOutOfBoundsException();$  }$ else   if (len == 0) {$    return;$  }$  int newcount=ensureCapacity(len);$  System.arraycopy(b,off,buf,count,len);$  count=newcount;$}$
public void showLoading(){$  switchState(LOADING,null,null,null,null,Collections.<Integer>emptyList());$}$
public static EditShareFragment newInstance(OCShare shareToEdit,OCFile sharedFile,Account account){$  EditShareFragment fragment=new EditShareFragment();$  Bundle args=new Bundle();$  args.putParcelable(ARG_SHARE,shareToEdit);$  args.putParcelable(ARG_FILE,sharedFile);$  args.putParcelable(ARG_ACCOUNT,account);$  fragment.setArguments(args);$  return fragment;$}$
public static SM_SYSTEM_MESSAGE STR_ABYSS_CHANGE_RANK(String value0){$  return new SM_SYSTEM_MESSAGE(1390232,value0);$}$
public static boolean sectionLike(Item tokenItem){$  String sectionType=((String)tokenItem.findFeature("p.name")).toLowerCase();$  return inKingSectionLikeHash(sectionType,SECTION_TYPES);$}$
public boolean startTheRoomGame(String clientName,boolean setReady){$  for (  Client client : roomClients)   if (client.getClientName().equals(clientName))   client.setGameStartSet(setReady);$  for (  Client client : roomClients)   if (client.isGameStartSet() == false)   return false;$  if (Settings.nGameCatchMe == getGameType()) {$    for (    Client client : roomClients) {$      String query;$      client.getCatchMe().setPlayTimes(client.getCatchMe().getPlayTimes() + 1);$      try {$        query="update catchme set playtimes =" + client.getCatchMe().getPlayTimes() + " where id='"+ client.getClientName()+ "'";$        stmt.executeUpdate(query);$      }$ catch (      SQLException e) {$        e.printStackTrace();$      }$    }$  }$ else   if (Settings.nGameTicTacToc == getGameType()) {$    for (    Client client : roomClients) {$      String query;$      System.out.println(client.getTicTacToc().getPlayTimes());$      client.getTicTacToc().setPlayTimes(client.getTicTacToc().getPlayTimes() + 1);$      try {$        query="update tictactoc set playtimes =" + client.getTicTacToc().getPlayTimes() + " where id='"+ client.getClientName()+ "'";$        System.out.println(client.getTicTacToc().getPlayTimes() + " testing");$        stmt.executeUpdate(query);$      }$ catch (      SQLException e) {$        e.printStackTrace();$      }$    }$  }$ else   if (Settings.nGameMeteorGame == getGameType()) {$    for (    Client client : roomClients) {$      String query;$      client.getMeteor().setPlayTimes(client.getMeteor().getPlayTimes() + 1);$      try {$        query="update meteor set playtimes =" + client.getMeteor().getPlayTimes() + " where id='"+ client.getClientName()+ "'";$        stmt.executeUpdate(query);$      }$ catch (      SQLException e) {$        e.printStackTrace();$      }$    }$  }$ else   if (Settings.nGamePangPang == getGameType()) {$    for (    Client client : roomClients) {$      String query;$      client.getPangPang().setPlayTimes(client.getPangPang().getPlayTimes() + 1);$      try {$        query="update pangpang set playtimes =" + client.getPangPang().getPlayTimes() + " where id='"+ client.getClientName()+ "'";$        stmt.executeUpdate(query);$      }$ catch (      SQLException e) {$        e.printStackTrace();$      }$    }$  }$  setGameRunning(true);$  if (Settings.nGameMeteorGame == getGameType())   initMeteorGameWhenConditionStart();$ else   if (Settings.nGamePangPang == getGameType())   initPangPangWhenConditionStart();$ else   roomClients.get(playTokenPositionNumber).setPlayToken(true);$  return true;$}$
public static AttackStatus calculatePhysicalStatus(Creature attacker,Creature attacked,boolean isMainHand){$  return calculatePhysicalStatus(attacker,attacked,isMainHand,0,100,false,false);$}$
@Override public boolean hasIntercept(){$  return hasIntercept;$}$
public static int ushortToInt(short s){$  return s & MAX_USHORT;$}$
public static void showProfile(Fragment fragment,String pilotId,@Nullable HashMap<String,String> extras){$  if ((pilotId == null || pilotId.isEmpty()) && AirMap.hasValidAuthenticatedUser()) {$    pilotId=AirMap.getUserId();$  }$  Intent intent=new Intent(fragment.getActivity(),ProfileActivity.class);$  intent.putExtra(ProfileActivity.ARG_PILOT_ID,pilotId);$  if (extras != null) {$    intent.putExtra(CreateFlightActivity.KEY_VALUE_EXTRAS,extras);$  }$  fragment.startActivity(intent);$}$
public void testBoundaryEventSubscrptionsDeletedOnProcessInstanceDelete(){$  String deploymentId1=deployBoundaryMessageTestProcess();$  runtimeService.startProcessInstanceByKeyAndTenantId("messageTest",TENANT_ID);$  assertEquals("My Task",taskService.createTaskQuery().singleResult().getName());$  String deploymentId2=deployBoundaryMessageTestProcess();$  ProcessInstance processInstance2=runtimeService.startProcessInstanceByKeyAndTenantId("messageTest",TENANT_ID);$  assertEquals(2,taskService.createTaskQuery().count());$  assertEquals(2,getAllEventSubscriptions().size());$  runtimeService.deleteProcessInstance(processInstance2.getId(),"testing");$  assertEquals("My Task",taskService.createTaskQuery().singleResult().getName());$  assertEquals(1,getAllEventSubscriptions().size());$  runtimeService.messageEventReceived("myMessage",getExecutionIdsForMessageEventSubscription("myMessage").get(0));$  assertEquals(0,getAllEventSubscriptions().size());$  assertEquals("Task after message",taskService.createTaskQuery().singleResult().getName());$  cleanup(deploymentId1,deploymentId2);$}$
public static ArrayList<CompanyInfo.Company> searchCompany(String keyword){$  keyword=ZHConverter.convert(keyword,ZHConverter.SIMPLIFIED);$  ArrayList<CompanyInfo.Company> src=new ArrayList<>();$  if (keyword != null && keyword.trim().length() > 0) {$    for (int i=0; i < CompanyInfo.info.size(); i++) {$      if (!CompanyInfo.names[i].contains(keyword) && !CompanyInfo.pinyin[i].contains(keyword)) {$        continue;$      }$      src.add(CompanyInfo.info.get(i));$    }$  }$ else {$    return CompanyInfo.info;$  }$  return src;$}$
public double[] breadthFirstSearch(double intialValue,double firstValue,IBFSTraversable<N> traversable,IDoubleBfsNextLevelValueIterator<N> nextValueIterator,List<Integer> sources){$  double[] results=new double[nodes.length];$  Arrays.fill(results,intialValue);$  boolean[] alreadyScanned=new boolean[nodes.length];$  Arrays.fill(alreadyScanned,false);$  Set<Integer> currentNodesIndex=new HashSet<>(sources);$  iterativeDoubleBreadthFirstSearch(results,alreadyScanned,currentNodesIndex,firstValue,0,traversable,nextValueIterator);$  return results;$}$
public void defaultCase(Object object){$  throw new RuntimeException("Internal error: " + object + " unhandled case.");$}$
private static ColumnType selectType(List<ColumnType> typeCandidates){$  if (typeCandidates.isEmpty()) {$    return CATEGORY;$  }$ else {$    return typeCandidates.get(0);$  }$}$
public static long readVLong(byte[] bytes,int start) throws IOException {$  return WritableComparator.readVLong(bytes,start);$}$
@Override public void mark(int readAheadLimit) throws IOException {$  fInputStream.mark(readAheadLimit);$}$
public Criteria or(){$  Criteria criteria=createCriteriaInternal();$  oredCriteria.add(criteria);$  return criteria;$}$
public void swapItems(List<T> items){$  this.items=items;$  notifyDataSetChanged();$}$
@Override public void start(){$  m_line.start();$  super.start();$}$
private String generateReportTableHtml(ReportTable reportTable,User user){$  StringWriter stringWriter=new StringWriter();$  GridUtils.toHtmlInlineCss(reportTableService.getReportTableGridByUser(reportTable.getUid(),new Date(),user.getOrganisationUnit().getUid(),user),stringWriter);$  return stringWriter.toString().replaceAll("\\R","");$}$
public GSObjectMessageImpl(GSSessionImpl session,Serializable objBody) throws JMSException {$  super(session,GSMessageImpl.OBJECT);$  setObject(objBody);$}$
private void updateFixutreFilterMask(int mask){$  Filter filter=bodyFixture.getFilter();$  if (filter == Filter.DEFAULT_FILTER) {$    CategoryFilter cf=new CategoryFilter(Integer.MAX_VALUE,mask);$    bodyFixture.setFilter(cf);$  }$ else {$    CategoryFilter cf=new CategoryFilter(((CategoryFilter)filter).getCategory(),mask);$    bodyFixture.setFilter(cf);$  }$}$
public T[] computeDerivatives(final T t,final T[] y) throws MathIllegalArgumentException, MathIllegalStateException, NullPointerException {$  evaluations.increment();$  return equations.computeDerivatives(t,y);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_PAY_DISTRIBUTE(long highestValue,int num2,long distributeKinah){$  return new SM_SYSTEM_MESSAGE(1390187,highestValue,num2,distributeKinah);$}$
public void handleRollbackSA(RollbackBusPacket packet) throws SAException {$  Context context=null;$  ISAdapterIterator iter=null, entriesIter=null;$  ILockObject templateLock=null, entryLock=null;$  final XtnEntry xtnEntry=packet._xtnEntry;$  final XtnData pXtn=xtnEntry.getXtnData();$  try {$    context=_cacheManager.getCacheContext();$    try {$      iter=_cacheManager.makeUnderXtnTemplatesIter(context,xtnEntry);$      if (iter != null) {$        while (true) {$          ITemplateHolder template=(ITemplateHolder)iter.next();$          if (template == null)           break;$          try {$            templateLock=getTemplateLockObject(template);$synchronized (templateLock) {$              if (template.isDeleted())               continue;$              if (template.isExpired(xtnEntry.m_CommitRollbackTimeStamp))               context.setOperationAnswer(template,null,null);$ else               context.setOperationAnswer(template,null,new TransactionException("Transaction not active : " + xtnEntry.m_Transaction));$              _cacheManager.removeTemplate(context,template,false,true,false);$            }$          }$  finally {$            if (templateLock != null)             freeTemplateLockObject(templateLock);$          }$        }$      }$    }$  finally {$      if (iter != null)       iter.close();$    }$    _engine.getFifoGroupsHandler().handleNeedFgOnlyScanOnXtnEnd(context,xtnEntry);$    try {$      entriesIter=_cacheManager.makeUnderXtnEntriesIter(context,xtnEntry,SelectType.ALL_ENTRIES,true);$      if (entriesIter != null) {$        Collection<ITemplateHolder> wf=null;$        ENTRY_LOOP:         while (true) {$          IEntryCacheInfo entryCacheHolder=(IEntryCacheInfo)entriesIter.next();$          if (entryCacheHolder == null)           break ENTRY_LOOP;$          IEntryHolder entry=_cacheManager.getEntryFromCacheHolder(entryCacheHolder);$          if (entry == null)           continue ENTRY_LOOP;$          if ((_cacheManager.isMemorySpace() || _cacheManager.isResidentEntriesCachePolicy()) && entry.isDeleted())           continue ENTRY_LOOP;$          boolean entry_has_wf=false;$          try {$            entryLock=getEntryLockObject(entry);$synchronized (entryLock) {$              IEntryHolder eh=_cacheManager.getEntry(context,entry,true,true,true);$              if (eh == null || eh.isDeleted())               continue ENTRY_LOOP;$              if (!entry.isSameEntryInstance(eh) && _cacheManager.getLockManager().isPerLogicalSubjectLockObject(_cacheManager.isEvictableCachePolicy()))               continue ENTRY_LOOP;$              entry=eh;$              boolean updatedEntry=pXtn.isUpdatedEntry(entry);$              _cacheManager.disconnectEntryFromXtn(context,entry,xtnEntry,true);$              if (entry.isExpired(xtnEntry.m_CommitRollbackTimeStamp) && !entry.isEntryUnderWriteLockXtn()) {$                if (!_engine.isExpiredEntryStayInSpace(entry) && entry.isExpired(_engine.getLeaseManager().getEffectiveEntryLeaseTime(xtnEntry.m_CommitRollbackTimeStamp))) {$                  if (entry.isOffHeapEntry())                   _cacheManager.getEntry(context,entry,true,true,true);$                  IServerTypeDesc typeDesc=_engine.getTypeManager().getServerTypeDesc(entry.getClassName());$                  _engine.removeEntrySA(context,entry,typeDesc,false,true,SpaceEngine.EntryRemoveReasonCodes.LEASE_EXPIRED,false,false,false);$                  continue ENTRY_LOOP;$                }$              }$              if (updatedEntry && entry.isHasWaitingFor())               _engine.checkWFValidityAfterUpdate(context,entry);$              if (entry.isHasWaitingFor()) {$                entry_has_wf=true;$                wf=entry.getCopyOfTemplatesWaitingForEntry();$              }$            }$          }$  finally {$            if (entryLock != null)             freeEntryLockObject(entryLock);$            entryLock=null;$          }$          if (entry_has_wf && wf != null) {$            TEMPLATE_LOOP:             for (            ITemplateHolder template : wf) {$              if (template.isDeleted()) {$                handleRemoveWaitingForInfoSA_EntryBased(context,entry,template);$                continue TEMPLATE_LOOP;$              }$              if (template.isFifoTemplate())               continue TEMPLATE_LOOP;$              try {$                _engine.performTemplateOnEntrySA(context,template,entry,true);$              }$ catch (              TransactionConflictException ex) {$                continue TEMPLATE_LOOP;$              }$catch (              TemplateDeletedException ex) {$                continue TEMPLATE_LOOP;$              }$catch (              NoMatchException ex) {$                continue TEMPLATE_LOOP;$              }$catch (              FifoException ex) {$                continue TEMPLATE_LOOP;$              }$catch (              TransactionNotActiveException ex) {$                continue TEMPLATE_LOOP;$              }$catch (              EntryDeletedException ex) {$                continue ENTRY_LOOP;$              }$catch (              RuntimeException ex) {$                after_xtn_activity_error(context,template,ex,false);$                continue ENTRY_LOOP;$              }$            }$          }$          try {$            _engine.touchLastEntryTimestamp();$            _engine.getTemplateScanner().scanNonNotifyTemplates(context,entry,null,FifoSearch.NO,FifoGroupsSearch.NO);$          }$ catch (          EntryDeletedException ex) {$            continue ENTRY_LOOP;$          }$        }$      }$    }$  finally {$      if (entriesIter != null)       entriesIter.close();$    }$    _engine.getTransactionHandler().removeTransactionAfterEnd(xtnEntry);$  }$  finally {$    _cacheManager.freeCacheContext(context);$  }$}$
public static SM_SYSTEM_MESSAGE STR_IS_NOT_WILLING_TO_RECEIVE(String value0){$  return new SM_SYSTEM_MESSAGE(1300382,value0);$}$
public static String simpleHostname(String fullHostname){$  int offset=fullHostname.indexOf('.');$  if (offset != -1) {$    return fullHostname.substring(0,offset);$  }$  return fullHostname;$}$
public void checkAndHide(){$  if ((hideRequested() && mouseFurtherThan(5)) || (mouseFurtherThan(15))) {$    hideTooltip();$  }$}$
public ResponseListener() throws IOException {$  super("GS-multicast-discovery-response-listener");$  setDaemon(true);$  serv=new ServerSocket(0,100,InetAddress.getByName(SystemInfo.singleton().network().getHostId()));$}$
Offset(Point drag,Point drop){$  this.x=drop.getX() - drag.getX();$  this.y=drop.getY() - drag.getY();$}$
private View fillFromTop(int nextTop){$  mFirstPosition=Math.min(mFirstPosition,-1);$  mFirstPosition=Math.min(mFirstPosition,mItemCount - 1);$  if (mFirstPosition < 0) {$    mFirstPosition=0;$  }$  return fillDown(mFirstPosition,nextTop);$}$
public void dump(){$  System.out.println("Diphone: " + name);$  System.out.println("    MP : " + midPoint);$  for (int i=0; i < samples.length; i++) {$    samples[i].dump();$  }$}$
public GenomicCoords goToNextFeatureOnFile(String trackId,GenomicCoords currentGc,double slop) throws InvalidGenomicCoordsException, IOException, InvalidCommandLineException {$  Track tr=matchIntervalFeatureTrack(trackId.trim());$  if (tr == null) {$    return currentGc;$  }$  TrackIntervalFeature tif=(TrackIntervalFeature)tr;$  if (slop < 0) {$    return tif.getIntervalFeatureSet().coordsOfNextFeature(currentGc);$  }$ else {$    GenomicCoords featureGc=tif.getIntervalFeatureSet().startEndOfNextFeature(currentGc);$    if (featureGc.equalCoords(currentGc)) {$      return currentGc;$    }$ else {$      featureGc.centerAndExtendGenomicCoords(featureGc,featureGc.getGenomicWindowSize(),slop);$      return featureGc;$    }$  }$}$
DataSourceProvider(){$}$
@Override protected void configurePipeline(){$  super.configurePipeline();$  if (fXIncludeEnabled) {$    if (fXIncludeHandler == null) {$      fXIncludeHandler=new XIncludeHandler();$      setProperty(XINCLUDE_HANDLER,fXIncludeHandler);$      addCommonComponent(fXIncludeHandler);$      fXIncludeHandler.reset(this);$    }$    if (fCurrentNSContext != fXIncludeNSContext) {$      if (fXIncludeNSContext == null) {$        fXIncludeNSContext=new XIncludeNamespaceSupport();$      }$      fCurrentNSContext=fXIncludeNSContext;$      setProperty(NAMESPACE_CONTEXT,fXIncludeNSContext);$    }$    fDTDScanner.setDTDHandler(fDTDProcessor);$    fDTDProcessor.setDTDSource(fDTDScanner);$    fDTDProcessor.setDTDHandler(fXIncludeHandler);$    fXIncludeHandler.setDTDSource(fDTDProcessor);$    fXIncludeHandler.setDTDHandler(fDTDHandler);$    if (fDTDHandler != null) {$      fDTDHandler.setDTDSource(fXIncludeHandler);$    }$    XMLDocumentSource prev=null;$    if (fFeatures.get(XMLSCHEMA_VALIDATION) == Boolean.TRUE) {$      prev=fSchemaValidator.getDocumentSource();$    }$ else {$      prev=fLastComponent;$      fLastComponent=fXIncludeHandler;$    }$    XMLDocumentHandler next=prev.getDocumentHandler();$    prev.setDocumentHandler(fXIncludeHandler);$    fXIncludeHandler.setDocumentSource(prev);$    if (next != null) {$      fXIncludeHandler.setDocumentHandler(next);$      next.setDocumentSource(fXIncludeHandler);$    }$  }$ else {$    if (fCurrentNSContext != fNonXIncludeNSContext) {$      fCurrentNSContext=fNonXIncludeNSContext;$      setProperty(NAMESPACE_CONTEXT,fNonXIncludeNSContext);$    }$  }$}$
protected boolean raycast(Vector2 start,double length,double invDx,double invDy,AABB aabb){$  double tx1=(aabb.getMinX() - start.x) * invDx;$  double tx2=(aabb.getMaxX() - start.x) * invDx;$  double tmin=Math.min(tx1,tx2);$  double tmax=Math.max(tx1,tx2);$  double ty1=(aabb.getMinY() - start.y) * invDy;$  double ty2=(aabb.getMaxY() - start.y) * invDy;$  tmin=Math.max(tmin,Math.min(ty1,ty2));$  tmax=Math.min(tmax,Math.max(ty1,ty2));$  if (tmax < 0)   return false;$  if (tmin > length)   return false;$  return tmax >= tmin;$}$
public static String guessBuildSystemName(){$  Project project=guessCurrentProject();$  return buildSystemName(project);$}$
public WebappUrlBar(Context context,AttributeSet attrSet){$  super(context,attrSet);$  mIconResourceWidths=new SparseIntArray();$  mUrlBar=new TextView(context);$  mUrlBar.setSingleLine(true);$  mUrlBar.setGravity(Gravity.CENTER_VERTICAL);$  mUrlBar.setMovementMethod(ScrollingMovementMethod.getInstance());$  mUrlBar.setHorizontalFadingEdgeEnabled(true);$  mSeparator=new View(context);$  addView(mUrlBar,new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT,Gravity.CENTER));$  addView(mSeparator,new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,1,Gravity.BOTTOM));$  mSeparator.setBackgroundColor(ApiCompatibilityUtils.getColor(context.getResources(),R.color.webapp_url_bar_separator));$  setBackgroundColor(ApiCompatibilityUtils.getColor(context.getResources(),R.color.webapp_url_bar_bg));$  mUrlBar.addOnLayoutChangeListener(this);$}$
public void reset(byte[] buf){$  if (buf != null) {$    reset(buf,0,buf.length);$  }$ else {$    clear();$  }$}$
public static ValueGetterSpacePredicate<ServerEntry> pathAny(String path,ISpacePredicate... predicates){$  return path(path,any(predicates));$}$
public static int dip2px(Context context,float dpValue){$  final float scale=context.getResources().getDisplayMetrics().density;$  return (int)(dpValue * scale + 0.5f);$}$
BinarySearchTreeNode<E> contains(BinarySearchTreeNode<E> node,E comparable){$  while (node != null) {$    E nodeData=node.comparable;$    int diff=comparable.compareTo(nodeData);$    if (diff == 0) {$      if (node.comparable.equals(comparable)) {$        return node;$      }$ else {$        return null;$      }$    }$ else     if (diff < 0) {$      node=node.left;$    }$ else {$      node=node.right;$    }$  }$  return null;$}$
public LazyArray(String raw) throws LazyException {$  LazyParser parser=new LazyParser(raw);$  parser.tokenize();$  if (parser.root.type != LazyNode.ARRAY) {$    throw new LazyException("JSON Array must start with [",0);$  }$  root=parser.root;$  cbuf=parser.cbuf;$}$
public String[] upload_appender_file(String group_name,byte[] file_buff,int offset,int length,String file_ext_name,NameValuePair[] meta_list) throws IOException, MyException {$  return this.do_upload_file(ProtoCommon.STORAGE_PROTO_CMD_UPLOAD_APPENDER_FILE,group_name,null,null,file_ext_name,length,new UploadBuff(file_buff,offset,length),meta_list);$}$
void fling(float velocityAngle){$  mMode=FLING_MODE;$  mFinished=false;$  float velocity=velocityAngle;$  mVelocity=velocity;$  mDurationMillis=(int)(250.0f * Math.sqrt(2.0f * mCoeffVelocity * Math.abs(velocity) / DECELERATION));$  mStartMillis=AnimationUtils.currentAnimationTimeMillis();$}$
private static void addAllComplexTypeChildren(CarbonDimension dimension,StringBuilder dimString,String parent){$  dimString.append(dimension.getColName() + CarbonCommonConstants.COLON_SPC_CHARACTER + dimension.getDataType()+ CarbonCommonConstants.COLON_SPC_CHARACTER+ parent+ CarbonCommonConstants.COLON_SPC_CHARACTER+ dimension.getColumnId()+ CarbonCommonConstants.HASH_SPC_CHARACTER);$  for (int i=0; i < dimension.getNumberOfChild(); i++) {$    CarbonDimension childDim=dimension.getListOfChildDimensions().get(i);$    if (childDim.getNumberOfChild() > 0) {$      addAllComplexTypeChildren(childDim,dimString,dimension.getColName());$    }$ else {$      dimString.append(childDim.getColName() + CarbonCommonConstants.COLON_SPC_CHARACTER + childDim.getDataType()+ CarbonCommonConstants.COLON_SPC_CHARACTER+ dimension.getColName()+ CarbonCommonConstants.COLON_SPC_CHARACTER+ childDim.getColumnId()+ CarbonCommonConstants.COLON_SPC_CHARACTER+ childDim.getOrdinal()+ CarbonCommonConstants.HASH_SPC_CHARACTER);$    }$  }$}$
public LogicalMetric(TemplateDruidQuery templateDruidQuery,ResultSetMapper calculation,String name){$  this(templateDruidQuery,calculation,name,name,DEFAULT_CATEGORY,name);$}$
private void checkIndex(final int index) throws MathIllegalArgumentException {$  if (index < 0 || index >= getDimension()) {$    throw new MathIllegalArgumentException(LocalizedCoreFormats.INDEX,index,0,getDimension() - 1);$  }$}$
public static SM_SYSTEM_MESSAGE STR_CANT_EQUIP(String value0){$  return new SM_SYSTEM_MESSAGE(1300386,value0);$}$
private void persistNewTemp(File fileCfg){$  if (hsDeleteOnExit.size() == 0) {$    logDebug(LogArea.CONFIG,"No temp file names to persist on exit.");$    fileCfg.delete();$    return;$  }$  logDebug(LogArea.CONFIG,"Persisting %d temp file names into %s",hsDeleteOnExit.size(),fileCfg.getAbsolutePath());$  BufferedWriter writer=null;$  try {$    writer=new BufferedWriter(new FileWriter(fileCfg));$    for (    File file : hsDeleteOnExit) {$      if (!file.delete()) {$        String f=file.getCanonicalPath();$        writer.write(f);$        writer.newLine();$        logWarn(LogArea.JAR,"JVM failed to release %s",f);$      }$    }$  }$ catch (  IOException e) {$  }$ finally {$    if (writer != null) {$      try {$        writer.close();$      }$ catch (      IOException e) {$      }$    }$  }$}$
public ZeroException(Localizable specific,Object... arguments){$  super(specific,INTEGER_ZERO,arguments);$}$
public E peek(){$  for (; ; ) {$    Node<E> node=top.get();$    if (node == null) {$      return null;$    }$    E e=node.get();$    if (e == null) {$      top.compareAndSet(node,node.next);$    }$ else {$      return e;$    }$  }$}$
public PolynomialFunction negate(){$  double[] newCoefficients=new double[coefficients.length];$  for (int i=0; i < coefficients.length; ++i) {$    newCoefficients[i]=-coefficients[i];$  }$  return new PolynomialFunction(newCoefficients);$}$
public PhotosGetAlbumsQuery(VkApiClient client){$  super(client,"photos.getAlbums",GetAlbumsResponse.class);$}$
public static synchronized boolean prepareDirectory(File directory){$  if (directory.exists())   return true;$  directory.mkdirs();$  return directory.exists();$}$
@Override protected Expression generateExpression(){$  Expression expression=getFilterFactory().literal(getStringValue());$  return expression;$}$
public void draw(Graphics2D gc,Dimension size){$  if (doc.getNumberOfSamples() > 1) {$    boolean vertical=viewer.getShowLegend().equals("vertical");$    gc.setFont(getFont());$    boolean doDraw=(size == null);$    int yStart=20;$    int x=3;$    int maxX=x;$    if (doDraw) {$      String legend="Legend:";$      gc.setColor(Color.BLACK);$      gc.drawString(legend,x,yStart);$      Dimension labelSize=Basic.getStringSize(gc,legend,gc.getFont()).getSize();$      maxX=Math.max(maxX,labelSize.width);$    }$    int y=yStart + (int)(1.5 * gc.getFont().getSize());$    Set<String> samples=new HashSet<>();$    samples.addAll(doc.getSampleNames());$    if (viewer.getGraphView() != null) {$      for (Node v=viewer.getGraphView().getGraph().getFirstNode(); v != null; v=v.getNext()) {$        String sampleName=((PhyloTree)viewer.getGraphView().getGraph()).getLabel(v);$        if (sampleName != null && samples.contains(sampleName)) {$          String label=doc.getSampleLabelGetter().getLabel(sampleName);$          if (!label.equals(sampleName))           label+=" (" + sampleName + ")";$          final Dimension labelSize=Basic.getStringSize(gc,label,gc.getFont()).getSize();$          int boxSize=labelSize.height - 2;$          if (x + boxSize + labelSize.width+ 2 > getWidth() || vertical) {$            x=3;$            y+=1.5 * gc.getFont().getSize();$          }$          if (doDraw) {$            final Image image=GraphicsUtilities.makeSampleIconSwing(doc,sampleName,true,true,boxSize + 1);$            gc.drawImage(image,x,y - boxSize,this);$            gc.setColor(getFontColor());$            gc.drawString(label,x + boxSize + 2,y);$          }$          maxX=Math.max(maxX,x);$          x+=boxSize + 2 + labelSize.width+ 10;$          if (vertical)           maxX=Math.max(maxX,x);$        }$        if (size != null)         size.setSize(maxX,y);$      }$    }$  }$}$
public static ShoppingCart makeShoppingListCart(ShoppingCart listCart,LocalDispatcher dispatcher,GenericValue shoppingList,Locale locale){$  Delegator delegator=dispatcher.getDelegator();$  if (shoppingList != null && shoppingList.get("productStoreId") != null) {$    String productStoreId=shoppingList.getString("productStoreId");$    String currencyUom=shoppingList.getString("currencyUom");$    if (currencyUom == null) {$      GenericValue productStore=ProductStoreWorker.getProductStore(productStoreId,delegator);$      if (productStore == null) {$        return null;$      }$      currencyUom=productStore.getString("defaultCurrencyUomId");$    }$    if (locale == null) {$      locale=Locale.getDefault();$    }$    List<GenericValue> items=null;$    try {$      items=shoppingList.getRelated("ShoppingListItem",null,UtilMisc.toList("shoppingListItemSeqId"),false);$    }$ catch (    GenericEntityException e) {$      Debug.logError(e,module);$    }$    if (UtilValidate.isNotEmpty(items)) {$      if (listCart == null) {$        listCart=new ShoppingCart(delegator,productStoreId,locale,currencyUom);$        listCart.setOrderPartyId(shoppingList.getString("partyId"));$        listCart.setAutoOrderShoppingListId(shoppingList.getString("shoppingListId"));$      }$ else {$        if (!listCart.getPartyId().equals(shoppingList.getString("partyId"))) {$          Debug.logError("CANNOT add shoppingList: " + shoppingList.getString("shoppingListId") + " of partyId: "+ shoppingList.getString("partyId")+ " to a shoppingcart with a different orderPartyId: "+ listCart.getPartyId(),module);$          return listCart;$        }$      }$      ProductConfigWrapper configWrapper=null;$      for (      GenericValue shoppingListItem : items) {$        String productId=shoppingListItem.getString("productId");$        BigDecimal quantity=shoppingListItem.getBigDecimal("quantity");$        Timestamp reservStart=shoppingListItem.getTimestamp("reservStart");$        BigDecimal reservLength=null;$        String configId=shoppingListItem.getString("configId");$        if (shoppingListItem.get("reservLength") != null) {$          reservLength=shoppingListItem.getBigDecimal("reservLength");$        }$        BigDecimal reservPersons=null;$        if (shoppingListItem.get("reservPersons") != null) {$          reservPersons=shoppingListItem.getBigDecimal("reservPersons");$        }$        if (UtilValidate.isNotEmpty(productId) && quantity != null) {$          if (UtilValidate.isNotEmpty(configId)) {$            configWrapper=ProductConfigWorker.loadProductConfigWrapper(delegator,dispatcher,configId,productId,listCart.getProductStoreId(),null,listCart.getWebSiteId(),listCart.getCurrency(),listCart.getLocale(),listCart.getAutoUserLogin());$          }$          String listId=shoppingListItem.getString("shoppingListId");$          String itemId=shoppingListItem.getString("shoppingListItemSeqId");$          Map<String,Object> attributes=UtilMisc.<String,Object>toMap("shoppingListId",listId,"shoppingListItemSeqId",itemId);$          try {$            listCart.addOrIncreaseItem(productId,null,quantity,reservStart,reservLength,reservPersons,null,null,null,null,null,attributes,null,configWrapper,null,null,null,dispatcher);$          }$ catch (          CartItemModifyException e) {$            Debug.logError(e,"Unable to add product to List Cart - " + productId,module);$          }$catch (          ItemNotFoundException e) {$            Debug.logError(e,"Product not found - " + productId,module);$          }$        }$      }$      if (listCart.size() > 0) {$        if (UtilValidate.isNotEmpty(shoppingList.get("paymentMethodId"))) {$          listCart.addPayment(shoppingList.getString("paymentMethodId"));$        }$        if (UtilValidate.isNotEmpty(shoppingList.get("contactMechId"))) {$          listCart.setAllShippingContactMechId(shoppingList.getString("contactMechId"));$        }$        if (UtilValidate.isNotEmpty(shoppingList.get("shipmentMethodTypeId"))) {$          listCart.setAllShipmentMethodTypeId(shoppingList.getString("shipmentMethodTypeId"));$        }$        if (UtilValidate.isNotEmpty(shoppingList.get("carrierPartyId"))) {$          listCart.setAllCarrierPartyId(shoppingList.getString("carrierPartyId"));$        }$        if (UtilValidate.isNotEmpty(shoppingList.getString("productPromoCodeId"))) {$          listCart.addProductPromoCode(shoppingList.getString("productPromoCodeId"),dispatcher);$        }$      }$    }$  }$  return listCart;$}$
public void performQuery() throws IOException, PIRException {$  logger.info("Performing query: ");$  JavaDStream<MapWritable> inputRDD=null;$  if (dataInputFormat.equals(InputFormatConst.BASE_FORMAT)) {$    inputRDD=readData();$  }$ else   if (dataInputFormat.equals(InputFormatConst.ES)) {$    inputRDD=readDataES();$  }$ else {$    throw new PIRException("Unknown data input format " + dataInputFormat);$  }$  performQuery(inputRDD);$}$
public GroupsGetMembersQuery sort(GroupsGetMembersSort value){$  return unsafeParam("sort",value);$}$
public double minValue(){$  Iterator iIter=asTreeMap().values().iterator();$  Double dMin=Double.POSITIVE_INFINITY;$  while (iIter.hasNext()) {$    Double dVal=(Double)iIter.next();$    dMin=(dVal < dMin) ? dVal : dMin;$  }$  return dMin;$}$
public void initialize() throws CarbonSortKeyAndGroupByException {$  prefetch=Boolean.parseBoolean(CarbonProperties.getInstance().getProperty(CarbonCommonConstants.CARBON_MERGE_SORT_PREFETCH,CarbonCommonConstants.CARBON_MERGE_SORT_PREFETCH_DEFAULT));$  bufferSize=CarbonCommonConstants.CARBON_PREFETCH_BUFFERSIZE;$  this.isSortTempFileCompressionEnabled=Boolean.parseBoolean(CarbonProperties.getInstance().getProperty(CarbonCommonConstants.IS_SORT_TEMP_FILE_COMPRESSION_ENABLED,CarbonCommonConstants.IS_SORT_TEMP_FILE_COMPRESSION_ENABLED_DEFAULTVALUE));$  if (this.isSortTempFileCompressionEnabled) {$    LOGGER.info("Compression was used while writing the sortTempFile");$  }$  try {$    this.sortTempFileNoOFRecordsInCompression=Integer.parseInt(CarbonProperties.getInstance().getProperty(CarbonCommonConstants.SORT_TEMP_FILE_NO_OF_RECORDS_FOR_COMPRESSION,CarbonCommonConstants.SORT_TEMP_FILE_NO_OF_RECORD_FOR_COMPRESSION_DEFAULTVALUE));$    if (this.sortTempFileNoOFRecordsInCompression < 1) {$      LOGGER.error("Invalid value for: " + CarbonCommonConstants.SORT_TEMP_FILE_NO_OF_RECORDS_FOR_COMPRESSION + ": Only Positive Integer value(greater than zero) is allowed.Default value will"+ " be used");$      this.sortTempFileNoOFRecordsInCompression=Integer.parseInt(CarbonCommonConstants.SORT_TEMP_FILE_NO_OF_RECORD_FOR_COMPRESSION_DEFAULTVALUE);$    }$  }$ catch (  NumberFormatException e) {$    LOGGER.error("Invalid value for: " + CarbonCommonConstants.SORT_TEMP_FILE_NO_OF_RECORDS_FOR_COMPRESSION + ", only Positive Integer value is allowed.Default value will be used");$    this.sortTempFileNoOFRecordsInCompression=Integer.parseInt(CarbonCommonConstants.SORT_TEMP_FILE_NO_OF_RECORD_FOR_COMPRESSION_DEFAULTVALUE);$  }$  initialise();$}$
public void clear(){$  if (data != null) {$    for (int i=0; i < (length * 5); i++)     data[i]=null;$  }$  length=0;$}$
public SegmentIntervalsHashIdGenerator(PhysicalTableDictionary physicalTableDictionary,DataSourceMetadataService dataSourceMetadataService){$  this(physicalTableDictionary,dataSourceMetadataService,new DefaultingDictionary<>(null));$}$
public EsriFileGDB(){$  addFieldTranslation("DATABASE",DataSourceConnectorFileGDB.FIELD_DATABASE);$}$
public static <T extends RealFieldElement<T>>T distance(final FieldVector3D<T> v1,final FieldVector3D<T> v2){$  return v1.distance(v2);$}$
private void induceRec(Node v,Node vCpy,PhyloTree treeCpy,NodeSet keep,Set<Integer> stopIds,Map<Integer,NodeData> id2data,Map<Node,Node> node2copy){$  for (Edge e=v.getFirstOutEdge(); e != null; e=v.getNextOutEdge(e)) {$    Node w=e.getTarget();$    if (keep.contains(w)) {$      int id=(Integer)w.getInfo();$      Node wCpy=null;$      if (node2copy != null)       wCpy=node2copy.get(w);$      if (wCpy == null) {$        wCpy=treeCpy.newNode();$        if (node2copy != null)         node2copy.put(w,wCpy);$        wCpy.setInfo(id);$      }$      NodeData nodeData=id2data.get(id);$      if (nodeData != null)       wCpy.setData(nodeData);$ else       wCpy.setData(new NodeData(new int[0],new int[0]));$      treeCpy.newEdge(vCpy,wCpy);$      if (wCpy.getInDegree() > 1) {$        for (Edge f=wCpy.getFirstInEdge(); f != null; f=wCpy.getNextInEdge(f))         treeCpy.setSpecial(f,true);$      }$      if (!stopIds.contains((Integer)w.getInfo()))       induceRec(w,wCpy,treeCpy,keep,stopIds,id2data,node2copy);$    }$  }$}$
public static long calculateBrokerMaxCapacity(SystemResourceUsage systemResourceUsage,ResourceQuota defaultQuota){$  double bandwidthOutLimit=systemResourceUsage.bandwidthOut.limit * KBITS_TO_BYTES;$  double bandwidthInLimit=systemResourceUsage.bandwidthIn.limit * KBITS_TO_BYTES;$  long capacity=calculateBrokerCapacity(defaultQuota,systemResourceUsage.cpu.limit,systemResourceUsage.memory.limit,bandwidthOutLimit,bandwidthInLimit);$  return capacity;$}$
public void onPrepared(MediaPlayer player){$  mState=State.PLAYING;$  updateNotification(String.format(getString(R.string.media_state_playing),mFile.getFileName()));$  if (mMediaController != null) {$    mMediaController.setEnabled(true);$  }$  player.seekTo(mStartPosition);$  configAndStartMediaPlayer();$  if (!mPlayOnPrepared) {$    processPauseRequest();$  }$  if (mMediaController != null) {$    mMediaController.updatePausePlay();$  }$}$
public static void w(Class<?> clazz,String msg){$  if (isDebug) {$    Log.w(clazz.getSimpleName(),msg);$  }$}$
public void notifySummonReleaseObservers(){$  notifyObservers(ObserverType.SUMMONRELEASE);$}$
public void loadBcpFile(String bcpFilename,String delimiter,List<Attribute> attributes,String dateFormatString,ObjectSourceConnectionManager connectionManager,String sourceAttribute){$  loadBcpFile(bcpFilename,delimiter,attributes,connectionManager,dateFormatString != null ? new SimpleDateFormat(dateFormatString) : null,sourceAttribute);$}$
@Nullable public static String readTextFromDisk(@NotNull File file){$  return readTextFromDisk(file,true);$}$
public boolean spansMultiplePartitions(){$  return partitions != null && partitions.isMultiple();$}$
private static Key generateKey64bits(){$  byte[] keyValue=null;$  MessageDigest sha=null;$  try {$    keyValue=Settings.keyStr.getBytes("UTF-8");$    sha=MessageDigest.getInstance("SHA-1");$    keyValue=sha.digest(keyValue);$    keyValue=Arrays.copyOf(keyValue,16);$    Key key=new SecretKeySpec(keyValue,Settings.ALGO);$    return key;$  }$ catch (  UnsupportedEncodingException e) {$    System.out.println(e);$  }$catch (  NoSuchAlgorithmException e) {$    System.out.println(e);$  }$  return null;$}$
public void componentMoved(ComponentEvent ev){$}$
public boolean isUptoDate(){$  return true;$}$
public void reset(){$  mGestureDetector.reset();$  mPreviousTransform.reset();$  mActiveTransform.reset();$}$
public static ValueGetterSpacePredicate<ServerEntry> propertyAnd(String propertyName,ISpacePredicate leftPredicate,ISpacePredicate rightPredicate){$  return property(propertyName,and(leftPredicate,rightPredicate));$}$
public static void mergeStacks(IStorage sourceStorage,IStorage destStorage,Item sourceItem,Item targetItem,long count){$  if (sourceItem.getItemCount() >= count) {$    long freeCount=targetItem.getFreeCount();$    count=count > freeCount ? freeCount : count;$    long leftCount=destStorage.increaseItemCount(targetItem,count,sourceStorage.getStorageType() == destStorage.getStorageType() ? ItemUpdateType.INC_ITEM_MERGE : ItemUpdateType.INC_ITEM_COLLECT);$    sourceStorage.decreaseItemCount(sourceItem,count - leftCount,sourceStorage.getStorageType() == destStorage.getStorageType() ? ItemUpdateType.DEC_ITEM_SPLIT : ItemUpdateType.DEC_ITEM_SPLIT_MOVE);$  }$}$
private void updateEquipmentStatus(){$  boolean down=false;$  StringBuilder invalidationMessage=new StringBuilder();$  for (  SupervisionEvent event : equipmentSupervisionStatus.values()) {$    if (event != null) {$      boolean isDown=false;$      isDown|=event.getStatus().equals(SupervisionStatus.DOWN);$      isDown|=event.getStatus().equals(SupervisionStatus.STOPPED);$      if (isDown) {$        down=true;$        if (invalidationMessage.length() > 0) {$          invalidationMessage.append("; ");$        }$        invalidationMessage.append(event.getMessage());$      }$    }$  }$  if (down) {$    tagQuality.addInvalidStatus(TagQualityStatus.EQUIPMENT_DOWN,invalidationMessage.toString());$  }$ else {$    tagQuality.removeInvalidStatus(TagQualityStatus.EQUIPMENT_DOWN);$  }$}$
public Boolean deleteProduct(EntityManager em,String productId){$  Boolean status=true;$  Product product=null;$  try {$    if (!em.getTransaction().isActive()) {$      em.getTransaction().begin();$    }$    product=em.find(Product.class,productId);$    if (product != null) {$      em.remove(product);$      em.getTransaction().commit();$    }$ else {$      logger.info("Product " + productId + " does not exist in the db");$      status=false;$    }$  }$ catch (  Exception e) {$    status=false;$    logger.error("Error occured during delete of product. Detailed info: " + e);$  }$  return status;$}$
@Override public final int readInt() throws IOException {$  dis.readFully(work,0,4);$  return (work[3]) << 24 | (work[2] & 0xff) << 16 | (work[1] & 0xff) << 8 | (work[0] & 0xff);$}$
private void writeObject(ObjectOutputStream out) throws IOException {$  if (needsSyncChildren()) {$    synchronizeChildren();$  }$  out.defaultWriteObject();$}$
public NativeImageLoader(int height,int width,int channels){$  this.height=height;$  this.width=width;$  this.channels=channels;$}$
public PagesGetQuery title(String value){$  return unsafeParam("title",value);$}$
public boolean isZoomOverItem(){$  return m_zoomOverItem;$}$
@Override public void closeKeepAliveService(){$synchronized (this) {$    if (this.scheduledFuture != null) {$      this.keepAliveRequestStreamObserver.onCompleted();$      this.keepAliveRequestStreamObserver=null;$      this.keepAliveResponseStreamObserver=null;$      this.scheduledFuture.cancel(true);$      this.scheduledFuture=null;$    }$ else {$      throw new IllegalStateException("Lease keep alive service not start yet");$    }$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedFPATK_Instant_INTERVAL_TO_ME(int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1201051,num0,skillname);$}$
private BattlePokemonInfo createBattlePokemon(Pokemon pokemon){$  return BattlePokemonInfo.newBuilder().setCurrentEnergy(0).setCurrentHealth(100).setPokemonData(pokemon.getDefaultInstanceForType()).build();$}$
public void addCommandClass(ZWaveCommandClass commandClass){$  CommandClass key=commandClass.getCommandClass();$  if (!supportedCommandClasses.containsKey(key)) {$    logger.debug("NODE {}: Adding command class {} to the list of supported command classes.",nodeId,commandClass.getCommandClass().getLabel());$    supportedCommandClasses.put(key,commandClass);$    if (commandClass instanceof ZWaveEventListener) {$      this.controller.addEventListener((ZWaveEventListener)commandClass);$    }$  }$}$
public static Dfp computeLn(final Dfp a,final Dfp one,final Dfp two){$  int den=1;$  Dfp x=a.add(new Dfp(a.getField(),-1)).divide(a.add(one));$  Dfp y=new Dfp(x);$  Dfp num=new Dfp(x);$  Dfp py=new Dfp(y);$  for (int i=0; i < 10000; i++) {$    num=num.multiply(x);$    num=num.multiply(x);$    den+=2;$    Dfp t=num.divide(den);$    y=y.add(t);$    if (y.equals(py)) {$      break;$    }$    py=new Dfp(y);$  }$  return y.multiply(two);$}$
public AudioGetBroadcastListQuery active(Boolean value){$  return unsafeParam("active",value);$}$
public int increment(int offset){$  CharSequence txt=getText();$  int i;$  if (txt != null) {$    try {$      i=Integer.parseInt(txt.toString());$    }$ catch (    NumberFormatException e) {$      i=0;$    }$  }$ else {$    i=0;$  }$  i=i + offset;$  setText(String.valueOf(i));$  return i;$}$
public void reset(){$  Iterator iter=m_vis.visibleItems(m_nodeGroup);$  while (iter.hasNext()) {$    VisualItem item=(VisualItem)iter.next();$    ForceItem fitem=(ForceItem)item.get(FORCEITEM);$    if (fitem != null) {$      fitem.location[0]=(float)item.getEndX();$      fitem.location[1]=(float)item.getEndY();$      fitem.force[0]=fitem.force[1]=0;$      fitem.velocity[0]=fitem.velocity[1]=0;$    }$  }$  m_lasttime=-1L;$}$
public DeterministicHashMap(int initialCapacity,float loadFactor){$  super(initialCapacity,loadFactor);$}$
public VertexBuffer(Type type){$  super(GLObject.Type.VertexBuffer);$  this.bufType=type;$}$
@Deprecated public static byte matchColor(Color color){$  if (color.getAlpha() < 128)   return 0;$  int index=0;$  double best=-1;$  for (int i=4; i < colors.length; i++) {$    double distance=getDistance(color,colors[i]);$    if (distance < best || best == -1) {$      best=distance;$      index=i;$    }$  }$  return (byte)(index < 128 ? index : -129 + (index - 127));$}$
@Override public long readDouble(String filePath,long offset){$  FileChannel fileChannel=updateCache(filePath);$  ByteBuffer byteBffer=read(fileChannel,CarbonCommonConstants.LONG_SIZE_IN_BYTE,offset);$  return byteBffer.getLong();$}$
public static <T>boolean containsDuplicates(List<T> list,Comparator<T> comparator){$  Collections.sort(list,comparator);$  T previous=null;$  for (  T entry : list) {$    if (previous != null && previous.equals(entry)) {$      return true;$    }$    previous=entry;$  }$  return false;$}$
public static String millisToText(long millis){$  return Strings.millisToString(millis,true);$}$
public static double[] lsfInHz2lpc(double[] lsf,int samplingRate){$  double[] normalised_lsf=new double[lsf.length];$  for (int i=0; i < lsf.length; i++) {$    normalised_lsf[i]=lsf[i] / samplingRate;$    assert 0 <= normalised_lsf[i];$    assert normalised_lsf[i] <= 0.5;$  }$  return lsf2lpc(normalised_lsf);$}$
private boolean maintainSelectorMinimizationBugExperimentEnabled(){$  return (model != null && model.isExperimentEnabled(MAINTAIN_SELECTOR_MINIMIZATION_BUG));$}$
public static ProcessEngineInfo retry(String resourceUrl){$  log.debug("retying initializing of resource {}",resourceUrl);$  try {$    return initProcessEnginFromResource(new URL(resourceUrl));$  }$ catch (  MalformedURLException e) {$    throw new ActivitiIllegalArgumentException("invalid url: " + resourceUrl,e);$  }$}$
public void resetTask(){$  this.mate=null;$  this.spawnBabyDelay=0;$}$
public synchronized void press(int value){$  if (this.state != Input.State.WAITING_FOR_RELEASE) {$    this.value=this.value + value;$    if (this.holdType == Input.Hold.HOLD) {$      this.state=Input.State.WAITING_FOR_RELEASE;$    }$ else {$      this.state=Input.State.PRESSED;$    }$  }$}$
@Override public void startCDATA(Augmentations augs) throws XNIException {$  try {$    if (fLexicalHandler != null) {$      fLexicalHandler.startCDATA();$    }$  }$ catch (  SAXException e) {$    throw new XNIException(e);$  }$}$
public Builder certificateInfo(CertificateInfo certificateInfo){$  this.certificateInfo=certificateInfo;$  return this;$}$
public static String slurpReader(Reader reader){$  BufferedReader r=new BufferedReader(reader);$  StringBuilder buff=new StringBuilder();$  try {$    char[] chars=new char[SLURPBUFFSIZE];$    while (true) {$      int amountRead=r.read(chars,0,SLURPBUFFSIZE);$      if (amountRead < 0) {$        break;$      }$      buff.append(chars,0,amountRead);$    }$    r.close();$  }$ catch (  Exception e) {$    throw new RuntimeException();$  }$  return buff.toString();$}$
private void updateSequence(){$  setLong(mBuffers[mBufferIn],++mSeq,2,4);$}$
public boolean intersects(S2CellUnion union){$  for (  S2CellId id : union) {$    if (intersects(id)) {$      return true;$    }$  }$  return false;$}$
public boolean profiling(){$  return soot.PhaseOptions.getBoolean(options,"profiling");$}$
@Override public void createIndex(){$  Clusterer=new AverageLinkClusterer();$  initComparator();$  ProgressEvent peCreation=new ProgressEvent("Index creation",0.0);$  if (Notifier != null)   Notifier.Notify(this,peCreation.updateSubtask("Calculating clusters..."));$  Clusterer.calculateClusters(NamedObjects,Comparator);$  if (Notifier != null)   Notifier.Notify(this,peCreation.updateSubtask("Getting hierarchy..."));$  Hierarchy=Clusterer.getHierarchy();$}$
public void shutdown(){$  this.handlerEnabled=false;$synchronized (threadMonitorObject) {$    threadMonitorObject.notify();$  }$  while (!incomingQueue.isEmpty()) {$    try {$      Thread.sleep(500);$    }$ catch (    InterruptedException e) {$      LOGGER.error("Interrupted while waiting.");$      e.printStackTrace();$    }$  }$}$
private static Throwable extractException(Exception ex){$  if (ex instanceof UnableToTakeScreenshotException) {$    return ex.getCause();$  }$  return ex;$}$
public boolean isPrimaryKey(){$  return isPrimaryKey(false);$}$
@Override public String toString(){$  String ivString=Base64.encodeToString(iv,BASE64_FLAGS);$  String cipherTextString=Base64.encodeToString(cipherText,BASE64_FLAGS);$  String macString=Base64.encodeToString(mac,BASE64_FLAGS);$  return String.format(ivString + ":" + macString+ ":"+ cipherTextString);$}$
@Override public void actionPerformed(ActionEvent e){$}$
@Override public boolean accepts(Field field){$  return isList(field) && AnnotationsHelper.isFindByAnnotationPresent(field) && AnnotationsHelper.isGenericTypeAnnotedWithPageObject(field);$}$
private List<String> pickTableNamesFromTableModels(){$  List<String> tableNames=new ArrayList<String>();$  for (  TableModel tableModel : mTableModels) {$    tableNames.add(tableModel.getTableName());$  }$  return tableNames;$}$
public static S2LatLngRect fromEdge(S2Point a,S2Point b){$  S2LatLngRect r=fromPointPair(new S2LatLng(a),new S2LatLng(b));$  S2Point ab=S2.robustCrossProd(a,b);$  S2Point dir=S2Point.crossProd(ab,new S2Point(0,0,1));$  double da=dir.dotProd(a);$  double db=dir.dotProd(b);$  if (da * db >= 0) {$    return r;$  }$  double absLat=Math.acos(Math.abs(ab.z / ab.norm()));$  if (da < 0) {$    return new S2LatLngRect(new R1Interval(r.lat().lo(),absLat),r.lng());$  }$ else {$    return new S2LatLngRect(new R1Interval(-absLat,r.lat().hi()),r.lng());$  }$}$
private void showMessage(String message,boolean error){$  lblError.setForeground(error ? Color.RED : Color.BLACK);$  lblError.setText(message);$}$
public Object clone() throws CloneNotSupportedException {$  AlarmPublication alarmPublication=(AlarmPublication)super.clone();$  if (this.publicationTime != null) {$    alarmPublication.publicationTime=(Timestamp)this.publicationTime.clone();$  }$  return alarmPublication;$}$
private boolean expungeStaleEntries(){$  if (size == 0)   return false;$  Object r;$  boolean result=false;$  while ((r=queue.poll()) != null) {$    result=true;$    Entry e=(Entry)r;$    int h=e.hash;$    int i=indexFor(h,table.length);$    Entry prev=table[i];$    Entry p=prev;$    while (p != null) {$      Entry next=p.next;$      if (p == e) {$        if (prev == e)         table[i]=next;$ else         prev.next=next;$        e.next=null;$        size--;$        break;$      }$      prev=p;$      p=next;$    }$  }$  return result;$}$
public void dumpBinary(CART cart,DataOutput os) throws IOException {$  try {$    toWagonFormat(cart.getRootNode(),(DataOutputStream)os,null,null);$  }$ catch (  IOException ioe) {$    IOException newIOE=new IOException("Error dumping CART to output stream");$    newIOE.initCause(ioe);$    throw newIOE;$  }$}$
private void digitsToWords(String tokenVal){$  FeatureSet featureSet=tokenItem.getFeatures();$  String nsw="";$  if (featureSet.isPresent("nsw")) {$    nsw=featureSet.getString("nsw");$  }$  if (nsw.equals("nide")) {$    NumberExpander.expandID(tokenVal,wordRelation);$  }$ else {$    String rName=featureSet.getString("name");$    String digitsType=null;$    if (tokenVal.equals(rName)) {$      digitsType=(String)cart.interpret(tokenItem);$    }$ else {$      featureSet.setString("name",tokenVal);$      digitsType=(String)cart.interpret(tokenItem);$      featureSet.setString("name",rName);$    }$    if (digitsType.equals("ordinal")) {$      NumberExpander.expandOrdinal(tokenVal,wordRelation);$    }$ else     if (digitsType.equals("digits")) {$      NumberExpander.expandDigits(tokenVal,wordRelation);$    }$ else     if (digitsType.equals("year")) {$      NumberExpander.expandID(tokenVal,wordRelation);$    }$ else {$      NumberExpander.expandNumber(tokenVal,wordRelation);$    }$  }$}$
public BaseViewHolder addOnLongClickListener(int viewId){$  itemChildLongClickViewIds.add(viewId);$  return this;$}$
@Override public QueryTemplatePacket and(QueryTemplatePacket template){$  LinkedList<QueryTemplatePacket> optimizedPackets=new LinkedList<QueryTemplatePacket>();$  for (  QueryTemplatePacket packet : getPackets()) {$    QueryTemplatePacket result=new QueryTemplatePacket(packet);$    result.intersectRanges(template);$    result.intersectUids(template);$    if (!result.isAlwaysEmpty())     optimizedPackets.add(result);$  }$  setPackets(optimizedPackets);$  if (optimizedPackets.isEmpty())   setAlwaysEmpty(true);$  return this;$}$
public boolean isSecondPhase(){$  return _secondPhase;$}$
public static boolean addUIdToSetOfOpenFiles(String name,long uId){$  final Pair<String,Long> pair=new Pair<>(name,uId);$  Integer count=openFiles.get(pair);$  if (count == null) {$    openFiles.put(pair,1);$    return true;$  }$ else {$    openFiles.put(pair,count + 1);$    return false;$  }$}$
@NotNull public static BufferedImage pad(@NotNull BufferedImage image,int paddingPercent){$  if (image.getWidth() <= 1 || image.getHeight() <= 1) {$    return image;$  }$  if (paddingPercent > 100) {$    paddingPercent=100;$  }$  int largerSide=Math.max(image.getWidth(),image.getHeight());$  int smallerSide=Math.min(image.getWidth(),image.getHeight());$  int padding=(largerSide * paddingPercent / 100);$  padding=Math.max(-(smallerSide / 2 - 1),padding);$  return AssetUtil.paddedImage(image,padding);$}$
public boolean isApplicable(){$  InspectorWindow inspectorWindow=(InspectorWindow)getViewer();$  return inspectorWindow != null;$}$
public boolean hasMagicalStateEffect(){$  Iterator<Effect> effectIterator=this.abnormalEffectMap.values().iterator();$  while (effectIterator.hasNext()) {$    Effect localEffect=effectIterator.next();$    if (localEffect.isMagicalState()) {$      return true;$    }$  }$  return false;$}$
private void selectEngine(PacScriptSource pacSource){$  try {$    Logger.log(getClass(),LogLevel.INFO,"Using javax.script JavaScript engine.");$    this.pacScriptParser=new JavaxPacScriptParser(pacSource);$  }$ catch (  Exception e) {$    Logger.log(getClass(),LogLevel.ERROR,"PAC parser error.",e);$  }$}$
public char nextClean() throws JSONException {$  for (; ; ) {$    char c=next();$    if (c == 0 || c > ' ') {$      return c;$    }$  }$}$
public void requestTransfer(int taskId,String name,byte[] db){$  PlayerTransferTask task=this.tasks.get(taskId);$  GameServerInfo targetServer=GameServerTable.getGameServerInfo(task.targetServerId);$  if (targetServer == null || targetServer.getConnection() == null) {$    log.error("Player transfer requests offline server! #" + task.targetServerId);$    return;$  }$  GameServerInfo server=GameServerTable.getGameServerInfo(task.sourceServerId);$  if (server == null || server.getConnection() == null) {$    log.error("Player transfer requests offline server! #" + task.sourceServerId);$    return;$  }$  if (targetServer.isAccountOnGameServer(task.targetAccountId)) {$    log.error("Player transfer cant be performed while target account is online at server #" + task.targetServerId + ". "+ task.targetAccountId);$    server.getConnection().sendPacket(new SM_PTRANSFER_RESPONSE(PlayerTransferResultStatus.ERROR,taskId,"transfer cant be performed while target account is online at server"));$    return;$  }$  if (transfers.containsKey(taskId)) {$    log.error("Player transfer cant be performed while it is already active #" + task.targetServerId + ". "+ task.targetAccountId);$    server.getConnection().sendPacket(new SM_PTRANSFER_RESPONSE(PlayerTransferResultStatus.ERROR,taskId,"transfer cant be performed while it is already active"));$    return;$  }$  Account account=AccountController.loadAccount(task.targetAccountId);$  Account saccount=AccountController.loadAccount(task.sourceAccountId);$  PlayerTransferRequest request=new PlayerTransferRequest(PlayerTransferStatus.STEP1);$  request.serverId=task.sourceServerId;$  request.targetServerId=task.targetServerId;$  request.targetAccountId=task.targetAccountId;$  request.db=db;$  request.name=name;$  request.targetAccount=account;$  request.account=account;$  request.saccount=saccount;$  request.taskId=taskId;$  transfers.put(taskId,request);$  account.setActivated((byte)0);$  saccount.setActivated((byte)0);$  DAOManager.getDAO(AccountDAO.class).updateAccount(account);$  DAOManager.getDAO(AccountDAO.class).updateAccount(saccount);$  targetServer.getConnection().sendPacket(new SM_PTRANSFER_RESPONSE(PlayerTransferResultStatus.SEND_INFO,request));$  log.info("player transfer account " + task.targetServerId + " became active.");$}$
private DataType fromExternalToWrapperDataType(org.apache.carbondata.format.DataType dataType){$  if (null == dataType) {$    return null;$  }$switch (dataType) {$case STRING:$    return DataType.STRING;$case INT:$  return DataType.INT;$case SHORT:$return DataType.SHORT;$case LONG:$return DataType.LONG;$case DOUBLE:$return DataType.DOUBLE;$case DECIMAL:$return DataType.DECIMAL;$case TIMESTAMP:$return DataType.TIMESTAMP;$case ARRAY:$return DataType.ARRAY;$case STRUCT:$return DataType.STRUCT;$default :$return DataType.STRING;$}$}$
public LogNormalDistribution(double scale,double shape) throws MathIllegalArgumentException {$  this(scale,shape,DEFAULT_SOLVER_ABSOLUTE_ACCURACY);$}$
public DatabaseGetRegionsQuery(VkApiClient client,int countryId){$  super(client,"database.getRegions",GetRegionsResponse.class);$  countryId(countryId);$}$
public static Dfp asin(final Dfp a){$  return atan(a.divide(a.getOne().subtract(a.multiply(a)).sqrt()));$}$
public char readChar() throws JMSException {$  initializeReading();$  try {$    this.dataIn.mark(Integer.MAX_VALUE);$    return this.dataIn.readChar();$  }$ catch (  EOFException eof) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException e) {$      JMSException jmsEx=new JMSException(e.toString());$      jmsEx.setLinkedException(e);$      throw jmsEx;$    }$    JMSException jmsEx=new MessageEOFException(eof.toString());$    jmsEx.setLinkedException(eof);$    throw jmsEx;$  }$catch (  IOException ioe) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException e) {$      JMSException jmsEx=new JMSException(e.toString());$      jmsEx.setLinkedException(e);$      throw jmsEx;$    }$    JMSException jmsEx=new MessageFormatException("Format error occurred" + ioe.toString());$    jmsEx.setLinkedException(ioe);$    throw jmsEx;$  }$}$
private void checkSufficientData(final RealMatrix matrix){$  int nRows=matrix.getRowDimension();$  int nCols=matrix.getColumnDimension();$  if (nRows < 2 || nCols < 2) {$    throw new MathIllegalArgumentException(LocalizedCoreFormats.INSUFFICIENT_ROWS_AND_COLUMNS,nRows,nCols);$  }$}$
private byte[] patchExploit(byte[] exploit,Map<String,String> params) throws Exception {$  if (params.size() != 7) {$    throw new Exception("invalid argument count");$  }$  ArrayList<Long> args=new ArrayList<>();$  args.add(0L);$  for (int i=1; i <= 7; ++i) {$    String arg=String.format("a%s",i);$    if (params.containsKey(arg)) {$      args.add(Long.parseLong(params.get(arg),16));$    }$ else {$      throw new Exception(String.format("argument %s is missing",arg));$    }$  }$  byte[] copy=new byte[exploit.length];$  System.arraycopy(exploit,0,copy,0,exploit.length);$  ByteBuffer buf=ByteBuffer.wrap(copy).order(ByteOrder.LITTLE_ENDIAN);$  int size_words=buf.getInt(0);$  int dsize=buf.getInt(4 + 0x10);$  int csize=buf.getInt(4 + 0x20);$  long data_base=args.get(1) + csize;$  for (int i=1; i < size_words; ++i) {$    long add=0;$    byte x=buf.get(size_words * 4 + 4 + i - 1);$    if (x == 1) {$      add=data_base;$    }$ else     if (x != 0) {$      add=args.get(x);$    }$    buf.putInt(i * 4,buf.getInt(i * 4) + (int)add);$  }$  byte[] out=new byte[dsize + csize];$  System.arraycopy(copy,4 + 0x40,out,csize,dsize);$  System.arraycopy(copy,4 + 0x40 + dsize,out,0,csize);$  return out;$}$
public GSQueueSessionImpl(GSConnectionImpl connection,boolean transacted,int acknowledgeMode) throws JMSException {$  super(connection,transacted,acknowledgeMode);$}$
void balanceTree(BinarySearchTreeNode<E> node){$  while (node != null) {$    node=balance(node);$    node=node.parent;$  }$}$
public boolean naive_side_effect(){$  return soot.PhaseOptions.getBoolean(options,"naive-side-effect");$}$
private char[] convertToVararg(char[] typeName){$  if (typeName == null)   return typeName;$  final int len=typeName.length;$  if (len < 2)   return typeName;$  if (typeName[len - 1] != ']')   return typeName;$  if (typeName[len - 2] != '[')   return typeName;$  char[] vararg=new char[len + 1];$  System.arraycopy(typeName,0,vararg,0,len - 2);$  vararg[len - 2]='.';$  vararg[len - 1]='.';$  vararg[len]='.';$  return vararg;$}$
public static final Future<?> newFollowingToTargetCheckTask(Summon follower,Creature leading){$  return ThreadPoolManager.getInstance().scheduleAtFixedRate(new FollowSummonTaskAI(leading,follower),1000,1000);$}$
public static boolean isFileExists(String fileName){$  try {$    FileFactory.FileType fileType=FileFactory.getFileType(fileName);$    if (FileFactory.isFileExist(fileName,fileType)) {$      return true;$    }$  }$ catch (  IOException e) {$    LOGGER.error("@@@@@@  File not found at a given location @@@@@@ : " + fileName);$  }$  return false;$}$
@Override public void saveRep(Repository rep,ObjectId idTransformation,ObjectId idStep) throws KettleException {$  try {$    rep.saveStepAttribute(idTransformation,idStep,"TableName",tabelName);$    rep.saveStepAttribute(idTransformation,idStep,"MDKeySize",mdkeySize);$    rep.saveStepAttribute(idTransformation,idStep,"Measurecount",measureCount);$    rep.saveStepAttribute(idTransformation,idStep,"HeirAndKeySize",heirAndKeySize);$    rep.saveStepAttribute(idTransformation,idStep,"tableName",tableName);$    rep.saveStepAttribute(idTransformation,idStep,"databaseName",databaseName);$    rep.saveStepAttribute(idTransformation,idStep,"isGroupByEnabled",groupByEnabled);$    rep.saveStepAttribute(idTransformation,idStep,"aggregatorClassString",aggregatorClassString);$    rep.saveStepAttribute(idTransformation,idStep,"aggregatorString",aggregatorString);$    rep.saveStepAttribute(idTransformation,idStep,"factDimLensString",factDimLensString);$    rep.saveStepAttribute(idTransformation,idStep,"levelAnddataTypeString",levelAnddataTypeString);$    rep.saveStepAttribute(idTransformation,idStep,"partitionID",partitionID);$    rep.saveStepAttribute(idTransformation,idStep,"segmentId",segmentId);$    rep.saveStepAttribute(idTransformation,idStep,"taskNo",taskNo);$  }$ catch (  Exception e) {$    throw new KettleException(BaseMessages.getString(PKG,"TemplateStep.Exception.UnableToSaveStepInfoToRepository") + idStep,e);$  }$}$
public void write(char[] cbuf) throws IOException {$  writeIntoClob(new String(cbuf));$}$
private void performAction(byte action){$switch (action) {$case -9:$    if (!pop(MODE_KEY)) {$      event1=JsonEvent.ERROR;$      return;$    }$  state=OK;$event1=JsonEvent.END_OBJECT;$break;$case -8:$if (!pop(MODE_OBJECT)) {$event1=JsonEvent.ERROR;$return;$}$state=OK;$event1=JsonEvent.END_OBJECT;$break;$case -7:$if (!pop(MODE_ARRAY)) {$event1=JsonEvent.ERROR;$return;$}$event1=stateToEvent();$if (event1 == JsonEvent.NEED_MORE_INPUT) {$event1=JsonEvent.END_ARRAY;$}$ else {$event2=JsonEvent.END_ARRAY;$}$state=OK;$break;$case -6:$if (!push(MODE_KEY)) {$event1=JsonEvent.ERROR;$return;$}$state=OB;$event1=JsonEvent.START_OBJECT;$break;$case -5:$if (!push(MODE_ARRAY)) {$event1=JsonEvent.ERROR;$return;$}$state=AR;$event1=JsonEvent.START_ARRAY;$break;$case -4:$switch (stack[top]) {$case MODE_KEY:$state=CO;$event1=JsonEvent.FIELD_NAME;$break;$case MODE_ARRAY:$case MODE_OBJECT:$state=OK;$event1=JsonEvent.VALUE_STRING;$break;$default :$event1=JsonEvent.ERROR;$return;$}$break;$case -3:$switch (stack[top]) {$case MODE_OBJECT:$if (!pop(MODE_OBJECT) || !push(MODE_KEY)) {$event1=JsonEvent.ERROR;$return;$}$event1=stateToEvent();$state=KE;$break;$case MODE_ARRAY:$event1=stateToEvent();$state=VA;$break;$default :$event1=JsonEvent.ERROR;$return;$}$break;$case -2:$if (!pop(MODE_KEY) || !push(MODE_OBJECT)) {$event1=JsonEvent.ERROR;$return;$}$state=VA;$break;$default :$event1=JsonEvent.ERROR;$return;$}$}$
public static void v(String tag,String msg){$  if (sLevel > LEVEL_VERBOSE) {$    return;$  }$  Log.v(tag,msg);$}$
public static Integer[] transformIntArray(int[] source){$  Integer[] destin=new Integer[source.length];$  for (int i=0; i < source.length; i++) {$    destin[i]=source[i];$  }$  return destin;$}$
@Override public void actionPerformed(ActionEvent ev){$  executeImmediately(getSyntax());$}$
public Builder opacity(Number opacity){$  this.opacity=opacity;$  return this;$}$
public AsyncPropertyChangeSupport(Object sourceBean){$  super(sourceBean);$}$
public void initialise() throws XMLException {$  loader=new MqttSpyDaemonConfigLoader();$  showInfo();$}$
public static S2CellId fromFaceIJ(int face,int i,int j){$  long n[]={0,face << (POS_BITS - 33)};$  int bits=(face & SWAP_MASK);$  for (int k=7; k >= 0; --k) {$    bits=getBits(n,i,j,k,bits);$  }$  S2CellId s=new S2CellId((((n[1] << 32) + n[0]) << 1) + 1);$  return s;$}$
public final Observable<T> read(final Object group){$  return Observable.defer(null);$}$
public GotoStmt newGotoStmt(Unit target){$  return Jimple.v().newGotoStmt(target);$}$
private void sendBroadcastUploadStarted(UploadFileOperation upload){$  Intent start=new Intent(getUploadStartMessage());$  start.putExtra(EXTRA_REMOTE_PATH,upload.getRemotePath());$  start.putExtra(EXTRA_OLD_FILE_PATH,upload.getOriginalStoragePath());$  start.putExtra(ACCOUNT_NAME,upload.getAccount().name);$  sendStickyBroadcast(start);$}$
public boolean forEachEntry(TObjectIntProcedure<K> procedure){$  K[] keys=(K[])_set;$  int[] values=_values;$  for (int i=keys.length; i-- > 0; ) {$    if (keys[i] != FREE && keys[i] != REMOVED && !procedure.execute(keys[i],values[i])) {$      return false;$    }$  }$  return true;$}$
private void reindexTypeEntries(TypeData updatedTypeData,boolean indexAddition){$  if (!indexAddition)   throw new RuntimeException("dropindex not supported");$  IStoredList<IEntryCacheInfo> entriesList=updatedTypeData.getEntries();$  IStoredListIterator pos=null;$  Context context=getCacheContext();$  try {$    for (pos=entriesList.establishListScan(true); pos != null; pos=entriesList.next(pos)) {$      IEntryCacheInfo pEntry=(IEntryCacheInfo)pos.getSubject();$      if (pEntry == null || (isEvictableCachePolicy() && pEntry.isRemoving()))       continue;$      IEntryHolder entry=pEntry.getEntryHolder(this);$      if (entry.isDeleted())       continue;$      if (pEntry.isRecentDelete())       continue;$      ILockObject entryLock=getLockManager().getLockObject(entry);$      try {$        boolean needUnpin=false;$synchronized (entryLock) {$          try {$            if (entry.isDeleted())             continue;$            if (isEvictableCachePolicy()) {$              if (pEntry.setPinned(true,true)) {$                needUnpin=true;$              }$ else               continue;$            }$ else             if (entry.isOffHeapEntry()) {$              entry=getEntry(context,entry,true,true);$              needUnpin=true;$            }$            TypeDataIndex.reindexEntry(this,pEntry,updatedTypeData);$          }$ catch (          SAException ex) {$            if (_logger.isLoggable(Level.SEVERE))             _logger.log(Level.SEVERE,"Reindex entry problem uid=" + entry.getUID(),ex);$            throw new RuntimeException("Reindex problem: " + ex);$          }$ finally {$            if (needUnpin)             unpinIfNeeded(context,entry,null,null);$          }$        }$      }$  finally {$        if (entryLock != null) {$          getLockManager().freeLockObject(entryLock);$        }$      }$    }$  }$  finally {$    entriesList.freeSLHolder(pos);$    freeCacheContext(context);$  }$}$
@CalledByNative public static Bitmap generateHomeScreenIcon(Context context,String url,int red,int green,int blue){$  ActivityManager am=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);$  final int outerSize=am.getLauncherLargeIconSize();$  final int iconDensity=am.getLauncherLargeIconDensity();$  Bitmap bitmap=null;$  try {$    bitmap=Bitmap.createBitmap(outerSize,outerSize,Bitmap.Config.ARGB_8888);$  }$ catch (  OutOfMemoryError e) {$    Log.w(TAG,"OutOfMemoryError while trying to draw bitmap on canvas.");$    return null;$  }$  Canvas canvas=new Canvas(bitmap);$  int padding=(int)(GENERATED_ICON_PADDING_RATIO * outerSize);$  Rect outerBounds=new Rect(0,0,outerSize,outerSize);$  Bitmap bookmarkWidgetBg=getBitmapFromResourceId(context,R.mipmap.bookmark_widget_bg,iconDensity);$  Paint paint=new Paint(Paint.FILTER_BITMAP_FLAG);$  canvas.drawBitmap(bookmarkWidgetBg,null,outerBounds,paint);$  int innerSize=outerSize - 2 * padding;$  int cornerRadius=Math.round(ICON_CORNER_RADIUS_RATIO * outerSize);$  int fontSize=Math.round(GENERATED_ICON_FONT_SIZE_RATIO * outerSize);$  int color=Color.rgb(red,green,blue);$  RoundedIconGenerator generator=new RoundedIconGenerator(innerSize,innerSize,cornerRadius,color,fontSize);$  Bitmap icon=generator.generateIconForUrl(url);$  if (icon == null)   return null;$  canvas.drawBitmap(icon,padding,padding,null);$  return bitmap;$}$
public static Map<String,Object> removeCategoryMembersOfDiscProducts(DispatchContext dctx,Map<String,? extends Object> context){$  Delegator delegator=dctx.getDelegator();$  Timestamp nowTimestamp=UtilDateTime.nowTimestamp();$  Locale locale=(Locale)context.get("locale");$  String errMsg=null;$  try {$    EntityCondition condition=EntityCondition.makeCondition(UtilMisc.toList(EntityCondition.makeCondition("salesDiscontinuationDate",EntityOperator.NOT_EQUAL,null),EntityCondition.makeCondition("salesDiscontinuationDate",EntityOperator.LESS_THAN_EQUAL_TO,nowTimestamp)),EntityOperator.AND);$    EntityListIterator eli=EntityQuery.use(delegator).from("Product").where(condition).queryIterator();$    GenericValue product=null;$    int numSoFar=0;$    while ((product=eli.next()) != null) {$      String productId=product.getString("productId");$      List<GenericValue> productCategoryMemberList=EntityQuery.use(delegator).from("ProductCategoryMember").where("productId",productId).queryList();$      if (productCategoryMemberList.size() > 0) {$        for (        GenericValue productCategoryMember : productCategoryMemberList) {$          productCategoryMember.remove();$        }$        numSoFar++;$        if (numSoFar % 500 == 0) {$          Debug.logInfo("Removed category members for " + numSoFar + " sales discontinued products.",module);$        }$      }$    }$    eli.close();$    Debug.logInfo("Completed - Removed category members for " + numSoFar + " sales discontinued products.",module);$  }$ catch (  GenericEntityException e) {$    Map<String,String> messageMap=UtilMisc.toMap("errMessage",e.toString());$    errMsg=UtilProperties.getMessage(resourceError,"productutilservices.entity_error_running_removeCategoryMembersOfDiscProducts",messageMap,locale);$    Debug.logError(e,errMsg,module);$    return ServiceUtil.returnError(errMsg);$  }$  return ServiceUtil.returnSuccess();$}$
@Override public void onCreate(Bundle icicle){$  super.onCreate(icicle);$  setContentView(R.layout.slice_fileselect);$  listView=(ListView)findViewById(R.id.listView);$  boolean bBrowseToRoot=true;$  Bundle extras=getIntent().getExtras();$  if (extras != null) {$    msPathSelectedFile=extras.getString(PATH_FILE_IN_ID);$    if (!msPathSelectedFile.equals("")) {$      File CurrentFile=new File(msPathSelectedFile);$      if (CurrentFile != null && CurrentFile.exists()) {$        if (CurrentFile.getParent() != null) {$          this.browseTo(CurrentFile.getParentFile());$          bBrowseToRoot=false;$        }$      }$    }$  }$  if (bBrowseToRoot == true)   browseToRoot();$  listView.setSelection(0);$  listView.setOnItemClickListener(this);$}$
public String upload_appender_file1(String group_name,long file_size,UploadCallback callback,String file_ext_name,NameValuePair[] meta_list) throws IOException, MyException {$  String parts[]=this.upload_appender_file(group_name,file_size,callback,file_ext_name,meta_list);$  if (parts != null) {$    return parts[0] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts[1];$  }$ else {$    return null;$  }$}$
private long timeSinceLastPrecacheMs(Context context){$  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);$  long lastPrecacheTimeMs=prefs.getLong(PREF_PRECACHE_LAST_TIME,-WAIT_UNTIL_NEXT_PRECACHE_MS);$  return getElapsedRealtimeOnSystem() - lastPrecacheTimeMs;$}$
public static boolean isUSPhoneNumber(String s){$  if (isEmpty(s))   return defaultEmptyOK;$  String normalizedPhone=stripCharsInBag(s,phoneNumberDelimiters);$  return (isInteger(normalizedPhone) && normalizedPhone.length() == digitsInUSPhoneNumber);$}$
UnicodeEscapesDecodingReader(Reader reader){$  if (reader == null) {$    throw new NullPointerException("reader is null");$  }$  this.reader=reader;$}$
public FriendsGetQuery(VkApiClient client){$  super(client,"friends.get",GetResponse.class);$}$
private String stripTags(String content){$  return Jsoup.parse(content).text();$}$
public static SM_SYSTEM_MESSAGE STR_GUILD_EVENT_WIN_FIELDARTIFACT(String value1,String value0,String value2){$  return new SM_SYSTEM_MESSAGE(1400301,value1,value0,value2);$}$
private int start(){$  if ((this.status == AccelListener.RUNNING) || (this.status == AccelListener.STARTING)) {$    startTimeout();$    return this.status;$  }$  this.setStatus(AccelListener.STARTING);$  List<Sensor> list=this.sensorManager.getSensorList(Sensor.TYPE_ACCELEROMETER);$  if ((list != null) && (list.size() > 0)) {$    this.mSensor=list.get(0);$    if (this.sensorManager.registerListener(this,this.mSensor,SensorManager.SENSOR_DELAY_UI)) {$      this.setStatus(AccelListener.STARTING);$    }$ else {$      this.setStatus(AccelListener.ERROR_FAILED_TO_START);$      this.fail(AccelListener.ERROR_FAILED_TO_START,"Device sensor returned an error.");$      return this.status;$    }$    ;$  }$ else {$    this.setStatus(AccelListener.ERROR_FAILED_TO_START);$    this.fail(AccelListener.ERROR_FAILED_TO_START,"No sensors found to register accelerometer listening to.");$    return this.status;$  }$  startTimeout();$  return this.status;$}$
static void calcConsole(){$  Scanner read=new Scanner(System.in);$  System.out.println("Enter separated by space: Integer [+|-|*|/] Integer");$  int first=read.nextInt();$  String operator=read.next();$  int second=read.nextInt();$switch (operator) {$case "+":$    System.out.println("= " + (first + second));$  break;$case "-":$System.out.println("= " + (first - second));$break;$case "*":$System.out.println("= " + (first * second));$break;$case "/":$if (second != 0) {$System.out.println("= " + (first / second));$}$ else {$System.out.println("Error: Division by zero");$}$break;$default :$System.out.println("Error: Undefined operation");$}$}$
public static void init(String conf_filename) throws FileNotFoundException, IOException, MyException {$  IniFileReader iniReader;$  String[] szTrackerServers;$  String[] parts;$  iniReader=new IniFileReader(conf_filename);$  g_connect_timeout=iniReader.getIntValue("connect_timeout",DEFAULT_CONNECT_TIMEOUT);$  if (g_connect_timeout < 0) {$    g_connect_timeout=DEFAULT_CONNECT_TIMEOUT;$  }$  g_connect_timeout*=1000;$  g_network_timeout=iniReader.getIntValue("network_timeout",DEFAULT_NETWORK_TIMEOUT);$  if (g_network_timeout < 0) {$    g_network_timeout=DEFAULT_NETWORK_TIMEOUT;$  }$  g_network_timeout*=1000;$  g_charset=iniReader.getStrValue("charset");$  if (g_charset == null || g_charset.length() == 0) {$    g_charset="ISO8859-1";$  }$  szTrackerServers=iniReader.getValues("tracker_server");$  if (szTrackerServers == null) {$    throw new MyException("item \"tracker_server\" in " + conf_filename + " not found");$  }$  InetSocketAddress[] tracker_servers=new InetSocketAddress[szTrackerServers.length];$  for (int i=0; i < szTrackerServers.length; i++) {$    parts=szTrackerServers[i].split("\\:",2);$    if (parts.length != 2) {$      throw new MyException("the value of item \"tracker_server\" is invalid, the correct format is host:port");$    }$    tracker_servers[i]=new InetSocketAddress(parts[0].trim(),Integer.parseInt(parts[1].trim()));$  }$  g_tracker_group=new TrackerGroup(tracker_servers);$  g_tracker_http_port=iniReader.getIntValue("http.tracker_http_port",80);$  g_anti_steal_token=iniReader.getBoolValue("http.anti_steal_token",false);$  if (g_anti_steal_token) {$    g_secret_key=iniReader.getStrValue("http.secret_key");$  }$}$
public void onSaveInstanceState(Bundle outState){$  outState.putInt(CURRENT_SELECTED_ITEM_BUNDLE_KEY,currentSelectedItem);$  outState.putInt(CENTRE_BUTTON_ICON_KEY,centreButtonIcon);$  outState.putInt(SPACE_BACKGROUND_COLOR_KEY,spaceBackgroundColor);$  outState.putBoolean(BADGE_FULL_TEXT_KEY,shouldShowBadgeWithNinePlus);$  if (badgeSaveInstanceHashMap.size() > 0)   outState.putSerializable(BUDGES_ITEM_BUNDLE_KEY,badgeSaveInstanceHashMap);$  if (changedItemAndIconHashMap.size() > 0)   outState.putSerializable(CHANGED_ICON_AND_TEXT_BUNDLE_KEY,changedItemAndIconHashMap);$}$
public void addGatingSequences(Sequence... gatingSequences){$  sequencer.addGatingSequences(gatingSequences);$}$
public boolean typedEquals(IdentifiableObject other){$  if (other == null) {$    return false;$  }$  if (getUid() != null ? !getUid().equals(other.getUid()) : other.getUid() != null) {$    return false;$  }$  if (getCode() != null ? !getCode().equals(other.getCode()) : other.getCode() != null) {$    return false;$  }$  if (getName() != null ? !getName().equals(other.getName()) : other.getName() != null) {$    return false;$  }$  return true;$}$
public void recover(long cookie,LogRecord rec) throws LogException {$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.entering(TxnManagerImpl.class.getName(),"recover",new Object[]{new Long(cookie),rec});$  }$  TxnManagerTransaction tmt=enterTMT(cookie);$  TxnLogRecord trec=(TxnLogRecord)rec;$  trec.recover(tmt);$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.exiting(TxnManagerImpl.class.getName(),"recover");$  }$}$
public static boolean shouldUseOpaqueTextboxBackground(int color){$  return getLightnessForColor(color) > LIGHTNESS_OPAQUE_BOX_THRESHOLD;$}$
public boolean isAltDown(){$  return mIsAltDown;$}$
public static PolynomialCluster[] train(Polynomial[] polynomials,KMeansClusteringTrainerParams kmeansParams){$  int[] totalObservationsInClusters;$  int[] clusterIndices;$  int observations=polynomials.length;$  int polynomialOrder=polynomials[0].getOrder();$  Polynomial[] m_new=new Polynomial[kmeansParams.numClusters];$  boolean[][] b=new boolean[observations][kmeansParams.numClusters];$  boolean[][] b_old=new boolean[observations][kmeansParams.numClusters];$  Polynomial[] clusterMeans=new Polynomial[kmeansParams.numClusters];$  for (int k=0; k < kmeansParams.numClusters; k++)   clusterMeans[k]=new Polynomial(polynomialOrder);$  for (int t=1; t <= observations; t++) {$    Arrays.fill(b[t - 1],false);$  }$  Polynomial mAll=Polynomial.mean(polynomials);$  double[] dists=new double[observations];$  double[] tmp=new double[kmeansParams.numClusters + 1];$  for (int k=1; k <= kmeansParams.numClusters; k++) {$    for (int t=1; t <= observations; t++) {$      if (k > 1) {$        for (int i=1; i <= k - 1; i++) {$          tmp[i - 1]=clusterMeans[i - 1].polynomialDistance(polynomials[t - 1]);$        }$        tmp[k - 1]=mAll.polynomialDistance(polynomials[t - 1]);$        dists[t - 1]=MathUtils.mean(tmp,0,k - 1);$      }$ else {$        dists[t - 1]=mAll.polynomialDistance(polynomials[t - 1]);$      }$    }$    double maxD=Double.MIN_VALUE;$    int maxInd=-1;$    for (int t=1; t <= observations; t++) {$      if (dists[t - 1] > maxD) {$        maxD=dists[t - 1];$        maxInd=t;$      }$    }$    clusterMeans[k - 1].copyCoeffs(polynomials[maxInd - 1]);$  }$  int[] tinyClusterInds=new int[kmeansParams.numClusters];$  int numTinyClusters=0;$  totalObservationsInClusters=new int[kmeansParams.numClusters];$  clusterIndices=new int[observations];$  int iter=0;$  boolean bCont=true;$  while (bCont) {$    for (int t=1; t <= observations; t++) {$      double minDist=Double.MAX_VALUE;$      int ind=-1;$      for (int i=1; i <= kmeansParams.numClusters; i++) {$        double tmpDist=clusterMeans[i - 1].polynomialDistance(polynomials[t - 1]);$        b[t - 1][i - 1]=false;$        if (tmpDist < minDist) {$          minDist=tmpDist;$          ind=i;$        }$      }$      b[t - 1][ind - 1]=true;$    }$    for (int i=1; i <= kmeansParams.numClusters; i++) {$      totalObservationsInClusters[i - 1]=0;$      tinyClusterInds[i - 1]=0;$    }$    int c=1;$    for (int i=1; i <= kmeansParams.numClusters; i++) {$      m_new[i - 1]=new Polynomial(polynomialOrder);$      for (int t=1; t <= observations; t++) {$        if (b[t - 1][i - 1]) {$          for (int d=0; d <= polynomialOrder; d++)           m_new[i - 1].coeffs[d]+=polynomials[t - 1].coeffs[d];$          clusterIndices[t - 1]=i - 1;$          (totalObservationsInClusters[i - 1])++;$        }$      }$      if ((double)totalObservationsInClusters[i - 1] < kmeansParams.minSamplesInOneCluster) {$        tinyClusterInds[c - 1]=i;$        numTinyClusters++;$        c++;$      }$    }$    c=0;$    double[] tmps=new double[totalObservationsInClusters.length];$    for (int a=0; a < tmps.length; a++) {$      tmps[a]=totalObservationsInClusters[a];$    }$    int[] inds=MathUtils.quickSort(tmps,0,kmeansParams.numClusters - 1);$    for (int i=1; i <= kmeansParams.numClusters; i++) {$      if (totalObservationsInClusters[i - 1] >= kmeansParams.minSamplesInOneCluster) {$        for (int d=0; d <= polynomialOrder; d++) {$          clusterMeans[i - 1].coeffs[d]=m_new[i - 1].coeffs[d] / totalObservationsInClusters[i - 1];$        }$      }$ else {$        for (int d=0; d <= polynomialOrder; d++) {$          double rnd=2 * (Math.random() - 0.5) * clusterMeans[inds[kmeansParams.numClusters - c - 1]].coeffs[d]* 0.01;$          clusterMeans[i - 1].coeffs[d]=clusterMeans[inds[kmeansParams.numClusters - c - 1]].coeffs[d] + rnd;$        }$        c++;$      }$    }$    int[] prev_totals=totalObservationsInClusters.clone();$    iter++;$    int totChanged=0;$    if (iter > 1) {$      if (iter >= kmeansParams.maxIterations) {$        bCont=false;$      }$      for (int t=1; t <= observations; t++) {$        for (int i=1; i <= kmeansParams.numClusters; i++) {$          if (b_old[t - 1][i - 1] != b[t - 1][i - 1]) {$            totChanged++;$            break;$          }$        }$      }$      double changedPerc=(double)totChanged / observations * 100.0;$      if (changedPerc < kmeansParams.minClusterChangePercent) {$        bCont=false;$      }$    }$    for (int t=1; t <= observations; t++) {$      System.arraycopy(b[t - 1],0,b_old[t - 1],0,b[t - 1].length);$    }$  }$  PolynomialCluster[] clusters=new PolynomialCluster[kmeansParams.numClusters];$  for (int i=1; i <= kmeansParams.numClusters; i++) {$    Polynomial[] members=new Polynomial[totalObservationsInClusters[i - 1]];$    int m=0;$    for (int t=1; t <= observations; t++) {$      if (b[t - 1][i - 1]) {$        members[m]=polynomials[t - 1];$        m++;$      }$    }$    assert m == members.length;$    clusters[i - 1]=new PolynomialCluster(clusterMeans[i - 1],members);$  }$  return clusters;$}$
public Window(Collection<String> words,int windowSize,int begin,int end){$  if (words == null)   throw new IllegalArgumentException("Words must be a list of size 3");$  this.words=new ArrayList<>(words);$  int windowSize1=windowSize;$  this.begin=begin;$  this.end=end;$  initContext();$}$
static <ParameterType>void checkParameterArrayIsNotNull(final String parameterName,final ParameterType[] parameterValues){$  checkParameterIsNotNull(parameterName,parameterValues);$  if (parameterValues.length == 0) {$    throw new IllegalArgumentException(parameterName + " cannot be empty.");$  }$  for (  final ParameterType parameterValue : parameterValues) {$    if (parameterValue == null) {$      throw new IllegalArgumentException(parameterName + " cannot contain null.");$    }$  }$}$
public static String toString(final int intValue){$  return Integer.toHexString(intValue);$}$
public void testWriteReadFull() throws Exception {$  ByteArrayOutputStream out=new ByteArrayOutputStream(0);$  ObjectOutputStream os=new ObjectOutputStream(out);$  os.writeObject(full);$  ObjectInputStream is=new ObjectInputStream(new ByteArrayInputStream(out.toByteArray()));$  LoadBalancingPolicy copy=(LoadBalancingPolicy)is.readObject();$  is.close();$  os.close();$  assertTrue(helper.areEquals(full,copy));$}$
public static Timestamp stringToTimeStamp(String dateTimeString,String dateTimeFormat,TimeZone tz,Locale locale) throws ParseException {$  DateFormat dateFormat=toDateTimeFormat(dateTimeFormat,tz,locale);$  Date parsedDate=dateFormat.parse(dateTimeString);$  return new Timestamp(parsedDate.getTime());$}$
public final int hashCode(){$  if (toString() == null) {$    return 0;$  }$  return toString().hashCode();$}$
synchronized void unregisterToNotifications() throws JMSException {$  if (eventSession == null) {$    return;$  }$  if (_logger.isLoggable(Level.FINE)) {$    _logger.log(Level.FINE,toString2() + "GSMessageConsumerImpl.unregisterToNotifications(): unregistering from notifications");$  }$  try {$    eventSession.close();$  }$ catch (  IOException e) {$    if (_logger.isLoggable(Level.FINE)) {$      _logger.log(Level.FINE,toString2() + "GSMessageConsumerImpl.stopAsynchronous(): IOException while closing event session" + e);$    }$    JMSException e1=new JMSException("Failed to close event session.");$    e1.setLinkedException(e);$    throw e1;$  }$catch (  UnknownLeaseException e) {$    if (_logger.isLoggable(Level.FINE)) {$      _logger.log(Level.FINE,toString2() + "GSMessageConsumerImpl.stopAsynchronous(): UnknownLeaseException while closing event session" + e);$    }$    JMSException e1=new JMSException("Failed to close event session.");$    e1.setLinkedException(e);$    throw e1;$  }$catch (  Exception e) {$    if (_logger.isLoggable(Level.FINE)) {$      _logger.log(Level.FINE,toString2() + "GSMessageConsumerImpl.stopAsynchronous(): UnknownLeaseException while closing event session" + e);$    }$    JMSException e1=new JMSException("Failed to close event session.");$    e1.setLinkedException(e);$    throw e1;$  }$ finally {$    eventSession=null;$  }$}$
public Object nextEntity(char a) throws JSONException {$  StringBuilder sb=new StringBuilder();$  for (; ; ) {$    char c=next();$    if (Character.isLetterOrDigit(c) || c == '#') {$      sb.append(Character.toLowerCase(c));$    }$ else     if (c == ';') {$      break;$    }$ else {$      throw syntaxError("Missing ';' in XML entity: &" + sb);$    }$  }$  String s=sb.toString();$  Object e=entity.get(s);$  return e != null ? e : a + s + ";";$}$
public PointList(int dimension,int capacity) throws IllegalArgumentException {$  if (dimension < 1)   throw new IllegalArgumentException("the dimension must be at least one");$  if (capacity < 1)   throw new IllegalArgumentException("the initial capacity must be at least one");$  this.data=new Matrix[capacity];$  this.dimension=dimension;$  this.min=new double[dimension];$  this.max=new double[dimension];$  this.sum=new Matrix(dimension,1);$  this.squaredSum=new Matrix(dimension,1);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_A_TO_SELF(String skillcaster,int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200849,skillcaster,num0,skillname);$}$
public void init$Children(){$}$
public BKLogSegmentWriter startLogSegment(long txId) throws IOException {$  return startLogSegment(txId,false,false);$}$
public synchronized void flush() throws IOException {$  checkNotClosed();$  trimToSize();$  journalWriter.flush();$}$
private boolean isWidgetNewlyCreated(){$  long currentFolder=mPreferences.getLong(STATE_CURRENT_FOLDER,ChromeBrowserProviderClient.INVALID_BOOKMARK_ID);$  return currentFolder == ChromeBrowserProviderClient.INVALID_BOOKMARK_ID;$}$
public IntDataType(byte[] buf){$  if (buf.length != this.getSize()) {$    throw new DataTypeException("Wrong size buffer for int");$  }$  this.i=ByteBuffer.wrap(buf).getInt();$}$
public boolean isApplicable(){$  return true;$}$
public boolean isReWrittenEntry(String uid){$  return _reWrittenEntries != null && _reWrittenEntries.containsKey(uid);$}$
public NewsfeedSearchQuery count(Integer value){$  return unsafeParam("count",value);$}$
@Override protected void parseOptimizationData(OptimizationData... optData){$  super.parseOptimizationData(optData);$  for (  OptimizationData data : optData) {$    if (data instanceof ObjectiveFunctionGradient) {$      gradient=((ObjectiveFunctionGradient)data).getObjectiveFunctionGradient();$      break;$    }$  }$}$
public void finish() throws IOException {$  if (out == null) {$    throw new IOException("Stream is closed");$  }$  if (cDir == null) {$    return;$  }$  if (entries.isEmpty()) {$    throw new ZipException("No entries");$  }$  if (currentEntry != null) {$    closeEntry();$  }$  int cdirEntriesSize=cDir.size();$  writeLongAsUint32(cDir,ENDSIG);$  writeIntAsUint16(cDir,0);$  writeIntAsUint16(cDir,0);$  if (archiveNeedsZip64EocdRecord) {$    writeIntAsUint16(cDir,0xFFFF);$    writeIntAsUint16(cDir,0xFFFF);$    writeLongAsUint32(cDir,0xFFFFFFFF);$    writeLongAsUint32(cDir,0xFFFFFFFF);$  }$ else {$    writeIntAsUint16(cDir,entries.size());$    writeIntAsUint16(cDir,entries.size());$    writeLongAsUint32(cDir,cdirEntriesSize);$    writeLongAsUint32(cDir,offset);$  }$  writeIntAsUint16(cDir,commentBytes.length);$  if (commentBytes.length > 0) {$    cDir.write(commentBytes);$  }$  cDir.writeTo(out);$  cDir=null;$}$
public void java_lang_Package_getSystemPackages0(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  helper.assignObjectTo(returnVar,Environment.v().getLeastArrayObject());$}$
@Override public boolean input(I input){$  if (getAvailableInputSlot() <= 0) {$    return false;$  }$  int bufferIndex=(int)(inputCnt % bufferSize);$  inputs.set(bufferIndex,input);$  inputCnt++;$  scheduleRun();$  return true;$}$
public T key(){$  return k;$}$
private boolean shouldIgnoreSelection(){$  return ignoreSelection;$}$
public void trim(double leftTrimSecond,double rightTrimSecond){$  int sampleRate=waveHeader.getSampleRate();$  int bitsPerSample=waveHeader.getBitsPerSample();$  int channels=waveHeader.getChannels();$  int leftTrimNumberOfSample=(int)(sampleRate * bitsPerSample / 8 * channels * leftTrimSecond);$  int rightTrimNumberOfSample=(int)(sampleRate * bitsPerSample / 8 * channels * rightTrimSecond);$  trim(leftTrimNumberOfSample,rightTrimNumberOfSample);$}$
public double tTest(final double mu,final StatisticalSummary sampleStats) throws MathIllegalArgumentException, NullArgumentException, MathIllegalStateException {$  checkSampleData(sampleStats);$  return tTest(sampleStats.getMean(),mu,sampleStats.getVariance(),sampleStats.getN());$}$
public void clearAll(){$  if (items != null) {$    items.clear();$  }$  if (emptyItems != null) {$    emptyItems.clear();$  }$}$
public void addResource(InputStream in){$  addResourceObject(in);$}$
public MultipartParser(HttpRequest req,int maxSize,boolean buffer,boolean limitLength) throws IOException {$  this(req,maxSize,buffer,limitLength,null);$}$
public void testQueryExcludeSubtasksSorted() throws Exception {$  TaskQuery query=taskService.createTaskQuery().orderByTaskAssignee().asc();$  assertEquals(10,query.count());$  assertEquals(10,query.list().size());$  query=taskService.createTaskQuery().excludeSubtasks().orderByTaskAssignee().desc();$  assertEquals(3,query.count());$  assertEquals(3,query.list().size());$}$
private static boolean nsEquals(String nsURI_1,String nsURI_2){$  if (nsURI_1 == null) {$    return (nsURI_2 == null);$  }$ else {$    return nsURI_1.equals(nsURI_2);$  }$}$
public static <T>Observable<T> whileDo(ObservableSource<? extends T> source,BooleanSupplier preCondition){$  ObjectHelper.requireNonNull(source,"source is null");$  ObjectHelper.requireNonNull(preCondition,"preCondition is null");$  return RxJavaPlugins.onAssembly(new ObservableWhileDoWhile<T>(source,preCondition,preCondition));$}$
public static final List bubbleSortVerticesByStringLength(List l){$  boolean bChanged=true;$  while (bChanged) {$    bChanged=false;$    for (int iCnt=0; iCnt < l.size() - 1; iCnt++) {$      if ((l.get(iCnt + 1).toString()).length() > (l.get(iCnt).toString()).length()) {$        VertexImpl vTmp=(VertexImpl)(l.get(iCnt + 1));$        l.set(iCnt + 1,l.get(iCnt));$        l.set(iCnt,vTmp);$        bChanged=true;$      }$    }$  }$  return l;$}$
protected boolean atToken(TokenKind kind){$  return currentToken() == kind;$}$
public String process(Item word) throws ProcessException {$  return wordBreak(word);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_SCORE_ALARM(int num0){$  return new SM_SYSTEM_MESSAGE(1400236,num0);$}$
private Object invokeLRMIProxy(final IMethod method,Object[] args) throws Exception {$  return method.invoke(this,args);$}$
public ViewBinder linkify(int viewId){$  TextView view=retrieveView(viewId);$  Linkify.addLinks(view,Linkify.ALL);$  return this;$}$
public boolean isPublic(){$  return Modifier.isPublic(this.getModifiers());$}$
protected void writeEntityToNBT(NBTTagCompound compound){$  compound.setShort("Fuse",(short)this.getFuse());$  compound.setByte("Facing",(byte)this.getFacing().getIndex());$}$
public static boolean attemptSmelting(EntityPlayerMP player,ItemStack input){$  if (player == null || input == null)   return false;$  List<ItemStack> ingredients=new ArrayList<ItemStack>();$  ingredients.add(input);$  ItemStack isOutput=(ItemStack)FurnaceRecipes.instance().getSmeltingList().get(input);$  if (isOutput == null)   return false;$  int cookingTime=200;$  if (playerHasIngredients(player,ingredients) && totalBurnTimeInInventory(player) >= cookingTime) {$    removeIngredientsFromPlayer(player,ingredients);$    burnInventory(player,cookingTime,input);$    ItemStack resultForInventory=isOutput.copy();$    ItemStack resultForReward=isOutput.copy();$    player.inventory.addItemStackToInventory(resultForInventory);$    RewardForCollectingItemImplementation.GainItemEvent event=new RewardForCollectingItemImplementation.GainItemEvent(resultForReward);$    MinecraftForge.EVENT_BUS.post(event);$    return true;$  }$  return false;$}$
public static final void addPlayer(PlayerAlliance alliance,Player player){$  Preconditions.checkNotNull(alliance,"Alliance should not be null");$  alliance.onEvent(new PlayerEnteredEvent(alliance,player));$}$
public void init$Children(){$  children=new ASTNode[2];$}$
public static String join(String... paths){$  return PATH_JOINER.join(paths);$}$
private void onGoogleAuthBtnClicked(final ActionEvent ignored){$  final LoginData loginData=new LoginData();$  if (configLoginData.hasToken()) {$    loginData.setToken(configLoginData.getToken());$    loginData.setSavedToken(true);$  }$ else {$    loginData.setToken(tokenField.getText());$  }$  loginData.setLoginType(LoginType.GOOGLE_AUTH);$  tryLogin(loginData);$}$
public static boolean isBoundsEnabled(){$  return boundsEnabled;$}$
static Object createObject(String factoryId,String propertiesFilename,String fallbackClassName) throws ConfigurationError {$  if (DEBUG)   debugPrintln("debug is on");$  ClassLoader cl=findClassLoader();$  try {$    String systemProp=SecuritySupport.getSystemProperty(factoryId);$    if (systemProp != null && systemProp.length() > 0) {$      if (DEBUG)       debugPrintln("found system property, value=" + systemProp);$      return newInstance(systemProp,cl,true);$    }$  }$ catch (  SecurityException se) {$  }$  String factoryClassName=null;$  if (propertiesFilename == null) {$    File propertiesFile=null;$    boolean propertiesFileExists=false;$    try {$      String javah=SecuritySupport.getSystemProperty("java.home");$      propertiesFilename=javah + File.separator + "lib"+ File.separator+ DEFAULT_PROPERTIES_FILENAME;$      propertiesFile=new File(propertiesFilename);$      propertiesFileExists=SecuritySupport.getFileExists(propertiesFile);$    }$ catch (    SecurityException e) {$      fLastModified=-1;$      fXercesProperties=null;$    }$synchronized (ObjectFactory.class) {$      boolean loadProperties=false;$      FileInputStream fis=null;$      try {$        if (fLastModified >= 0) {$          if (propertiesFileExists && (fLastModified < (fLastModified=SecuritySupport.getLastModified(propertiesFile)))) {$            loadProperties=true;$          }$ else {$            if (!propertiesFileExists) {$              fLastModified=-1;$              fXercesProperties=null;$            }$          }$        }$ else {$          if (propertiesFileExists) {$            loadProperties=true;$            fLastModified=SecuritySupport.getLastModified(propertiesFile);$          }$        }$        if (loadProperties) {$          fXercesProperties=new Properties();$          fis=SecuritySupport.getFileInputStream(propertiesFile);$          fXercesProperties.load(fis);$        }$      }$ catch (      Exception x) {$        fXercesProperties=null;$        fLastModified=-1;$      }$ finally {$        if (fis != null) {$          try {$            fis.close();$          }$ catch (          IOException exc) {$          }$        }$      }$    }$    if (fXercesProperties != null) {$      factoryClassName=fXercesProperties.getProperty(factoryId);$    }$  }$ else {$    FileInputStream fis=null;$    try {$      fis=SecuritySupport.getFileInputStream(new File(propertiesFilename));$      Properties props=new Properties();$      props.load(fis);$      factoryClassName=props.getProperty(factoryId);$    }$ catch (    Exception x) {$    }$ finally {$      if (fis != null) {$        try {$          fis.close();$        }$ catch (        IOException exc) {$        }$      }$    }$  }$  if (factoryClassName != null) {$    if (DEBUG)     debugPrintln("found in " + propertiesFilename + ", value="+ factoryClassName);$    return newInstance(factoryClassName,cl,true);$  }$  Object provider=findJarServiceProvider(factoryId);$  if (provider != null) {$    return provider;$  }$  if (fallbackClassName == null) {$    throw new ConfigurationError("Provider for " + factoryId + " cannot be found",null);$  }$  if (DEBUG)   debugPrintln("using fallback, value=" + fallbackClassName);$  return newInstance(fallbackClassName,cl,true);$}$
public CreatePageWindow openCreatePageWindow(){$  bobcatWait.withTimeout(Timeouts.BIG).until(null,2);$  return createPageWindow;$}$
@deprecated public char last(){$  if (this.end != this.begin) {$    this.pos=(this.end - 1);$  }$ else {$    this.pos=this.end;$  }$  return current();$}$
public boolean equalStranded(IntervalFeature x){$  if (x == null) {$    return false;$  }$  return (this.chrom.equals(x.chrom) && this.from == x.from && this.to == x.to && this.strand == x.strand);$}$
public static boolean writeFile(File file,InputStream stream){$  return writeFile(file,stream,false);$}$
public List<Writable> execute(List<Writable> input){$  List<Writable> currValues=input;$  for (  DataAction d : actionList) {$    if (d.getTransform() != null) {$      Transform t=d.getTransform();$      currValues=t.map(currValues);$    }$ else     if (d.getFilter() != null) {$      Filter f=d.getFilter();$      if (f.removeExample(currValues))       return null;$    }$ else     if (d.getConvertToSequence() != null) {$      throw new RuntimeException("Cannot execute examples individually: TransformProcess contains a ConvertToSequence operation");$    }$ else     if (d.getConvertFromSequence() != null) {$      throw new RuntimeException("Unexpected operation: TransformProcess contains a ConvertFromSequence operation");$    }$ else     if (d.getSequenceSplit() != null) {$      throw new RuntimeException("Cannot execute examples individually: TransformProcess contains a SequenceSplit operation");$    }$ else {$      throw new RuntimeException("Unknown action: " + d);$    }$  }$  return currValues;$}$
@Override public void onResults(Bundle bundle){$  ArrayList<String> matches=bundle.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION);$  for (  String result : matches)   Log.i(TAG,"A FINAL RESULTS: " + result);$  etQuestion.setText(matches.get(0));$}$
public static boolean isValidNmtoken(String nmtoken){$  final int length=nmtoken.length();$  if (length == 0) {$    return false;$  }$  for (int i=0; i < length; ++i) {$    char ch=nmtoken.charAt(i);$    if (!isName(ch)) {$      return false;$    }$  }$  return true;$}$
public int addChildEdge(int parent,int child){$  return super.addEdge(parent,child);$}$
public MarketGetByIdQuery(VkApiClient client,UserActor actor,List<String> itemIds){$  super(client,"market.getById",GetByIdResponse.class);$  accessToken(actor.getAccessToken());$  itemIds(itemIds);$}$
public static _Fields findByThriftId(int fieldId){$switch (fieldId) {$case 1:$    return MESSAGE_TYPE;$case 2:$  return REQUEST_INFO;$case 3:$return RESPONSE_INFO;$case 4:$return TRACE_INFO;$case 5:$return GLOBAL_CONTEXT;$case 6:$return LOCAL_CONTEXT;$case 7:$return HEARTBEAT_INFO;$default :$return null;$}$}$
public AwsIotCompletion(String topic,AWSIotQos qos,long timeout){$  super(topic,qos);$  this.timeout=timeout;$  this.request=null;$  this.isAsync=false;$}$
@Override public void undoAction(UndoInterface undoRedoObject){$  if (groupCheckbox != null) {$    Boolean oldValue=(Boolean)undoRedoObject.getOldValue();$    groupCheckbox.setSelected(oldValue.booleanValue());$    enableSubGroups(oldValue.booleanValue());$  }$}$
public Boolean createProductCategory(EntityManager em,String productCategory){$  Boolean status=true;$  ProductCategory prodcat=null;$  try {$    if (!em.getTransaction().isActive()) {$      em.getTransaction().begin();$    }$    prodcat=new ProductCategory();$    prodcat.setCategory(productCategory);$    prodcat.setCategoryName(productCategory);$    em.persist(prodcat);$    em.getTransaction().commit();$  }$ catch (  Exception e) {$    status=false;$    logger.error("Error occured during creation of Product category . Detailed info: " + e);$  }$  return status;$}$
public Bundler putCharSequence(String key,CharSequence value){$  bundle.putCharSequence(key,value);$  return this;$}$
public static Matrix random(int m,int n){$  Matrix A=new Matrix(m,n);$  double[][] X=A.getArray();$  for (int i=0; i < m; i++) {$    for (int j=0; j < n; j++) {$      X[i][j]=Math.random();$    }$  }$  return A;$}$
private void adjustBottomByAspectRatio(RectF rect,float aspectRatio){$  rect.bottom=rect.top + rect.width() / aspectRatio;$}$
public int size(){$  return elements.size();$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Slow_ME_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200467,skilltarget,skillcaster,skillname);$}$
@Override public int[] startContentModel(){$  int[] state=new int[fNumElements + 1];$  for (int i=0; i <= fNumElements; i++) {$    state[i]=STATE_START;$  }$  return state;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Fear_END_A_TO_SELF(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200751,skilltarget);$}$
protected boolean confirmCommit(IResource[] modifiedResources,ProjectProperties projectProperties) throws SVNException {$  IPreferenceStore preferenceStore=SVNUIPlugin.getPlugin().getPreferenceStore();$  boolean commitToTagsPathWithoutWarning=preferenceStore.getBoolean(ISVNUIConstants.PREF_COMMIT_TO_TAGS_PATH_WITHOUT_WARNING);$  if (!commitToTagsPathWithoutWarning && onTagPath(modifiedResources)) {$    CommitToTagsWarningDialog dialog=new CommitToTagsWarningDialog(getShell());$    if (dialog.open() != CommitToTagsWarningDialog.OK) {$      return false;$    }$  }$  int highestProblemSeverity=getHighestProblemSeverity(modifiedResources);$switch (highestProblemSeverity) {$case IMarker.SEVERITY_WARNING:$    String allowCommitsWithWarnings=preferenceStore.getString(ISVNUIConstants.PREF_ALLOW_COMMIT_WITH_WARNINGS);$  if (MessageDialogWithToggle.PROMPT.equals(allowCommitsWithWarnings) || MessageDialogWithToggle.NEVER.equals(allowCommitsWithWarnings)) {$    MessageDialogWithToggle warningDialog=MessageDialogWithToggle.openYesNoQuestion(shell,Policy.bind("CommitWizard.commitResources"),Policy.bind("CommitWizard.warningMarkers"),Policy.bind("CommitWizard.warningQuestion"),false,preferenceStore,ISVNUIConstants.PREF_ALLOW_COMMIT_WITH_WARNINGS);$    if (IDialogConstants.YES_ID != warningDialog.getReturnCode()) {$      return false;$    }$  }$break;$case IMarker.SEVERITY_ERROR:$String allowCommitsWithErrors=preferenceStore.getString(ISVNUIConstants.PREF_ALLOW_COMMIT_WITH_ERRORS);$if (MessageDialogWithToggle.PROMPT.equals(allowCommitsWithErrors) || MessageDialogWithToggle.NEVER.equals(allowCommitsWithErrors)) {$MessageDialogWithToggle errorDialog=MessageDialogWithToggle.openYesNoQuestion(shell,Policy.bind("CommitWizard.commitResources"),Policy.bind("CommitWizard.errorMarkers"),Policy.bind("CommitWizard.errorQuestion"),false,preferenceStore,ISVNUIConstants.PREF_ALLOW_COMMIT_WITH_ERRORS);$if (IDialogConstants.YES_ID != errorDialog.getReturnCode()) {$return false;$}$}$break;$}$SvnWizardCommitPage commitPage=new SvnWizardCommitPage(modifiedResources,url,projectProperties,statusMap,null,false);$SvnWizard wizard=new SvnWizard(commitPage);$SvnWizardDialog dialog=new SvnWizardDialog(getShell(),wizard);$if (proposedComment == null || proposedComment.length() == 0) {$commitPage.setComment(getProposedComment(modifiedResources));$}$ else {$commitPage.setComment(proposedComment);$}$wizard.setParentDialog(dialog);$boolean commitOK=(dialog.open() == SvnWizardDialog.OK);$url=null;$commitComment=commitPage.getComment();$resourcesToCommit=commitPage.getSelectedResources();$keepLocks=commitPage.isKeepLocks();$return commitOK;$}$
public FeatureVector[] featureVectorMapping(FeatureDefinition newFeatureDefinition){$  if (!this.featureDefinition.contains(newFeatureDefinition)) {$    throw new RuntimeException("the new feature definition is not a subset of original feature definition");$  }$  int numberOfFeatures=newFeatureDefinition.getNumberOfFeatures();$  int noByteFeatures=newFeatureDefinition.getNumberOfByteFeatures();$  int noShortFeatures=newFeatureDefinition.getNumberOfShortFeatures();$  int noContiniousFeatures=newFeatureDefinition.getNumberOfContinuousFeatures();$  if (numberOfFeatures != (noByteFeatures + noShortFeatures + noContiniousFeatures)) {$    throw new RuntimeException("The sum of byte, short and continious features are not equal to number of features");$  }$  String[] featureNames=new String[numberOfFeatures];$  for (int j=0; j < numberOfFeatures; j++) {$    featureNames[j]=newFeatureDefinition.getFeatureName(j);$  }$  int[] featureIndexes=featureDefinition.getFeatureIndexArray(featureNames);$  FeatureVector[] newFV=new FeatureVector[this.getNumberOfUnits()];$  for (int i=0; i < this.getNumberOfUnits(); i++) {$    byte[] byteFeatures=new byte[noByteFeatures];$    short[] shortFeatures=new short[noShortFeatures];$    float[] continiousFeatures=new float[noContiniousFeatures];$    int countByteFeatures=0;$    int countShortFeatures=0;$    int countFloatFeatures=0;$    for (int j=0; j < featureIndexes.length; j++) {$      if (newFeatureDefinition.isByteFeature(j)) {$        byteFeatures[countByteFeatures++]=featureVectors[i].getByteFeature(featureIndexes[j]);$      }$ else       if (newFeatureDefinition.isShortFeature(j)) {$        shortFeatures[countShortFeatures++]=featureVectors[i].getShortFeature(featureIndexes[j]);$      }$ else       if (newFeatureDefinition.isContinuousFeature(j)) {$        continiousFeatures[countFloatFeatures++]=featureVectors[i].getContinuousFeature(featureIndexes[j]);$      }$    }$    newFV[i]=newFeatureDefinition.toFeatureVector(i,byteFeatures,shortFeatures,continiousFeatures);$  }$  return newFV;$}$
public static <T>T[] readArray(Class<T> clazz,PacketBuffer buf,Function<PacketBuffer,T> reader){$  T[] value=(T[])Array.newInstance(clazz,buf.readInt());$  for (int i=0; i < value.length; i++) {$    value[i]=reader.apply(buf);$  }$  return value;$}$
public void addModule(Module module){$  if (module instanceof HttpAdapterAware) {$    ((HttpAdapterAware)module).setHttpAdapter(getHttpAdapter());$  }$  this.moduleRegistry.addModule(module);$}$
public boolean isUseCompression(){$  return useCompression;$}$
public boolean store(){$  try {$    prefs.sync();$    return true;$  }$ catch (  BackingStoreException ex) {$    LOGGER.log(Level.SEVERE,"Error saving preferences",ex);$  }$  return false;$}$
public static Executor createExecutor(int threadPoolSize,int threadPriority,QueueProcessingType tasksProcessingType){$  boolean lifo=tasksProcessingType == QueueProcessingType.LIFO;$  BlockingQueue<Runnable> taskQueue=lifo ? new LIFOLinkedBlockingDeque<Runnable>() : new LinkedBlockingQueue<Runnable>();$  return new ThreadPoolExecutor(threadPoolSize,threadPoolSize,0L,TimeUnit.MILLISECONDS,taskQueue,createThreadFactory(threadPriority,"uil-pool-"));$}$
public boolean skipString(String s) throws IOException {$  if (DEBUG_BUFFER) {$    System.out.print("(skipString, \"" + s + "\": ");$    XMLEntityManager.print(fCurrentEntity);$    System.out.println();$  }$  if (fCurrentEntity.position == fCurrentEntity.count) {$    load(0,true);$  }$  final int length=s.length();$  for (int i=0; i < length; i++) {$    char c=fCurrentEntity.ch[fCurrentEntity.position++];$    if (c != s.charAt(i)) {$      fCurrentEntity.position-=i + 1;$      if (DEBUG_BUFFER) {$        System.out.print(")skipString, \"" + s + "\": ");$        XMLEntityManager.print(fCurrentEntity);$        System.out.println(" -> false");$      }$      return false;$    }$    if (i < length - 1 && fCurrentEntity.position == fCurrentEntity.count) {$      System.arraycopy(fCurrentEntity.ch,fCurrentEntity.count - i - 1,fCurrentEntity.ch,0,i + 1);$      if (load(i + 1,false)) {$        fCurrentEntity.startPosition-=i + 1;$        fCurrentEntity.position-=i + 1;$        if (DEBUG_BUFFER) {$          System.out.print(")skipString, \"" + s + "\": ");$          XMLEntityManager.print(fCurrentEntity);$          System.out.println(" -> false");$        }$        return false;$      }$    }$  }$  if (DEBUG_BUFFER) {$    System.out.print(")skipString, \"" + s + "\": ");$    XMLEntityManager.print(fCurrentEntity);$    System.out.println(" -> true");$  }$  fCurrentEntity.columnNumber+=length;$  return true;$}$
public static void checkArgument(boolean expression){$  if (!expression) {$    throw new IllegalArgumentException();$  }$}$
public login(){$  frame=new JFrame();$  frame.getContentPane().setFont(new Font("Tahoma",Font.PLAIN,11));$  frame.setSize(6000,5000);$  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);$  frame.getContentPane().setLayout(null);$  JLabel lblNewLabel=new JLabel("Connect To The World :");$  lblNewLabel.setFont(new Font("Tahoma",Font.BOLD,40));$  lblNewLabel.setBounds(38,26,3290,42);$  frame.getContentPane().add(lblNewLabel);$  JLabel lblEmail=new JLabel("Email");$  lblEmail.setFont(new Font("Tahoma",Font.PLAIN,17));$  lblEmail.setBounds(101,288,129,31);$  frame.getContentPane().add(lblEmail);$  textField=new JTextField();$  textField.setFont(new Font("Tahoma",Font.PLAIN,17));$  textField.setBounds(345,290,221,28);$  frame.getContentPane().add(textField);$  textField.setColumns(10);$  JLabel lblPassword=new JLabel("Password");$  lblPassword.setFont(new Font("Tahoma",Font.PLAIN,17));$  lblPassword.setBounds(101,347,102,21);$  frame.getContentPane().add(lblPassword);$  passwordField=new JPasswordField();$  passwordField.setFont(new Font("Tahoma",Font.PLAIN,17));$  passwordField.setBounds(345,344,221,28);$  frame.getContentPane().add(passwordField);$  btnLogin=new JButton("Login");$  btnLogin.addActionListener(this);$  btnLogin.setFont(new Font("Tahoma",Font.PLAIN,18));$  btnLogin.setBounds(101,435,129,42);$  frame.getContentPane().add(btnLogin);$  JLabel lblOr=new JLabel("or");$  lblOr.setBounds(709,299,46,14);$  frame.getContentPane().add(lblOr);$  btnSignup=new JButton("SignUp");$  btnSignup.addActionListener(this);$  btnSignup.setFont(new Font("Tahoma",Font.PLAIN,25));$  btnSignup.setBounds(900,309,202,42);$  frame.getContentPane().add(btnSignup);$  JLabel lblLoginInExisting=new JLabel("Login existing account");$  lblLoginInExisting.setFont(new Font("Tahoma",Font.PLAIN,14));$  lblLoginInExisting.setBounds(101,238,210,21);$  frame.getContentPane().add(lblLoginInExisting);$  JLabel lblCreateNewAccount=new JLabel("Create New Account :");$  lblCreateNewAccount.setFont(new Font("Tahoma",Font.PLAIN,14));$  lblCreateNewAccount.setBounds(906,234,188,28);$  frame.getContentPane().add(lblCreateNewAccount);$}$
public void renewFor(Lease lease,long desiredDuration,long renewDuration,LeaseListener listener){$  validateDuration(renewDuration,desiredDuration == Lease.FOREVER,"desiredDuration");$  long now=SystemTime.timeMillis();$  long desiredExpiration;$  if (desiredDuration < Lease.FOREVER - now) {$    desiredExpiration=now + desiredDuration;$  }$ else {$    desiredExpiration=Lease.FOREVER;$  }$  addLease(lease,desiredExpiration,renewDuration,listener,now);$}$
@Override protected void drawLabels(Canvas c,float pos,PointF anchor){$  final float labelRotationAngleDegrees=mXAxis.getLabelRotationAngle();$  float[] position=new float[]{0f,0f};$  BarData bd=mChart.getData();$  int step=bd.getDataSetCount();$  for (int i=mMinX; i <= mMaxX; i+=mXAxis.mAxisLabelModulus) {$    position[1]=i * step + i * bd.getGroupSpace() + bd.getGroupSpace() / 2f;$    if (step > 1) {$      position[1]+=((float)step - 1f) / 2f;$    }$    mTrans.pointValuesToPixel(position);$    if (mViewPortHandler.isInBoundsY(position[1])) {$      String label=mXAxis.getValues().get(i);$      drawLabel(c,label,i,pos,position[1],anchor,labelRotationAngleDegrees);$    }$  }$}$
public void resetUploadSettings(){$  this.isUploading=false;$  this.uploadedSize=0;$  this.uploadData=null;$}$
private void expand(int i){$  if (count + i <= buf.length) {$    return;$  }$  byte[] newbuf=mPool.getBuf((count + i) * 2);$  System.arraycopy(buf,0,newbuf,0,count);$  mPool.returnBuf(buf);$  buf=newbuf;$}$
public H263Stream(int cameraId){$  super(cameraId);$  mCameraImageFormat=ImageFormat.NV21;$  mVideoEncoder=MediaRecorder.VideoEncoder.H263;$  mPacketizer=new H263Packetizer();$}$
Dict parse(Element element) throws XmlParseException {$  if (!"plist".equalsIgnoreCase(element.getNodeName())) {$    throw new XmlParseException("Expected plist top element, was: " + element.getNodeName());$  }$  Node n=element.getFirstChild();$  while (n != null && !n.getNodeName().equals("dict")) {$    n=n.getNextSibling();$  }$  Dict result=(Dict)parseElement(n);$  return result;$}$
public LeaseDeniedException(){$  super();$}$
@Override public void endPrefixMapping(String prefix) throws SAXException {$  return;$}$
public ImageLoader(int height,int width){$  super();$  this.height=height;$  this.width=width;$}$
public String timestamp(){$  float totalSeconds=this.length();$  float second=totalSeconds % 60;$  int minute=(int)totalSeconds / 60 % 60;$  int hour=(int)(totalSeconds / 3600);$  StringBuilder sb=new StringBuilder();$  if (hour > 0) {$    sb.append(hour + ":");$  }$  if (minute > 0) {$    sb.append(minute + ":");$  }$  sb.append(second);$  return sb.toString();$}$
public static boolean equalInterfaces(Object obj1,Object obj2){$  Class[] intf1=obj1.getClass().getInterfaces();$  Class[] intf2=obj2.getClass().getInterfaces();$  if (intf1.length != intf2.length) {$    return false;$  }$ else {$    for (int i=0; i < intf1.length; i++) {$      if (intf1[i] != intf2[i]) {$        return false;$      }$    }$    return true;$  }$}$
public static boolean shuffle(Object[] objArray){$  if (objArray == null) {$    return false;$  }$  return shuffle(objArray,getRandom(objArray.length));$}$
public CarouselOptions minQuantity(int minQuantity){$  mMinQuantity=minQuantity;$  return this;$}$
private void writeObject(ObjectOutputStream out) throws IOException {$  final Map oldUserData=this.userData;$  final Map oldNodeTable=this.nodeTable;$  try {$    if (oldUserData != null) {$      this.userData=new Hashtable(oldUserData);$    }$    if (oldNodeTable != null) {$      nodeTable=new Hashtable(oldNodeTable);$    }$    out.defaultWriteObject();$  }$  finally {$    this.userData=oldUserData;$    this.nodeTable=oldNodeTable;$  }$}$
public static Map<String,Object> badExpireEvenProcessor(DispatchContext dctx,Map<String,? extends Object> context){$  GenericValue creditCard=(GenericValue)context.get("creditCard");$  String expireDate=creditCard.getString("expireDate");$  String lastNumberStr=expireDate.substring(expireDate.length() - 1);$  int lastNumber=Integer.parseInt(lastNumberStr);$  if (lastNumber % 2.0 == 0.0) {$    return alwaysBadExpireProcessor(dctx,context);$  }$ else {$    return alwaysApproveProcessor(dctx,context);$  }$}$
public void addAllFiles(File[] files){$  for (  File f : files)   addEntry(f.getPath());$}$
public ChangePassword(String email){$  Email=email;$  System.out.println("change password" + Email);$  Name=sql_object.retunnNameByEmail(Email);$  System.out.println("change password" + Name);$  frame=new JFrame();$  frame.getContentPane().setFont(new Font("Tahoma",Font.PLAIN,17));$  frame.setSize(6000,5000);$  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);$  frame.getContentPane().setLayout(null);$  JLabel lblChangePassword=new JLabel("Change Password :");$  lblChangePassword.setFont(new Font("Tahoma",Font.BOLD,30));$  lblChangePassword.setBounds(125,11,359,64);$  frame.getContentPane().add(lblChangePassword);$  JButton btnNewButton=new JButton("Log Out");$  btnNewButton.addActionListener(this);$  btnNewButton.setFont(new Font("Tahoma",Font.PLAIN,17));$  btnNewButton.setBounds(1099,31,232,29);$  frame.getContentPane().add(btnNewButton);$  JButton btnMyAccount=new JButton("My Account");$  btnMyAccount.addActionListener(this);$  btnMyAccount.setFont(new Font("Tahoma",Font.PLAIN,17));$  btnMyAccount.setBounds(1099,90,232,29);$  frame.getContentPane().add(btnMyAccount);$  passwordField=new JPasswordField();$  passwordField.setFont(new Font("Tahoma",Font.PLAIN,17));$  passwordField.setBounds(438,217,177,29);$  frame.getContentPane().add(passwordField);$  JLabel lblOldPassword=new JLabel("Old Password");$  lblOldPassword.setFont(new Font("Tahoma",Font.PLAIN,17));$  lblOldPassword.setBounds(205,217,157,29);$  frame.getContentPane().add(lblOldPassword);$  JLabel lblNewPassword=new JLabel("New Password");$  lblNewPassword.setFont(new Font("Tahoma",Font.PLAIN,17));$  lblNewPassword.setBounds(205,301,157,29);$  frame.getContentPane().add(lblNewPassword);$  passwordField_1=new JPasswordField();$  passwordField_1.setFont(new Font("Tahoma",Font.PLAIN,17));$  passwordField_1.setBounds(438,301,177,29);$  frame.getContentPane().add(passwordField_1);$  JLabel lblConfirmPassword=new JLabel("Confirm Password");$  lblConfirmPassword.setFont(new Font("Tahoma",Font.PLAIN,17));$  lblConfirmPassword.setBounds(205,384,157,29);$  frame.getContentPane().add(lblConfirmPassword);$  passwordField_2=new JPasswordField();$  passwordField_2.setFont(new Font("Tahoma",Font.PLAIN,17));$  passwordField_2.setBounds(438,384,177,27);$  frame.getContentPane().add(passwordField_2);$  JButton btnNewButton_1=new JButton("Confirm");$  btnNewButton_1.addActionListener(this);$  btnNewButton_1.setFont(new Font("Tahoma",Font.PLAIN,17));$  btnNewButton_1.setBounds(540,484,205,38);$  frame.getContentPane().add(btnNewButton_1);$  JLabel lblNewLabel=new JLabel("Hi " + Name);$  lblNewLabel.setFont(new Font("Tahoma",Font.PLAIN,22));$  lblNewLabel.setBounds(642,31,232,55);$  frame.getContentPane().add(lblNewLabel);$}$
protected VideoGetCommentsQueryWithExtended extended(Boolean value){$  return unsafeParam("extended",value);$}$
public DocumentNGramDistroGraph intersectDistroGraph(DocumentNGramDistroGraph dgOtherGraph){$  DocumentNGramDistroGraph gRes=new DocumentNGramDistroGraph(MinSize,MaxSize,CorrelationWindow);$  EdgeCachedLocator ecLocator=new EdgeCachedLocator(10);$  EdgeCachedLocator ecNewLocator=new EdgeCachedLocator(10);$  for (int iCurLvl=MinSize; iCurLvl <= MaxSize; iCurLvl++) {$    UniqueVertexGraph gGraph=getGraphLevelByNGramSize(iCurLvl);$    UniqueVertexGraph gOtherGraph=dgOtherGraph.getGraphLevelByNGramSize(iCurLvl);$    UniqueVertexGraph gNewGraph=gRes.getGraphLevelByNGramSize(iCurLvl);$    if (gOtherGraph == null)     continue;$    java.util.Iterator iIter=gOtherGraph.getEdgeSet().iterator();$    while (iIter.hasNext()) {$      WeightedEdge weCurItem=(WeightedEdge)iIter.next();$      WeightedEdge eEdge=(WeightedEdge)ecLocator.locateDirectedEdgeInGraph(gGraph,weCurItem.getVertexA(),weCurItem.getVertexB());$      WeightedEdge weNewEdge=null;$      String sHead=weCurItem.getVertexA().getLabel();$      String sTail=weCurItem.getVertexB().getLabel();$      if (eEdge != null) {$        try {$          List l=new ArrayList();$          l.add(sTail);$          createWeightedEdgesConnecting(gNewGraph,sHead,l,eEdge.getWeight() + weCurItem.getWeight(),eEdge.getWeight() + weCurItem.getWeight(),1.0);$          weNewEdge=(WeightedEdge)gr.demokritos.iit.jinsect.utils.locateDirectedEdgeInGraph(gNewGraph,weCurItem.getVertexA(),weCurItem.getVertexB());$        }$ catch (        Exception e) {$          e.printStackTrace();$        }$        Distribution d1=(Distribution)this.EdgeDistros.get(eEdge);$        if (d1 == null)         d1=new Distribution();$        Distribution d2=(Distribution)dgOtherGraph.EdgeDistros.get(weCurItem);$        if (d2 == null)         d2=new Distribution();$        if (weNewEdge != null)         gRes.EdgeDistros.put(weNewEdge,d2.addTo(d1));$      }$    }$  }$  return gRes;$}$
private static byte[] streamToBytes(InputStream in,int length) throws IOException {$  byte[] bytes=new byte[length];$  int count;$  int pos=0;$  while (pos < length && ((count=in.read(bytes,pos,length - pos)) != -1)) {$    pos+=count;$  }$  if (pos != length) {$    throw new IOException("Expected " + length + " bytes, read "+ pos+ " bytes");$  }$  return bytes;$}$
@Override public final MaryData process(MaryData d) throws Exception {$  assert state == MODULE_RUNNING;$  Log.i(Mary.LOG,"Adding request");$  ExternalModuleRequest request=new ExternalModuleRequest(d);$  addRequest(request);$  doNotifyAll();$  Log.i(Mary.LOG,"Now waiting for request to be processed");$  long tStart=System.currentTimeMillis();$  while (!request.problemOccurred() && request.getOutput() == null && System.currentTimeMillis() - tStart < timeLimit) {$    doWait(timeLimit);$  }$  if (request.getOutput() == null) {$    if (request.problemOccurred()) {$      Log.i(Mary.LOG,"Problem occurred. Rescheduling request.");$    }$ else {$      Log.i(Mary.LOG,"Timeout occurred. Requesting module restart and rescheduling request.");$      setNeedToRestart(true);$    }$    removeRequest(request);$    request.setProblemOccurred(false);$    addRequest(request);$    doNotifyAll();$    Log.i(Mary.LOG,"Waiting for request to be processed (2nd try)");$    tStart=System.currentTimeMillis();$    while (!request.problemOccurred() && request.getOutput() == null && System.currentTimeMillis() - tStart < timeLimit) {$      doWait(timeLimit);$    }$    if (request.getOutput() == null) {$      if (request.problemOccurred()) {$        Log.i(Mary.LOG,"Problem occurred again. Giving up.");$      }$ else {$        Log.i(Mary.LOG,"Timeout occurred again. Requesting module restart, but giving up on this request.");$        setNeedToRestart(true);$      }$      removeRequest(request);$      throw new IOException("Module " + name() + " cannot process.");$    }$  }$  Log.i(Mary.LOG,"Request processed");$  return request.getOutput();$}$
public T search(final double[] key) throws KeySizeException {$  if (key.length != m_K) {$    throw new KeySizeException();$  }$  final KDNode<T> kd=KDNode.srch(new HPoint(key),m_root,m_K);$  return (kd == null ? null : kd.v);$}$
public static void useHotspotTeleport(HotspotTeleportTemplate template,int teleportGoal,Player player,int kinah,int level){$  Race race=player.getRace();$  if (template.getLocId() != teleportGoal)   log.warn("[HOTSPOT] packet loc id dont equals server loc id! Packet id=" + teleportGoal + " Server id="+ template.getLocId());$  if (template.getRace() != race)   return;$  if (player.getLevel() < level)   return;$  if (!checkKinahForTransportation(template,player,kinah,false)) {$    return;$  }$  int instanceId=1;$  int mapId=template.getMapId();$  if (player.getWorldId() == mapId) {$    instanceId=player.getInstanceId();$  }$  sendLoc(player,mapId,instanceId,template.getX(),template.getY(),template.getZ(),(byte)template.getHeading(),teleportGoal,1);$}$
public Iterator<Map.Entry<T,Long>> entrySetIterator(){$  return freqTable.entrySet().iterator();$}$
public void where(String column,PredicateOperator comparison,DataType value) throws QueryPlanException {$  this.whereColumnNames.add(column);$  this.whereOperators.add(comparison);$  this.whereDataTypes.add(value);$}$
public int readUnsignedByte() throws JMSException {$  initializeReading();$  try {$    this.dataIn.mark(Integer.MAX_VALUE);$    return this.dataIn.readUnsignedByte();$  }$ catch (  EOFException eof) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException e) {$      JMSException jmsEx=new JMSException(e.toString());$      jmsEx.setLinkedException(e);$      throw jmsEx;$    }$    JMSException jmsEx=new MessageEOFException(eof.toString());$    jmsEx.setLinkedException(eof);$    throw jmsEx;$  }$catch (  IOException ioe) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException e) {$      JMSException jmsEx=new JMSException(e.toString());$      jmsEx.setLinkedException(e);$      throw jmsEx;$    }$    JMSException jmsEx=new MessageFormatException("Format error occurred" + ioe.toString());$    jmsEx.setLinkedException(ioe);$    throw jmsEx;$  }$}$
private UnitsOfMeasure(){$  unitMap.put("pixel",NonSI.PIXEL);$  unitMap.put("metre",SI.METRE);$  unitMap.put("foot",NonSI.FOOT);$}$
Ack(String producerKey,String consumerKey,String ackedMessageID,String destNameToBeAcked){$  this.producerKey=producerKey;$  this.consumerKey=consumerKey;$  this.ackedMessageID=ackedMessageID;$  this.destNameToBeAcked=destNameToBeAcked;$}$
@Override public void changePresenter(@NonNull final CoreContract.Presenter presenter){$  this.presenter=requireNonNull(presenter);$  delegate.setPresenter(presenter);$}$
public void reAddAllInserts(@NonNull Collection<? extends Insertion> collection){$  if (collection.size() == 0) {$    return;$  }$  mInserts.addAll(collection);$  getItems().addAll(createEmptyItemsList(collection.size()));$}$
private void processConfigurationReport(SerialMessage serialMessage,int offset) throws ZWaveSerialMessageException {$  int parameter=serialMessage.getMessagePayloadByte(offset + 1);$  int size=serialMessage.getMessagePayloadByte(offset + 2);$  if (size == 0) {$    logger.warn("NODE {}: Parameter {} response has 0 length",getNode().getNodeId(),parameter);$    return;$  }$  try {$    int value=extractValue(serialMessage.getMessagePayload(),offset + 3,size);$    logger.debug("NODE {}: Node configuration report, parameter = {}, value = {}, size = {}",getNode().getNodeId(),parameter,value,size);$    ZWaveConfigurationParameter configurationParameter;$    configurationParameter=configParameters.get(parameter);$    if (configurationParameter == null) {$      configurationParameter=new ZWaveConfigurationParameter(parameter,value,size);$    }$ else {$      configurationParameter.setValue(value);$    }$    configParameters.put(parameter,configurationParameter);$    ZWaveConfigurationParameterEvent zEvent=new ZWaveConfigurationParameterEvent(getNode().getNodeId(),configurationParameter);$    getController().notifyEventListeners(zEvent);$  }$ catch (  NumberFormatException e) {$    return;$  }$}$
public final int hashCode(){$  return Hash;$}$
public boolean string_constants(){$  return soot.PhaseOptions.getBoolean(options,"string-constants");$}$
protected void assertHasHeaderValue(String name,String value){$  MultivaluedMap<String,String> headers=getLastReceivedHeaders();$  Assert.assertNotNull(headers);$  List<String> values=headers.get(name);$  Assert.assertNotNull(values);$  Assert.assertTrue(values.contains(value));$}$
public static SM_SYSTEM_MESSAGE STR_MSG_INSTANCE_JOIN_ROUND_IDARENA(String value0,String value1){$  return new SM_SYSTEM_MESSAGE(1400931,value0,value1);$}$
@Nullable public static MediaSource from(String sourceId){$  assert sourceId != null;$  Uri sourceUri=Uri.parse(sourceId);$  if (!CAST_SOURCE_ID_HOST.equals(sourceUri.getHost()))   return null;$  if (!CAST_SOURCE_ID_PATH.equals(sourceUri.getPath()))   return null;$  String uriFragment=sourceUri.getFragment();$  if (uriFragment == null)   return null;$  String[] parameters=uriFragment.split(CAST_SOURCE_ID_SEPARATOR);$  String applicationId=extractParameter(parameters,CAST_SOURCE_ID_APPLICATION_ID);$  if (applicationId == null)   return null;$  String clientId=extractParameter(parameters,CAST_SOURCE_ID_CLIENT_ID);$  String autoJoinPolicy=extractParameter(parameters,CAST_SOURCE_ID_AUTOJOIN_POLICY);$  return new MediaSource(sourceId,applicationId,clientId,autoJoinPolicy);$}$
@Override public Dimension minimumLayoutSize(Container target){$  Dimension minimum=layoutSize(target,false);$  minimum.width-=(getHgap() + 1);$  return minimum;$}$
static <T>T checkNotNull(T reference){$  if (reference == null) {$    throw new NullPointerException();$  }$  return reference;$}$
public void loading(){$  mHintView.setVisibility(View.GONE);$  mProgressBar.setVisibility(View.VISIBLE);$}$
@Override public Double analyse(double[] frame){$  if (frame.length != getFrameLengthSamples())   throw new IllegalArgumentException("Expected frame of length " + getFrameLengthSamples() + ", got "+ frame.length);$  double totalEnergy=0;$  for (int i=0; i < frame.length; i++) {$    if (frame[i] != 0)     totalEnergy+=MathUtils.db(frame[i] * frame[i]);$  }$  rememberFrameEnergy(totalEnergy);$  return new Double(totalEnergy);$}$
public boolean deleteStorage(TrackerGroup trackerGroup,String groupName,String storageIpAddr) throws IOException {$  int serverIndex;$  int notFoundCount;$  TrackerServer trackerServer;$  notFoundCount=0;$  for (serverIndex=0; serverIndex < trackerGroup.tracker_servers.length; serverIndex++) {$    try {$      trackerServer=trackerGroup.getConnection(serverIndex);$    }$ catch (    IOException ex) {$      ex.printStackTrace(System.err);$      this.errno=ProtoCommon.ECONNREFUSED;$      return false;$    }$    try {$      StructStorageStat[] storageStats=listStorages(trackerServer,groupName,storageIpAddr);$      if (storageStats == null) {$        if (this.errno == ProtoCommon.ERR_NO_ENOENT) {$          notFoundCount++;$        }$ else {$          return false;$        }$      }$ else       if (storageStats.length == 0) {$        notFoundCount++;$      }$ else       if (storageStats[0].getStatus() == ProtoCommon.FDFS_STORAGE_STATUS_ONLINE || storageStats[0].getStatus() == ProtoCommon.FDFS_STORAGE_STATUS_ACTIVE) {$        this.errno=ProtoCommon.ERR_NO_EBUSY;$        return false;$      }$    }$  finally {$      try {$        trackerServer.close();$      }$ catch (      IOException ex1) {$        ex1.printStackTrace();$      }$    }$  }$  if (notFoundCount == trackerGroup.tracker_servers.length) {$    this.errno=ProtoCommon.ERR_NO_ENOENT;$    return false;$  }$  notFoundCount=0;$  for (serverIndex=0; serverIndex < trackerGroup.tracker_servers.length; serverIndex++) {$    try {$      trackerServer=trackerGroup.getConnection(serverIndex);$    }$ catch (    IOException ex) {$      System.err.println("connect to server " + trackerGroup.tracker_servers[serverIndex].getAddress().getHostAddress() + ":"+ trackerGroup.tracker_servers[serverIndex].getPort()+ " fail");$      ex.printStackTrace(System.err);$      this.errno=ProtoCommon.ECONNREFUSED;$      return false;$    }$    try {$      if (!this.deleteStorage(trackerServer,groupName,storageIpAddr)) {$        if (this.errno != 0) {$          if (this.errno == ProtoCommon.ERR_NO_ENOENT) {$            notFoundCount++;$          }$ else           if (this.errno != ProtoCommon.ERR_NO_EALREADY) {$            return false;$          }$        }$      }$    }$  finally {$      try {$        trackerServer.close();$      }$ catch (      IOException ex1) {$        ex1.printStackTrace();$      }$    }$  }$  if (notFoundCount == trackerGroup.tracker_servers.length) {$    this.errno=ProtoCommon.ERR_NO_ENOENT;$    return false;$  }$  if (this.errno == ProtoCommon.ERR_NO_ENOENT) {$    this.errno=0;$  }$  return this.errno == 0;$}$
public boolean contains(T dataSet){$  for (  T set : mDataSets) {$    if (set.equals(dataSet))     return true;$  }$  return false;$}$
public static final MediaFormat createVideoFormat(String mime,int width,int height){$  MediaFormat format=new MediaFormat();$  format.setString(KEY_MIME,mime);$  format.setInteger(KEY_WIDTH,width);$  format.setInteger(KEY_HEIGHT,height);$  return format;$}$
public SlickForm(Context context,AttributeSet attrs,int defStyle){$  super(context,attrs,defStyle);$  initAttrs(context,attrs);$}$
public SourceContextAndPath extendPath(Abstraction abs){$  return extendPath(abs,true);$}$
public void updateCloud(int pointCount,FloatBuffer pointBuffer){$  calculateColors(pointCount,pointBuffer);$  updatePoints(pointCount,pointBuffer,mColorArray);$}$
public static double toDouble(Object obj){$  Double result=toDoubleObject(obj);$  return result == null ? 0.0 : result.doubleValue();$}$
public NotificationsGetQuery endTime(Integer value){$  return unsafeParam("end_time",value);$}$
@Override public Future<BoxedUnit> advanceCommitPosition(DLSN newPosition){$  if (null == lastCommittedPosition.get() || (newPosition.compareTo(lastCommittedPosition.get()) > 0)) {$    lastCommittedPosition.set(newPosition);$    return Utils.zkAsyncCreateFullPathOptimisticAndSetData(zooKeeperClient,zkPath,newPosition.serialize().getBytes(Charsets.UTF_8),zooKeeperClient.getDefaultACL(),CreateMode.PERSISTENT);$  }$ else {$    return Future.Done();$  }$}$
public boolean isHighlightEnabled(){$  for (  IDataSet set : mDataSets) {$    if (!set.isHighlightEnabled())     return false;$  }$  return true;$}$
public static String slurpFileNoExceptions(String filename){$  try {$    return slurpFile(filename);$  }$ catch (  Exception e) {$    e.printStackTrace();$    return null;$  }$}$
@POST @Path("/roles") @Consumes(APPLICATION_JSON) @Produces(APPLICATION_JSON) @ApiOperation(value="Assign roles for a list of users and applications") @Timed public Response assignUserRoles(@ApiParam(name="userRoleList",value="Please see model example",required=true) final UserRoleList userRoleList,@HeaderParam(AUTHORIZATION) @ApiParam(value=EXAMPLE_AUTHORIZATION_HEADER,required=true) final String authorizationHeader){$  List<Map> status=updateUserRole(userRoleList,authorizationHeader);$  return httpHeader.headers().entity(ImmutableMap.<String,Object>builder().put("assignmentStatuses",status).build()).build();$}$
protected Type(String name){$  super(name);$}$
public EncodingException(){$  super();$}$
public PlacesGetByIdQuery(VkApiClient client,UserActor actor,List<Integer> places){$  super(client,"places.getById",Utils.buildParametrizedType(List.class,Place.class));$  accessToken(actor.getAccessToken());$  places(places);$}$
public static final int daysBetween(Date early,Date late){$  Calendar c1=Calendar.getInstance();$  Calendar c2=Calendar.getInstance();$  c1.setTime(early);$  c2.setTime(late);$  return daysBetween(c1,c2);$}$
public FormScalingUtil(Class clazz){$  this(clazz,JBUI.scale(1.0f));$}$
public boolean removeDataSet(T d){$  if (d == null)   return false;$  boolean removed=mDataSets.remove(d);$  if (removed) {$    mYValCount-=d.getEntryCount();$    calcMinMax(0,mYValCount);$  }$  return removed;$}$
public void clearSounds(){$  mSoundMap.clear();$}$
public void invokeMain(String sClass,String[] args) throws Throwable {$  Class<?> clazz=loadClass(sClass);$  logInfo(LogArea.CONFIG,"Launch: %s.main(); Loader: %s",sClass,clazz.getClassLoader());$  Method method=clazz.getMethod("main",new Class<?>[]{String[].class});$  boolean bValidModifiers=false;$  boolean bValidVoid=false;$  if (method != null) {$    method.setAccessible(true);$    int nModifiers=method.getModifiers();$    bValidModifiers=Modifier.isPublic(nModifiers) && Modifier.isStatic(nModifiers);$    Class<?> clazzRet=method.getReturnType();$    bValidVoid=(clazzRet == void.class);$  }$  if (method == null || !bValidModifiers || !bValidVoid) {$    throw new NoSuchMethodException("The main() method in class \"" + sClass + "\" not found.");$  }$  try {$    method.invoke(null,(Object)args);$  }$ catch (  InvocationTargetException e) {$    throw e.getTargetException();$  }$}$
public static String toString(URL url) throws IOException {$  return toString(url,Charset.defaultCharset());$}$
public static String toInternalName(SootClass cls){$  return toInternalName(cls.getName());$}$
@Override public LogNormalDistribution makeDistribution(){$  return new LogNormalDistribution(2.1,1.4);$}$
private Object legalOrIllegal(Metadata<Optional> metadata){$  Type type=metadata.getType();$  if (type.equals(String.class)) {$    return safetyCast.with("",type);$  }$  for (  Type numericType : SupportedTypes.NUMERIC) {$    if (type.equals(numericType)) {$      return safetyCast.with(0,type);$    }$  }$  return null;$}$
public static boolean isUnmatched(int mod){$  return (mod & NOTIFY_UNMATCHED) != 0;$}$
public static boolean hasJellyBeanMr1(){$  return Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1;$}$
public boolean isValidPoint(double x,double y,double z){$  if (x < xval[0] || x > xval[xval.length - 1] || y < yval[0] || y > yval[yval.length - 1] || z < zval[0] || z > zval[zval.length - 1]) {$    return false;$  }$ else {$    return true;$  }$}$
public JsonObject(JsonObject object){$  this(object,false);$}$
public static boolean isRedirect(HttpResponse httpResponse){$switch (httpResponse.getStatus().code()) {$case 300:$case 301:$case 302:$case 303:$case 307:$    return true;$default :$  return false;$}$}$
private void updateAndValidate(final T dataTag,final Object value,final String valueDescription,final Timestamp timestamp){$  if (!filteroutValid(dataTag,value,valueDescription,timestamp)) {$    updateAndValidateQuietly(dataTag,value,valueDescription,null,null,timestamp);$  }$ else {$    if (LOGGER.isTraceEnabled()) {$      LOGGER.trace("Filtering out repeated update for datatag " + dataTag.getId());$    }$  }$}$
public Conversation(Plugin plugin,Conversable forWhom,Prompt firstPrompt){$  this(plugin,forWhom,firstPrompt,new HashMap<Object,Object>());$}$
private Base64(){$}$
public static Player newPlayer(PlayerCommonData playerCommonData,PlayerAppearance playerAppearance,Account account){$  PlayerInitialData playerInitialData=DataManager.PLAYER_INITIAL_DATA;$  LocationData ld=playerInitialData.getSpawnLocation(playerCommonData.getRace());$  WorldPosition position=World.getInstance().createPosition(ld.getMapId(),ld.getX(),ld.getY(),ld.getZ(),ld.getHeading(),0);$  playerCommonData.setPosition(position);$  Player newPlayer=new Player(new PlayerController(),playerCommonData,playerAppearance,account);$  newPlayer.setSkillList(new PlayerSkillList());$  SkillLearnService.addNewSkills(newPlayer);$  PlayerCreationData playerCreationData=playerInitialData.getPlayerCreationData(playerCommonData.getPlayerClass());$  Storage playerInventory=new PlayerStorage(StorageType.CUBE);$  Storage regularWarehouse=new PlayerStorage(StorageType.REGULAR_WAREHOUSE);$  Storage accountWarehouse=new PlayerStorage(StorageType.ACCOUNT_WAREHOUSE);$  newPlayer.setStorage(playerInventory,StorageType.CUBE);$  newPlayer.setStorage(regularWarehouse,StorageType.REGULAR_WAREHOUSE);$  newPlayer.setStorage(accountWarehouse,StorageType.ACCOUNT_WAREHOUSE);$  Equipment equipment=new Equipment(newPlayer);$  if (playerCreationData != null) {$    List<ItemType> items=playerCreationData.getItems();$    for (    ItemType itemType : items) {$      int itemId=itemType.getTemplate().getTemplateId();$      Item item=ItemFactory.newItem(itemId,itemType.getCount());$      if (item == null) {$        continue;$      }$      ItemTemplate itemTemplate=item.getItemTemplate();$      if ((itemTemplate.isArmor() || itemTemplate.isWeapon()) && !(equipment.isSlotEquipped(itemTemplate.getItemSlot()))) {$        item.setEquipped(true);$        ItemSlot itemSlot=ItemSlot.getSlotFor(itemTemplate.getItemSlot());$        item.setEquipmentSlot(itemSlot.getSlotIdMask());$        equipment.onLoadHandler(item);$      }$ else {$        playerInventory.onLoadHandler(item);$      }$    }$  }$  newPlayer.setEquipment(equipment);$  newPlayer.setMailbox(new Mailbox(newPlayer));$  for (int petBagId=StorageType.PET_BAG_MIN; petBagId <= StorageType.PET_BAG_MAX; petBagId++) {$    Storage petBag=new PlayerStorage(StorageType.getStorageTypeById(petBagId));$    newPlayer.setStorage(petBag,StorageType.getStorageTypeById(petBagId));$  }$  for (int houseWhId=StorageType.HOUSE_WH_MIN; houseWhId <= StorageType.HOUSE_WH_MAX; houseWhId++) {$    StorageType whType=StorageType.getStorageTypeById(houseWhId);$    if (whType != null) {$      Storage cabinet=new PlayerStorage(whType);$      newPlayer.setStorage(cabinet,StorageType.getStorageTypeById(houseWhId));$    }$  }$  playerInventory.setPersistentState(PersistentState.UPDATE_REQUIRED);$  equipment.setPersistentState(PersistentState.UPDATE_REQUIRED);$  return newPlayer;$}$
public void print(PrintStream out){$  if (rootNodes != null) {$    for (    TreeSearchNode<M,G> node : rootNodes) {$      printNode(node,out);$    }$  }$}$
public void mousePressed(@AndroidCoordinate int x,@AndroidCoordinate int y){$  if (myMouseInteraction != null) {$    myMouseInteraction.mousePressed(pxToDp(x),pxToDp(y),false);$    myMouseInteraction.setAutoConnect(ConstraintModel.isAutoConnect());$  }$}$
public void updateData(LegendOptionData newOptionData){$  data=newOptionData;$  populate(newOptionData);$}$
public WriteModifiers(WriteModifiers... modifiers){$  super(modifiers);$}$
@RequestMapping(value="/",method=PUT,produces=APPLICATION_JSON_VALUE) public ResponseEntity<BookDTO> update(@RequestBody BookDTO bookDTO) throws URISyntaxException {$  log.debug("Update BookDTO : {}",bookDTO);$  if (!bookDTO.isIdSet()) {$    return create(bookDTO);$  }$  BookDTO result=bookDTOService.save(bookDTO);$  return ResponseEntity.ok().body(result);$}$
public R1Interval addPoint(double p){$  if (isEmpty()) {$    return R1Interval.fromPoint(p);$  }$ else   if (p < lo()) {$    return new R1Interval(p,hi());$  }$ else   if (p > hi()) {$    return new R1Interval(lo(),p);$  }$ else {$    return new R1Interval(lo(),hi());$  }$}$
public static SM_SYSTEM_MESSAGE STR_MSG_CAPTCHA_UNRESTRICT_FAILED_RETRY(String value0){$  return new SM_SYSTEM_MESSAGE(1400271,value0);$}$
public static LineIterator lineIterator(File file) throws IOException {$  return lineIterator(file,null);$}$
@Override public Writer append(CharSequence csq,int start,int end) throws IOException {$  try {$    beforeWrite(end - start);$    out.append(csq,start,end);$    afterWrite(end - start);$  }$ catch (  IOException e) {$    handleIOException(e);$  }$  return this;$}$
public void stopRecording(){$  if (this.recorder != null) {$    try {$      if (this.state == STATE.MEDIA_RUNNING) {$        this.recorder.stop();$        this.setState(STATE.MEDIA_STOPPED);$      }$      this.recorder.reset();$      this.moveFile(this.audioFile);$    }$ catch (    Exception e) {$      e.printStackTrace();$    }$  }$}$
public boolean isCellEditable(int row,int col){$  if (!m_rows.isValidRow(row)) {$    return false;$  }$ else {$    return getColumn(col).isCellEditable(row);$  }$}$
private List<Map<String,byte[]>> prepareFavorites(){$  List<Map<String,byte[]>> queryResult=new ArrayList<>();$  for (int i=0; i < 8; ++i) {$    Map<String,byte[]> row=new HashMap<>();$    byte[] id=new byte[16];$    new Random().nextBytes(id);$    id[0]=(byte)i;$    row.put("experiment_id",id);$    queryResult.add(row);$  }$  return queryResult;$}$
public static SM_SYSTEM_MESSAGE STR_FORCE_HE_IS_BANISHED(String value0){$  return new SM_SYSTEM_MESSAGE(1301021,value0);$}$
private void initModels(){$  File root=new File(path + "/model");$  File[] list=root.listFiles();$  if (list != null) {$    for (    File f : list) {$      if (f.getName().endsWith(".jar")) {$        classLoader.addJar(f.getAbsolutePath());$        log.debug("loading: " + f.getAbsolutePath());$      }$    }$  }$}$
public Vector1DFormat(final NumberFormat format){$  super(DEFAULT_PREFIX,DEFAULT_SUFFIX,DEFAULT_SEPARATOR,format);$}$
private int findSmallestFrom(int startId,List<String> sortFlds,List<Integer> sortDirs){$  int minId=startId;$  moveToId(startId);$  while (super.next()) {$    int id=currentId();$    if (minId < 0 || compareRecords(minId,id,sortFlds,sortDirs) > 0)     minId=id;$    moveToId(id);$  }$  return minId;$}$
private void readFeatureSimilarityMatrices(BufferedReader input) throws IOException {$  String line=null;$  similarityMatrices=new float[this.getNumberOfByteFeatures()][][];$  for (int i=0; i < this.getNumberOfByteFeatures(); i++) {$    similarityMatrices[i]=null;$  }$  while ((line=input.readLine()) != null) {$    if ("".equals(line)) {$      return;$    }$    String[] featureUniqueValues=line.trim().split("\\s+");$    String featureName=featureUniqueValues[0];$    if (!isByteFeature(featureName)) {$      throw new RuntimeException("Similarity matrix support is for bytefeatures only, but not for other feature types...");$    }$    int featureIndex=this.getFeatureIndex(featureName);$    int noUniqValues=featureUniqueValues.length - 1;$    similarityMatrices[featureIndex]=new float[noUniqValues][noUniqValues];$    for (int i=1; i <= noUniqValues; i++) {$      Arrays.fill(similarityMatrices[featureIndex][i - 1],0);$      String featureValue=featureUniqueValues[i];$      String matLine=input.readLine();$      if (matLine == null) {$        throw new RuntimeException("Feature definition file is having unexpected format...");$      }$      String[] lines=matLine.trim().split("\\s+");$      if (!featureValue.equals(lines[0])) {$        throw new RuntimeException("Feature definition file is having unexpected format...");$      }$      if (lines.length != i) {$        throw new RuntimeException("Feature definition file is having unexpected format...");$      }$      for (int j=1; j < i; j++) {$        float similarity=(new Float(lines[j])).floatValue();$        similarityMatrices[featureIndex][i - 1][j - 1]=similarity;$        similarityMatrices[featureIndex][j - 1][i - 1]=similarity;$      }$    }$  }$}$
public Path[] updatePhare(@FloatRange(from=0,to=1.0) float percentage,final boolean async){$  if (mSubPathsOutputStore != null) {$    mPathMeasure.setPath(mPath,false);$    int i=0;$    do {$      mSubPathsOutputStore[i].reset();$      if (async) {$        boolean success=mPathMeasure.getSegment(0,mSubPathLengths[i] * percentage,mSubPathsOutputStore[i],true);$        if (success) {$          mSubPathsOutputStore[i].rLineTo(0,0);$          mSubPathsOutput[i]=mSubPathsOutputStore[i];$        }$ else {$          mSubPathsOutput[i]=null;$        }$      }$ else {$        float subPathStart=mSubPathPercentageRanges[i * 3];$        float subPathEnd=mSubPathPercentageRanges[i * 3 + 1];$        float multiples=mSubPathPercentageRanges[i * 3 + 2];$        if (subPathStart >= percentage) {$          mSubPathsOutput[i]=null;$        }$ else {$          float endD=subPathEnd >= percentage ? (percentage - subPathStart) * multiples * mSubPathLengths[i] : mSubPathLengths[i];$          boolean success=mPathMeasure.getSegment(0,endD,mSubPathsOutputStore[i],true);$          if (success) {$            mSubPathsOutputStore[i].rLineTo(0,0);$            mSubPathsOutput[i]=mSubPathsOutputStore[i];$          }$ else {$            mSubPathsOutput[i]=null;$          }$        }$      }$      i++;$    }$ while (i < mSubPathsOutputStore.length && mPathMeasure.nextContour());$    mPathMeasure.setPath(mPath,false);$    return mSubPathsOutput;$  }$  return null;$}$
public boolean fire(Context context){$  return Utils.openIntentSafely(context,action);$}$
public List<DexlibAbstractInstruction> instructionsAfter(DexlibAbstractInstruction instruction){$  int i=instructions.indexOf(instruction);$  if (i == -1)   throw new IllegalArgumentException("Instruction" + instruction + "not part of this body.");$  return instructions.subList(i + 1,instructions.size());$}$
private double extractDouble(JsonObject jsonObj,String field){$  double value=0.0;$  if (jsonObj != null) {$    JsonElement element=jsonObj.get(field);$    if (element != null) {$      value=element.getAsDouble();$    }$  }$  return value;$}$
private void addOrDeleteBoundaries(Document doc){$  NodeIterator it=((DocumentTraversal)doc).createNodeIterator(doc,NodeFilter.SHOW_ELEMENT,new NameNodeFilter(MaryXML.BOUNDARY),false);$  Element boundary=null;$  List<Element> bi1prosodyElements=null;$  while ((boundary=(Element)it.nextNode()) != null) {$    int minBI=3;$    Element prosody=(Element)DomUtils.getAncestor(boundary,MaryXML.PROSODY);$    if (prosody != null) {$      ProsodicSettings settings=prosodyMap.get(prosody);$      assert settings != null;$      int rate=settings.rate();$      int numberOfPauses=settings.numberOfPauses();$      if (numberOfPauses <= 50)       minBI=5;$ else       if (numberOfPauses <= 75)       minBI=4;$ else       if (numberOfPauses > 150)       minBI=1;$ else       if (numberOfPauses > 125)       minBI=2;$      if (rate < 90 && minBI > 1)       minBI--;$      if (minBI == 1) {$        if (bi1prosodyElements == null)         bi1prosodyElements=new ArrayList<Element>();$        bi1prosodyElements.add(prosody);$      }$    }$    int bi=3;$    try {$      bi=Integer.parseInt(boundary.getAttribute("breakindex"));$    }$ catch (    NumberFormatException e) {$      Log.i(Mary.LOG,"Unexpected breakindex value `" + boundary.getAttribute("breakindex") + "', assuming "+ bi);$    }$  }$  if (bi1prosodyElements != null) {$    Iterator<Element> elIt=bi1prosodyElements.iterator();$    while (elIt.hasNext()) {$      Element prosody=elIt.next();$      NodeIterator nodeIt=((DocumentTraversal)doc).createNodeIterator(prosody,NodeFilter.SHOW_ELEMENT,new NameNodeFilter(MaryXML.TOKEN,MaryXML.BOUNDARY),false);$      Element el=null;$      Element prevEl=null;$      while ((el=(Element)nodeIt.nextNode()) != null) {$        if (el.getTagName().equals(MaryXML.TOKEN) && prevEl != null && prevEl.getTagName().equals(MaryXML.TOKEN)) {$          Element newBoundary=MaryXML.createElement(doc,MaryXML.BOUNDARY);$          newBoundary.setAttribute("breakindex","1");$          el.getParentNode().insertBefore(newBoundary,el);$        }$        prevEl=el;$      }$    }$  }$}$
public void init$Children(){$  children=new ASTNode[3];$  setChild(new Opt(),1);$  setChild(new List(),2);$}$
public void removeFromHouse(){$  this.setX(0);$  this.setY(0);$  this.setZ(0);$  this.setHeading((byte)0);$}$
public static void checkZoneLevels(Player player){$  World world=World.getInstance();$  float z=player.getZ();$  if (player.getLifeStats().isAlreadyDead()) {$    return;$  }$  if (z < world.getWorldMap(player.getWorldId()).getDeathLevel()) {$    player.getController().die();$    return;$  }$  float playerheight=player.getPlayerAppearance().getHeight() * 1.6f;$  if (z < world.getWorldMap(player.getWorldId()).getWaterLevel() - playerheight) {$    startDrowning(player);$  }$ else {$    stopDrowning(player);$  }$}$
protected void querySegmentMetadata(final PhysicalTable table){$  String resourcePath=String.format(SEGMENT_METADATA_QUERY_FORMAT,table.getName());$  SuccessCallback success=buildSegmentMetadataSuccessCallback(table);$  druidWebService.getJsonObject(success,errorCallback,failureCallback,resourcePath);$}$
public boolean hasPermissionsByInternalId(String internalId,Collection<Permission> permissions){$  AuthorizationInfo authorizationInfo=getAuthorizationInfoByInternalId(internalId);$  return authorizationInfo != null && isPermittedAll(permissions,authorizationInfo);$}$
public BasePresenter create(String tag){$  return mPresenterStorage.create(tag);$}$
@Override public void onTabClosing(long time,int id){$  reset();$  forceAnimationToFinish();$  TabModel model=mTabModelSelector.getModelForTabId(id);$  if (model != null) {$    mClosedTab=createLayoutTab(id,model.isIncognito(),NO_CLOSE_BUTTON,NO_TITLE);$    mClosedTab.setBorderAlpha(0.0f);$    mLayoutTabs=new LayoutTab[]{mClosedTab};$    updateCacheVisibleIds(new LinkedList<Integer>(Arrays.asList(id)));$  }$ else {$    mLayoutTabs=null;$    mClosedTab=null;$  }$  super.onTabClosing(time,id);$}$
@Override public synchronized void initialize(){$  if (!mRootDirectory.exists()) {$    if (!mRootDirectory.mkdirs()) {$      VolleyLog.e("Unable to create cache dir %s",mRootDirectory.getAbsolutePath());$    }$    return;$  }$  File[] files=mRootDirectory.listFiles();$  if (files == null) {$    return;$  }$  for (  File file : files) {$    BufferedInputStream fis=null;$    try {$      fis=new BufferedInputStream(new FileInputStream(file));$      CacheHeader entry=CacheHeader.readHeader(fis);$      entry.size=file.length();$      putEntry(entry.key,entry);$    }$ catch (    IOException e) {$      if (file != null) {$        file.delete();$      }$    }$ finally {$      try {$        if (fis != null) {$          fis.close();$        }$      }$ catch (      IOException ignored) {$      }$    }$  }$}$
private ArrayList<ContentProviderOperation> prepareInsertShares(ArrayList<OCShare> shares,ArrayList<ContentProviderOperation> operations){$  if (shares != null) {$    for (    OCShare share : shares) {$      ContentValues cv=new ContentValues();$      cv.put(ProviderTableMeta.OCSHARES_FILE_SOURCE,share.getFileSource());$      cv.put(ProviderTableMeta.OCSHARES_ITEM_SOURCE,share.getItemSource());$      cv.put(ProviderTableMeta.OCSHARES_SHARE_TYPE,share.getShareType().getValue());$      cv.put(ProviderTableMeta.OCSHARES_SHARE_WITH,share.getShareWith());$      cv.put(ProviderTableMeta.OCSHARES_PATH,share.getPath());$      cv.put(ProviderTableMeta.OCSHARES_PERMISSIONS,share.getPermissions());$      cv.put(ProviderTableMeta.OCSHARES_SHARED_DATE,share.getSharedDate());$      cv.put(ProviderTableMeta.OCSHARES_EXPIRATION_DATE,share.getExpirationDate());$      cv.put(ProviderTableMeta.OCSHARES_TOKEN,share.getToken());$      cv.put(ProviderTableMeta.OCSHARES_SHARE_WITH_DISPLAY_NAME,share.getSharedWithDisplayName());$      cv.put(ProviderTableMeta.OCSHARES_IS_DIRECTORY,share.isFolder() ? 1 : 0);$      cv.put(ProviderTableMeta.OCSHARES_USER_ID,share.getUserId());$      cv.put(ProviderTableMeta.OCSHARES_ID_REMOTE_SHARED,share.getRemoteId());$      cv.put(ProviderTableMeta.OCSHARES_ACCOUNT_OWNER,mAccount.name);$      operations.add(ContentProviderOperation.newInsert(ProviderTableMeta.CONTENT_URI_SHARE).withValues(cv).build());$    }$  }$  return operations;$}$
public void removeChangingListener(OnWheelChangedListener listener){$  changingListeners.remove(listener);$}$
public static SM_SYSTEM_MESSAGE STR_FACTION_LEAVE(String value0){$  return new SM_SYSTEM_MESSAGE(1300526,value0);$}$
public static Map<String,Object> findOrdersInternal(DispatchContext dctx,Map<String,? extends Object> context){$  return findOrders(dctx,context,false);$}$
protected void removeAt(int index){$  _values[index]=0;$  super.removeAt(index);$}$
public void prevImage() throws IOException {$  super.prev();$}$
@Override protected void processLPC(LpCoeffs coeffs,double[] residual){$  double totalResidualEnergy=coeffs.getGain() * coeffs.getGain();$  double avgAbsAmplitude=Math.sqrt(totalResidualEnergy / residual.length);$  double maxAbsAmplitude=2 * avgAbsAmplitude;$  double spread=2 * maxAbsAmplitude;$  for (int i=0; i < residual.length; i++)   residual[i]=whisperAmount * spread * (Math.random() - 0.5) + oneMinusWhisperAmount * residual[i];$}$
@Override protected StateManagerImpl newStateManagerImpl(Object oid,ClassMetaData meta){$  return new StateManager(oid,meta,this);$}$
public String upload_file1(String master_file_id,String prefix_name,long file_size,UploadCallback callback,String file_ext_name,NameValuePair[] meta_list) throws IOException, MyException {$  String[] parts=new String[2];$  this.errno=this.split_file_id(master_file_id,parts);$  if (this.errno != 0) {$    return null;$  }$  parts=this.upload_file(parts[0],parts[1],prefix_name,file_size,callback,file_ext_name,meta_list);$  if (parts != null) {$    return parts[0] + SPLIT_GROUP_NAME_AND_FILENAME_SEPERATOR + parts[1];$  }$ else {$    return null;$  }$}$
public static URI toLocation(URI sourceUri,String table){$  getLocationType(sourceUri);$  return UriBuilder.fromUri(sourceUri).path(table).build();$}$
protected FriendsGetAvailableForCallQueryWithFields fields(UserField... value){$  return unsafeParam("fields",value);$}$
public SM_UPDATE_SESSION(SessionKey key){$  super(0x0c);$  this.accountId=key.accountId;$  this.loginOk=key.loginOk;$}$
private static String massageURI(String uri){$  uri=uri.trim();$  int protocolEnd=uri.indexOf(':');$  if (protocolEnd < 0 || isColonFollowedByPortNumber(uri,protocolEnd)) {$    uri="http://" + uri;$  }$  return uri;$}$
public Logo(String img,String url){$  super(new BorderLayout());$  Icon image=new ImageIcon(ImageUtilities.loadImage(img,true));$  JLabel label=new JLabel(image);$  label.setBorder(BorderFactory.createEmptyBorder());$  label.setOpaque(false);$  label.addMouseListener(this);$  setOpaque(false);$  add(label,BorderLayout.CENTER);$  setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));$  this.url=url;$}$
public static Complex valueOf(double realPart){$  if (Double.isNaN(realPart)) {$    return NaN;$  }$  return new Complex(realPart);$}$
public boolean isUsePercentValuesEnabled(){$  return mUsePercentValues;$}$
@Override public void reset() throws IOException {$  fInputStream.reset();$}$
public boolean areTransmitOptionsSet(){$  return transmitOptions != TRANSMIT_OPTIONS_NOT_SET;$}$
public Criteria createCriteria(){$  Criteria criteria=createCriteriaInternal();$  if (oredCriteria.size() == 0) {$    oredCriteria.add(criteria);$  }$  return criteria;$}$
public int geom_eval(){$  return soot.PhaseOptions.getInt(options,"geom-eval");$}$
public NewInvokeExpr newNewInvokeExpr(RefType base,SootMethodRef method,List args){$  return new GNewInvokeExpr(base,method,args);$}$
public static void polygon(double[] x,double[] y){$  if (x == null)   throw new NullPointerException();$  if (y == null)   throw new NullPointerException();$  int n1=x.length;$  int n2=y.length;$  if (n1 != n2)   throw new IllegalArgumentException("arrays must be of the same length");$  int n=n1;$  GeneralPath path=new GeneralPath();$  path.moveTo((float)scaleX(x[0]),(float)scaleY(y[0]));$  for (int i=0; i < n; i++)   path.lineTo((float)scaleX(x[i]),(float)scaleY(y[i]));$  path.closePath();$  offscreen.draw(path);$  draw();$}$
public boolean contains(long val){$  return index(val) >= 0;$}$
@Override public String toString(){$  StringBuilder sb=new StringBuilder();$  sb.append(getClass().getSimpleName());$  sb.append(" [");$  sb.append("Hash = ").append(hashCode());$  sb.append(", roleId=").append(roleId);$  sb.append(", menuId=").append(menuId);$  sb.append(", permission=").append(permission);$  sb.append("]");$  return sb.toString();$}$
public UserAlreadyExistsException(String s){$  super(s);$}$
public static boolean isUpdateOrWrite(int mod){$  return Modifiers.contains(mod,UpdateModifiers.UPDATE_OR_WRITE);$}$
public void hideToolbar(boolean clearSelection){$  if (mFindToolbar == null)   return;$  mFindToolbar.deactivate(clearSelection);$}$
public synchronized void addLocators(LookupLocator[] locators){$  testSetForNull(locators);$  if (terminated) {$    throw new IllegalStateException("discovery terminated");$  }$  discoverLocators(locators);$}$
public MessagesGetChatUsersQueryWithChatIds(VkApiClient client,UserActor actor,List<Integer> chatIds){$  super(client,"messages.getChatUsers",GetChatUsersChatIdsResponse.class);$  accessToken(actor.getAccessToken());$  chatIds(chatIds);$}$
static public void validateClusterDocument(Node validatedXmlDocument) throws SAXException, IOException {$  if (validXMLSchema) {$    Validator validator=null;$    try {$      initClusterXSDSchema();$    }$ catch (    SAXException saxE) {$      if (_logger.isLoggable(Level.SEVERE)) {$        _logger.log(Level.SEVERE,"Failed to create XML xsd validator. Will not validate the cluster configuration due to:  " + saxE.toString(),saxE);$      }$    }$catch (    IllegalArgumentException iae) {$      if (_logger.isLoggable(Level.SEVERE)) {$        _logger.log(Level.SEVERE,"Failed to create XML xsd validator. Will not validate the cluster configuration due to:  " + iae.toString(),iae);$      }$    }$    if (schemaXSD != null) {$      validator=schemaXSD.newValidator();$      validator.setErrorHandler(new DefaultErrorHandler());$      Attr xpathAttr=null;$      boolean exceptionThrown=false;$      try {$        Node attrNode=validatedXmlDocument.getFirstChild();$        if (attrNode != null && attrNode instanceof Element) {$          Attr attr=(Attr)attrNode.getAttributes().getNamedItem("xmlns");$          if (attr != null) {$            xpathAttr=((Element)attrNode).removeAttributeNode(attr);$            if (xpathAttr != null && _logger.isLoggable(Level.FINE)) {$              _logger.log(Level.FINE,"In order the cluster schema xsl validation succeeds you need to remove the following xsl " + " header attribute. \n" + xpathAttr + "\nCurrently we bypassed the validation and continued as expected.");$            }$          }$        }$      }$ catch (      Exception e) {$        if (_logger.isLoggable(Level.FINE)) {$          _logger.log(Level.FINE,"In order the cluster schema xsl validation succeeds you need to remove the following xsl " + " header attribute. \n" + xpathAttr + "\nException thrown before validating: "+ e.getMessage());$        }$        exceptionThrown=true;$      }$      if (xpathAttr == null && !exceptionThrown) {$        if (validator != null && validXMLSchema)         validator.validate(new DOMSource(validatedXmlDocument));$        if (_logger.isLoggable(Level.FINE)) {$          _logger.log(Level.FINE,"Validated successfully the cluster configuration using the XML xsd validator: " + validator.toString());$        }$      }$    }$  }$}$
void mirror(){$  for (int x=0; x < bitMatrix.getWidth(); x++) {$    for (int y=x + 1; y < bitMatrix.getHeight(); y++) {$      if (bitMatrix.get(x,y) != bitMatrix.get(y,x)) {$        bitMatrix.flip(y,x);$        bitMatrix.flip(x,y);$      }$    }$  }$}$
public boolean isCaseSensitive(){$  return sensitive;$}$
private void loadSettings(){$  Properties pIn=new Properties();$  try {$    if (!(new File("AutoSummENGGUI.properties").exists()))     return;$    FileInputStream fsIn=new FileInputStream("AutoSummENGGUI.properties");$    pIn.loadFromXML(fsIn);$    fsIn.close();$  }$ catch (  IOException ioe) {$    ioe.printStackTrace(System.err);$    return;$  }$  try {$    ModelsRootDirEdt.setText(pIn.getProperty("ModelDir","./models"));$    SummariesRootDirEdt.setText(pIn.getProperty("SummaryDir","./summaries"));$    OutputFileEdt.setText(pIn.getProperty("OutputFile","./jinsect.table"));$    ThreadCntEdt.setValue(Integer.valueOf(pIn.getProperty("Threads","2")));$    SilentChk.setSelected(Boolean.valueOf(pIn.getProperty("Silent",Boolean.TRUE.toString())));$    ProgressChk.setSelected(Boolean.valueOf(pIn.getProperty("ShowProgress",Boolean.TRUE.toString())));$    DoWordChk.setSelected(Boolean.valueOf(pIn.getProperty("DoWord",Boolean.TRUE.toString())));$    DoWordChkStateChanged(new ChangeEvent(DoWordChk));$    DoCharChk.setSelected(Boolean.valueOf(pIn.getProperty("DoChar",Boolean.TRUE.toString())));$    DoCharChkStateChanged(new ChangeEvent(DoCharChk));$    if (pIn.getProperty("Use","Occurences").equals("Occurences"))     OccurencesChk.setSelected(true);$ else     DistrosChk.setSelected(true);$    CharMinEdt.setValue(Integer.valueOf(pIn.getProperty("CharMin","3")));$    CharMaxEdt.setValue(Integer.valueOf(pIn.getProperty("CharMax","3")));$    CharDistEdt.setValue(Integer.valueOf(pIn.getProperty("CharDist","3")));$    WordMinEdt.setValue(Integer.valueOf(pIn.getProperty("WordMin","1")));$    WordMaxEdt.setValue(Integer.valueOf(pIn.getProperty("WordMax","2")));$    WordDistEdt.setValue(Integer.valueOf(pIn.getProperty("WordDist","3")));$  }$ catch (  Exception e) {$    System.err.println("Could not load settings...");$    return;$  }$  PerformanceTableModel tTmp=new PerformanceTableModel();$  DetailedResultsTbl.setModel(tTmp);$}$
public List<Supplier> loadSuppliers(){$  EntityManager em=emf.createEntityManager();$  TypedQuery<Supplier> queryBP;$  List<Supplier> resBP=null;$  try {$    em.getTransaction().begin();$    queryBP=em.createQuery("SELECT s FROM Supplier s",Supplier.class);$    resBP=queryBP.getResultList();$    if (resBP.size() > 5) {$      logger.info(resBP.size() + " Suppliers already available in the db");$    }$ else {$      new XMLParser().readSuppliers(em,"com/sap/espm/model/data/Business_Partners.xml");$      em.getTransaction().commit();$      queryBP=em.createQuery("SELECT s FROM Supplier s",Supplier.class);$      resBP=queryBP.getResultList();$      logger.info(resBP.size() + " suppliers loaded into the db");$    }$  }$ catch (  Exception e) {$    logger.error("Exception occured",e);$  }$ finally {$    em.close();$  }$  return resBP;$}$
public boolean containsDetailsView(DetailsView detailsView){$  return getDisplayArea(detailsView.getTab()) != null;$}$
@Deprecated public int _INVALID_getDamage(){$  return NumberConversions.ceil(getDamage());$}$
public static final void shuffle(int[] a,int start,int len,Random r){$  for (int i=start + len; --i > 0; ) {$    int t=a[i], j=r.nextInt(i);$    a[i]=a[j];$    a[j]=t;$  }$}$
public SpringPlugin(){$  this.configFiles=new String[]{"classpath:applicationContext.xml"};$}$
public static float distance(float eventX,float startX,float eventY,float startY){$  float dx=eventX - startX;$  float dy=eventY - startY;$  return (float)Math.sqrt(dx * dx + dy * dy);$}$
public boolean oneofScoped(){$  return oneof != null;$}$
final public boolean isMultipart(){$  return _multipart;$}$
public MarketEditQuery deleted(Boolean value){$  return unsafeParam("deleted",value);$}$
public static <L,R>Either<L,R> right(R right){$  return new Either<>(null,right,false);$}$
public String toString(){$  return "" + offset;$}$
public static SM_SYSTEM_MESSAGE STR_STIGMA_EXHAUST(int num0sp){$  return new SM_SYSTEM_MESSAGE(1300411,num0sp);$}$
public PhotosCreateCommentQuery attachments(String... value){$  return unsafeParam("attachments",value);$}$
public DistanceEstimator(Distribution tmSymbolsPerRank,Distribution tmNonSymbolsPerRank,NGramSizeEstimator nseEstimator){$  SymbolsPerRank=new Distribution();$  SymbolsPerRank.asTreeMap().putAll(tmSymbolsPerRank.asTreeMap());$  NonSymbolsPerRank=new Distribution();$  NonSymbolsPerRank.asTreeMap().putAll(tmNonSymbolsPerRank.asTreeMap());$  MinRank=Math.min((Integer)tmSymbolsPerRank.asTreeMap().firstKey(),(Integer)tmNonSymbolsPerRank.asTreeMap().firstKey());$  MaxRank=Math.max((Integer)tmSymbolsPerRank.asTreeMap().lastKey(),(Integer)tmNonSymbolsPerRank.asTreeMap().lastKey());$  Estimator=nseEstimator;$}$
private List<Result> makeLookbackResults(JsonNode jsonResult,Set<DimensionColumn> dimensionColumns,Set<MetricColumn> metricColumns,DateTimeZone dateTimeZone){$  List<Result> results=new ArrayList<>();$  for (  JsonNode record : jsonResult) {$    DateTime timeStamp=new DateTime(record.get("timestamp").asText(),dateTimeZone);$    JsonNode result=record.get("result");$    LinkedHashMap<MetricColumn,Object> metricValues=extractMetricValues(metricColumns,result);$    LinkedHashMap<DimensionColumn,DimensionRow> dimensionRows;$    dimensionRows=dimensionColumns == null ? new LinkedHashMap<>() : extractDimensionRows(dimensionColumns,result);$    results.add(new Result(dimensionRows,metricValues,timeStamp));$  }$  return results;$}$
@Override public void populateExpression(Object objValue){$  Double value=defaultValue;$  if (objValue instanceof Integer) {$    int i=((Integer)objValue).intValue();$    value=Double.valueOf((double)i);$  }$ else   if (objValue instanceof Double) {$    value=(Double)objValue;$  }$ else   if (objValue instanceof String) {$    value=Double.valueOf((String)objValue);$  }$  populateField(value);$}$
private String statusAndPermissions(DataApprovalWorkflow workflow,Period period,OrganisationUnit organisationUnit,DataElementCategoryOptionCombo attributeOptionCombo){$  DataApprovalStatus status=dataApprovalService.getDataApprovalStatusAndPermissions(workflow,period,organisationUnit,attributeOptionCombo);$  DataApprovalPermissions permissions=status.getPermissions();$  return status.getState().toString() + " level=" + (status.getApprovedLevel() == null ? "null" : status.getApprovedLevel().getName())+ " approve="+ (permissions.isMayApprove() ? "T" : "F")+ " unapprove="+ (permissions.isMayUnapprove() ? "T" : "F")+ " accept="+ (permissions.isMayAccept() ? "T" : "F")+ " unaccept="+ (permissions.isMayUnaccept() ? "T" : "F")+ " read="+ (permissions.isMayReadData() ? "T" : "F");$}$
public short[] unCompress(byte[] compInput){$  try {$    return Snappy.uncompressShortArray(compInput);$  }$ catch (  IOException e) {$    LOGGER.error(e,e.getMessage());$  }$  return null;$}$
private Collection<AssociationsInfo> analyzeAssociations(DataSupport baseObj){$  try {$    Collection<AssociationsInfo> associationInfos=getAssociationInfo(baseObj.getClassName());$    analyzeAssociatedModels(baseObj,associationInfos);$    return associationInfos;$  }$ catch (  Exception e) {$    throw new DataSupportException(e.getMessage());$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SkillATK_Instant_A_TO_SELF(String skillcaster,int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200869,skillcaster,num0,skillname);$}$
private void drawDownError(Canvas canvas){$  if (mIfShowMarkRun) {$    final float progress=mProgress;$    drawText(canvas,progress);$  }$  publicPaint.setColor(Color.WHITE);$  final Path dst=mDst;$  dst.reset();$  dst.lineTo(0,0);$  pathMeasure1.getSegment(0.2f * mErrorPathLengthLeft,mErrorRightDegree * mErrorPathLengthLeft,dst,true);$  canvas.drawPath(dst,publicPaint);$  dst.reset();$  dst.lineTo(0,0);$  pathMeasure2.getSegment(0.2f * mErrorPathLengthRight,mErrorLeftDegree * mErrorPathLengthRight,dst,true);$  canvas.drawPath(dst,publicPaint);$}$
protected void reset(VisualItem item){$  item.setVisible(false);$  item.setEndVisible(false);$  item.setStartStrokeColor(item.getStrokeColor());$  item.revertToDefault(VisualItem.STROKECOLOR);$  item.revertToDefault(VisualItem.ENDSTROKECOLOR);$  item.setStartTextColor(item.getTextColor());$  item.revertToDefault(VisualItem.TEXTCOLOR);$  item.revertToDefault(VisualItem.ENDTEXTCOLOR);$  item.setStartFillColor(item.getFillColor());$  item.revertToDefault(VisualItem.FILLCOLOR);$  item.revertToDefault(VisualItem.ENDFILLCOLOR);$}$
public static void releasePbsStream(IThreadLocalResource pbsStream){$  pbsStream.release();$}$
public void addField(FieldState symbolType){$  if (symbolType != null) {$    FieldConfigBase fieldConfig=symbolType.getConfigField();$    Class<?> panelId=symbolType.getClass();$    VendorOptionVersion vendorOption=symbolType.getVendorOption();$    if (fieldConfig == null) {$      ConsoleManager.getInstance().error(this,"FieldConfigSymbolType.addPanel passed a field config as null");$    }$ else {$      containingPanel.add(fieldConfig.getPanel(),panelId.getName());$      fieldConfigMap.put(panelId,fieldConfig);$      vendorOptionMap.put(panelId,vendorOption);$      fieldConfig.setExpressionUpdateListener(this);$      fieldConfig.setParent(this);$    }$  }$}$
private void initWidget(){$  SwipeBackLayout swipeBackLayout=(SwipeBackLayout)findViewById(R.id.activity_login_swipeBackLayout);$  swipeBackLayout.setOnSwipeListener(this);$  StatusBarView statusBar=(StatusBarView)findViewById(R.id.activity_login_statusBar);$  if (DisplayUtils.isNeedSetStatusBarMask()) {$    statusBar.setBackgroundResource(R.color.colorPrimary_light);$    statusBar.setMask(true);$  }$  this.container=(CoordinatorLayout)findViewById(R.id.activity_login_container);$  ImageButton closeBtn=(ImageButton)findViewById(R.id.activity_login_closeBtn);$  closeBtn.setOnClickListener(this);$  if (Mysplash.getInstance().isLightTheme()) {$    closeBtn.setImageResource(R.drawable.ic_close_light);$  }$ else {$    closeBtn.setImageResource(R.drawable.ic_close_dark);$  }$  ImageView icon=(ImageView)findViewById(R.id.activity_login_icon);$  Glide.with(this).load(R.drawable.ic_launcher).diskCacheStrategy(DiskCacheStrategy.NONE).into(icon);$  DisplayUtils.setTypeface(this,((TextView)findViewById(R.id.activity_login_content)));$  Button loginBtn=(Button)findViewById(R.id.activity_login_loginBtn);$  loginBtn.setOnClickListener(this);$  Button joinBtn=(Button)findViewById(R.id.activity_login_joinBtn);$  joinBtn.setOnClickListener(this);$  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {$    if (Mysplash.getInstance().isLightTheme()) {$      loginBtn.setBackgroundResource(R.color.colorTextTitle_light);$      joinBtn.setBackgroundResource(R.color.colorPrimaryDark_light);$    }$ else {$      loginBtn.setBackgroundResource(R.color.colorTextTitle_dark);$      joinBtn.setBackgroundResource(R.color.colorPrimaryDark_dark);$    }$  }$ else {$    loginBtn.setBackgroundResource(R.drawable.button_login);$    joinBtn.setBackgroundResource(R.drawable.button_join);$  }$  this.buttonContainer=(LinearLayout)findViewById(R.id.activity_login_buttonContainer);$  this.progressContainer=(RelativeLayout)findViewById(R.id.activity_login_progressContainer);$  progressContainer.setVisibility(View.GONE);$}$
public String toString(){$  return val ? "Integrity.YES" : "Integrity.NO";$}$
@Override public void bindViewHolder(@NonNull ViewHolder viewHolder,@NonNull String item,int position){$  Glide.with(viewHolder.itemView.getContext()).load(item).diskCacheStrategy(DiskCacheStrategy.NONE).into(viewHolder.photo);$  viewHolder.itemView.setOnClickListener(null);$}$
private void init(String[] catalogs,boolean preferPublic){$  fCatalogsList=(catalogs != null) ? catalogs.clone() : null;$  fPreferPublic=preferPublic;$  fResolverCatalogManager=new CatalogManager();$  fResolverCatalogManager.setAllowOasisXMLCatalogPI(false);$  fResolverCatalogManager.setCatalogClassName("org.apache.xml.resolver.Catalog");$  fResolverCatalogManager.setCatalogFiles("");$  fResolverCatalogManager.setIgnoreMissingProperties(true);$  fResolverCatalogManager.setPreferPublic(fPreferPublic);$  fResolverCatalogManager.setRelativeCatalogs(false);$  fResolverCatalogManager.setUseStaticCatalog(false);$  fResolverCatalogManager.setVerbosity(0);$}$
static void validateRefSpec(Location location,Map<String,String> env,Path cwd,String refspec) throws EvalException {$  try {$    executeGit(cwd,ImmutableList.of("check-ref-format","--allow-onelevel","--refspec-pattern",refspec),env,false);$  }$ catch (  BadExitStatusWithOutputException e) {$    throw new EvalException(location,"Invalid refspec: " + refspec);$  }$catch (  CommandException e) {$    throw new RuntimeException("Error validating refspec",e);$  }$}$
public ChangeReport(final Change change){$  this(change.getChangeId());$}$
public boolean isCritical(){$  return true;$}$
void reset(){$  if (sUidToThrottler != null)   sUidToThrottler.remove(mUid);$  mSharedPreferences.edit().remove(SCORE + mUid).remove(LAST_REQUEST + mUid).remove(BANNED_UNTIL + mUid).apply();$}$
public void insertedNodeFromDOM(Node node){$  if (node == null)   return;$  if (fInsertNode == node)   return;$  if (fInsertedFromRange)   return;$  Node parent=node.getParentNode();$  if (parent == fStartContainer) {$    int index=indexOf(node,fStartContainer);$    if (index < fStartOffset) {$      fStartOffset++;$    }$  }$  if (parent == fEndContainer) {$    int index=indexOf(node,fEndContainer);$    if (index < fEndOffset) {$      fEndOffset++;$    }$  }$}$
@NonNull static String createUniqueFilename(String prefix){$  String randomId=Long.toString(System.currentTimeMillis());$  return String.format(Locale.US,FILE_NAME_TEMPLATE,prefix,randomId);$}$
public GetTypeDescriptorActionInfo(){$}$
public boolean isButtonEnabled(SiteAdminButtons button){$  return !getButton(button).findElement(By.xpath(BUTTON_TABLE_PARENT_XPATH)).getAttribute(HtmlTags.Attributes.CLASS).contains(DISABLED_BUTTON_CLASS);$}$
public StatelessChunkListDataIterator(String entityName,SessionFactory sessionFactory,int fetchSize,boolean performOrderById,int chunkSize){$  super(entityName,sessionFactory,fetchSize,performOrderById,chunkSize);$}$
public SVNCompareRevisionsInput(IFile resource,ILogEntry[] logEntries){$  super(new CompareConfiguration());$  this.resource=resource;$  this.logEntries=logEntries;$  updateCurrentEdition();$  initializeActions();$}$
public boolean isSelectionFindable(){$  return false;$}$
private void populateAttributeComboBox(){$  if (attributeComboBox != null) {$    setPopulatingComboBox(true);$    Object selectedItem=model.getSelectedItem();$    model.removeAllElements();$    model.addElement("");$    if (attributeNameList != null) {$      for (      String attribute : attributeNameList) {$        model.addElement(attribute);$      }$    }$    attributeComboBox.setModel(model);$    model.setSelectedItem(selectedItem);$    setPopulatingComboBox(false);$  }$}$
private char readEscapeCharacter() throws JSONException {$  char escaped=in.charAt(pos++);$switch (escaped) {$case 'u':$    if (pos + 4 > in.length()) {$      throw syntaxError("Unterminated escape sequence");$    }$  String hex=in.substring(pos,pos + 4);$pos+=4;$try {$return (char)Integer.parseInt(hex,16);$}$ catch (NumberFormatException nfe) {$throw syntaxError("Invalid escape sequence: " + hex);$}$case 't':$return '\t';$case 'b':$return '\b';$case 'n':$return '\n';$case 'r':$return '\r';$case 'f':$return '\f';$case '\'':$case '"':$case '\\':$default :$return escaped;$}$}$
static CachedModel create(Class<Model> model,Map<Integer,Map<String,PathMapping>> pathmapping,Module module){$  CachedModel m=new CachedModel();$  m.model=model;$  m.pathmapping=pathmapping;$  m.module=module;$  return m;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_ME_TO_B(String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200504,skilltarget,skillname);$}$
public static void show(Activity activity,int resId){$  show(activity,resId,LENGTH_SHORT);$}$
public static String lowerFirst(String s){$  if (s.isEmpty()) {$    return s;$  }$  char c=s.charAt(0);$  if (Character.isLowerCase(c)) {$    return s;$  }$  c=Character.toLowerCase(c);$  return c + s.substring(1);$}$
public void actionPerformed(ActionEvent ev){$  String radius="" + getViewer().getNodeRadius();$  radius=JOptionPane.showInputDialog(getViewer().getFrame(),"Enter node radius (0-100)",radius);$  if (radius != null && Basic.isInteger(radius) && Integer.parseInt(radius) >= 0)   execute("set nodeRadius=" + radius + ";");$}$
public int readBytes(byte[] value,int length) throws JMSException {$  initializeReading();$  if (value == null) {$    throw new NullPointerException("Byte buffer is null");$  }$  if (length < 0 || length > value.length) {$    throw new IndexOutOfBoundsException("Illegal byte buffer size. Must be between 0 and value.length.");$  }$  this.dataIn.mark(Integer.MAX_VALUE);$  try {$    int n=0;$    while (n < length) {$      int count=this.dataIn.read(value,n,length - n);$      if (count < 0) {$        break;$      }$      n+=count;$    }$    if (n == 0 && length > 0) {$      n=-1;$    }$    return n;$  }$ catch (  EOFException eof) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException e) {$      JMSException jmsEx=new JMSException(e.toString());$      jmsEx.setLinkedException(e);$      throw jmsEx;$    }$    JMSException jmsEx=new MessageEOFException(eof.toString());$    jmsEx.setLinkedException(eof);$    throw jmsEx;$  }$catch (  IOException ioe) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException e) {$      JMSException jmsEx=new JMSException(e.toString());$      jmsEx.setLinkedException(e);$      throw jmsEx;$    }$    JMSException jmsEx=new MessageFormatException("Format error occurred" + ioe.toString());$    jmsEx.setLinkedException(ioe);$    throw jmsEx;$  }$}$
public ConstraintTrustVerifier(){$}$
private final boolean isPostBreak(Item syllable){$  return ((syllable.getPrevious() == null) || "pau".equals(postBreakPath.findFeature(syllable)));$}$
private void invalidateLayouts(){$  itemsLayout=null;$  valueLayout=null;$  scrollingOffset=0;$}$
public AdsGetCategoriesQuery lang(String value){$  return unsafeParam("lang",value);$}$
public int nextInt(){$  if (m_modCount != m_table.getModificationCount())   throw new ConcurrentModificationException();$  m_cur=m_rows.nextInt();$  return m_cur;$}$
public static CommandResult execCommand(String[] commands,boolean isRoot,boolean isNeedResultMsg){$  int result=-1;$  if (commands == null || commands.length == 0) {$    return new CommandResult(result,null,null);$  }$  Process process=null;$  BufferedReader successResult=null;$  BufferedReader errorResult=null;$  StringBuilder successMsg=null;$  StringBuilder errorMsg=null;$  DataOutputStream os=null;$  try {$    process=Runtime.getRuntime().exec(isRoot ? COMMAND_SU : COMMAND_SH);$    os=new DataOutputStream(process.getOutputStream());$    for (    String command : commands) {$      if (command == null) {$        continue;$      }$      os.write(command.getBytes());$      os.writeBytes(COMMAND_LINE_END);$      os.flush();$    }$    os.writeBytes(COMMAND_EXIT);$    os.flush();$    result=process.waitFor();$    if (isNeedResultMsg) {$      successMsg=new StringBuilder();$      errorMsg=new StringBuilder();$      successResult=new BufferedReader(new InputStreamReader(process.getInputStream()));$      errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream()));$      String s;$      while ((s=successResult.readLine()) != null) {$        successMsg.append(s);$      }$      while ((s=errorResult.readLine()) != null) {$        errorMsg.append(s);$      }$    }$  }$ catch (  IOException e) {$    e.printStackTrace();$  }$catch (  Exception e) {$    e.printStackTrace();$  }$ finally {$    try {$      if (os != null) {$        os.close();$      }$      if (successResult != null) {$        successResult.close();$      }$      if (errorResult != null) {$        errorResult.close();$      }$    }$ catch (    IOException e) {$      e.printStackTrace();$    }$    if (process != null) {$      process.destroy();$    }$  }$  return new CommandResult(result,successMsg == null ? null : successMsg.toString(),errorMsg == null ? null : errorMsg.toString());$}$
private void updateButtonState(boolean enabled){$  btnConnect.setEnabled(enabled);$  connectionComboBox.setEnabled(enabled);$  btnEditConnection.setEnabled(enabled);$}$
private List<EmailData> createEmailDataList(List<Message> messageList){$  List<EmailData> emailDataList=new ArrayList<>();$  for (  Message message : messageList) {$    EmailData emailData=emailDataFactory.create(message);$    emailDataList.add(emailData);$  }$  return emailDataList;$}$
public boolean write(byte[] bytes,int offset,int size){$  if (line == null) {$    return false;$  }$  int bytesRemaining=size;$  int curIndex=offset;$  if (firstSample) {$    firstSample=false;$    timer.stop("firstAudio");$    if (audioMetrics) {$      timer.getTimer("firstAudio").showTimesShortTitle("");$      timer.getTimer("firstAudio").showTimesShort(0);$    }$  }$  debugPrint(" au write " + bytesRemaining + " pos "+ line.getMicrosecondPosition()+ " avail "+ line.available()+ " bsz "+ line.getBufferSize());$  while (bytesRemaining > 0 && !isCancelled()) {$    if (!waitResume()) {$      return false;$    }$    debugPrint("   queueing cur " + curIndex + " br "+ bytesRemaining);$    int bytesWritten;$synchronized (lineLock) {$      bytesWritten=line.write(bytes,curIndex,Math.min(BYTES_PER_WRITE,bytesRemaining));$      if (bytesWritten != bytesWritten) {$        debugPrint("RETRY! bw" + bytesWritten + " br "+ bytesRemaining);$      }$      curIndex+=bytesWritten;$      bytesRemaining-=bytesWritten;$    }$    debugPrint("   wrote " + " cur " + curIndex + " br "+ bytesRemaining+ " bw "+ bytesWritten);$  }$  return !isCancelled() && !isDone();$}$
public Builder fadeAnimation(Boolean fadeAnimation){$  this.fadeAnimation=fadeAnimation;$  return this;$}$
public FileFooter readFooter() throws IOException {$  ThriftReader thriftReader=openThriftReader(filePath);$  thriftReader.open();$  thriftReader.setReadOffset(offset);$  FileFooter footer=(FileFooter)thriftReader.read();$  thriftReader.close();$  return footer;$}$
public static Configuration createSubEquipment(){$  Configuration configuration=new Configuration();$  SubEquipment subEquipment=SubEquipment.create("SE_INI_TEST").id(25L).statusTag(StatusTag.create("SE:STATUS").id(300L).build()).commFaultTag(CommFaultTag.create("SE:Comm").id(301L).build()).aliveTag(AliveTag.create("SE:Alive").id(302L).address(new DataTagAddress()).build(),60000).build();$  subEquipment.setEquipmentId(15L);$  configuration.addEntity(subEquipment);$  return configuration;$}$
private void compareSurrogateKeyData(List<String> data,Dictionary forwardDictionary){$  int surrogateKey=0;$  for (int i=0; i < data.size(); i++) {$    surrogateKey++;$    String dictionaryValue=forwardDictionary.getDictionaryValueForKey(surrogateKey);$    assertTrue(data.get(i).equals(dictionaryValue));$  }$}$
private static int byteCompaction(int mode,int[] codewords,Charset encoding,int codeIndex,StringBuilder result){$  ByteArrayOutputStream decodedBytes=new ByteArrayOutputStream();$  if (mode == BYTE_COMPACTION_MODE_LATCH) {$    int count=0;$    long value=0;$    int[] byteCompactedCodewords=new int[6];$    boolean end=false;$    int nextCode=codewords[codeIndex++];$    while ((codeIndex < codewords[0]) && !end) {$      byteCompactedCodewords[count++]=nextCode;$      value=900 * value + nextCode;$      nextCode=codewords[codeIndex++];$      if (nextCode == TEXT_COMPACTION_MODE_LATCH || nextCode == BYTE_COMPACTION_MODE_LATCH || nextCode == NUMERIC_COMPACTION_MODE_LATCH || nextCode == BYTE_COMPACTION_MODE_LATCH_6 || nextCode == BEGIN_MACRO_PDF417_CONTROL_BLOCK || nextCode == BEGIN_MACRO_PDF417_OPTIONAL_FIELD || nextCode == MACRO_PDF417_TERMINATOR) {$        codeIndex--;$        end=true;$      }$ else {$        if ((count % 5 == 0) && (count > 0)) {$          for (int j=0; j < 6; ++j) {$            decodedBytes.write((byte)(value >> (8 * (5 - j))));$          }$          value=0;$          count=0;$        }$      }$    }$    if (codeIndex == codewords[0] && nextCode < TEXT_COMPACTION_MODE_LATCH) {$      byteCompactedCodewords[count++]=nextCode;$    }$    for (int i=0; i < count; i++) {$      decodedBytes.write((byte)byteCompactedCodewords[i]);$    }$  }$ else   if (mode == BYTE_COMPACTION_MODE_LATCH_6) {$    int count=0;$    long value=0;$    boolean end=false;$    while (codeIndex < codewords[0] && !end) {$      int code=codewords[codeIndex++];$      if (code < TEXT_COMPACTION_MODE_LATCH) {$        count++;$        value=900 * value + code;$      }$ else {$        if (code == TEXT_COMPACTION_MODE_LATCH || code == BYTE_COMPACTION_MODE_LATCH || code == NUMERIC_COMPACTION_MODE_LATCH || code == BYTE_COMPACTION_MODE_LATCH_6 || code == BEGIN_MACRO_PDF417_CONTROL_BLOCK || code == BEGIN_MACRO_PDF417_OPTIONAL_FIELD || code == MACRO_PDF417_TERMINATOR) {$          codeIndex--;$          end=true;$        }$      }$      if ((count % 5 == 0) && (count > 0)) {$        for (int j=0; j < 6; ++j) {$          decodedBytes.write((byte)(value >> (8 * (5 - j))));$        }$        value=0;$        count=0;$      }$    }$  }$  result.append(new String(decodedBytes.toByteArray(),encoding));$  return codeIndex;$}$
@Override public IBinder onBind(Intent intent){$  return null;$}$
private void decode(byte[] data,int width,int height){$  Size size=activity.getCameraManager().getPreviewSize();$  byte[] rotatedData=new byte[data.length];$  for (int y=0; y < size.height; y++) {$    for (int x=0; x < size.width; x++)     rotatedData[x * size.height + size.height - y - 1]=data[x + y * size.width];$  }$  int tmp=size.width;$  size.width=size.height;$  size.height=tmp;$  Result rawResult=null;$  PlanarYUVLuminanceSource source=buildLuminanceSource(rotatedData,size.width,size.height);$  if (source != null) {$    BinaryBitmap bitmap=new BinaryBitmap(new HybridBinarizer(source));$    try {$      rawResult=multiFormatReader.decodeWithState(bitmap);$    }$ catch (    ReaderException re) {$    }$ finally {$      multiFormatReader.reset();$    }$  }$  Handler handler=activity.getHandler();$  if (rawResult != null) {$    if (handler != null) {$      Message message=Message.obtain(handler,R.id.decode_succeeded,rawResult);$      Bundle bundle=new Bundle();$      bundleThumbnail(source,bundle);$      message.setData(bundle);$      message.sendToTarget();$    }$  }$ else {$    if (handler != null) {$      Message message=Message.obtain(handler,R.id.decode_failed);$      message.sendToTarget();$    }$  }$}$
public Number sum(SelectColumn funcColumn,IQueryResultSet<IEntryPacket> entries) throws SQLException {$  if (entries.isEmpty())   return null;$  Iterator<IEntryPacket> iter=entries.iterator();$  IEntryPacket entry=iter.next();$  Number sum=getNumber(entry,funcColumn,entries);$  while (iter.hasNext()) {$    entry=iter.next();$    sum=NumberUtil.add(sum,getNumber(entry,funcColumn,entries),sum.getClass().getName());$  }$  return sum;$}$
@Override public void addEntry(CatalogEntry entry){$  int type=entry.getEntryType();$  if (type == URISUFFIX) {$    String suffix=normalizeURI(entry.getEntryArg(0));$    String fsi=makeAbsolute(normalizeURI(entry.getEntryArg(1)));$    entry.setEntryArg(1,fsi);$    catalogManager.debug.message(4,"URISUFFIX",suffix,fsi);$  }$ else   if (type == SYSTEMSUFFIX) {$    String suffix=normalizeURI(entry.getEntryArg(0));$    String fsi=makeAbsolute(normalizeURI(entry.getEntryArg(1)));$    entry.setEntryArg(1,fsi);$    catalogManager.debug.message(4,"SYSTEMSUFFIX",suffix,fsi);$  }$  super.addEntry(entry);$}$
public static int gcd(final int p,final int q){$  int u=p;$  int v=q;$  if ((u == 0) || (v == 0)) {$    if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {$      throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31",p,q);$    }$    return Math.abs(u) + Math.abs(v);$  }$  if (u > 0) {$    u=-u;$  }$  if (v > 0) {$    v=-v;$  }$  int k=0;$  while ((u & 1) == 0 && (v & 1) == 0 && k < 31) {$    u/=2;$    v/=2;$    k++;$  }$  if (k == 31) {$    throw MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31",p,q);$  }$  int t=((u & 1) == 1) ? v : -(u / 2);$  do {$    while ((t & 1) == 0) {$      t/=2;$    }$    if (t > 0) {$      u=-t;$    }$ else {$      v=t;$    }$    t=(v - u) / 2;$  }$ while (t != 0);$  return -u * (1 << k);$}$
private Collection<? extends ClientRequestResult> handleClientRequest(@Valid final ClientRequest clientRequest,final Session session,final Destination replyDestination){$switch (clientRequest.getRequestType()) {$case TAG_CONFIGURATION_REQUEST:$    if (LOG.isDebugEnabled()) {$      LOG.debug(String.format("handleClientRequest() - Received a TAG_CONFIGURATION_REQUEST for %d tags (with configuration details).",clientRequest.getIds().size()));$    }$  return tagrequestHelper.handleTagConfigurationRequest(clientRequest);$case APPLY_CONFIGURATION_REQUEST:$if (LOG.isDebugEnabled()) {$  LOG.debug("handleClientRequest() - Received an APPLY_CONFIGURATION_REQUEST with " + clientRequest.getIds().size() + " configurations.");$}$return clientConfigurationRequestHandler.handleApplyConfigurationRequest(clientRequest,session,replyDestination);$case RETRIEVE_CONFIGURATION_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a RETRIEVE_CONFIGURATION_REQUEST.");$}$return clientConfigurationRequestHandler.handleRetrieveConfigurationsRequest(clientRequest,session,replyDestination);$case TAG_REQUEST:$if (LOG.isDebugEnabled()) {$if (clientRequest.getIds().isEmpty()) {$LOG.debug(String.format("handleClientRequest() - Received a TAG_REQUEST with %d wildcard(s) for tag name search: %s",clientRequest.getRegexList().size(),clientRequest.getRegexList()));$}$ else {$LOG.debug("handleClientRequest() - Received a TAG_REQUEST for " + clientRequest.getIds().size() + " tags.");$}$}$return tagrequestHelper.handleTagRequest(clientRequest);$case ALARM_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received an ALARM_REQUEST for " + clientRequest.getIds().size() + " alarms.");$}$return clientAlarmRequestHandler.handleAlarmRequest(clientRequest);$case ACTIVE_ALARMS_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received an ACTIVE_ALARMS_REQUEST.");$}$return clientAlarmRequestHandler.handleActiveAlarmRequest(clientRequest);$case SUPERVISION_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a SUPERVISION_REQUEST.");$}$return supervisionFacade.getAllSupervisionStates();$case COMMAND_HANDLE_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a COMMAND_HANDLE_REQUEST for " + clientRequest.getIds().size() + " commands.");$}$return clientCommandRequestHandler.handleCommandHandleRequest(clientRequest);$case EXECUTE_COMMAND_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received an EXECUTE_COMMAND_REQUEST.");$}$return clientCommandRequestHandler.handleExecuteCommandRequest(clientRequest);$case DAQ_XML_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a DAQ_XML_REQUEST");$}$return clientProcessRequestHandler.handleDaqXmlRequest(clientRequest);$case PROCESS_NAMES_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a PROCESS_NAMES_REQUEST");$}$return clientProcessRequestHandler.handleProcessNamesRequest(clientRequest);$case DEVICE_CLASS_NAMES_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a DEVICE_CLASS_NAMES_REQUEST");$}$return clientDeviceRequestHelper.handleDeviceClassNamesRequest(clientRequest);$case DEVICE_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a DEVICE_REQUEST");$}$return clientDeviceRequestHelper.handleDeviceRequest(clientRequest);$case TAG_STATISTICS_REQUEST:$if (LOG.isDebugEnabled()) {$LOG.debug("handleClientRequest() - Received a TAG_STATISTICS_REQUEST");$}$return tagrequestHelper.handleTagStatisticsRequest(clientRequest);$default :$LOG.error("handleClientRequest() - Client request not supported: " + clientRequest.getRequestType());$return Collections.emptyList();$}$}$
private void updateGraph(){$  graph.clear();$  Map<String,Node> className2Node=new HashMap<>();$  for (  String className1 : getChartData().getClassNames()) {$    int prevalenceOfClass1=0;$    for (    String series : getChartData().getSeriesNames()) {$      double percentage=100.0 * getChartData().getValue(series,className1).doubleValue() / getChartData().getTotalForSeries(series);$      if (percentage >= getMinThreshold())       prevalenceOfClass1++;$    }$    double prevalencePercentage=100.0 * prevalenceOfClass1 / (double)getChartData().getNumberOfSeries();$    if (prevalencePercentage >= getMinPrevalence() && prevalencePercentage <= getMaxPrevalence()) {$      Node v=graph.newNode();$      NodeData nodeData=new NodeData();$      nodeData.setLabel(className1);$      v.setData(nodeData);$      className2Node.put(className1,v);$      nodeData.setPrevalence(prevalenceOfClass1);$    }$  }$  for (Node v=graph.getFirstNode(); v != null; v=v.getNext()) {$    String className1=((NodeData)v.getData()).getLabel();$    for (Node w=v.getNext(); w != null; w=w.getNext()) {$      String className2=((NodeData)w.getData()).getLabel();$      Set<String> intersection=new HashSet<>();$      Set<String> union=new HashSet<>();$      for (      String series : getChartData().getSeriesNames()) {$        double total=getChartData().getTotalForSeries(series);$        double percentage1=100.0 * getChartData().getValue(series,className1).doubleValue() / total;$        double percentage2=100.0 * getChartData().getValue(series,className2).doubleValue() / total;$        if (percentage1 >= getMinThreshold() || percentage2 >= getMinThreshold()) {$          union.add(series);$        }$        if (percentage1 > getMinThreshold() && percentage2 >= getMinThreshold()) {$          intersection.add(series);$        }$      }$      if (union.size() > 0) {$        double probabilityPercent=(100.0 * (double)intersection.size() / (double)union.size());$        if (probabilityPercent >= getMinProbability()) {$          Edge e=graph.newEdge(className2Node.get(className1),className2Node.get(className2));$          graph.setInfo(e,(double)intersection.size() / (double)union.size());$        }$      }$    }$  }$}$
private boolean matchValue(Collection<?> collection,int tokenIndex){$  if (tokenIndex == _tokens.length)   return match(collection,getExpectedValue());$  return matchCollectionItemNestedProperty(collection,tokenIndex);$}$
public String toString(){$  return "null";$}$
public void populateContextForRequest(HttpServletRequest request,HttpServletResponse response,ServletContext servletContext){$  populateContextForRequest(context,this,request,response,servletContext);$}$
public void clear(){$  fromDir=null;$  fromExt=null;$  bList.removeAllElements();$  hasChanged=true;$}$
public void timeoutOccured(Collection<WatchedObject> bucket) throws Exception {$  SocketAddress serverAddress=null;$  SocketChannel socketChannel=null;$  long startInvocationVersion=-1;$  try {$    socketChannel=SocketChannel.open();$    LRMIUtilities.initNewSocketProperties(socketChannel);$    Socket newSock=socketChannel.socket();$    WatchedObject watched=bucket.iterator().next();$    startInvocationVersion=watched.getVersion();$    serverAddress=watched.getSocket().socket().getRemoteSocketAddress();$    if (serverAddress == null)     throw new IOException("Watched socket was already closed: " + watched.getSocket().socket());$    final int localPort=watched.getSocket().socket().getLocalPort();$    if (_logger.isLoggable(Level.FINE))     _logger.log(Level.FINE,"Attempting to create a new socket to the ServerEndPoint [" + serverAddress + "], local port["+ localPort+ "]");$    socketChannel.configureBlocking(true);$    long absoluteTimeout=SystemTime.timeMillis() + _inspectResponseTimeout;$    newSock.connect(serverAddress,_INSPECT_TIMEOUT);$    handleOpenSocket(socketChannel,localPort,absoluteTimeout,watched.getClient());$    if (_logger.isLoggable(Level.FINE))     _logger.log(Level.FINE,getValidConnectionMessage(serverAddress));$    watched.startWatch();$  }$ catch (  IOException e) {$    close(bucket,serverAddress,e,startInvocationVersion);$  }$ finally {$    if (socketChannel != null)     socketChannel.close();$  }$}$
public boolean postScale(float sx,float sy){$  Matrix matrix=new Matrix();$  matrix.setValues(new float[]{sx,0,0,0,sy,0,0,0,1});$  Matrix current=new Matrix();$  current.setValues(MATRIX);$  matrix.preConcat(current);$  set(matrix);$  return true;$}$
public static void playWavFile(String filename,int loop,boolean waitUntilCompleted){$  AudioInputStream audioInputStream=null;$  File clipFile=new File(filename);$  try {$    audioInputStream=AudioSystem.getAudioInputStream(clipFile);$  }$ catch (  Exception e) {$    e.printStackTrace();$  }$  if (audioInputStream != null) {$    AudioFormat format=audioInputStream.getFormat();$    DataLine.Info info=new DataLine.Info(Clip.class,format);$    try {$      m_clip=(Clip)AudioSystem.getLine(info);$      m_clip.open(audioInputStream);$    }$ catch (    LineUnavailableException e) {$      e.printStackTrace();$    }$catch (    IOException e) {$      e.printStackTrace();$    }$    m_clip.loop(loop);$    if (waitUntilCompleted)     m_clip.drain();$  }$ else {$    System.out.println("playWavFile<init>(): can't get data from file " + clipFile.getName());$  }$}$
public static IBaseResourceStorageFactory current(){$  return currentFactory;$}$
@Override protected void synchronizeData(){$  needsSyncData(false);$  DeferredDocumentImpl ownerDocument=(DeferredDocumentImpl)this.ownerDocument();$  name=ownerDocument.getNodeName(fNodeIndex);$  ownerDocument.getNodeType(fNodeIndex);$  publicId=ownerDocument.getNodeValue(fNodeIndex);$  systemId=ownerDocument.getNodeURI(fNodeIndex);$  int extraDataIndex=ownerDocument.getNodeExtra(fNodeIndex);$  ownerDocument.getNodeType(extraDataIndex);$  baseURI=ownerDocument.getNodeName(extraDataIndex);$}$
public void addException(Access node){$  List<Access> list=(parent == null || state == null) ? getExceptionListNoTransform() : getExceptionList();$  list.addChild(node);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_PARTY_LOOTING_CHANGED_RULE(String value0,String value1,String value2){$  return new SM_SYSTEM_MESSAGE(1390250,value0,value1,value2);$}$
public UsersGetQuery nameCase(UsersNameCase value){$  return unsafeParam("name_case",value);$}$
public static Diphone loadBinary(ByteBuffer bb) throws IOException {$  StringBuffer sb=new StringBuffer();$  int midPoint;$  int numSamples;$  Sample[] samples;$  if (bb.getInt() != MAGIC) {$    throw new Error("Bad magic number in diphone");$  }$  for (int i=0; i < NAME_LENGTH; i++) {$    char c=bb.getChar();$    if (!Character.isWhitespace(c)) {$      sb.append(c);$    }$  }$  midPoint=bb.getInt();$  numSamples=bb.getInt();$  samples=new Sample[numSamples];$  for (int i=0; i < numSamples; i++) {$    samples[i]=Sample.loadBinary(bb);$  }$  return new Diphone(sb.toString().trim(),samples,midPoint);$}$
public static int diff(FeatureVector v1,FeatureVector v2){$  int ret=0;$  if (v1.byteValuedDiscreteFeatures.length < v2.byteValuedDiscreteFeatures.length) {$    throw new RuntimeException("v1 and v2 don't have the same number of byte-valued features: [" + v1.byteValuedDiscreteFeatures.length + "] versus ["+ v2.byteValuedDiscreteFeatures.length+ "].");$  }$  for (int i=0; i < v1.byteValuedDiscreteFeatures.length; i++) {$    if (v1.byteValuedDiscreteFeatures[i] == v2.byteValuedDiscreteFeatures[i])     ret++;$  }$  if (v1.shortValuedDiscreteFeatures.length < v2.shortValuedDiscreteFeatures.length) {$    throw new RuntimeException("v1 and v2 don't have the same number of short-valued features: [" + v1.shortValuedDiscreteFeatures.length + "] versus ["+ v2.shortValuedDiscreteFeatures.length+ "].");$  }$  for (int i=0; i < v1.shortValuedDiscreteFeatures.length; i++) {$    if (v1.shortValuedDiscreteFeatures[i] == v2.shortValuedDiscreteFeatures[i])     ret++;$  }$  return (ret);$}$
public boolean isNonEscapingElement(String tagName){$  int i;$  if (_nonEscapingElements == null) {$    return false;$  }$  for (i=0; i < _nonEscapingElements.length; ++i)   if (_nonEscapingElements[i].equals(tagName))   return true;$  return false;$}$
private static void createNodeVsBlockMapping(List<NodeBlockRelation> flattenedList,Map<String,List<Distributable>> nodeAndBlockMapping){$  for (  NodeBlockRelation nbr : flattenedList) {$    String node=nbr.getNode();$    List<Distributable> list;$    if (null == nodeAndBlockMapping.get(node)) {$      list=new ArrayList<>(CarbonCommonConstants.DEFAULT_COLLECTION_SIZE);$      list.add(nbr.getBlock());$      Collections.sort(list);$      nodeAndBlockMapping.put(node,list);$    }$ else {$      list=nodeAndBlockMapping.get(node);$      list.add(nbr.getBlock());$      Collections.sort(list);$    }$  }$}$
private boolean isCharType(Field field){$  String type=field.getType().getName();$  return type.equals("char") || type.endsWith("Character");$}$
public boolean hasField(String fldName){$  return fields().contains(fldName);$}$
private int[] pickLocalAddress() throws IOException {$  int[] ret=pickForcedLocalAddress();$  if (ret == null) {$    ret=pickAutoDetectedLocalAddress();$  }$  return ret;$}$
public String sprintf(){$  Enumeration e=vFmt.elements();$  ConversionSpecification cs=null;$  char c=0;$  StringBuilder sb=new StringBuilder();$  while (e.hasMoreElements()) {$    cs=(ConversionSpecification)e.nextElement();$    c=cs.getConversionCharacter();$    if (c == '\0')     sb.append(cs.getLiteral());$ else     if (c == '%')     sb.append("%");$  }$  return sb.toString();$}$
@Override public void reset(){$  super.reset();$  fNamespaceDeclarations=fConfiguration.getFeature(Constants.DOM_NAMESPACE_DECLARATIONS);$  if (fNullFilterInUse) {$    fDOMFilter=null;$    fNullFilterInUse=false;$  }$  if (fSkippedElemStack != null) {$    fSkippedElemStack.removeAllElements();$  }$  fRejectedElementDepth=0;$  fFilterReject=false;$  fSchemaType=null;$}$
@Nullable("if there is no configuration that matches the constraints") public static <T>FolderConfiguration restrict(@NotNull ConfiguredElement<T> compatible,Collection<ConfiguredElement<T>> allItems){$  ArrayList<FolderConfiguration> incompatibleConfigurations=Lists.newArrayListWithCapacity(allItems.size());$  boolean found=false;$  for (  ConfiguredElement configuredItem : allItems) {$    FolderConfiguration configuration=configuredItem.getConfiguration();$    if (configuredItem.equals(compatible)) {$      found=true;$      continue;$    }$    incompatibleConfigurations.add(configuration);$  }$  assert found;$  RestrictedConfiguration restricted=restrict(compatible.getConfiguration(),incompatibleConfigurations);$  return (restricted != null) ? restricted.getAny() : null;$}$
public GeoServerStyleTree(SelectedStyleInterface parent){$  parentObj=parent;$  createUI();$  Dimension preferredSize=new Dimension(250,300);$  setPreferredSize(preferredSize);$}$
public synchronized void onDestroy(){$  cleanupService();$  mHandler.getLooper().quit();$}$
public void seek(long pos){$}$
public void updateCommandTag(final CommandTagUpdate commandTagUpdate,final SourceCommandTag commandTag) throws IllegalAccessException, NoSuchFieldException {$  fillNonNullFields(commandTagUpdate,commandTag,CHANGE_ID_FIELD,COMMAND_TAG_ID_FIELD,EQUIPMENT_ID_FIELD);$  removeListOfFields(commandTagUpdate.getFieldsToRemove(),commandTag);$  if (commandTagUpdate.getHardwareAddressUpdate() != null) {$    updateHardwareAddress(commandTagUpdate.getHardwareAddressUpdate(),commandTag.getHardwareAddress());$  }$}$
private int[] extractRow(int[][] twoDimArray,int r) throws CanceledException {$  assert ((r >= 0) && (r < twoDimArray[0].length));$  int[] row=new int[twoDimArray.length];$  progressListener.setMaximum(row.length);$  for (int i=0; i < row.length; i++) {$    row[i]=twoDimArray[i][r];$    progressListener.setProgress(i);$  }$  return row;$}$
@Override public Filter createLogicFilter(List<Filter> filterList){$  AndImpl filter=null;$  if ((filterList == null) || (filterList.size() != 2)) {$    filter=new AndExtended();$  }$ else {$    filter=new AndExtended(filterList);$  }$  return filter;$}$
@Override public boolean accept(File file){$  String name=file.getName();$  for (  String prefix : this.prefixes) {$    if (caseSensitivity.checkStartsWith(name,prefix)) {$      return true;$    }$  }$  return false;$}$
private double[] generateSample(){$  final RealDistribution uniformDist=new UniformRealDistribution(-100,100);$  final RandomDataGenerator randomDataGenerator=new RandomDataGenerator(100);$  final int sampleSize=randomDataGenerator.nextInt(10,100);$  final double[] out=randomDataGenerator.nextDeviates(uniformDist,sampleSize);$  return out;$}$
public String process(Item item) throws ProcessException {$  int count=-1;$  for (Item p=item.getItemAs(Relation.SYLLABLE_STRUCTURE); p != null; p=p.getPrevious()) {$    count++;$  }$  return Integer.toString(rail(count));$}$
public VideoSearchQueryWithExtended filters(VideoSearchFilter... value){$  return unsafeParam("filters",value);$}$
public String toString(){$  return name;$}$
public void handleStep(final ODEStateInterpolator interpolator,final boolean isLast){$}$
public static long toLong(Object v,long defaultValue){$  if (v != null) {$    if (v instanceof Long) {$      return (Long)v;$    }$    if (v instanceof Integer) {$      return (Integer)v;$    }$    if (v instanceof Float) {$      return (long)((Float)v).floatValue();$    }$    if (v instanceof Double) {$      return (long)((Double)v).doubleValue();$    }$    StringBuilder sb=new StringBuilder();$    String s=v.toString();$    for (int i=0; i < s.length(); i++) {$      char c=s.charAt(i);$      c=X.getNumber(c);$      if (c >= '0' && c <= '9') {$        sb.append(c);$      }$ else       if (c == '-' && sb.length() == 0) {$        sb.append(c);$      }$ else       if (sb.length() > 0) {$        break;$      }$    }$    s=sb.toString();$    if (s.length() > 0) {$      try {$        return Long.parseLong(s);$      }$ catch (      Exception e) {$        log.error(e);$      }$    }$  }$  return defaultValue;$}$
public DocsAddQuery accessKey(String value){$  return unsafeParam("access_key",value);$}$
@SuppressWarnings("rawtypes") static boolean isTrue(Object v1){$  if (v1 instanceof Number) {$    return !Array.get(Array.newInstance(Primitives.unwrap(v1.getClass()),1),0).equals(v1);$  }$  if (v1 instanceof Boolean) {$    return (Boolean)v1;$  }$  if (v1 instanceof Doc) {$    return !((Doc)v1).isWhitespace();$  }$  if (v1 instanceof String) {$    return !Strings.isNullOrEmpty((String)v1);$  }$  if (v1 instanceof Iterable) {$    return ((Iterable)v1).iterator().hasNext();$  }$  return false;$}$
private void handlePuncture(Peer peer,Puncture message) throws IOException {$}$
public Builder clockTicker(Ticker ticker){$  this._ticker=ticker;$  return this;$}$
private Reader createUTF16Reader(InputStream stream,boolean isBigEndian){$  return new UTF16Reader(stream,(fTempString.ch.length << 1),isBigEndian,fErrorReporter.getMessageFormatter(XMLMessageFormatter.XML_DOMAIN),fErrorReporter.getLocale());$}$
public static SM_SYSTEM_MESSAGE STR_MSG_STIGMA_ENCHANT_SUCCESS(DescriptionId descriptionId){$  return new SM_SYSTEM_MESSAGE(1402930,descriptionId);$}$
@Override public String toString(){$  StringBuilder sb=new StringBuilder();$  sb.append(getClass().getSimpleName());$  sb.append(" [");$  sb.append("Hash = ").append(hashCode());$  sb.append(", catalogId=").append(catalogId);$  sb.append(", key=").append(key);$  sb.append(", name=").append(name);$  sb.append("]");$  return sb.toString();$}$
public void configureDetailsView(DetailsViewConfiguration detailsViewConfiguration){$  double topHorizontalDividerResizeWeight=detailsViewConfiguration.getTopHorizontalDividerResizeWeight();$  if (topHorizontalDividerResizeWeight != -1)   detailsTopHorizontalSplitter.setResizeWeight(topHorizontalDividerResizeWeight);$  double topHorizontalDividerLocation=detailsViewConfiguration.getTopHorizontalDividerLocation();$  if (topHorizontalDividerLocation != -1)   detailsTopHorizontalSplitter.setDividerLocation(topHorizontalDividerLocation);$  double bottomHorizontalDividerResizeWeight=detailsViewConfiguration.getBottomHorizontalDividerResizeWeight();$  if (bottomHorizontalDividerResizeWeight != -1)   detailsBottomHorizontalSplitter.setResizeWeight(bottomHorizontalDividerResizeWeight);$  double bottomHorizontalDividerLocation=detailsViewConfiguration.getBottomHorizontalDividerLocation();$  if (bottomHorizontalDividerLocation != -1)   detailsBottomHorizontalSplitter.setDividerLocation(bottomHorizontalDividerLocation);$  double verticalDividerResizeWeight=detailsViewConfiguration.getVerticalDividerResizeWeight();$  if (verticalDividerResizeWeight != -1)   detailsVerticalSplitter.setResizeWeight(verticalDividerResizeWeight);$  double verticalDividerLocation=detailsViewConfiguration.getVerticalDividerLocation();$  if (verticalDividerLocation != -1)   detailsVerticalSplitter.setDividerLocation(verticalDividerLocation);$}$
public static boolean isContent(int c){$  return (c < 0x10000 && (CHARS[c] & MASK_CONTENT) != 0) || (0x10000 <= c && c <= 0x10FFFF);$}$
public static String wrapQuotesIfWindowsOS(String context){$  return ExecutorUtils.isUnixOS() ? context : ("\"" + context + "\"");$}$
public Experiment(String label,Application application,String startTime,String endTime,double samplingPercent,String description,String rule,Boolean isPersonalizationEnabled,String modelName,String modelVersion,Boolean isRapidExperiment,Integer userCap,String creatorID){$  this.setLabel(label).setApplication(application).setStartTime(startTime).setEndTime(endTime).setSamplingPercent(samplingPercent).setDescription(description).setRule(rule).setModelName(modelName).setModelVersion(modelVersion).setIsPersonalizationEnabled(isPersonalizationEnabled).setIsRapidExperiment(isRapidExperiment).setUserCap(userCap).setCreatorID(creatorID);$}$
public NumberPicker(Activity activity){$  super(activity,new String[]{});$}$
@Override public void onReceivedTitle(WebView view,String title){$  i(null,"--> onReceivedTitle() title = " + title);$  super.onReceivedTitle(view,title);$  configReceivedTitle(view,title);$}$
private static String dayToString(int day,int dayOfWeekLength){$  return DateUtils.getDayOfWeekString(dayToUtilDay(day),dayOfWeekLength);$}$
private void timeout(){$  if (this.status == AccelListener.STARTING) {$    this.timestamp=System.currentTimeMillis();$    this.win();$  }$}$
public Builder withRange(ByteString endKey){$  this.endKey=Optional.fromNullable(endKey);$  return this;$}$
public static void show(@Nullable Activity activity,int resId,int duration,int gravity){$  show(activity,resId == 0 ? null : getString(activity,resId),duration,gravity);$}$
Index(Node<K,V> node,Index<K,V> down,Index<K,V> right){$  this.node=node;$  this.down=down;$  this.right=right;$}$
public boolean contains(int index){$  return index >= getFirst() && index <= getLast();$}$
public void put(String name,Object value){$  name2data.get(name)[2]=value;$}$
public GroupsGetInvitesQueryWithExtended count(Integer value){$  return unsafeParam("count",value);$}$
@Override public final void writeBytes(String s) throws IOException {$  dis.writeBytes(s);$}$
@PluginFactory public static PigeonRolloverStrategy createStrategy(@PluginAttribute("max") final String max,@PluginAttribute("min") final String min,@PluginAttribute("fileIndex") final String fileIndex,@PluginAttribute("compressionLevel") final String compressionLevelStr,@PluginConfiguration final Configuration config){$  final boolean useMax=fileIndex == null ? true : fileIndex.equalsIgnoreCase("max");$  int minIndex=MIN_WINDOW_SIZE;$  if (min != null) {$    minIndex=Integer.parseInt(min);$    if (minIndex < 1) {$      LOGGER.error("Minimum window size too small. Limited to " + MIN_WINDOW_SIZE);$      minIndex=MIN_WINDOW_SIZE;$    }$  }$  int maxIndex=DEFAULT_WINDOW_SIZE;$  if (max != null) {$    maxIndex=Integer.parseInt(max);$    if (maxIndex < minIndex) {$      maxIndex=minIndex < DEFAULT_WINDOW_SIZE ? DEFAULT_WINDOW_SIZE : minIndex;$      LOGGER.error("Maximum window size must be greater than the minimum windows size. Set to " + maxIndex);$    }$  }$  final int compressionLevel=Integers.parseInt(compressionLevelStr,Deflater.DEFAULT_COMPRESSION);$  return new PigeonRolloverStrategy(minIndex,maxIndex,useMax,compressionLevel,config.getStrSubstitutor());$}$
private void migrate(){$  if (!migrated) {$    BlazeUserSettings userSettings=BlazeUserSettings.getInstance();$    this.attachSourcesByDefault=userSettings.getAttachSourcesByDefault();$    this.attachSourcesOnDemand=userSettings.getAttachSourcesOnDemand();$    this.migrated=true;$  }$}$
public static void clearReferences(ClassLoader classLoader){$  ClassLoaderCache.getCache().removeClassLoader(classLoader);$  if (NonActivatableServiceDescriptor.getGlobalPolicy() != null) {$    NonActivatableServiceDescriptor.getGlobalPolicy().setPolicy(classLoader,null);$  }$  clearReferencesJdbc(classLoader);$  clearReferencesThreads(classLoader);$  clearReferencesThreadLocals(classLoader);$  clearReferencesRmiTargets(classLoader);$  clearRmiLoaderHandler(classLoader);$  try {$    Class clazz=classLoader.loadClass("org.apache.commons.logging.LogFactory");$    clazz.getMethod("release",ClassLoader.class).invoke(null,classLoader);$  }$ catch (  Throwable t) {$  }$  try {$    Class clazz=classLoader.loadClass("org.apache.juli.logging.LogFactory");$    clazz.getMethod("release",ClassLoader.class).invoke(null,classLoader);$  }$ catch (  Throwable t) {$  }$  clearReferencesResourceBundles(classLoader);$  java.beans.Introspector.flushCaches();$}$
public void subtractSupplements(int count,int supplementId){$  subtractedSupplementsCount=count;$  subtractedSupplementId=supplementId;$}$
private void adjustTop(RectF rect,float top,RectF bounds,float snapMargin,float aspectRatio,boolean leftMoves,boolean rightMoves){$  float newTop=top;$  if (newTop < 0) {$    newTop/=1.05f;$    mTouchOffset.y-=newTop / 1.1f;$  }$  if (newTop < bounds.top) {$    mTouchOffset.y-=(newTop - bounds.top) / 2f;$  }$  if (newTop - bounds.top < snapMargin) {$    newTop=bounds.top;$  }$  if (rect.bottom - newTop < mMinCropHeight) {$    newTop=rect.bottom - mMinCropHeight;$  }$  if (rect.bottom - newTop > mMaxCropHeight) {$    newTop=rect.bottom - mMaxCropHeight;$  }$  if (newTop - bounds.top < snapMargin) {$    newTop=bounds.top;$  }$  if (aspectRatio > 0) {$    float newWidth=(rect.bottom - newTop) * aspectRatio;$    if (newWidth < mMinCropWidth) {$      newTop=Math.max(bounds.top,rect.bottom - (mMinCropWidth / aspectRatio));$      newWidth=(rect.bottom - newTop) * aspectRatio;$    }$    if (newWidth > mMaxCropWidth) {$      newTop=Math.max(bounds.top,rect.bottom - (mMaxCropWidth / aspectRatio));$      newWidth=(rect.bottom - newTop) * aspectRatio;$    }$    if (leftMoves && rightMoves) {$      newTop=Math.max(newTop,Math.max(bounds.top,rect.bottom - bounds.width() / aspectRatio));$    }$ else {$      if (leftMoves && rect.right - newWidth < bounds.left) {$        newTop=Math.max(bounds.top,rect.bottom - (rect.right - bounds.left) / aspectRatio);$        newWidth=(rect.bottom - newTop) * aspectRatio;$      }$      if (rightMoves && rect.left + newWidth > bounds.right) {$        newTop=Math.max(newTop,Math.max(bounds.top,rect.bottom - (bounds.right - rect.left) / aspectRatio));$      }$    }$  }$  rect.top=newTop;$}$
public ImmutableList<String> lines(){$  return lines;$}$
@RequestMapping(method=RequestMethod.POST) public void handleFileUpload(HttpServletRequest request,HttpServletResponse httpResponse,@RequestParam("file") MultipartFile file){$  if (!file.isEmpty()) {$    try {$      ServerConfig serverConfig=retrieveServerConfig();$      String fileName=file.getOriginalFilename();$      if (fileName != null && fileName.endsWith(".zip")) {$        clientService.uploadAppDefinition(httpResponse,serverConfig,fileName,file.getInputStream());$      }$ else {$        throw new BadRequestException("Invalid file name");$      }$    }$ catch (    IOException e) {$      throw new InternalServerErrorException("Could not deploy file: " + e.getMessage());$    }$  }$ else {$    throw new BadRequestException("No file found in POST body");$  }$}$
public NumberIsTooLargeException(Localizable specific,Number wrong,Number max,boolean boundIsAllowed){$  super(specific,wrong,max);$  this.max=max;$  this.boundIsAllowed=boundIsAllowed;$}$
@SubscribeEvent public void swimmingPenalty(LivingUpdateEvent event){$  if (!(event.getEntityLiving() instanceof EntityPlayer))   return;$  EntityPlayer player=(EntityPlayer)event.getEntityLiving();$  if (!EntityPlayerExt.isSurvival(player))   return;$  if (!(player.getFoodStats() instanceof BWMFoodStats))   return;$  if (player.isInWater() && !EntityPlayerExt.canSwim(player) && !EntityPlayerExt.isNearBottom(player)) {$    player.motionY-=0.02;$  }$}$
private SandboxBody create(int index){$  SandboxBody body=new SandboxBody();$  if (index == 0) {$    body.addFixture(new Circle(0.5));$    body.translate(3.5,0.0);$  }$ else   if (index == 1) {$    body.addFixture(Geometry.createUnitCirclePolygon(5,1.0));$    body.translate(0.0,2.5);$  }$ else   if (index == 2) {$    body.addFixture(new Rectangle(0.5,0.5));$    body.translate(-4.0,-0.5);$  }$ else   if (index == 3) {$    body.addFixture(new Triangle(new Vector2(0.45,-0.12),new Vector2(-0.45,0.38),new Vector2(-0.15,-0.22)));$    body.translate(0.5,0.5);$  }$ else {$    body.addFixture(new Segment(new Vector2(-0.3,0.2),new Vector2(0.0,-0.1)));$    body.translate(-1.0,-1.5);$  }$  body.setMass(MassType.INFINITE);$  body.setUserData("Body" + (index + 1));$  return body;$}$
private void rotateLeft(Node<K,V> root){$  Node<K,V> left=root.left;$  Node<K,V> pivot=root.right;$  Node<K,V> pivotLeft=pivot.left;$  Node<K,V> pivotRight=pivot.right;$  root.right=pivotLeft;$  if (pivotLeft != null) {$    pivotLeft.parent=root;$  }$  replaceInParent(root,pivot);$  pivot.left=root;$  root.parent=pivot;$  root.height=Math.max(left != null ? left.height : 0,pivotLeft != null ? pivotLeft.height : 0) + 1;$  pivot.height=Math.max(root.height,pivotRight != null ? pivotRight.height : 0) + 1;$}$
private void hidePublicShare(){$  getShareViaLinkSwitch().setVisibility(View.GONE);$  getExpirationDateSection().setVisibility(View.GONE);$  getPasswordSection().setVisibility(View.GONE);$  getEditPermissionSection().setVisibility(View.GONE);$  getGetLinkButton().setVisibility(View.GONE);$  getHideFileListingPermissionSection().setVisibility(View.GONE);$}$
public void removeTransactionAfterEnd(XtnEntry xtnEntry){$  try {$    xtnEntry.lock();$    ((ConcurrentHashMap<ServerTransaction,XtnEntry>)getXtnTable()).remove(xtnEntry.m_Transaction,xtnEntry);$    m_TimedXtns.remove(xtnEntry.m_Transaction);$  }$  finally {$    xtnEntry.unlock();$  }$}$
public TestInfo(){$  this.testName="Default test name";$  this.logEntries=new TreeSet<>(new LogEntryComparator());$  this.testResult=new Success();$  this.start=new Date();$  this.last=false;$  this.subreports=new LinkedList<>();$}$
private DataType thriftDataTyopeToWrapperDataType(org.apache.carbondata.format.DataType dataTypeThrift){$switch (dataTypeThrift) {$case STRING:$    return DataType.STRING;$case SHORT:$  return DataType.SHORT;$case INT:$return DataType.INT;$case LONG:$return DataType.LONG;$case DOUBLE:$return DataType.DOUBLE;$case DECIMAL:$return DataType.DECIMAL;$case TIMESTAMP:$return DataType.TIMESTAMP;$case ARRAY:$return DataType.ARRAY;$case STRUCT:$return DataType.STRUCT;$default :$return DataType.STRING;$}$}$
public void yypushback(int number){$  if (number > yylength())   zzScanError(ZZ_PUSHBACK_2BIG);$  zzMarkedPos-=number;$}$
@Override public String toString(){$  return this.descriptions.toString();$}$
public void parseShapeMapFromLine(String shapeMapAsLine){$  NexusStreamParser np=new NexusStreamParser(new StringReader(shapeMapAsLine));$  try {$    while (!np.peekMatchIgnoreCase(";")) {$      String sample=np.getWordRespectCase();$      np.matchIgnoreCase(":");$      int shape=np.getInt();$      sample2shape.put(sample,(byte)shape);$    }$  }$ catch (  IOException e) {$  }$}$
public void log(String question,String intent,String confidence,String entity,String convoOutput,String convoId,String retrieveAndRankOutput) throws Exception {$  logger.info(Messages.getString("Logging.ENTRY_INTO_DB"));$  Database db=client.database("conversation_enhanced_db",true);$  db.save(new Document(question,intent,confidence,entity,convoOutput,convoId,retrieveAndRankOutput));$}$
@Override public long addRoleModule(RoleModule roleModule){$  return sessionTemplate.insert(NAMESPACE + ".addRoleModule",roleModule);$}$
public void callEvent(final Event event) throws EventException {$  if (event instanceof Cancellable) {$    if (((Cancellable)event).isCancelled() && isIgnoringCancelled()) {$      return;$    }$  }$  executor.execute(listener,event);$}$
@Override public String scanName() throws IOException {$  if (fCurrentEntity.position == fCurrentEntity.count) {$    load(0,true);$  }$  int offset=fCurrentEntity.position;$  char ch=fCurrentEntity.ch[offset];$  if (XML11Char.isXML11NameStart(ch)) {$    if (++fCurrentEntity.position == fCurrentEntity.count) {$      fCurrentEntity.ch[0]=ch;$      offset=0;$      if (load(1,false)) {$        fCurrentEntity.columnNumber++;$        String symbol=fSymbolTable.addSymbol(fCurrentEntity.ch,0,1);$        return symbol;$      }$    }$  }$ else   if (XML11Char.isXML11NameHighSurrogate(ch)) {$    if (++fCurrentEntity.position == fCurrentEntity.count) {$      fCurrentEntity.ch[0]=ch;$      offset=0;$      if (load(1,false)) {$        --fCurrentEntity.position;$        --fCurrentEntity.startPosition;$        return null;$      }$    }$    char ch2=fCurrentEntity.ch[fCurrentEntity.position];$    if (!XMLChar.isLowSurrogate(ch2) || !XML11Char.isXML11NameStart(XMLChar.supplemental(ch,ch2))) {$      --fCurrentEntity.position;$      return null;$    }$    if (++fCurrentEntity.position == fCurrentEntity.count) {$      fCurrentEntity.ch[0]=ch;$      fCurrentEntity.ch[1]=ch2;$      offset=0;$      if (load(2,false)) {$        fCurrentEntity.columnNumber+=2;$        String symbol=fSymbolTable.addSymbol(fCurrentEntity.ch,0,2);$        return symbol;$      }$    }$  }$ else {$    return null;$  }$  do {$    ch=fCurrentEntity.ch[fCurrentEntity.position];$    if (XML11Char.isXML11Name(ch)) {$      if (++fCurrentEntity.position == fCurrentEntity.count) {$        int length=fCurrentEntity.position - offset;$        if (length == fCurrentEntity.ch.length) {$          char[] tmp=new char[fCurrentEntity.ch.length << 1];$          System.arraycopy(fCurrentEntity.ch,offset,tmp,0,length);$          fCurrentEntity.ch=tmp;$        }$ else {$          System.arraycopy(fCurrentEntity.ch,offset,fCurrentEntity.ch,0,length);$        }$        offset=0;$        if (load(length,false)) {$          break;$        }$      }$    }$ else     if (XML11Char.isXML11NameHighSurrogate(ch)) {$      if (++fCurrentEntity.position == fCurrentEntity.count) {$        int length=fCurrentEntity.position - offset;$        if (length == fCurrentEntity.ch.length) {$          char[] tmp=new char[fCurrentEntity.ch.length << 1];$          System.arraycopy(fCurrentEntity.ch,offset,tmp,0,length);$          fCurrentEntity.ch=tmp;$        }$ else {$          System.arraycopy(fCurrentEntity.ch,offset,fCurrentEntity.ch,0,length);$        }$        offset=0;$        if (load(length,false)) {$          --fCurrentEntity.position;$          --fCurrentEntity.startPosition;$          break;$        }$      }$      char ch2=fCurrentEntity.ch[fCurrentEntity.position];$      if (!XMLChar.isLowSurrogate(ch2) || !XML11Char.isXML11Name(XMLChar.supplemental(ch,ch2))) {$        --fCurrentEntity.position;$        break;$      }$      if (++fCurrentEntity.position == fCurrentEntity.count) {$        int length=fCurrentEntity.position - offset;$        if (length == fCurrentEntity.ch.length) {$          char[] tmp=new char[fCurrentEntity.ch.length << 1];$          System.arraycopy(fCurrentEntity.ch,offset,tmp,0,length);$          fCurrentEntity.ch=tmp;$        }$ else {$          System.arraycopy(fCurrentEntity.ch,offset,fCurrentEntity.ch,0,length);$        }$        offset=0;$        if (load(length,false)) {$          break;$        }$      }$    }$ else {$      break;$    }$  }$ while (true);$  int length=fCurrentEntity.position - offset;$  fCurrentEntity.columnNumber+=length;$  String symbol=null;$  if (length > 0) {$    symbol=fSymbolTable.addSymbol(fCurrentEntity.ch,offset,length);$  }$  return symbol;$}$
public OrPredicate(Predicate p1){$  add(p1);$}$
public int dnsDomainLevels(String host){$  int count=0;$  int startPos=0;$  while ((startPos=host.indexOf(".",startPos + 1)) > -1) {$    count++;$  }$  return count;$}$
@Deployment public void testDecisionFunctionality(){$  Map<String,Object> variables=new HashMap<String,Object>();$  variables.put("input",1);$  ProcessInstance pi=runtimeService.startProcessInstanceByKey("inclusiveGateway",variables);$  List<Task> tasks=taskService.createTaskQuery().processInstanceId(pi.getId()).list();$  assertEquals(3,tasks.size());$  Map<String,String> expectedMessages=new HashMap<String,String>();$  expectedMessages.put(TASK1_NAME,TASK1_NAME);$  expectedMessages.put(TASK2_NAME,TASK2_NAME);$  expectedMessages.put(TASK3_NAME,TASK3_NAME);$  for (  Task task : tasks) {$    expectedMessages.remove(task.getName());$  }$  assertEquals(0,expectedMessages.size());$  variables.put("input",2);$  pi=runtimeService.startProcessInstanceByKey("inclusiveGateway",variables);$  tasks=taskService.createTaskQuery().processInstanceId(pi.getId()).list();$  assertEquals(2,tasks.size());$  expectedMessages=new HashMap<String,String>();$  expectedMessages.put(TASK2_NAME,TASK2_NAME);$  expectedMessages.put(TASK3_NAME,TASK3_NAME);$  for (  Task task : tasks) {$    expectedMessages.remove(task.getName());$  }$  assertEquals(0,expectedMessages.size());$  variables.put("input",3);$  pi=runtimeService.startProcessInstanceByKey("inclusiveGateway",variables);$  tasks=taskService.createTaskQuery().processInstanceId(pi.getId()).list();$  assertEquals(1,tasks.size());$  expectedMessages=new HashMap<String,String>();$  expectedMessages.put(TASK3_NAME,TASK3_NAME);$  for (  Task task : tasks) {$    expectedMessages.remove(task.getName());$  }$  assertEquals(0,expectedMessages.size());$  variables.put("input",4);$  try {$    runtimeService.startProcessInstanceByKey("inclusiveGateway",variables);$    fail();$  }$ catch (  ActivitiException e) {$  }$}$
public void verifyIsHidden(){$  conditions.verifyPostAjax(null);$}$
public void addActionButton(ActionButton actionButton){$  buttonBar.addView(actionButton);$}$
public static void addSetting(String id,Object o){$  settings.put(id,o);$}$
public NumericHaving withType(HavingType type){$  return new NumericHaving(type,getAggregation(),getValue());$}$
public void addAlias(String entityAlias,String name,String field,String colAlias,Boolean primKey,Boolean groupBy,String function){$  addAlias(entityAlias,name,field,colAlias,primKey,groupBy,function,null,null);$}$
public FreedomTouchView(Context context){$  super(context);$  this.initialize();$}$
public static String serverURIsToString(final List<String> serverURIs){$  StringBuffer serverURIsAsString=new StringBuffer();$  boolean first=true;$  for (  final String serverURI : serverURIs) {$    if (first) {$      serverURIsAsString.append(serverURI);$    }$ else {$      serverURIsAsString.append(ConnectionUtils.SERVER_DELIMITER + " " + serverURI);$    }$    first=false;$  }$  return serverURIsAsString.toString();$}$
public boolean contains(String uid){$  cleanIfNeeded();$  return _idSet0.contains(uid) || _idSet1.contains(uid);$}$
protected UsersGetFollowersQueryWithFields fields(List<UserField> value){$  return unsafeParam("fields",value);$}$
public String optString(String key,String defaultValue){$  LazyNode token=getOptionalFieldToken(key);$  if (token == null)   return defaultValue;$  if (token.type == LazyNode.VALUE_NULL)   return defaultValue;$  return token.getStringValue(cbuf);$}$
public static int write(AudioInputStream stream,AudioFileFormat.Type fileType,File out) throws IOException {$  List providers=getAudioFileWriters();$  int bytesWritten=0;$  boolean flag=false;$  for (int i=0; i < providers.size(); i++) {$    AudioFileWriter writer=(AudioFileWriter)providers.get(i);$    try {$      bytesWritten=writer.write(stream,fileType,out);$      flag=true;$      break;$    }$ catch (    IllegalArgumentException e) {$      continue;$    }$  }$  if (!flag) {$    throw new IllegalArgumentException("could not write audio file: file type not supported: " + fileType);$  }$ else {$    return bytesWritten;$  }$}$
public void toggle(){$  toggle(false,null,null);$}$
public static int readInt(DataInputStream dis,boolean isBigEndian) throws IOException {$  if (!isBigEndian) {$    return readLittleEndianInt(dis);$  }$ else {$    return dis.readInt();$  }$}$
public AsyncServerRequest(RequestType type,GeneratedMessage req,boolean requireCommonRequest){$  Request.Builder reqBuilder=Request.newBuilder();$  reqBuilder.setRequestMessage(req.toByteString());$  reqBuilder.setRequestType(type);$  this.type=type;$  this.request=reqBuilder.build();$  this.requireCommonRequest=requireCommonRequest;$}$
public ShapelessMaterialRecipe(Item output,Object... input){$  this(new ItemStack(output),input);$}$
public void handleDecode(Result rawResult,Bitmap barcode,float scaleFactor){$  inactivityTimer.onActivity();$  lastResult=rawResult;$  ResultHandler resultHandler=ResultHandlerFactory.makeResultHandler(this,rawResult);$  boolean fromLiveScan=barcode != null;$  if (fromLiveScan) {$    historyManager.addHistoryItem(rawResult,resultHandler);$    beepManager.playBeepSoundAndVibrate();$    drawResultPoints(barcode,scaleFactor,rawResult);$  }$switch (source) {$case NATIVE_APP_INTENT:$case PRODUCT_SEARCH_LINK:$    handleDecodeExternally(rawResult,resultHandler,barcode);$  break;$case ZXING_LINK:$if (scanFromWebPageManager == null || !scanFromWebPageManager.isScanFromWebPage()) {$  handleDecodeInternally(rawResult,resultHandler,barcode);$}$ else {$  handleDecodeExternally(rawResult,resultHandler,barcode);$}$break;$case NONE:$SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(this);$if (fromLiveScan && prefs.getBoolean(PreferencesActivity.KEY_BULK_MODE,false)) {$Toast.makeText(getApplicationContext(),getResources().getString(R.string.msg_bulk_mode_scanned) + " (" + rawResult.getText()+ ')',Toast.LENGTH_SHORT).show();$restartPreviewAfterDelay(BULK_MODE_SCAN_DELAY_MS);$}$ else {$handleDecodeInternally(rawResult,resultHandler,barcode);$}$break;$}$}$
public void union(double x,double y,double w,double h){$  if (status == INVALID)   return;$  if (status == EMPTY) {$    setClip(x,y,w,h);$    status=INUSE;$    return;$  }$  clip[0]=Math.min(clip[0],x);$  clip[1]=Math.min(clip[1],y);$  clip[6]=Math.max(clip[6],x + w);$  clip[7]=Math.max(clip[7],y + h);$}$
public static int findGlobalValleyLocation(float[] data){$  float min=Float.NaN;$  int imin=-1;$  for (int i=0; i < data.length; i++) {$    if (Float.isNaN(data[i]))     continue;$    if (Float.isNaN(min) || data[i] < min) {$      min=data[i];$      imin=i;$    }$  }$  return imin;$}$
@RequestMapping(value="/",method=PUT,produces=APPLICATION_JSON_VALUE) public ResponseEntity<ProjectDTO> update(@RequestBody ProjectDTO projectDTO) throws URISyntaxException {$  log.debug("Update ProjectDTO : {}",projectDTO);$  if (!projectDTO.isIdSet()) {$    return create(projectDTO);$  }$  ProjectDTO result=projectDTOService.save(projectDTO);$  return ResponseEntity.ok().body(result);$}$
private CertificateAndKey generateRootCertificate(){$  long generationStart=System.currentTimeMillis();$  KeyPair caKeyPair=keyGenerator.generate();$  CertificateAndKey certificateAndKey=securityProviderTool.createCARootCertificate(rootCertificateInfo,caKeyPair,messageDigest);$  long generationFinished=System.currentTimeMillis();$  log.info("Generated CA root certificate and private key in {}ms. Key generator: {}. Signature algorithm: {}.",generationFinished - generationStart,keyGenerator,messageDigest);$  return certificateAndKey;$}$
private void renderEditingBody(GL2 gl,SandboxBody body){$  Dimension size=this.canvasSize;$  gl.glColor4f(0.0f,0.0f,0.0f,0.5f);$  gl.glPushMatrix();$  gl.glLoadIdentity();$  RenderUtilities.fillRectangleFromTopLeft(gl,-size.width * 0.5,size.height * 0.5,size.width,size.height);$  gl.glPopMatrix();$  if (Preferences.isBodyAABBEnabled()) {$    this.renderAABB(gl,body);$  }$  RenderUtilities.pushTransform(gl);$  RenderUtilities.applyTransform(gl,body.getTransform());$  body.render(gl);$  if (this.selectFixtureAction.isActive()) {$    BodyFixture bf=this.selectFixtureAction.getObject();$    Convex convex=bf.getShape();$    RenderUtilities.outlineShape(gl,convex,4,Preferences.getSelectedColor());$    gl.glColor4fv(body.getFillColor(),0);$    RenderUtilities.fillShape(gl,convex);$    gl.glColor4fv(body.getOutlineColor(),0);$    RenderUtilities.drawShape(gl,convex,false);$  }$  if (Preferences.isBodyNormalEnabled()) {$    body.renderNormals(gl);$  }$  if (Preferences.isBodyRotationDiscEnabled()) {$    body.renderRotationDisc(gl);$  }$  if (Preferences.isBodyCenterEnabled()) {$    body.renderCenter(gl);$  }$  RenderUtilities.popTransform(gl);$  if (Preferences.isBodyVelocityEnabled()) {$    body.renderVelocity(gl);$  }$}$
void insertData(CharacterData node,int index,String insert){$  fInsertNode=node;$  node.insertData(index,insert);$  fInsertNode=null;$}$
public static String[] extractNoDictionaryDimsArr(String noDictionaryDim){$  if (null == noDictionaryDim || noDictionaryDim.isEmpty()) {$    return new String[0];$  }$  String[] NoDictionary=noDictionaryDim.split(CarbonCommonConstants.COMA_SPC_CHARACTER);$  List<String> list1=new ArrayList<String>(CarbonCommonConstants.CONSTANT_SIZE_TEN);$  for (int i=0; i < NoDictionary.length; i++) {$    String[] dim=NoDictionary[i].split(CarbonCommonConstants.COLON_SPC_CHARACTER);$    list1.add(dim[0]);$  }$  return list1.toArray(new String[list1.size()]);$}$
public Matrix solve(Matrix B){$  if (B.getRowDimension() != m) {$    throw new IllegalArgumentException("Matrix row dimensions must agree.");$  }$  if (!this.isFullRank()) {$    throw new RuntimeException("Matrix is rank deficient.");$  }$  int nx=B.getColumnDimension();$  double[][] X=B.getArrayCopy();$  for (int k=0; k < n; k++) {$    for (int j=0; j < nx; j++) {$      double s=0.0;$      for (int i=k; i < m; i++) {$        s+=QR[i][k] * X[i][j];$      }$      s=-s / QR[k][k];$      for (int i=k; i < m; i++) {$        X[i][j]+=s * QR[i][k];$      }$    }$  }$  for (int k=n - 1; k >= 0; k--) {$    for (int j=0; j < nx; j++) {$      X[k][j]/=Rdiag[k];$    }$    for (int i=0; i < k; i++) {$      for (int j=0; j < nx; j++) {$        X[i][j]-=X[k][j] * QR[i][k];$      }$    }$  }$  return (new Matrix(X,n,nx).getMatrix(0,n - 1,0,nx - 1));$}$
private MotionEvent swapXY(MotionEvent ev){$  float width=getWidth();$  float height=getHeight();$  float newX=(ev.getY() / height) * width;$  float newY=(ev.getX() / width) * height;$  ev.setLocation(newX,newY);$  return ev;$}$
public static void main(String[] arguments){$  final Knock025A ab=new Knock025B();$  System.out.println(ab.getValue());$}$
public boolean drawShadows(){$  return drawShadows;$}$
public StatusFrame(){$  super();$  initComponents();$}$
@Override public double[] makeInverseCumulativeTestPoints(){$  return new double[]{0.0,0.001,0.010,0.025,0.050,0.100,0.999,0.990,0.975,0.950,0.900,1.0};$}$
public void userKey(String command){$  if (command.equals(ACTION_GOTO_END)) {$    getGridScroll().setValue(getGridScroll().getMaximum());$  }$ else   if (command.equals(ACTION_GOTO_HOME)) {$    getGridScroll().setValue(getGridScroll().getMinimum());$  }$ else   if (command.equals(ACTION_LINE_DOWN)) {$    getGridScroll().setValue(getGridScroll().getValue() + 1);$  }$ else   if (command.equals(ACTION_LINE_UP)) {$    getGridScroll().setValue(getGridScroll().getValue() - 1);$  }$ else   if (command.equals(ACTION_PAGE_DOWN)) {$    getGridScroll().setValue(getGridScroll().getValue() + getGridScroll().getBlockIncrement());$  }$ else   if (command.equals(ACTION_PAGE_UP)) {$    getGridScroll().setValue(getGridScroll().getValue() - getGridScroll().getBlockIncrement());$  }$ else {$    System.err.println("Error in userKey(): unknown command: " + command);$  }$}$
void cancelLocalXtn(TransactionManager mgr,ServerTransaction st) throws UnknownLeaseException {$  if (!(mgr instanceof LocalTransactionManagerImpl))   throw new RuntimeException("cancel local xtn lease: invalid transaction manager");$  LocalTransactionManagerImpl ltx=(LocalTransactionManagerImpl)mgr;$  try {$    abortSA(mgr,st,true,false,false,null);$  }$ catch (  UnknownTransactionException ex) {$    throw new UnknownLeaseException("cancel:unknown transaction at space-server transaction-id= " + st + " manager="+ ltx.getManagerID());$  }$}$
public void saveAuxiliaryData() throws IOException {$  if (getMeganFile().hasDataConnector() && !getMeganFile().isReadOnly()) {$    if (dir != null) {$      final MainViewer mainViewer=dir.getMainViewer();$      if (mainViewer != null)       SyncDataTableAndTaxonomy.syncFormattingFromViewer2Summary(mainViewer,getDataTable());$      for (      String cName : ClassificationManager.getAllSupportedClassifications()) {$        if (dir.getViewerByClassName(ClassificationViewer.getClassName(cName)) != null && dir.getViewerByClassName(ClassificationViewer.getClassName(cName)) instanceof ClassificationViewer) {$          ClassificationViewer classificationViewer=(ClassificationViewer)dir.getViewerByClassName(ClassificationViewer.getClassName(cName));$          SyncDataTableAndClassificationViewer.syncFormattingFromViewer2Summary(classificationViewer,getDataTable());$        }$      }$    }$    getDataTable().setColorTable(getChartColorManager().getColorTableName(),getChartColorManager().isColorByPosition(),getChartColorManager().getHeatMapTable().getName());$    getDataTable().setColorEdits(getChartColorManager().getColorEdits());$    byte[] userState=getDataTable().getUserStateAsBytes();$    byte[] sampleAttributes=getSampleAttributeTable().getBytes();$    Map<String,byte[]> label2data=new HashMap<>();$    label2data.put(SampleAttributeTable.USER_STATE,userState);$    label2data.put(SampleAttributeTable.SAMPLE_ATTRIBUTES,sampleAttributes);$    getMeganFile().getDataConnector().putAuxiliaryData(label2data);$  }$}$
@Override public void encodeXML(Document doc,Element root,String elementName){$  if ((doc == null) || (root == null) || (elementName == null)) {$    return;$  }$  Element dataSourceElement=doc.createElement(elementName);$  for (  String key : propertyMap.keySet()) {$    Element element=doc.createElement(key);$    element.appendChild(doc.createTextNode(propertyMap.get(key)));$    dataSourceElement.appendChild(element);$  }$  root.appendChild(dataSourceElement);$}$
public T onCreateLvl1SectionViewHolder(ViewGroup parent){$  return null;$}$
public static SM_SYSTEM_MESSAGE STR_MSG_TOYPET_FEED_STOP_EATING(String value1,String value0){$  return new SM_SYSTEM_MESSAGE(1400617,value1,value0);$}$
void innerDelete(){$  deleteNode();$}$
public static SM_SYSTEM_MESSAGE STR_EVENT_WIN_ARTIFACT(String value0,String value1){$  return new SM_SYSTEM_MESSAGE(1390203,value0,value1);$}$
public static boolean isRTL(CharSequence s,int start,int end){$  if (s == null || s.length() == 0) {$    return isRTL(Locale.getDefault());$  }$  if (start == end) {$    start=Math.max(0,--start);$    if (start == end) {$      end=Math.min(s.length(),++end);$    }$  }$  try {$    Bidi bidi=new Bidi(s.subSequence(start,end).toString(),Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT);$    return !bidi.baseIsLeftToRight();$  }$ catch (  IndexOutOfBoundsException e) {$    return false;$  }$}$
public static void isNotNull(Object object){$  isNotNull(object,"");$}$
public String toString(){$  return "TokenToWords";$}$
public static int readSingleByte(InputStream in) throws IOException {$  byte[] buffer=new byte[1];$  int result=in.read(buffer,0,1);$  return (result != -1) ? buffer[0] & 0xff : -1;$}$
private Map<String,List<Element>> parseDocument(Document doc) throws SynthesisException {$  Map<String,List<Element>> elementLists=new HashMap<String,List<Element>>();$  List<Element> segments=new ArrayList<Element>();$  List<Element> boundaries=new ArrayList<Element>();$  List<Element> firstVoicedSegments=new ArrayList<Element>();$  List<Element> firstVowels=new ArrayList<Element>();$  List<Element> lastVoicedSegments=new ArrayList<Element>();$  List<Element> voicedSegments=new ArrayList<Element>();$  TreeWalker treeWalker=null;$  try {$    treeWalker=DomUtils.createTreeWalker(doc,MaryXML.SYLLABLE,MaryXML.BOUNDARY);$  }$ catch (  DOMException e) {$    throw new SynthesisException("Could not parse XML Document",e);$  }$  Node node;$  while ((node=treeWalker.nextNode()) != null) {$    assert node != null;$    Element element=(Element)node;$    if (node.getNodeName().equals(MaryXML.BOUNDARY)) {$      boundaries.add(element);$      continue;$    }$    assert node.getNodeName().equals(MaryXML.SYLLABLE);$    AllophoneSet allophoneSet=null;$    try {$      allophoneSet=MaryRuntimeUtils.determineAllophoneSet(element);$    }$ catch (    MaryConfigurationException e) {$      throw new SynthesisException("Could not determine AllophoneSet",e);$    }$    assert allophoneSet != null;$    Element segment;$    Element firstVoicedSegment=null;$    Element firstVowel=null;$    Element lastVoicedSegment=null;$    for (segment=DomUtils.getFirstElementByTagName(node,MaryXML.PHONE); segment != null; segment=DomUtils.getNextOfItsKindIn(segment,element)) {$      assert segment != null;$      segments.add(segment);$      String phone=UnitSelector.getPhoneSymbol(segment);$      if (phone.length() == 0) {$        throw new SynthesisException("No phone found for segment " + segment);$      }$      Allophone allophone=allophoneSet.getAllophone(phone);$      if (allophone == null) {$        throw new SynthesisException("No Allophone found for phone '" + phone + "'");$      }$      if (allophone.isVoiced()) {$        voicedSegments.add(segment);$        if (firstVoicedSegment == null) {$          firstVoicedSegment=segment;$        }$        if (firstVowel == null && allophone.isVowel()) {$          firstVowel=segment;$        }$        lastVoicedSegment=segment;$      }$    }$    if (firstVoicedSegment == null || firstVowel == null || lastVoicedSegment == null) {$      Log.d(Mary.LOG,"WARNING: could not identify F0 anchors in malformed syllable: '" + element.getAttribute("ph") + "'");$    }$ else {$      firstVoicedSegments.add(firstVoicedSegment);$      firstVowels.add(firstVowel);$      lastVoicedSegments.add(lastVoicedSegment);$    }$  }$  elementLists.put("segments",segments);$  elementLists.put("voicedSegments",voicedSegments);$  elementLists.put("firstVoicedSegments",firstVoicedSegments);$  elementLists.put("firstVowels",firstVowels);$  elementLists.put("lastVoicedSegments",lastVoicedSegments);$  elementLists.put("boundaries",boundaries);$  return elementLists;$}$
private void generateWrapperComponents(Set<TypeElement> components){$  Map<TypeElement,ComponentInfo> componentToCoreInjectorMap=calculateAllMappingFromComponentsToCoreInjectors(components);$  for (  TypeElement component : components) {$    ComponentInfo coreInjector=componentToCoreInjectorMap.get(component);$    ClassName coreInjectorClassName=getCoreInejectorClassName(coreInjectorPackage,coreInjector);$    String packageString=Utils.getPackageString(component);$    String generatedComponentSimpleName=getComponentImplementationSimpleNameFromInterface(component);$    TypeSpec.Builder componentBuilder=TypeSpec.classBuilder(generatedComponentSimpleName).addModifiers(Modifier.PUBLIC).addSuperinterface(TypeName.get(component.asType())).superclass(coreInjectorClassName);$    MethodSpec.Builder ctorBuilder=MethodSpec.constructorBuilder().addModifiers(Modifier.PRIVATE);$    List<TypeElement> sortedComponentDependencies=Utils.sortByFullName(getComponentDependencies(component));$    TypeElement dependencyComponent=null;$    if (!sortedComponentDependencies.isEmpty()) {$      dependencyComponent=Iterables.getOnlyElement(sortedComponentDependencies);$      ctorBuilder.addParameter(TypeName.get(dependencyComponent.asType()),Utils.getSourceCodeName(dependencyComponent));$    }$    Set<TypeElement> allComponentModules=getAllModulesOfComponentRecursively(component);$    List<TypeElement> sortedComponentPassedModules=Utils.sortByFullName(Utils.getNonNullaryCtorOnes(allComponentModules));$    for (    TypeElement typeElement : sortedComponentPassedModules) {$      ctorBuilder.addParameter(TypeName.get(typeElement.asType()),Utils.getSourceCodeName(typeElement));$    }$    Set<TypeElement> coreInjectorPassedModules=new HashSet<>();$    coreInjectorPassedModules.addAll(scopedPassedModules.get(coreInjector));$    coreInjectorPassedModules.addAll(unscopedPassedModules);$    List<TypeElement> sortedCoreInjectorPassedModules=Utils.sortByFullName(coreInjectorPassedModules);$    StringBuilder stringBuilder=new StringBuilder("super(");$    if (dependencyComponent != null) {$      String generatedDependencyComponentSimpleName=getComponentImplementationSimpleNameFromInterface(dependencyComponent);$      stringBuilder.append("($T) ").append(Utils.getSourceCodeName(dependencyComponent));$      if (!sortedCoreInjectorPassedModules.isEmpty()) {$        stringBuilder.append(", ");$      }$    }$    if (!sortedCoreInjectorPassedModules.isEmpty()) {$      for (      TypeElement typeElement : sortedCoreInjectorPassedModules) {$        if (sortedComponentPassedModules.contains(typeElement)) {$          stringBuilder.append(Utils.getSourceCodeName(typeElement));$        }$ else {$          stringBuilder.append("null");$        }$        stringBuilder.append(", ");$      }$      stringBuilder.delete(stringBuilder.length() - 2,stringBuilder.length());$    }$    stringBuilder.append(");");$    if (dependencyComponent != null) {$      ctorBuilder.addCode(stringBuilder.toString(),ClassName.get(packageString,getComponentImplementationSimpleNameFromInterface(dependencyComponent)));$    }$ else {$      ctorBuilder.addCode(stringBuilder.toString());$    }$    componentBuilder.addMethod(ctorBuilder.build());$    ClassName generatedComponentClassName=ClassName.get(packageString,generatedComponentSimpleName);$    generateComponentBuilder(generatedComponentClassName,dependencyComponent,sortedComponentPassedModules,componentBuilder,coreInjector);$    ClassName builderClassName=ClassName.get(packageString,generatedComponentSimpleName,"Builder");$    componentBuilder.addMethod(MethodSpec.methodBuilder("builder").addModifiers(Modifier.PUBLIC,Modifier.STATIC).returns(builderClassName).addCode("return new $T();",builderClassName).build());$    JavaFile javaFile=JavaFile.builder(packageString,componentBuilder.build()).build();$    try {$      messager.printMessage(Kind.NOTE,String.format("%s: writing java file: %s",TAG,javaFile.toJavaFileObject().getName()));$      javaFile.writeTo(processingEnv.getFiler());$    }$ catch (    IOException e) {$      Throwables.propagate(e);$    }$  }$}$
public Shape diamond(float x,float y,float height){$  m_path.reset();$  m_path.moveTo(x,(y + 0.5f * height));$  m_path.lineTo((x + 0.5f * height),y);$  m_path.lineTo((x + height),(y + 0.5f * height));$  m_path.lineTo((x + 0.5f * height),(y + height));$  m_path.closePath();$  return m_path;$}$
private void activate(boolean force,Object proxy,Method method) throws Exception {$  assert Thread.holdsLock(this);$  try {$    activate0(force,proxy);$  }$ catch (  Exception e) {$    if (logger.isLoggable(Levels.FAILED)) {$      logThrow(Levels.FAILED,"activating object for call","activate",method,e);$    }$    throw e;$  }$}$
private Vector2 screenToWorld(Point p,Dimension size,Vector2 offset,double scale){$  Vector2 v=new Vector2();$  double x=p.x;$  double y=p.y;$  double w=size.getWidth();$  double h=size.getHeight();$  double ox=offset.x;$  double oy=offset.y;$  v.x=(x - w * 0.5) / scale - ox;$  v.y=-((y - h * 0.5) / scale + oy);$  return v;$}$
@Override public void actionPerformed(ActionEvent ev){$  executeImmediately(getSyntax());$}$
private LinkedList<Diff> diff_compute(String text1,String text2,boolean checklines,long deadline){$  LinkedList<Diff> diffs=new LinkedList<Diff>();$  if (text1.length() == 0) {$    diffs.add(new Diff(Operation.INSERT,text2));$    return diffs;$  }$  if (text2.length() == 0) {$    diffs.add(new Diff(Operation.DELETE,text1));$    return diffs;$  }$  String longtext=text1.length() > text2.length() ? text1 : text2;$  String shorttext=text1.length() > text2.length() ? text2 : text1;$  int i=longtext.indexOf(shorttext);$  if (i != -1) {$    Operation op=(text1.length() > text2.length()) ? Operation.DELETE : Operation.INSERT;$    diffs.add(new Diff(op,longtext.substring(0,i)));$    diffs.add(new Diff(Operation.EQUAL,shorttext));$    diffs.add(new Diff(op,longtext.substring(i + shorttext.length())));$    return diffs;$  }$  if (shorttext.length() == 1) {$    diffs.add(new Diff(Operation.DELETE,text1));$    diffs.add(new Diff(Operation.INSERT,text2));$    return diffs;$  }$  String[] hm=diff_halfMatch(text1,text2);$  if (hm != null) {$    String text1_a=hm[0];$    String text1_b=hm[1];$    String text2_a=hm[2];$    String text2_b=hm[3];$    String mid_common=hm[4];$    LinkedList<Diff> diffs_a=diff_main(text1_a,text2_a,checklines,deadline);$    LinkedList<Diff> diffs_b=diff_main(text1_b,text2_b,checklines,deadline);$    diffs=diffs_a;$    diffs.add(new Diff(Operation.EQUAL,mid_common));$    diffs.addAll(diffs_b);$    return diffs;$  }$  if (checklines && text1.length() > 100 && text2.length() > 100) {$    return diff_lineMode(text1,text2,deadline);$  }$  return diff_bisect(text1,text2,deadline);$}$
public static StatelessLongHash sipHash24(long seedLow,long seedHigh){$  return Hashes.getStatelessLong(new SipHash24Parameters(seedLow,seedHigh));$}$
@deprecated public char previous(){$  if (this.pos > this.begin) {$    this.pos-=1;$    return this.text.charAt(this.pos);$  }$  return 65535;$}$
public void startRecording(String file){$switch (this.mode) {$case PLAY:$    Log.d(LOG_TAG,"AudioPlayer Error: Can't record in play mode.");$  sendErrorStatus(MEDIA_ERR_ABORTED);$break;$case NONE:$this.audioFile=file;$this.recorder.setAudioSource(MediaRecorder.AudioSource.MIC);$this.recorder.setOutputFormat(MediaRecorder.OutputFormat.DEFAULT);$this.recorder.setAudioEncoder(MediaRecorder.AudioEncoder.DEFAULT);$this.recorder.setOutputFile(this.tempFile);$try {$this.recorder.prepare();$this.recorder.start();$this.setState(STATE.MEDIA_RUNNING);$return;$}$ catch (IllegalStateException e) {$e.printStackTrace();$}$catch (IOException e) {$e.printStackTrace();$}$sendErrorStatus(MEDIA_ERR_ABORTED);$break;$case RECORD:$Log.d(LOG_TAG,"AudioPlayer Error: Already recording.");$sendErrorStatus(MEDIA_ERR_ABORTED);$}$}$
private ColorMapEntry createColourMapEntry(ColourMapData data){$  ColorMapEntry entry=new ColorMapEntryImpl();$  entry.setColor(data.getColourExpression());$  entry.setOpacity(data.getOpacity());$  entry.setQuantity(data.getQuantity());$  entry.setLabel(data.getLabel());$  return entry;$}$
public MediaFormat(){$  mMap=new HashMap<String,Object>();$}$
public static Map<String,Object> returnError(String errorMessage){$  return returnProblem(ModelService.RESPOND_ERROR,errorMessage,null,null,null);$}$
public boolean isDrawRoundedSlicesEnabled(){$  return mDrawRoundedSlices;$}$
public void visitPhpMethod(Method method){$  this.inspectCallable(method);$}$
private void mutateResourceOntology(String resourceTypeId,ResourceType.DataType resourceDataType){$  MindmapsGraph graph=Mindmaps.factory(Mindmaps.DEFAULT_URI,keySpace).getGraph();$  ResourceType resource=graph.putResourceType(resourceTypeId,resourceDataType);$  RoleType degreeOwner=graph.putRoleType(GraqlType.HAS_RESOURCE_OWNER.getId(resourceTypeId));$  RoleType degreeValue=graph.putRoleType(GraqlType.HAS_RESOURCE_VALUE.getId(resourceTypeId));$  graph.putRelationType(GraqlType.HAS_RESOURCE.getId(resourceTypeId)).hasRole(degreeOwner).hasRole(degreeValue);$  for (  String type : subtypes) {$    graph.getType(type).playsRole(degreeOwner);$  }$  resource.playsRole(degreeValue);$  try {$    graph.commit();$  }$ catch (  MindmapsValidationException e) {$    throw new RuntimeException(ErrorMessage.ONTOLOGY_MUTATION.getMessage(e.getMessage()),e);$  }$}$
public boolean isActive(){$  Date now=new Date();$  return startsAt != null && endsAt != null && now.after(startsAt) && now.before(endsAt);$}$
public void acceptVisit(ExpressionVisitor visitor){$  visitor.enter(this);$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase("zoom axis=");$  String axis=np.getWordMatchesIgnoringCase("horizontal vertical both");$  np.matchIgnoreCase("what=");$  String what;$  if (np.peekMatchAnyTokenIgnoreCase("in out reset selection fit"))   what=np.getWordMatchesIgnoringCase("in out reset selection fit");$ else   what="" + (float)np.getDouble();$  np.matchIgnoreCase(";");$  AlignmentViewer viewer=(AlignmentViewer)getViewer();$  viewer.getAlignmentViewerPanel().zoom(axis,what,null);$}$
public boolean hasFeatureValue(int featureIndex,String featureValue){$  if (featureIndex < 0) {$    return false;$  }$  if (featureIndex < numByteFeatures) {$    return byteFeatureValues[featureIndex].contains(featureValue);$  }$  if (featureIndex < numByteFeatures + numShortFeatures) {$    return shortFeatureValues[featureIndex - numByteFeatures].contains(featureValue);$  }$  return false;$}$
public static RecvPackageInfo recvPackage(InputStream in,byte expect_cmd,long expect_body_len) throws IOException {$  RecvHeaderInfo header=recvHeader(in,expect_cmd,expect_body_len);$  if (header.errno != 0) {$    return new RecvPackageInfo(header.errno,null);$  }$  byte[] body=new byte[(int)header.body_len];$  int totalBytes=0;$  int remainBytes=(int)header.body_len;$  int bytes;$  while (totalBytes < header.body_len) {$    if ((bytes=in.read(body,totalBytes,remainBytes)) < 0) {$      break;$    }$    totalBytes+=bytes;$    remainBytes-=bytes;$  }$  if (totalBytes != header.body_len) {$    throw new IOException("recv package size " + totalBytes + " != "+ header.body_len);$  }$  return new RecvPackageInfo((byte)0,body);$}$
Node<K,V> find(K key,boolean create){$  Comparator<? super K> comparator=this.comparator;$  Node<K,V> nearest=root;$  int comparison=0;$  if (nearest != null) {$    @SuppressWarnings("unchecked") Comparable<Object> comparableKey=(comparator == NATURAL_ORDER) ? (Comparable<Object>)key : null;$    while (true) {$      comparison=(comparableKey != null) ? comparableKey.compareTo(nearest.key) : comparator.compare(key,nearest.key);$      if (comparison == 0) {$        return nearest;$      }$      Node<K,V> child=(comparison < 0) ? nearest.left : nearest.right;$      if (child == null) {$        break;$      }$      nearest=child;$    }$  }$  if (!create) {$    return null;$  }$  Node<K,V> header=this.header;$  Node<K,V> created;$  if (nearest == null) {$    if (comparator == NATURAL_ORDER && !(key instanceof Comparable)) {$      throw new ClassCastException(key.getClass().getName() + " is not Comparable");$    }$    created=new Node<K,V>(nearest,key,header,header.prev);$    root=created;$  }$ else {$    created=new Node<K,V>(nearest,key,header,header.prev);$    if (comparison < 0) {$      nearest.left=created;$    }$ else {$      nearest.right=created;$    }$    rebalance(nearest,true);$  }$  size++;$  modCount++;$  return created;$}$
public static NumericEntityEscaper below(final int codepoint){$  return outsideOf(codepoint,Integer.MAX_VALUE);$}$
protected boolean isValidDomain(String domain){$  Matcher ipDomainMatcher=IP_DOMAIN_PATTERN.matcher(domain);$  if (ipDomainMatcher.matches()) {$    InetAddressValidator inetAddressValidator=InetAddressValidator.getInstance();$    return inetAddressValidator.isValid(ipDomainMatcher.group(1));$  }$  DomainValidator domainValidator=DomainValidator.getInstance(allowLocal);$  return domainValidator.isValid(domain) || domainValidator.isValidTld(domain);$}$
public static double[] readDoubles(){$  return readAllDoubles();$}$
LoadInfo(ProjectSetSerializationContext context,StringTokenizer tokenizer) throws SVNException {$  repo=tokenizer.nextToken();$  String projectName=tokenizer.nextToken();$  project=ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);$  if (repo.indexOf("://") != -1) {$    repositoryLocation=SVNRepositoryLocation.fromString(repo,false,true);$    fromFileSystem=false;$    directory=null;$  }$ else {$    repositoryLocation=null;$    fromFileSystem=true;$    if (!new Path(repo).isAbsolute()) {$      String baseDir;$      if (context.getFilename() != null) {$        baseDir=new File(context.getFilename()).getParent();$      }$ else {$        baseDir=project.getWorkspace().getRoot().getLocation().toOSString();$      }$      try {$        directory=new File(baseDir + File.separatorChar + repo).getCanonicalPath();$      }$ catch (      IOException ioe) {$        throw new SVNException("Path expansion/canonicalization failed",ioe);$      }$    }$ else {$      directory=repo;$    }$  }$}$
public static int rgbFromCmyk(float[] cmyk){$  float cyan=cmyk[0];$  float magenta=cmyk[1];$  float yellow=cmyk[2];$  float black=cmyk[3];$  int red=(int)((1.0f - Math.min(1.0f,cyan * (1.0f - black) + black)) * 255);$  int green=(int)((1.0f - Math.min(1.0f,magenta * (1.0f - black) + black)) * 255);$  int blue=(int)((1.0f - Math.min(1.0f,yellow * (1.0f - black) + black)) * 255);$  return ((0xff & red) << 16) + ((0xff & green) << 8) + (0xff & blue);$}$
@Nullable public static XmlTag findValueResourceTagInContext(@NotNull Editor editor,@NotNull PsiFile file,boolean rename){$  if (!(file instanceof XmlFile)) {$    return null;$  }$  final AndroidFacet facet=AndroidFacet.getInstance(file);$  if (facet == null) {$    return null;$  }$  if (!AndroidResourceUtil.isInResourceSubdirectory(file,ResourceFolderType.VALUES.getName())) {$    return null;$  }$  final PsiElement element=file.findElementAt(editor.getCaretModel().getOffset());$  if (!rename && element instanceof XmlToken && XmlTokenType.XML_DATA_CHARACTERS.equals(((XmlToken)element).getTokenType())) {$    return null;$  }$  final XmlTag tag=PsiTreeUtil.getParentOfType(element,XmlTag.class);$  if (element instanceof XmlToken && XmlTokenType.XML_ATTRIBUTE_VALUE_TOKEN.equals(((XmlToken)element).getTokenType()) && tag != null) {$    XmlAttribute parentAttribute=tag.getAttribute("parent");$    final String parentValue=parentAttribute != null ? parentAttribute.getValue() : null;$    if (parentValue != null && parentValue.equals(element.getText())) {$      return null;$    }$  }$  final XmlTag rootTag=((XmlFile)file).getRootTag();$  if (rootTag == null || !TAG_RESOURCES.equals(rootTag.getName())) {$    return null;$  }$  return tag;$}$
public int compare(File file1,File file2){$  long size1=0;$  if (file1.isDirectory()) {$    size1=sumDirectoryContents && file1.exists() ? FileUtils.sizeOfDirectory(file1) : 0;$  }$ else {$    size1=file1.length();$  }$  long size2=0;$  if (file2.isDirectory()) {$    size2=sumDirectoryContents && file2.exists() ? FileUtils.sizeOfDirectory(file2) : 0;$  }$ else {$    size2=file2.length();$  }$  long result=size1 - size2;$  if (result < 0) {$    return -1;$  }$ else   if (result > 0) {$    return 1;$  }$ else {$    return 0;$  }$}$
private static IConfigElement categoryElement(String category,String name,String tooltip_key){$  return new DummyConfigElement.DummyCategoryElement(name,tooltip_key,new ConfigElement(ConfigManager.config.getCategory(category)).getChildElements());$}$
public InputStream newInputStream(int index) throws IOException {$synchronized (DiskLruCache.this) {$    if (entry.currentEditor != this) {$      throw new IllegalStateException();$    }$    if (!entry.readable) {$      return null;$    }$    return new FileInputStream(entry.getCleanFile(index));$  }$}$
public boolean lockXtnOnXtnEnd(XtnEntry xtnEntry){$  xtnEntry.lock();$  boolean lockedXtnTable=xtnEntry.anyFifoEntriesUnderXtn();$  if (lockedXtnTable)   getTxWriteLock().lock();$  return lockedXtnTable;$}$
private boolean supportsGooglePlayServices(){$  return GooglePlayServicesUtil.isGooglePlayServicesAvailable(this) == ConnectionResult.SUCCESS;$}$
private void updateDataTable(){$  getListPages().clear();$  for (int i=1; i <= getNumPages(); i++) {$    getListPages().addItem(String.valueOf(i));$  }$  getActionLabel().setText(getFirstRow() + "-" + getLastRow()+ " of "+ getTotalRows());$  table.setVisibleRange(getFirstRow(),getRowCount());$  if (getFirstRow() + getRowCount() > getTotalRows()) {$    if (getRowCount() > getTotalRows()) {$      getDataSource().load(table,getFirstRow(),getTotalRows());$    }$ else {$      getDataSource().load(table,getFirstRow(),getTotalRows() - (getFirstRow() - 1));$    }$  }$ else {$    getDataSource().load(table,getFirstRow(),getRowCount());$  }$}$
public static void dropTable(SQLiteDatabase db,boolean ifExists){$  String sql="DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'NEWS_CHANNEL_TABLE'";$  db.execSQL(sql);$}$
public DTDConfiguration(SymbolTable symbolTable,XMLGrammarPool grammarPool,XMLComponentManager parentSettings){$  super(symbolTable,parentSettings);$  final String[] recognizedFeatures={CONTINUE_AFTER_FATAL_ERROR,LOAD_EXTERNAL_DTD};$  addRecognizedFeatures(recognizedFeatures);$  setFeature(CONTINUE_AFTER_FATAL_ERROR,false);$  setFeature(LOAD_EXTERNAL_DTD,true);$  final String[] recognizedProperties={ERROR_REPORTER,ENTITY_MANAGER,DOCUMENT_SCANNER,DTD_SCANNER,DTD_PROCESSOR,DTD_VALIDATOR,NAMESPACE_BINDER,XMLGRAMMAR_POOL,DATATYPE_VALIDATOR_FACTORY,VALIDATION_MANAGER,JAXP_SCHEMA_SOURCE,JAXP_SCHEMA_LANGUAGE,LOCALE};$  addRecognizedProperties(recognizedProperties);$  fGrammarPool=grammarPool;$  if (fGrammarPool != null) {$    setProperty(XMLGRAMMAR_POOL,fGrammarPool);$  }$  fEntityManager=createEntityManager();$  setProperty(ENTITY_MANAGER,fEntityManager);$  addComponent(fEntityManager);$  fErrorReporter=createErrorReporter();$  fErrorReporter.setDocumentLocator(fEntityManager.getEntityScanner());$  setProperty(ERROR_REPORTER,fErrorReporter);$  addComponent(fErrorReporter);$  fScanner=createDocumentScanner();$  setProperty(DOCUMENT_SCANNER,fScanner);$  if (fScanner instanceof XMLComponent) {$    addComponent((XMLComponent)fScanner);$  }$  fDTDScanner=createDTDScanner();$  if (fDTDScanner != null) {$    setProperty(DTD_SCANNER,fDTDScanner);$    if (fDTDScanner instanceof XMLComponent) {$      addComponent((XMLComponent)fDTDScanner);$    }$  }$  fDTDProcessor=createDTDProcessor();$  if (fDTDProcessor != null) {$    setProperty(DTD_PROCESSOR,fDTDProcessor);$    addComponent(fDTDProcessor);$  }$  fDTDValidator=createDTDValidator();$  if (fDTDValidator != null) {$    setProperty(DTD_VALIDATOR,fDTDValidator);$    addComponent(fDTDValidator);$  }$  fNamespaceBinder=createNamespaceBinder();$  if (fNamespaceBinder != null) {$    setProperty(NAMESPACE_BINDER,fNamespaceBinder);$    addComponent(fNamespaceBinder);$  }$  fDatatypeValidatorFactory=createDatatypeValidatorFactory();$  if (fDatatypeValidatorFactory != null) {$    setProperty(DATATYPE_VALIDATOR_FACTORY,fDatatypeValidatorFactory);$  }$  fValidationManager=createValidationManager();$  if (fValidationManager != null) {$    setProperty(VALIDATION_MANAGER,fValidationManager);$  }$  if (fErrorReporter.getMessageFormatter(XMLMessageFormatter.XML_DOMAIN) == null) {$    XMLMessageFormatter xmft=new XMLMessageFormatter();$    fErrorReporter.putMessageFormatter(XMLMessageFormatter.XML_DOMAIN,xmft);$    fErrorReporter.putMessageFormatter(XMLMessageFormatter.XMLNS_DOMAIN,xmft);$  }$  try {$    setLocale(Locale.getDefault());$  }$ catch (  XNIException e) {$  }$}$
public CodeAttribute(String name,List<Unit> units,List<Tag> tags){$  this.name=name;$  this.mUnits=units;$  this.mTags=tags;$}$
static Object readRequestStack(String name,HttpServletRequest request,Map<String,Object> context,Environment env) throws TemplateModelException {$  return ContextFtlUtil.readRequestStack(name,false,request,context,env);$}$
public int bdd_nodes(){$  return soot.PhaseOptions.getInt(options,"bdd-nodes");$}$
public boolean isAppliable(){$  return getBlastFileName().trim().length() > 0 && (new File(Basic.getFirstLine(getBlastFileName()).trim())).exists();$}$
public GroupsGetCatalogQuery(VkApiClient client,UserActor actor){$  super(client,"groups.getCatalog",GetCatalogResponse.class);$  accessToken(actor.getAccessToken());$}$
public String render(String resourceName,String screenName,boolean asString) throws GeneralException, IOException, SAXException, ParserConfigurationException {$  ModelScreen modelScreen=ScreenFactory.getScreenFromLocation(resourceName,screenName);$  if (modelScreen.getUseCache()) {$    WidgetContextCacheKey wcck=new WidgetContextCacheKey(context);$    String screenCombinedName=resourceName + ":" + screenName;$    ScreenCache screenCache=new ScreenCache();$    GenericWidgetOutput gwo=screenCache.get(screenCombinedName,wcck);$    if (gwo == null) {$      Writer sw=new StringWriter();$      modelScreen.renderScreenString(sw,context,screenStringRenderer);$      gwo=new GenericWidgetOutput(sw.toString());$      screenCache.put(screenCombinedName,wcck,gwo);$      if (asString) {$        return gwo.toString();$      }$ else {$        writer.append(gwo.toString());$      }$    }$ else {$      if (asString) {$        return gwo.toString();$      }$ else {$        writer.append(gwo.toString());$      }$    }$  }$ else {$    context.put("renderFormSeqNumber",String.valueOf(renderFormSeqNumber));$    if (asString) {$      Writer sw=new StringWriter();$      modelScreen.renderScreenString(sw,context,screenStringRenderer);$      return sw.toString();$    }$ else {$      modelScreen.renderScreenString(writer,context,screenStringRenderer);$    }$  }$  return "";$}$
protected boolean isEnabledForInaccessibleResources(){$  return false;$}$
@Override public void stop(Runnable arg0){$  stop();$  arg0.run();$}$
public static String streamToString(InputStream inputStream) throws IOException {$  if (inputStream == null) {$    return "";$  }$  StringBuilder sBuilder=new StringBuilder();$  String line;$  BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(inputStream));$  while ((line=bufferedReader.readLine()) != null) {$    sBuilder.append(line).append("\n");$  }$  return sBuilder.toString();$}$
public static CalendarFragment newInstance(CustomCalendar calendar){$  CalendarFragment fragment=new CalendarFragment();$  fragment.setCalendar(calendar);$  return fragment;$}$
public FilterOperationDelegateInvoker(int operationCode,Method processMethod){$  this.operationCode=operationCode;$  this.processMethod=ReflectionUtil.createMethod(processMethod);$  this.parameterTypes=processMethod.getParameterTypes();$}$
public static Class<?> loadClass(String className,boolean fastPath) throws ClassNotFoundException {$  if (_classProvider == null) {$synchronized (AdditionalClassProviderFactory.class) {$      if (_classProvider == null)       throw new ClassNotFoundException("no class provider present");$    }$  }$  return _classProvider.loadClass(className,fastPath);$}$
public TimbreDistribution(GaussianMixture gmm){$  super();$  this.gmm=gmm;$}$
public SpecialInvokeExpr newSpecialInvokeExpr(Local base,SootMethodRef method,Value... args){$  return newSpecialInvokeExpr(base,method,Arrays.asList(args));$}$
private HermesEventBus(){$  mEventBus=EventBus.getDefault();$  mRemoteApis=new ObjectCanary2<IMainService>();$}$
public void paintFrame(@NotNull Graphics g,@NotNull Device device,@NotNull ScreenOrientation orientation,boolean showEffects,int x1,int y1,int height){$  DeviceData data=getDeviceData(device);$  if (data == null || height == 0) {$    return;$  }$  FrameData frame=data.getFrameData(orientation,Integer.MAX_VALUE);$  BufferedImage image=frame.getImage(showEffects);$  if (image != null) {$    double scale=height / (double)frame.getScreenHeight();$    int dx1=(int)(x1 - scale * frame.getScreenX());$    int dy1=(int)(y1 - scale * frame.getScreenY());$    int dx2=dx1 + (int)(scale * image.getWidth());$    int dy2=dy1 + (int)(scale * image.getHeight());$    g.drawImage(image,dx1,dy1,dx2,dy2,0,0,image.getWidth(),image.getHeight(),null);$  }$}$
@Override public void renderLimitLines(Canvas c){$  List<LimitLine> limitLines=mYAxis.getLimitLines();$  if (limitLines == null || limitLines.size() <= 0)   return;$  float[] pts=new float[2];$  Path limitLinePath=new Path();$  for (int i=0; i < limitLines.size(); i++) {$    LimitLine l=limitLines.get(i);$    if (!l.isEnabled())     continue;$    mLimitLinePaint.setStyle(Paint.Style.STROKE);$    mLimitLinePaint.setColor(l.getLineColor());$    mLimitLinePaint.setStrokeWidth(l.getLineWidth());$    mLimitLinePaint.setPathEffect(l.getDashPathEffect());$    pts[1]=l.getLimit();$    mTrans.pointValuesToPixel(pts);$    limitLinePath.moveTo(mViewPortHandler.contentLeft(),pts[1]);$    limitLinePath.lineTo(mViewPortHandler.contentRight(),pts[1]);$    c.drawPath(limitLinePath,mLimitLinePaint);$    limitLinePath.reset();$    String label=l.getLabel();$    if (label != null && !"".equals(label)) {$      mLimitLinePaint.setStyle(l.getTextStyle());$      mLimitLinePaint.setPathEffect(null);$      mLimitLinePaint.setColor(l.getTextColor());$      mLimitLinePaint.setTypeface(l.getTypeface());$      mLimitLinePaint.setStrokeWidth(0.5f);$      mLimitLinePaint.setTextSize(l.getTextSize());$      final float labelLineHeight=Utils.calcTextHeight(mLimitLinePaint,label);$      float xOffset=Utils.convertDpToPixel(4f) + l.getXOffset();$      float yOffset=l.getLineWidth() + labelLineHeight + l.getYOffset();$      final LimitLine.LimitLabelPosition position=l.getLabelPosition();$      if (position == LimitLine.LimitLabelPosition.RIGHT_TOP) {$        mLimitLinePaint.setTextAlign(Align.RIGHT);$        c.drawText(label,mViewPortHandler.contentRight() - xOffset,pts[1] - yOffset + labelLineHeight,mLimitLinePaint);$      }$ else       if (position == LimitLine.LimitLabelPosition.RIGHT_BOTTOM) {$        mLimitLinePaint.setTextAlign(Align.RIGHT);$        c.drawText(label,mViewPortHandler.contentRight() - xOffset,pts[1] + yOffset,mLimitLinePaint);$      }$ else       if (position == LimitLine.LimitLabelPosition.LEFT_TOP) {$        mLimitLinePaint.setTextAlign(Align.LEFT);$        c.drawText(label,mViewPortHandler.contentLeft() + xOffset,pts[1] - yOffset + labelLineHeight,mLimitLinePaint);$      }$ else {$        mLimitLinePaint.setTextAlign(Align.LEFT);$        c.drawText(label,mViewPortHandler.offsetLeft() + xOffset,pts[1] + yOffset,mLimitLinePaint);$      }$    }$  }$}$
public RequestHandle delete(Context context,String url,Header[] headers,RequestParams params,ResponseHandlerInterface responseHandler){$  HttpDelete httpDelete=new HttpDelete(getUrlWithQueryString(isUrlEncodingEnabled,url,params));$  if (headers != null)   httpDelete.setHeaders(headers);$  return sendRequest(httpClient,httpContext,httpDelete,null,responseHandler,context);$}$
@deprecated protected int writeDeltaTo(int jumpTarget){$  int i=this.bytesLength - jumpTarget;$  assert (i >= 0);$  if (i <= 191)   return write(i);$  int length;$  int length;$  if (i <= 12287) {$    this.intBytes[0]=((byte)(192 + (i >> 8)));$    length=1;$  }$ else {$    int length;$    if (i <= 917503) {$      this.intBytes[0]=((byte)(240 + (i >> 16)));$      length=2;$    }$ else {$      int length;$      if (i <= 16777215) {$        this.intBytes[0]=-2;$        length=3;$      }$ else {$        this.intBytes[0]=-1;$        this.intBytes[1]=((byte)(i >> 24));$        length=4;$      }$      this.intBytes[1]=((byte)(i >> 16));$    }$    this.intBytes[1]=((byte)(i >> 8));$  }$  this.intBytes[(length++)]=((byte)i);$  return write(this.intBytes,length);$}$
@Deprecated public JavaPluginLoader(Server instance){$  Validate.notNull(instance,"Server cannot be null");$  server=instance;$}$
public boolean vta(){$  return soot.PhaseOptions.getBoolean(options,"vta");$}$
public static boolean isExtension(String filename,Collection<String> extensions){$  if (filename == null) {$    return false;$  }$  if (extensions == null || extensions.isEmpty()) {$    return indexOfExtension(filename) == -1;$  }$  String fileExt=getExtension(filename);$  for (  String extension : extensions) {$    if (fileExt.equals(extension)) {$      return true;$    }$  }$  return false;$}$
public static void f(String tag,String msg){$  if (sLevel > LEVEL_FATAL) {$    return;$  }$  Log.wtf(tag,msg);$}$
public boolean force_gc(){$  return soot.PhaseOptions.getBoolean(options,"force-gc");$}$
public Builder zoomAnimationThreshold(Number zoomAnimationThreshold){$  this.zoomAnimationThreshold=zoomAnimationThreshold;$  return this;$}$
public PhotosEditQuery edit(UserActor actor,int photoId){$  return new PhotosEditQuery(getClient(),actor,photoId);$}$
@RequestMapping(method=RequestMethod.GET,produces="application/json") public JsonNode listModels(HttpServletRequest request){$  ServerConfig serverConfig=retrieveServerConfig();$  Map<String,String[]> parameterMap=getRequestParametersWithoutServerId(request);$  try {$    return clientService.listModels(serverConfig,parameterMap);$  }$ catch (  ActivitiServiceException e) {$    throw new BadRequestException(e.getMessage());$  }$}$
@SubscribeEvent public void onFood(LivingEntityUseItemEvent.Start event){$  if (!(event.getEntityLiving() instanceof EntityPlayer))   return;$  if (!(event.getItem().getItem() instanceof ItemFood))   return;$  EntityPlayer player=(EntityPlayer)event.getEntityLiving();$  if (!(player.getFoodStats() instanceof BWMFoodStats))   return;$  if (player.isPotionActive(MobEffects.HUNGER)) {$    event.setCanceled(true);$  }$}$
public void addMatcher(XPathMatcher matcher){$  ensureMatcherCapacity();$  fMatchers[fMatchersCount++]=matcher;$}$
public static <T extends BaseFragment>T newInstance(Class<T> fragmentClazz,Bundle args){$  T fragment=null;$  try {$    fragment=fragmentClazz.newInstance();$    fragment.setArguments(args);$  }$ catch (  java.lang.InstantiationException e) {$    e.printStackTrace();$  }$catch (  IllegalAccessException e) {$    e.printStackTrace();$  }$  return fragment;$}$
public DocumentNGramGraph[] intersectAndDeltaGraph(DocumentNGramGraph dgOtherGraph){$  DocumentNGramGraph dgUnion=null;$  if (dgOtherGraph.length() > length()) {$    dgUnion=(DocumentNGramGraph)dgOtherGraph.clone();$    dgUnion.merge(this,0);$  }$ else {$    dgUnion=(DocumentNGramGraph)clone();$    dgUnion.merge(dgOtherGraph,0);$  }$  DocumentNGramGraph[] res=new DocumentNGramGraph[2];$  DocumentNGramGraph dgIntersection=intersectGraph(dgOtherGraph);$  res[0]=dgIntersection;$  for (int iCurLvl=MinSize; iCurLvl <= MaxSize; iCurLvl++) {$    UniqueVertexGraph gUnion=dgUnion.getGraphLevelByNGramSize(iCurLvl);$    UniqueVertexGraph gIntersection=dgIntersection.getGraphLevelByNGramSize(iCurLvl);$    EdgeCachedLocator eclLocator=new EdgeCachedLocator(100);$    if (gIntersection == null)     continue;$    java.util.Iterator iIter=gIntersection.getEdgeSet().iterator();$    while (iIter.hasNext()) {$      WeightedEdge weCurItem=(WeightedEdge)iIter.next();$      Edge eEdge=eclLocator.locateDirectedEdgeInGraph(gUnion,weCurItem.getVertexA(),weCurItem.getVertexB());$      if (eEdge != null)       try {$        gUnion.removeEdge(eEdge);$      }$ catch (      Exception ex) {$        ex.printStackTrace();$      }$    }$  }$  res[1]=dgUnion;$  return res;$}$
public ZeroException(){$  this(LocalizedFormats.ZERO_NOT_ALLOWED);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_HostileUp_ME_TO_SELF(String value0d,String skillname){$  return new SM_SYSTEM_MESSAGE(1200376,value0d,skillname);$}$
public void java_io_ObjectInputStream_allocateNewObject(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  throw new NativeMethodNotSupportedException(method);$}$
public long distanceSquare(Coord coord){$  long dx=coord.x - x;$  long dy=coord.y - y;$  return dx * dx + dy * dy;$}$
public static boolean areEqual(ItemStack stack1,ItemStack stack2){$  if (stack1 == null || stack2 == null) {$    return false;$  }$ else {$    return stack1.isItemEqual(stack2);$  }$}$
public NoSuchComponentException(Exception cause){$  super(cause);$}$
protected void startRecoarding(){$  coordinates.clear();$  enabled=true;$}$
@Override protected final boolean writeData(ByteBuffer data){$synchronized (guard) {$    final long begin=System.nanoTime();$    if (sendMsgQueue.isEmpty()) {$      return false;$    }$    AionServerPacket packet=sendMsgQueue.removeFirst();$    PacketLoggerService.getInstance().logPacketSM(packet.getPacketName());$    try {$      packet.write(this,data);$      return true;$    }$  finally {$      RunnableStatsManager.handleStats(packet.getClass(),"runImpl()",System.nanoTime() - begin);$    }$  }$}$
private void assertResult(String expected,String result){$  if (diagCollector.getErrorCount() > 0) {$    Truth.assertWithMessage("Errors detected while filtering comment").fail(NEWLINE_JOINER.join(diagCollector.getErrors()));$  }$ else {$    Truth.assertThat(result).isEqualTo(expected);$  }$}$
public void confirmExitWithMessage(String message,long doublePressInterval){$  if (doublePressInterval == -1) {$    doublePressInterval=DOUBLE_PRESS_INTERVAL;$  }$  Toast.makeText(mContextReference.getContext(),message,Toast.LENGTH_SHORT).show();$  long pressTime=System.currentTimeMillis();$  if ((pressTime - lastPressTime) <= doublePressInterval) {$    lastPressTime=0;$    ((Activity)mContextReference.getContext()).finish();$    Log.e(TAG,"nullify mContextReference");$    mContextReference=null;$  }$  lastPressTime=pressTime;$}$
private void loadText(InputStream is){$  BufferedReader reader;$  String line;$  unitList=new ArrayList();$  unitTypesList=new ArrayList();$  if (is == null) {$    throw new Error("Can't load cluster db file.");$  }$  reader=new BufferedReader(new InputStreamReader(is));$  try {$    line=reader.readLine();$    lineCount++;$    while (line != null) {$      if (!line.startsWith("***")) {$        parseAndAdd(line,reader);$      }$      line=reader.readLine();$    }$    reader.close();$    units=new DatabaseClusterUnit[unitList.size()];$    units=(DatabaseClusterUnit[])unitList.toArray(units);$    unitList=null;$    unitTypes=new UnitType[unitTypesList.size()];$    unitTypes=(UnitType[])unitTypesList.toArray(unitTypes);$    unitTypesList=null;$  }$ catch (  IOException e) {$    throw new Error(e.getMessage() + " at line " + lineCount);$  }$ finally {$  }$}$
public static int copy(InputStream input,OutputStream output) throws IOException {$  long count=copyLarge(input,output);$  if (count > Integer.MAX_VALUE) {$    return -1;$  }$  return (int)count;$}$
public static double radian2Angle(double radian){$  return radian / Math.PI * 180;$}$
public ViewsFinder excludingChildsFromFilteredGroupViews(){$  this.addChildsFromFilteredGroupViews=false;$  return this;$}$
public BracketingNthOrderBrentSolver(){$  this(DEFAULT_ABSOLUTE_ACCURACY,DEFAULT_MAXIMAL_ORDER);$}$
public void clear(){$  super.clear();$  short[] keys=_set;$  Object[] vals=_values;$  byte[] states=_states;$  Arrays.fill(_set,0,_set.length,(short)0);$  Arrays.fill(_values,0,_values.length,null);$  Arrays.fill(_states,0,_states.length,FREE);$}$
private float[] fetchSpectrum(float[] amplitudes,int groupsNumber){$  int approximateGroupLength=amplitudes.length / groupsNumber;$  float[] result=new float[groupsNumber];$  double tmpSum;$  double wholeSum=0;$  for (int i=0; i < groupsNumber; i++) {$    tmpSum=0;$    for (int j=i * approximateGroupLength; j < (i + 1) * approximateGroupLength; j++) {$      tmpSum+=amplitudes[j];$    }$    result[i]=(float)(tmpSum / approximateGroupLength);$    wholeSum+=result[i];$  }$  for (int i=0; i < groupsNumber; i++) {$    result[i]/=wholeSum;$  }$  return result;$}$
private boolean matches(Composite column,ColumnGroup group,int index){$  return column.size() == 2 && column.get(0,AsciiSerializer.get()).equals(group.name()) && column.get(1,IntegerSerializer.get()).equals(index);$}$
public GoogleUserCredentialProvider(OkHttpClient client,String refreshToken,Time time) throws LoginFailedException, RemoteServerException {$  this.time=time;$  this.client=client;$  this.refreshToken=refreshToken;$  refreshToken(refreshToken);$  authbuilder=AuthInfo.newBuilder();$}$
public static void growPolygon(float pts[],int len,float amt){$  float[] c=centroid(pts,len);$  for (int i=0; i < len; i+=2) {$    float vx=pts[i] - c[0];$    float vy=pts[i + 1] - c[1];$    float norm=(float)Math.sqrt(vx * vx + vy * vy);$    pts[i]+=amt * vx / norm;$    pts[i + 1]+=amt * vy / norm;$  }$}$
public static byte[] toByteArray(URLConnection urlConn) throws IOException {$  InputStream inputStream=urlConn.getInputStream();$  try {$    return IOUtils.toByteArray(inputStream);$  }$  finally {$    inputStream.close();$  }$}$
public FrameProvider(DoubleDataSource signal,InlineDataProcessor processor,int frameLength,int frameShift,int samplingRate,boolean stopWhenTouchingEnd){$  this.signal=signal;$  this.processor=processor;$  this.frameShift=frameShift;$  this.frameLength=frameLength;$  this.samplingRate=samplingRate;$  this.frame=new double[frameLength];$  this.frameStart=-1;$  this.nextFrameStart=0;$  validSamplesInFrame=0;$  this.memory=new double[frameLength];$  posInMemory=memory.length;$  memoryFilled=false;$  this.stopWhenTouchingEnd=stopWhenTouchingEnd;$}$
public TIntArrayList(){$  this(DEFAULT_CAPACITY);$}$
public SimplexSolver(final double epsilon){$  this(epsilon,DEFAULT_ULPS,DEFAULT_CUT_OFF);$}$
@Override public int hashCode(){$  final int prime=31;$  int result=1;$  result=prime * result + ((getId() == null) ? 0 : getId().hashCode());$  result=prime * result + ((getUserId() == null) ? 0 : getUserId().hashCode());$  result=prime * result + ((getProvider() == null) ? 0 : getProvider().hashCode());$  result=prime * result + ((getOpenId() == null) ? 0 : getOpenId().hashCode());$  result=prime * result + ((getEnable() == null) ? 0 : getEnable().hashCode());$  result=prime * result + ((getRemark() == null) ? 0 : getRemark().hashCode());$  result=prime * result + ((getCreateBy() == null) ? 0 : getCreateBy().hashCode());$  result=prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());$  result=prime * result + ((getUpdateBy() == null) ? 0 : getUpdateBy().hashCode());$  result=prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());$  return result;$}$
public void validate() throws ValidationException {$  String mbrolaBase=Utilities.getProperty("mbrola.base",null);$  File mbrolaBinary=new File(mbrolaVoice.getMbrolaBinary());$  File mbrolaVoiceDB=new File(mbrolaVoice.getDatabase());$  if (mbrolaBase == null || mbrolaBase.length() == 0) {$    throw new ValidationException("System property \"mbrola.base\" is undefined. " + "You might need to set the MBROLA_DIR environment variable.");$  }$  if (!mbrolaBinary.exists()) {$    throw new ValidationException("No MBROLA binary at: " + mbrolaVoice.getMbrolaBinary());$  }$  if (!mbrolaVoiceDB.exists()) {$    throw new ValidationException("No voice database for " + mbrolaVoice.getName() + " at: "+ mbrolaVoice.getDatabase());$  }$}$
public boolean forEachKey(TObjectProcedure<K> procedure){$  return forEach(procedure);$}$
public static ValueGetterSpacePredicate<ServerEntry> propertyOr(String propertyName,ISpacePredicate leftPredicate,ISpacePredicate rightPredicate){$  return property(propertyName,or(leftPredicate,rightPredicate));$}$
public static CommandResult execCommand(String command,boolean isRoot,boolean isNeedResultMsg){$  return execCommand(new String[]{command},isRoot,isNeedResultMsg);$}$
private static void print(String s){$  System.out.print(s);$}$
@Override public void actionPerformed(ActionEvent ev){$  String result=JOptionPane.showInputDialog(getViewer().getFrame(),"Enter name","Select Node",JOptionPane.QUESTION_MESSAGE);$  if (result != null)   execute("select name=" + result + ";");$}$
public FTPReply sendSiteCommand(String command) throws IllegalStateException, IOException, FTPIllegalReplyException {$synchronized (lock) {$    if (!connected) {$      throw new IllegalStateException("Client not connected");$    }$    communication.sendFTPCommand("SITE " + command);$    touchAutoNoopTimer();$    return communication.readFTPReply();$  }$}$
public PolyhedronsSet(final double tolerance){$  super(tolerance);$}$
public Roles(List<Long> roles){$  if (access == null && roles != null && roles.size() > 0) {$    access=new HashSet<String>();$    list=Role.loadAll(roles);$    for (    Role r : list) {$      List<String> names=r.getAccesses();$      if (names != null && names.size() > 0) {$        access.addAll(names);$      }$    }$  }$}$
public String provideNetworkType(){$  return "unknown";$}$
Request toRequest(Object... args) throws IOException {$  RequestBuilder requestBuilder=new RequestBuilder(httpMethod,baseUrl,relativeUrl,headers,contentType,hasBody,isFormEncoded,isMultipart);$  @SuppressWarnings("unchecked") ParameterHandler<Object>[] handlers=(ParameterHandler<Object>[])parameterHandlers;$  int argumentCount=args != null ? args.length : 0;$  if (argumentCount != handlers.length) {$    throw new IllegalArgumentException("Argument count (" + argumentCount + ") doesn't match expected count ("+ handlers.length+ ")");$  }$  for (int p=0; p < argumentCount; p++) {$    handlers[p].apply(requestBuilder,args[p]);$  }$  return requestBuilder.build();$}$
public void writeSortTempFile(Object[][] records) throws CarbonSortKeyAndGroupByException {$  ByteArrayOutputStream blockDataArray=null;$  DataOutputStream dataOutputStream=null;$  int totalSize=0;$  int recordSize=0;$  try {$    recordSize=(measureCount * CarbonCommonConstants.DOUBLE_SIZE_IN_BYTE) + (dimensionCount * CarbonCommonConstants.INT_SIZE_IN_BYTE);$    totalSize=records.length * recordSize;$    blockDataArray=new ByteArrayOutputStream(totalSize);$    dataOutputStream=new DataOutputStream(blockDataArray);$    writeDataOutputStream(records,dataOutputStream,measureCount,dimensionCount,noDictionaryCount,complexDimensionCount);$    stream.writeInt(records.length);$    byte[] byteArray=blockDataArray.toByteArray();$    stream.writeInt(byteArray.length);$    stream.write(byteArray);$  }$ catch (  IOException e) {$    throw new CarbonSortKeyAndGroupByException(e);$  }$ finally {$    CarbonUtil.closeStreams(blockDataArray);$    CarbonUtil.closeStreams(dataOutputStream);$  }$}$
public static String guessBlastType(String blastText){$  if (blastText == null || !blastText.contains("Query"))   return UNKNOWN;$  if (blastText.contains("Frame=") || (blastText.contains("Frame =")))   return BLASTX;$  if (blastText.contains("Strand=") || blastText.contains("Strand ="))   return BLASTN;$  return BLASTP;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DPTransfer_ME_TO_B(String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200512,skilltarget,skillname);$}$
public MD5InputStream(InputStream in){$  super(in);$  md5=new MD5();$}$
@Override public int executeUpdate(String cmd) throws RemoteException {$  try {$    Transaction tx=rconn.getTransaction();$    if (tx.isReadOnly())     throw new UnsupportedOperationException();$    int result=VanillaDb.newPlanner().executeUpdate(cmd,tx);$    if (rconn.getAutoCommit())     rconn.commit();$ else     rconn.endStatement();$    return result;$  }$ catch (  RuntimeException e) {$    rconn.rollback();$    throw e;$  }$}$
@SuppressWarnings("unchecked") private void initGaugeWhitelist(){$  Set<String> set=new HashSet<String>();$  set.add("server_connections");$  set.add("client_connections");$  set.add("dnode_client_connections");$  set.add("peer_connections");$  String s=GaugeWhitelist.get();$  if (!s.isEmpty()) {$    String[] parts=s.split(",");$    if (parts != null && parts.length > 0) {$      set.addAll(Arrays.asList(parts));$    }$  }$  gaugeFilter.set(set);$}$
public boolean isInNet(String host,String pattern,String mask){$  host=dnsResolve(host);$  if (host == null || host.length() == 0) {$    return false;$  }$  long lhost=parseIpAddressToLong(host);$  long lpattern=parseIpAddressToLong(pattern);$  long lmask=parseIpAddressToLong(mask);$  return (lhost & lmask) == lpattern;$}$
public RequestParams(Map<String,String> source){$  init();$  if (source != null) {$    for (    Map.Entry<String,String> entry : source.entrySet()) {$      put(entry.getKey(),entry.getValue());$    }$  }$}$
@Override public void addASModel(ASModel abstractSchema){$  fASModels.addElement(abstractSchema);$}$
public static boolean isChinese(int codePoint){$  return codePoint >= ChineseLanguageConstants.CHINESE_START && codePoint <= ChineseLanguageConstants.CHINESE_END;$}$
public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_FRIEND(String value0){$  return new SM_SYSTEM_MESSAGE(1390119,value0);$}$
public boolean hasFollowUp(){$  return followUp != null;$}$
public final String loadDocumentElement(String sDocID,String sElement){$  Node nDoc=XMLDoc.getElementById(sDocID);$  if (nDoc == null)   return null;$  Element eDoc=(Element)nDoc;$  NodeList nDocElements=nDoc.getChildNodes();$  Node n=null;$  for (int iCnt=0; iCnt < nDocElements.getLength(); iCnt++) {$    if (nDocElements.item(iCnt).getNodeName().equalsIgnoreCase(sElement)) {$      n=nDocElements.item(iCnt);$      break;$    }$  }$  String sRes;$  if (n != null)   sRes=n.getTextContent();$ else   sRes="";$  return sRes;$}$
public void openDriver(SurfaceHolder holder) throws IOException {$  if (camera == null) {$    camera=Camera.open();$    if (camera == null) {$      throw new IOException();$    }$    camera.setPreviewDisplay(holder);$    if (!initialized) {$      initialized=true;$      configManager.initFromCameraParameters(camera);$    }$    configManager.setDesiredCameraParameters(camera);$    FlashlightManager.enableFlashlight();$  }$}$
static Object newInstance(String className,ClassLoader cl,boolean doFallback) throws ConfigurationError {$  try {$    Class providerClass=getProviderClass(className,cl,doFallback);$    Object instance=providerClass.newInstance();$    if (debug) {$      dPrint("created new instance of " + providerClass + " using ClassLoader: "+ cl);$    }$    return instance;$  }$ catch (  ClassNotFoundException x) {$    throw new ConfigurationError("Provider " + className + " not found",x);$  }$catch (  Exception x) {$    throw new ConfigurationError("Provider " + className + " could not be instantiated: "+ x,x);$  }$}$
public static <K,V>Map<K,V> newMap(Map<? extends K,? extends V> map){$  return new HashMap<K,V>(map);$}$
public void removeLookupGroups(String[] groups){$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.entering(JoinStateManager.class.getName(),"removeLookupGroups");$  }$  ((DiscoveryGroupManagement)dm).removeGroups(groups);$  update();$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.exiting(JoinStateManager.class.getName(),"removeLookupGroups");$  }$}$
public boolean rollback(){$  myLock.writeLock().lock();$  try {$    return finishTransaction();$  }$  finally {$    myLock.writeLock().unlock();$  }$}$
public boolean canContain(ElementType other){$  return (theModel & other.theMemberOf) != 0;$}$
@Override public void write(byte[] value) throws IOException {$  if (isFirstTime) {$    init();$    isFirstTime=false;$  }$  checkAndWriteDictionaryChunkToFile();$  oneDictionaryChunkList.add(ByteBuffer.wrap(value));$  totalRecordCount++;$}$
public static _Fields findByName(String name){$  return byName.get(name);$}$
@Override protected boolean isSideChannelActive(){$  return sideChannelActive;$}$
public void saveToFileSystem(final String appName,final File propertyFileLocation) throws IOException {$  final OutputStream outputStream=new FileOutputStream(propertyFileLocation);$  properties.store(outputStream,"=== " + appName + " properties ===");$}$
public OpenMapRealVector(Double[] values,double epsilon){$  virtualSize=values.length;$  entries=new OpenIntToDoubleHashMap(0.0);$  this.epsilon=epsilon;$  for (int key=0; key < values.length; key++) {$    double value=values[key].doubleValue();$    if (!isDefaultValue(value)) {$      entries.put(key,value);$    }$  }$}$
public boolean only_array_ref(){$  return soot.PhaseOptions.getBoolean(options,"only-array-ref");$}$
public void showContentView(){$  if (null != mBaseLayout) {$    mBaseLayout.showContentView();$  }$}$
private void registerError(SAXParseException exception){$  StringBuilder errorMessage=new StringBuilder();$  errorMessage.append(xml).append(": ");$  errorMessage.append("Line ").append(exception.getLineNumber()).append(", ");$  errorMessage.append("column ").append(exception.getColumnNumber());$  if (qname != null) {$    errorMessage.append(", ").append("node <").append(qname).append(">");$  }$  errorMessage.append(". ").append(exception.getLocalizedMessage());$  errorMessages.add(errorMessage.toString());$}$
public void endOperation(boolean refresh,Set<IResource> refreshResourceList,boolean refreshLocal) throws SVNException {$  try {$    if (lock.getNestingCount() == 1) {$      svnClient.removeNotifyListener(this);$      if (operationNotifyListener != null) {$        operationNotifyListener.clear();$        svnClient.setProgressListener(null);$      }$      if (refreshResourceList != null) {$        FilteringContainerList folderList=new FilteringContainerList(refreshResourceList);$        for (        IContainer resource : folderList) {$          if (resource.getProject().isOpen()) {$            try {$              SVNProviderPlugin.getPlugin().getStatusCacheManager().refreshStatus((IContainer)resource,true);$            }$ catch (            Exception e) {$              SVNProviderPlugin.log(IStatus.ERROR,e.getMessage(),e);$            }$          }$        }$        IResource[] resources=new IResource[refreshResourceList.size()];$        refreshResourceList.toArray(resources);$        SVNProviderPlugin.broadcastModificationStateChanges(resources);$      }$      if (refreshLocal) {$        FilteringContainerList foldersToRefresh=new FilteringContainerList(localRefreshList);$        for (        IContainer folder : foldersToRefresh) {$          try {$            folder.refreshLocal(IResource.DEPTH_INFINITE,new NullProgressMonitor());$          }$ catch (          CoreException e) {$          }$        }$      }$    }$  }$  finally {$    lock.release();$    operationNotifyListener=null;$    localRefreshList=new LinkedHashSet<IResource>();$  }$}$
public Boolean isDirectDictionary(){$  return isDirectDictionary;$}$
public QueryAnswers materialise(Set<Substitution> subs){$  QueryAnswers insertAnswers=new QueryAnswers();$  subs.forEach(null);$  Atomic atom=getAtom();$  if (atom.isRelation() && (atom.getRoleVarTypeMap().isEmpty() || !((Relation)atom).hasExplicitRoleTypes())) {$    String relTypeId=atom.getTypeId();$    RelationType relType=(RelationType)atom.getType();$    Set<String> vars=atom.getVarNames();$    Set<RoleType> roles=Sets.newHashSet(relType.hasRoles());$    Set<Map<String,String>> roleMaps=new HashSet<>();$    computeRoleCombinations(vars,roles,new HashMap<>(),roleMaps);$    removeAtom(atom);$    roleMaps.forEach(null);$    addAtom(atom);$  }$ else   insertAnswers.addAll(materialiseComplete());$  subs.forEach(null);$  return insertAnswers;$}$
public Bitmap decodeFileDescriptor(FileDescriptor fd,BitmapFactory.Options options){$  if (options.mCancel) {$    return null;$  }$  Thread thread=Thread.currentThread();$  if (!canThreadDecoding(thread)) {$    return null;$  }$  setDecodingOptions(thread,options);$  Bitmap b=BitmapFactory.decodeFileDescriptor(fd,null,options);$  removeDecodingOptions(thread);$  return b;$}$
public DestroyedFailedException(){$  super();$}$
public static void overScrollBy(final PullToRefreshBase<?> view,final int deltaX,final int scrollX,final int deltaY,final int scrollY,final boolean isTouchEvent){$  overScrollBy(view,deltaX,scrollX,deltaY,scrollY,0,isTouchEvent);$}$
@Deprecated public void onSuccess(int statusCode,String content){$  onSuccess(content);$}$
public GroupsSetCallbackSettingsQuery wallReplyNew(Boolean value){$  return unsafeParam("wall_reply_new",value);$}$
public static Class forName(String name,ClassLoader classLoader) throws ClassNotFoundException {$  Class clazz=resolvePrimitiveClassName(name);$  if (clazz != null) {$    return clazz;$  }$  if (name.endsWith(ARRAY_SUFFIX)) {$    String elementClassName=name.substring(0,name.length() - ARRAY_SUFFIX.length());$    Class elementClass=ClassUtils.forName(elementClassName,classLoader);$    return Array.newInstance(elementClass,0).getClass();$  }$  return Class.forName(name,true,classLoader);$}$
public static SM_SYSTEM_MESSAGE STR_CANNOT_USE_DOOR_REPAIR_NOT_ENOUGH_FEE(String value0,String value1){$  return new SM_SYSTEM_MESSAGE(1300728,value0,value1);$}$
public static java.util.Date nowDate(){$  return new java.util.Date();$}$
private void createStep(){$  this.token=Translations.create(getString(R.string.light_and_dark_gate_open));$  insertNewIn(token.current);$  loop(token);$  this.translateMode=true;$}$
public void removeItemRange(@IntRange(from=0) int start,@IntRange(from=0) int end){$  if (start < items.size() && end < items.size()) {$    for (int i=start; i < end; i++) {$      items.remove(i);$    }$    notifyDataSetChanged();$  }$}$
public static IVScanResult createIVScanResult(Pokemon pokemon,double estimatedPokemonLevel,int pokemonCP,boolean b){$  IVScanResult res=new IVScanResult(pokemon,estimatedPokemonLevel,pokemonCP,b);$  scanContainer.addNewScan(res);$  return res;$}$
private static boolean _cover3(String dest,int w,int h,List<String> sources) throws Exception {$  int len=sources.size();$  if (len == 4) {$    BufferedImage src[]=new BufferedImage[len];$    for (int i=0; i < len; i++) {$      String s=sources.get(i);$      if (!EMPTY.equals(s)) {$        src[i]=ImageIO.read(new File(sources.get(i)));$      }$    }$    BufferedImage out=new BufferedImage(w,h,BufferedImage.TYPE_3BYTE_BGR);$    Graphics2D g=(Graphics2D)out.getGraphics();$    g.setColor(Color.WHITE);$    g.fillRect(0,0,w,h);$    int space=4;$    int w1=(w - 1);$    int h1=(h - 1) * 2 / 3;$    float fd=((float)w1) / h1;$    int x=0;$    int y=0;$    BufferedImage img=src[0];$    if (img != null) {$      int w2=img.getWidth();$      int h2=img.getHeight();$      float fs=((float)w2) / h2;$      if (fs > fd) {$        w2=w1;$        h2=(int)(w2 / fs);$      }$ else       if (fs < fd) {$        h2=h1;$        w2=(int)(h2 * fs);$      }$ else {$        w2=w1;$        h2=h1;$      }$      Image tmp=img.getScaledInstance(w2,h2,Image.SCALE_SMOOTH);$      g.drawImage(tmp,x + space + (w1 - w2) / 2,y + space + (h1 - h2) / 2,w2 - 2 * space,h2 - 2 * space,null);$    }$    drawRect(g,x,y,w1,h1);$    int size=3;$    w1=(w - 1) / size;$    h1=(h - 1) / size;$    fd=((float)w1) / h1;$    for (int i=1; i < len; i++) {$      x=(i - 1) * w1;$      y=h1 * 2;$      img=src[i];$      if (img != null) {$        int w2=img.getWidth();$        int h2=img.getHeight();$        float fs=((float)w2) / h2;$        if (fs > fd) {$          w2=w1;$          h2=(int)(w2 / fs);$        }$ else         if (fs < fd) {$          h2=h1;$          w2=(int)(h2 * fs);$        }$ else {$          w2=w1;$          h2=h1;$        }$        Image tmp=img.getScaledInstance(w2,h2,Image.SCALE_SMOOTH);$        g.drawImage(tmp,x + space + (w1 - w2) / 2,y + space + (h1 - h2) / 2,w2 - 2 * space,h2 - 2 * space,null);$      }$      drawRect(g,x,y,w1,h1);$    }$    ImageIO.write(out,"jpg",new File(dest));$    g.dispose();$    return true;$  }$ else {$    throw new Exception("sources MUST is 4 picutures!" + len);$  }$}$
public boolean enabled(){$  return soot.PhaseOptions.getBoolean(options,"enabled");$}$
public void resetShipAfterDateIfBefore(Timestamp newShipAfterDate){$  if (newShipAfterDate != null) {$    if ((this.shipAfterDate == null) || (!this.shipAfterDate.after(newShipAfterDate))) {$      this.shipAfterDate=newShipAfterDate;$    }$  }$}$
public ReceiveResultBehaviour(ResultsAgent a,long lInterval){$  super(a,lInterval);$  myAgent=a;$  Interval=lInterval;$  if (myAgent.OutFile.length() != 0) {$    try {$      pOut=new PrintStream(myAgent.OutFile);$    }$ catch (    FileNotFoundException fnfe) {$      System.err.println("Cannot output to selected file:\n" + fnfe.getMessage());$      System.exit(1);$    }$  }$  if (pOut == null)   pOut=System.err;$}$
public static Object invokeStaticMethod(Class<?> clazz,String name,Class<?>[] parameterTypes,Object[] args) throws NoSuchMethodException, InvocationTargetException, IllegalAccessException {$  return invokeMethod(clazz,clazz,name,parameterTypes,args);$}$
public void removePoint(int rowIndex){$  if ((rowIndex < 0) || (rowIndex >= pointList.size())) {$    return;$  }$  pointList.remove(rowIndex);$  this.fireTableDataChanged();$}$
@Override public int hashCode(){$  int result=31 + MathUtils.hash(getMax());$  result=result * 31 + MathUtils.hash(getMean());$  result=result * 31 + MathUtils.hash(getMin());$  result=result * 31 + MathUtils.hash(getN());$  result=result * 31 + MathUtils.hash(getSum());$  result=result * 31 + MathUtils.hash(getVariance());$  return result;$}$
public byte[] reSample(byte[] sourceData,int bitsPerSample,int sourceRate,int targetRate){$  int bytePerSample=bitsPerSample / 8;$  int numSamples=sourceData.length / bytePerSample;$  short[] amplitudes=new short[numSamples];$  int pointer=0;$  for (int i=0; i < numSamples; i++) {$    short amplitude=0;$    for (int byteNumber=0; byteNumber < bytePerSample; byteNumber++) {$      amplitude|=(short)((sourceData[pointer++] & 0xFF) << (byteNumber * 8));$    }$    amplitudes[i]=amplitude;$  }$  LinearInterpolation reSample=new LinearInterpolation();$  short[] targetSample=reSample.interpolate(sourceRate,targetRate,amplitudes);$  int targetLength=targetSample.length;$  byte[] bytes;$  if (bytePerSample == 1) {$    bytes=new byte[targetLength];$    for (int i=0; i < targetLength; i++) {$      bytes[i]=(byte)targetSample[i];$    }$  }$ else {$    bytes=new byte[targetLength * 2];$    for (int i=0; i < targetSample.length; i++) {$      bytes[i * 2]=(byte)(targetSample[i] & 0xff);$      bytes[i * 2 + 1]=(byte)((targetSample[i] >> 8) & 0xff);$    }$  }$  return bytes;$}$
@Override public int read() throws java.io.IOException {$  if (position < 0) {$    if (encode) {$      byte[] b3=new byte[3];$      int numBinaryBytes=0;$      for (int i=0; i < 3; i++) {$        int b=in.read();$        if (b >= 0) {$          b3[i]=(byte)b;$          numBinaryBytes++;$        }$ else {$          break;$        }$      }$      if (numBinaryBytes > 0) {$        encode3to4(b3,0,numBinaryBytes,buffer,0,options);$        position=0;$        numSigBytes=4;$      }$ else {$        return -1;$      }$    }$ else {$      byte[] b4=new byte[4];$      int i=0;$      for (i=0; i < 4; i++) {$        int b=0;$        do {$          b=in.read();$        }$ while (b >= 0 && decodabet[b & 0x7f] <= WHITE_SPACE_ENC);$        if (b < 0) {$          break;$        }$        b4[i]=(byte)b;$      }$      if (i == 4) {$        numSigBytes=decode4to3(b4,0,buffer,0,options);$        position=0;$      }$ else       if (i == 0) {$        return -1;$      }$ else {$        throw new java.io.IOException("Improperly padded Base64 input.");$      }$    }$  }$  if (position >= 0) {$    if (position >= numSigBytes) {$      return -1;$    }$    if (encode && breakLines && lineLength >= MAX_LINE_LENGTH) {$      lineLength=0;$      return '\n';$    }$ else {$      lineLength++;$      int b=buffer[position++];$      if (position >= bufferLength) {$        position=-1;$      }$      return b & 0xFF;$    }$  }$ else {$    throw new java.io.IOException("Error in Base64 code reading stream.");$  }$}$
public static void close(@Nullable Closeable closeable){$  if (null == closeable) {$    return;$  }$  try {$    Closeables.close(closeable,true);$  }$ catch (  IOException e) {$  }$}$
@Override public void showPopup(Context c,View anchor,String value,int position){$  PhotoMenuPopupWindow window=new PhotoMenuPopupWindow(c,anchor);$  window.setOnSelectItemListener(this);$}$
public JsonRequestParams(Object params){$  if (params == null)   return;$  if (params instanceof Map<?,?>) {$    urlParamsWithObjects.putAll((Map<String,Object>)params);$  }$ else {$    this.mCriteria=params;$  }$}$
public static JsonNode replaceChild(JsonNode parent,String replacingKey,JsonNode replacingChild){$  Map<String,JsonNode> childMap=new HashMap<>();$  childMap.put(replacingKey,replacingChild);$  return replaceChildren(parent,childMap);$}$
public P selectFarthest(final Iterable<P> points,final EnclosingBall<S,P> ball){$  final P center=ball.getCenter();$  P farthest=null;$  double dMax=-1.0;$  for (  final P point : points) {$    final double d=point.distance(center);$    if (d > dMax) {$      farthest=point;$      dMax=d;$    }$  }$  return farthest;$}$
public WallForce(float x1,float y1,float x2,float y2){$  this(DEFAULT_GRAV_CONSTANT,x1,y1,x2,y2);$}$
public static final double max(double[] a){$  double max=Double.NEGATIVE_INFINITY;$  for (int i=0; i < a.length; ++i) {$    if (a[i] > max)     max=a[i];$  }$  return max;$}$
public String printableRefSeq(boolean noFormat) throws IOException {$  byte[] refSeq=this.getRefSeq();$  if (refSeq == null) {$    return "";$  }$ else   if (noFormat) {$    return new String(refSeq) + "\n";$  }$ else {$    String faSeqStr="";$    for (    byte c : refSeq) {$      char base=(char)c;$      if (base == 'A' || base == 'a') {$        faSeqStr+="\033[107;34m" + base + "\033[0m";$      }$ else       if (base == 'C' || base == 'c') {$        faSeqStr+="\033[107;31m" + base + "\033[0m";$      }$ else       if (base == 'G' || base == 'g') {$        faSeqStr+="\033[107;32m" + base + "\033[0m";$      }$ else       if (base == 'T' || base == 't') {$        faSeqStr+="\033[107;33m" + base + "\033[0m";$      }$ else {$        faSeqStr+=base;$      }$    }$    return faSeqStr + "\n";$  }$}$
public Graph(boolean directed){$  this(new Table(),directed);$}$
public void tabShown(Tab tab){$  for (int i=0; i < mRecentTabs.size(); i++) {$    Tab t=mRecentTabs.get(i).get();$    if (t == tab) {$      mRecentTabs.remove(i);$    }$  }$}$
public RoleNotFoundException(){$  super();$}$
public static long capacityRemainingBackward(GenericValue techDataCalendar,Timestamp dateFrom){$  GenericValue techDataCalendarWeek=null;$  try {$    techDataCalendarWeek=techDataCalendar.getRelatedOne("TechDataCalendarWeek",true);$  }$ catch (  GenericEntityException e) {$    Debug.logError("Pb reading Calendar Week associated with calendar" + e.getMessage(),module);$    return 0;$  }$  Calendar cDateTrav=Calendar.getInstance();$  cDateTrav.setTime(dateFrom);$  Map<String,Object> position=dayEndCapacityAvailable(techDataCalendarWeek,cDateTrav.get(Calendar.DAY_OF_WEEK));$  int moveDay=((Integer)position.get("moveDay")).intValue();$  if (moveDay != 0)   return 0;$  Time startTime=(Time)position.get("startTime");$  Double capacity=(Double)position.get("capacity");$  Timestamp startAvailablePeriod=new Timestamp(UtilDateTime.getDayStart(dateFrom).getTime() + startTime.getTime() + cDateTrav.get(Calendar.ZONE_OFFSET)+ cDateTrav.get(Calendar.DST_OFFSET));$  if (dateFrom.before(startAvailablePeriod))   return 0;$  Timestamp endAvailablePeriod=new Timestamp(startAvailablePeriod.getTime() + capacity.longValue());$  if (dateFrom.after(endAvailablePeriod))   return 0;$  return dateFrom.getTime() - startAvailablePeriod.getTime();$}$
public static byte[] toByteArray(Reader input,Charset encoding) throws IOException {$  ByteArrayOutputStream output=new ByteArrayOutputStream();$  copy(input,output,encoding);$  return output.toByteArray();$}$
@Override protected Expression generateExpression(){$  if (wktPanel != null) {$    return wktPanel.getExpression();$  }$  return null;$}$
void addDep(soot.Type s){$  deps.add(s);$}$
public static void writeSwappedDouble(byte[] data,int offset,double value){$  writeSwappedLong(data,offset,Double.doubleToLongBits(value));$}$
private boolean parseNumericInputs(){$  try {$    pokemonHP=Optional.of(Integer.parseInt(pokemonHPEdit.getText().toString()));$    pokemonCP=Optional.of(Integer.parseInt(pokemonCPEdit.getText().toString()));$  }$ catch (  NumberFormatException e) {$    return false;$  }$  try {$    pokemonCandy=Optional.of(Integer.parseInt(pokemonCandyEdit.getText().toString()));$  }$ catch (  NumberFormatException e) {$    pokemonCandy=Optional.absent();$  }$  return true;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCastingTime_ME_TO_SELF(String skillname){$  return new SM_SYSTEM_MESSAGE(1200332,skillname);$}$
public static void writeLines(Collection<?> lines,String lineEnding,OutputStream output,Charset encoding) throws IOException {$  if (lines == null) {$    return;$  }$  if (lineEnding == null) {$    lineEnding=LINE_SEPARATOR;$  }$  Charset cs=Charsets.toCharset(encoding);$  for (  Object line : lines) {$    if (line != null) {$      output.write(line.toString().getBytes(cs));$    }$    output.write(lineEnding.getBytes(cs));$  }$}$
public Token yylex() throws java.io.IOException {$  int zzInput;$  int zzAction;$  int zzCurrentPosL;$  int zzMarkedPosL;$  int zzEndReadL=zzEndRead;$  char[] zzBufferL=zzBuffer;$  char[] zzCMapL=ZZ_CMAP;$  int[] zzTransL=ZZ_TRANS;$  int[] zzRowMapL=ZZ_ROWMAP;$  int[] zzAttrL=ZZ_ATTRIBUTE;$  while (true) {$    zzMarkedPosL=zzMarkedPos;$    yychar+=zzMarkedPosL - zzStartRead;$    boolean zzR=false;$    int zzCh;$    int zzCharCount;$    for (zzCurrentPosL=zzStartRead; zzCurrentPosL < zzMarkedPosL; zzCurrentPosL+=zzCharCount) {$      zzCh=Character.codePointAt(zzBufferL,zzCurrentPosL,zzMarkedPosL);$      zzCharCount=Character.charCount(zzCh);$switch (zzCh) {$case '\u000B':$case '\u000C':$case '\u0085':$case '\u2028':$case '\u2029':$        yyline++;$      yycolumn=0;$    zzR=false;$  break;$case '\r':$yyline++;$yycolumn=0;$zzR=true;$break;$case '\n':$if (zzR) zzR=false;$ else {$yyline++;$yycolumn=0;$}$break;$default :$zzR=false;$yycolumn+=zzCharCount;$}$}$if (zzR) {$boolean zzPeek;$if (zzMarkedPosL < zzEndReadL) zzPeek=zzBufferL[zzMarkedPosL] == '\n';$ else if (zzAtEOF) zzPeek=false;$ else {$boolean eof=zzRefill();$zzEndReadL=zzEndRead;$zzMarkedPosL=zzMarkedPos;$zzBufferL=zzBuffer;$if (eof) zzPeek=false;$ else zzPeek=zzBufferL[zzMarkedPosL] == '\n';$}$if (zzPeek) yyline--;$}$zzAction=-1;$zzCurrentPosL=zzCurrentPos=zzStartRead=zzMarkedPosL;$zzState=ZZ_LEXSTATE[zzLexicalState];$int zzAttributes=zzAttrL[zzState];$if ((zzAttributes & 1) == 1) {$zzAction=zzState;$}$zzForAction: {$while (true) {$if (zzCurrentPosL < zzEndReadL) {$zzInput=Character.codePointAt(zzBufferL,zzCurrentPosL,zzEndReadL);$zzCurrentPosL+=Character.charCount(zzInput);$}$ else if (zzAtEOF) {$zzInput=YYEOF;$break zzForAction;$}$ else {$zzCurrentPos=zzCurrentPosL;$zzMarkedPos=zzMarkedPosL;$boolean eof=zzRefill();$zzCurrentPosL=zzCurrentPos;$zzMarkedPosL=zzMarkedPos;$zzBufferL=zzBuffer;$zzEndReadL=zzEndRead;$if (eof) {$zzInput=YYEOF;$break zzForAction;$}$ else {$zzInput=Character.codePointAt(zzBufferL,zzCurrentPosL,zzEndReadL);$zzCurrentPosL+=Character.charCount(zzInput);$}$}$int zzNext=zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];$if (zzNext == -1) break zzForAction;$zzState=zzNext;$zzAttributes=zzAttrL[zzState];$if ((zzAttributes & 1) == 1) {$zzAction=zzState;$zzMarkedPosL=zzCurrentPosL;$if ((zzAttributes & 8) == 8) break zzForAction;$}$}$}$zzMarkedPos=zzMarkedPosL;$if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {$zzAtEOF=true;$switch (zzLexicalState) {$case YYINITIAL:${$return newToken(EOF);$}$case 1238:$break;$case PARAM_LIST_OR_ID:${$yybegin(YYINITIAL);$return newToken(PARAM_LIST_OR_ID_END);$}$case 1239:$break;$case PARAM_LIST:${$yybegin(YYINITIAL);$return newToken(PARAM_LIST_END);$}$case 1240:$break;$case STRING:${$return invalidStringOrChar("Unterminated string literal");$}$case 1241:$break;$case CHAR:${$return invalidStringOrChar("Unterminated character literal");$}$case 1242:$break;$default :$return null;$}$}$ else {$switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {$case 1:${$return invalidToken("Invalid text");$}$case 140:$break;$case 2:${$return newToken(POSITIVE_INTEGER_LITERAL);$}$case 141:$break;$case 3:${$return newToken(SIMPLE_NAME);$}$case 142:$break;$case 4:${$return invalidToken("Invalid directive");$}$case 143:$break;$case 5:${$return newToken(PRIMITIVE_TYPE);$}$case 144:$break;$case 6:${$return newToken(WHITE_SPACE,true);$}$case 145:$break;$case 7:${$beginStringOrChar(STRING);$sb.append('"');$}$case 146:$break;$case 8:${$beginStringOrChar(CHAR);$sb.append('\'');$}$case 147:$break;$case 9:${$return newToken(LINE_COMMENT,true);$}$case 148:$break;$case 10:${$return newToken(VOID_TYPE);$}$case 149:$break;$case 11:${$return newToken(EQUAL);$}$case 150:$break;$case 12:${$return newToken(COLON);$}$case 151:$break;$case 13:${$return newToken(COMMA);$}$case 152:$break;$case 14:${$return newToken(OPEN_BRACE);$}$case 153:$break;$case 15:${$return newToken(CLOSE_BRACE);$}$case 154:$break;$case 16:${$return newToken(OPEN_PAREN);$}$case 155:$break;$case 17:${$return newToken(CLOSE_PAREN);$}$case 156:$break;$case 18:${$yypushback(1);$yybegin(YYINITIAL);$return newToken(PARAM_LIST_OR_ID_END);$}$case 157:$break;$case 19:${$yypushback(1);$yybegin(YYINITIAL);$return newToken(PARAM_LIST_END);$}$case 158:$break;$case 20:${$sb.append(yytext());$}$case 159:$break;$case 21:${$sb.append('"');$return endStringOrChar(STRING_LITERAL);$}$case 160:$break;$case 22:${$return invalidStringOrChar("Unterminated string literal");$}$case 161:$break;$case 23:${$sb.append('\'');$if (sb.length() == 2) {$return invalidStringOrChar("Empty character literal");$}$ else if (sb.length() > 3) {$return invalidStringOrChar("Character literal with multiple chars");$}$return endStringOrChar(CHAR_LITERAL);$}$case 162:$break;$case 24:${$return invalidStringOrChar("Unterminated character literal");$}$case 163:$break;$case 25:${$return newToken(FLOAT_LITERAL_OR_ID);$}$case 164:$break;$case 26:${$return newToken(BYTE_LITERAL);$}$case 165:$break;$case 27:${$return newToken(DOUBLE_LITERAL);$}$case 166:$break;$case 28:${$return newToken(LONG_LITERAL);$}$case 167:$break;$case 29:${$return newToken(SHORT_LITERAL);$}$case 168:$break;$case 30:${$return newToken(DOUBLE_LITERAL_OR_ID);$}$case 169:$break;$case 31:${$return newToken(NEGATIVE_INTEGER_LITERAL);$}$case 170:$break;$case 32:${$return newToken(ARROW);$}$case 171:$break;$case 33:${$return newToken(DOTDOT);$}$case 172:$break;$case 34:${$yypushback(yylength());$yybegin(PARAM_LIST_OR_ID);$return newToken(PARAM_LIST_OR_ID_START);$}$case 173:$break;$case 35:${$return newToken(ARRAY_DESCRIPTOR);$}$case 174:$break;$case 36:${$return newToken(REGISTER);$}$case 175:$break;$case 37:${$sb.append(yytext());$setStringOrCharError("Invalid escape sequence " + yytext());$}$case 176:$break;$case 38:${$sb.append('\b');$}$case 177:$break;$case 39:${$sb.append('\f');$}$case 178:$break;$case 40:${$sb.append(yytext());$setStringOrCharError("Invalid \\u sequence. \\u must be followed by 4 hex digits");$}$case 179:$break;$case 41:${$sb.append('\r');$}$case 180:$break;$case 42:${$sb.append('\n');$}$case 181:$break;$case 43:${$sb.append('\t');$}$case 182:$break;$case 44:${$sb.append('"');$}$case 183:$break;$case 45:${$sb.append('\'');$}$case 184:$break;$case 46:${$sb.append('\\');$}$case 185:$break;$case 47:${$sb.append(yytext());$setStringOrCharError("Invalid \\u sequence. \\u must be followed by exactly 4 hex digits");$}$case 186:$break;$case 48:${$return newToken(FLOAT_LITERAL);$}$case 187:$break;$case 49:${$yypushback(yylength());$yybegin(PARAM_LIST);$return newToken(PARAM_LIST_START);$}$case 188:$break;$case 50:${$return newToken(CLASS_DESCRIPTOR);$}$case 189:$break;$case 51:${$return newToken(INSTRUCTION_FORMAT10x);$}$case 190:$break;$case 52:${$return newToken(MEMBER_NAME);$}$case 191:$break;$case 53:${$return newToken(INSTRUCTION_FORMAT22c_FIELD);$}$case 192:$break;$case 54:${$return newToken(INSTRUCTION_FORMAT23x);$}$case 193:$break;$case 55:${$return newToken(INSTRUCTION_FORMAT21c_FIELD);$}$case 194:$break;$case 56:${$return newToken(ACCESS_SPEC);$}$case 195:$break;$case 57:${$return newToken(INSTRUCTION_FORMAT12x_OR_ID);$}$case 196:$break;$case 58:${$return newToken(NULL_LITERAL);$}$case 197:$break;$case 59:${$return newToken(BOOL_LITERAL);$}$case 198:$break;$case 60:${$return newToken(INSTRUCTION_FORMAT10t);$}$case 199:$break;$case 61:${$return newToken(ANNOTATION_VISIBILITY);$}$case 200:$break;$case 62:${$return newToken(INSTRUCTION_FORMAT22t);$}$case 201:$break;$case 63:${$return newToken(LINE_DIRECTIVE);$}$case 202:$break;$case 64:${$return newToken(ENUM_DIRECTIVE);$}$case 203:$break;$case 65:${$return newToken(INSTRUCTION_FORMAT31i_OR_ID);$}$case 204:$break;$case 66:${$return newToken(INSTRUCTION_FORMAT11x);$}$case 205:$break;$case 67:${$return newToken(INSTRUCTION_FORMAT21t);$}$case 206:$break;$case 68:${$return newToken(FIELD_DIRECTIVE);$}$case 207:$break;$case 69:${$return newToken(CLASS_DIRECTIVE);$}$case 208:$break;$case 70:${$return newToken(CATCH_DIRECTIVE);$}$case 209:$break;$case 71:${$return newToken(LOCAL_DIRECTIVE);$}$case 210:$break;$case 72:${$return newToken(SUPER_DIRECTIVE);$}$case 211:$break;$case 73:${$return newToken(PARAMETER_DIRECTIVE);$}$case 212:$break;$case 74:${$sb.append((char)Integer.parseInt(yytext().substring(2,6),16));$}$case 213:$break;$case 75:${$return newToken(LOCALS_DIRECTIVE);$}$case 214:$break;$case 76:${$return newToken(SOURCE_DIRECTIVE);$}$case 215:$break;$case 77:${$return newToken(METHOD_DIRECTIVE);$}$case 216:$break;$case 78:${$return newToken(INSTRUCTION_FORMAT11n);$}$case 217:$break;$case 79:${$return newToken(INSTRUCTION_FORMAT32x);$}$case 218:$break;$case 80:${$return newToken(INSTRUCTION_FORMAT20t);$}$case 219:$break;$case 81:${$return newToken(INSTRUCTION_FORMAT30t);$}$case 220:$break;$case 82:${$return newToken(INSTRUCTION_FORMAT21s);$}$case 221:$break;$case 83:${$return newToken(INSTRUCTION_FORMAT22s_OR_ID);$}$case 222:$break;$case 84:${$return newToken(VERIFICATION_ERROR_TYPE);$}$case 223:$break;$case 85:${$return newToken(FIELD_OFFSET);$}$case 224:$break;$case 86:${$return newToken(CATCHALL_DIRECTIVE);$}$case 225:$break;$case 87:${$return newToken(PROLOGUE_DIRECTIVE);$}$case 226:$break;$case 88:${$return newToken(EPILOGUE_DIRECTIVE);$}$case 227:$break;$case 89:${$return newToken(INSTRUCTION_FORMAT22c_TYPE);$}$case 228:$break;$case 90:${$return newToken(INSTRUCTION_FORMAT22x);$}$case 229:$break;$case 91:${$return newToken(INSTRUCTION_FORMAT22cs_FIELD);$}$case 230:$break;$case 92:${$return newToken(INLINE_INDEX);$}$case 231:$break;$case 93:${$return newToken(END_FIELD_DIRECTIVE);$}$case 232:$break;$case 94:${$return newToken(END_LOCAL_DIRECTIVE);$}$case 233:$break;$case 95:${$return newToken(END_PARAMETER_DIRECTIVE);$}$case 234:$break;$case 96:${$return newToken(REGISTERS_DIRECTIVE);$}$case 235:$break;$case 97:${$return newToken(INSTRUCTION_FORMAT51l);$}$case 236:$break;$case 98:${$return newToken(INSTRUCTION_FORMAT21c_TYPE);$}$case 237:$break;$case 99:${$return newToken(VTABLE_INDEX);$}$case 238:$break;$case 100:${$return newToken(IMPLEMENTS_DIRECTIVE);$}$case 239:$break;$case 101:${$return newToken(ARRAY_DATA_DIRECTIVE);$}$case 240:$break;$case 102:${$return newToken(ANNOTATION_DIRECTIVE);$}$case 241:$break;$case 103:${$return newToken(END_METHOD_DIRECTIVE);$}$case 242:$break;$case 104:${$return newToken(INSTRUCTION_FORMAT22b);$}$case 243:$break;$case 105:${$return newToken(INSTRUCTION_FORMAT35c_METHOD);$}$case 244:$break;$case 106:${$return newToken(INSTRUCTION_FORMAT21c_STRING);$}$case 245:$break;$case 107:${$return newToken(INSTRUCTION_FORMAT21ih);$}$case 246:$break;$case 108:${$return newToken(INSTRUCTION_FORMAT22s);$}$case 247:$break;$case 109:${$return newToken(INSTRUCTION_FORMAT12x);$}$case 248:$break;$case 110:${$return newToken(INSTRUCTION_FORMAT22c_FIELD_ODEX);$}$case 249:$break;$case 111:${$return newToken(INSTRUCTION_FORMAT25x);$}$case 250:$break;$case 112:${$return newToken(INSTRUCTION_FORMAT21c_METHOD);$}$case 251:$break;$case 113:${$return newToken(INSTRUCTION_FORMAT31i);$}$case 252:$break;$case 114:${$return newToken(INSTRUCTION_FORMAT31t);$}$case 253:$break;$case 115:${$return newToken(INSTRUCTION_FORMAT21c_FIELD_ODEX);$}$case 254:$break;$case 116:${$return newToken(SUBANNOTATION_DIRECTIVE);$}$case 255:$break;$case 117:${$return newToken(SPARSE_SWITCH_DIRECTIVE);$}$case 256:$break;$case 118:${$return newToken(PACKED_SWITCH_DIRECTIVE);$}$case 257:$break;$case 119:${$return newToken(RESTART_LOCAL_DIRECTIVE);$}$case 258:$break;$case 120:${$return newToken(INSTRUCTION_FORMAT35mi_METHOD);$}$case 259:$break;$case 121:${$return newToken(END_ARRAY_DATA_DIRECTIVE);$}$case 260:$break;$case 122:${$return newToken(END_ANNOTATION_DIRECTIVE);$}$case 261:$break;$case 123:${$return newToken(INSTRUCTION_FORMAT35c_TYPE);$}$case 262:$break;$case 124:${$return newToken(INSTRUCTION_FORMAT21c_LAMBDA);$}$case 263:$break;$case 125:${$return newToken(INSTRUCTION_FORMAT21lh);$}$case 264:$break;$case 126:${$return newToken(INSTRUCTION_FORMAT22c_STRING);$}$case 265:$break;$case 127:${$return newToken(INSTRUCTION_FORMAT35ms_METHOD);$}$case 266:$break;$case 128:${$return newToken(INSTRUCTION_FORMAT3rc_METHOD);$}$case 267:$break;$case 129:${$return newToken(END_SUBANNOTATION_DIRECTIVE);$}$case 268:$break;$case 130:${$return newToken(END_SPARSE_SWITCH_DIRECTIVE);$}$case 269:$break;$case 131:${$return newToken(END_PACKED_SWITCH_DIRECTIVE);$}$case 270:$break;$case 132:${$return newToken(INSTRUCTION_FORMAT31c);$}$case 271:$break;$case 133:${$return newToken(INSTRUCTION_FORMAT35c_METHOD_ODEX);$}$case 272:$break;$case 134:${$return newToken(INSTRUCTION_FORMAT10x_ODEX);$}$case 273:$break;$case 135:${$return newToken(INSTRUCTION_FORMAT3rmi_METHOD);$}$case 274:$break;$case 136:${$return newToken(INSTRUCTION_FORMAT3rc_TYPE);$}$case 275:$break;$case 137:${$return newToken(INSTRUCTION_FORMAT3rms_METHOD);$}$case 276:$break;$case 138:${$return newToken(INSTRUCTION_FORMAT3rc_METHOD_ODEX);$}$case 277:$break;$case 139:${$return newToken(INSTRUCTION_FORMAT20bc);$}$case 278:$break;$default :$zzScanError(ZZ_NO_MATCH);$}$}$}$}$
private <N>void formatNodeText(Body body,DotGraph canvas,DotNamer<N> namer){$  LabeledUnitPrinter printer=null;$  if (body != null) {$    printer=new BriefUnitPrinter(body);$    printer.noIndent();$  }$  for (Iterator<N> nodesIt=namer.keySet().iterator(); nodesIt.hasNext(); ) {$    N node=nodesIt.next();$    DotGraphNode dotnode=canvas.getNode(namer.getName(node));$    String nodeLabel=null;$    if (node instanceof DominatorNode) {$      node=((DominatorNode<N>)node).getGode();$    }$    if (printer == null) {$      nodeLabel=node.toString();$    }$ else {$      if (node instanceof Unit) {$        ((Unit)node).toString(printer);$        String targetLabel=printer.labels().get(node);$        if (targetLabel == null) {$          nodeLabel=printer.toString();$        }$ else {$          nodeLabel=targetLabel + ": " + printer.toString();$        }$      }$ else       if (node instanceof Block) {$        Iterator<Unit> units=((Block)node).iterator();$        StringBuffer buffer=new StringBuffer();$        while (units.hasNext()) {$          Unit unit=units.next();$          String targetLabel=(String)printer.labels().get(unit);$          if (targetLabel != null) {$            buffer.append(targetLabel).append(":\\n");$          }$          unit.toString(printer);$          buffer.append(printer.toString()).append("\\l");$        }$        nodeLabel=buffer.toString();$      }$ else {$        nodeLabel=node.toString();$      }$    }$    dotnode.setLabel(nodeLabel);$  }$}$
public String toString(int indentFactor) throws JSONException {$  StringWriter w=new StringWriter();$synchronized (w.getBuffer()) {$    return this.write(w,indentFactor,0).toString();$  }$}$
public synchronized void unpause(){$  _paused=false;$  while (!_writeQueue.isEmpty()) {$    _writeQueue.remove().run();$  }$}$
public void testCycleDateStartTimerEvent() throws Exception {$  Clock previousClock=processEngineConfiguration.getClock();$  Clock testClock=new DefaultClockImpl();$  processEngineConfiguration.setClock(testClock);$  Calendar calendar=Calendar.getInstance();$  calendar.set(2025,Calendar.DECEMBER,10,0,0,0);$  testClock.setCurrentTime(calendar.getTime());$  repositoryService.createDeployment().addClasspathResource("org/activiti/engine/test/bpmn/event/timer/StartTimerEventRepeatWithEndExpressionTest.testCycleDateStartTimerEvent.bpmn20.xml").deploy();$  assertEquals(1,repositoryService.createProcessDefinitionQuery().count());$  List<Job> jobs=managementService.createTimerJobQuery().list();$  assertEquals(1,jobs.size());$  Calendar dueDateCalendar=Calendar.getInstance();$  dueDateCalendar.set(2025,Calendar.DECEMBER,11,0,0,0);$  assertEquals(true,Math.abs(dueDateCalendar.getTime().getTime() - jobs.get(0).getDuedate().getTime()) < 2000);$  List<ProcessInstance> processInstances=runtimeService.createProcessInstanceQuery().list();$  assertEquals(0,processInstances.size());$  List<Task> tasks=taskService.createTaskQuery().list();$  assertEquals(0,tasks.size());$  moveByMinutes(60 * 24);$  waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(2000L,200);$  assertEquals(1,managementService.createTimerJobQuery().count());$  processInstances=runtimeService.createProcessInstanceQuery().list();$  assertEquals(1,processInstances.size());$  tasks=taskService.createTaskQuery().list();$  assertEquals(1,tasks.size());$  jobs=managementService.createTimerJobQuery().list();$  assertEquals(1,jobs.size());$  dueDateCalendar=Calendar.getInstance();$  dueDateCalendar.set(2025,Calendar.DECEMBER,12,0,0,0);$  assertEquals(true,Math.abs(dueDateCalendar.getTime().getTime() - jobs.get(0).getDuedate().getTime()) < 2000);$  moveByMinutes(60 * 24);$  waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(2000,200);$  processInstances=runtimeService.createProcessInstanceQuery().list();$  assertEquals(2,processInstances.size());$  jobs=managementService.createTimerJobQuery().list();$  assertEquals(0,jobs.size());$  jobs=managementService.createJobQuery().list();$  assertEquals(0,jobs.size());$  tasks=taskService.createTaskQuery().list();$  assertEquals(2,tasks.size());$  int timerFiredCount=0;$  List<ActivitiEvent> eventsReceived=listener.getEventsReceived();$  for (  ActivitiEvent eventReceived : eventsReceived) {$    if (ActivitiEventType.TIMER_FIRED.equals(eventReceived.getType())) {$      timerFiredCount++;$    }$  }$  int eventCreatedCount=0;$  for (  ActivitiEvent eventReceived : eventsReceived) {$    if (ActivitiEventType.ENTITY_CREATED.equals(eventReceived.getType())) {$      eventCreatedCount++;$    }$  }$  int eventDeletedCount=0;$  for (  ActivitiEvent eventReceived : eventsReceived) {$    if (ActivitiEventType.ENTITY_DELETED.equals(eventReceived.getType())) {$      eventDeletedCount++;$    }$  }$  assertEquals(2,timerFiredCount);$  assertEquals(4,eventCreatedCount);$  assertEquals(4,eventDeletedCount);$  for (  ProcessInstance processInstance : processInstances) {$    tasks=taskService.createTaskQuery().processInstanceId(processInstance.getProcessInstanceId()).list();$    Task task=tasks.get(0);$    assertEquals("Task A",task.getName());$    assertEquals(1,tasks.size());$    taskService.complete(task.getId());$  }$  processInstances=runtimeService.createProcessInstanceQuery().list();$  assertEquals(0,processInstances.size());$  jobs=managementService.createTimerJobQuery().list();$  assertEquals(0,jobs.size());$  jobs=managementService.createJobQuery().list();$  assertEquals(0,jobs.size());$  tasks=taskService.createTaskQuery().list();$  assertEquals(0,tasks.size());$  listener.clearEventsReceived();$  processEngineConfiguration.setClock(previousClock);$  repositoryService.deleteDeployment(repositoryService.createDeploymentQuery().singleResult().getId(),true);$}$
public UsersSearchQuery birthDay(Integer value){$  return unsafeParam("birth_day",value);$}$
private void resize(int newCapacity){$  Entry[] oldTable=getTable();$  int oldCapacity=oldTable.length;$  if (oldCapacity == MAXIMUM_CAPACITY) {$    threshold=Integer.MAX_VALUE;$    return;$  }$  Entry[] newTable=new Entry[newCapacity];$  transfer(oldTable,newTable);$  table=newTable;$  if (size >= threshold / 2) {$    threshold=(int)(newCapacity * loadFactor);$  }$ else {$    expungeStaleEntries();$    transfer(newTable,oldTable);$    table=oldTable;$  }$}$
@SuppressWarnings({"unchecked","cast"}) public CompilationUnit compilationUnit(){$  ASTNode$State state=state();$  CompilationUnit compilationUnit_value=getParent().Define_CompilationUnit_compilationUnit(this,null);$  return compilationUnit_value;$}$
@Override protected void onReset(){$  super.onReset();$  onStopLoading();$  if (mData != null) {$    onReleaseResources(mData);$    mData=null;$  }$}$
public static FieldSelector of(Field field){$  return new FieldSelector(ImmutableList.of(field));$}$
public final void yybegin(int newState){$  zzLexicalState=newState;$}$
public String[] upload_file(String group_name,String master_filename,String prefix_name,long file_size,UploadCallback callback,String file_ext_name,NameValuePair[] meta_list) throws IOException, MyException {$  return this.do_upload_file(ProtoCommon.STORAGE_PROTO_CMD_UPLOAD_SLAVE_FILE,group_name,master_filename,prefix_name,file_ext_name,file_size,callback,meta_list);$}$
public final ProgressEvent updateProgress(double dNewProgress){$  Progress=dNewProgress;$  return this;$}$
public MonsterWeaknessCursor queryWeaknessFromMonster(long id){$  QueryHelper qh=new QueryHelper();$  qh.Distinct=true;$  qh.Table=S.TABLE_WEAKNESS;$  qh.Columns=null;$  qh.Selection=S.COLUMN_WEAKNESS_MONSTER_ID + " = " + id;$  qh.SelectionArgs=null;$  qh.GroupBy=null;$  qh.Having=null;$  qh.OrderBy=null;$  qh.Limit=null;$  return new MonsterWeaknessCursor(wrapHelper(qh));$}$
public static void rgb565ToColor(Color color,int value){$  color.r=((value & 0x0000F800) >>> 11) / 31f;$  color.g=((value & 0x000007E0) >>> 5) / 63f;$  color.b=((value & 0x0000001F) >>> 0) / 31f;$}$
@Override public Throwable fillInStackTrace(){$  return this;$}$
public FontAnimator(String group){$  super(group);$}$
@Override public List<CentroidCluster<T>> cluster(final Collection<T> dataPoints) throws MathIllegalArgumentException {$  MathUtils.checkNotNull(dataPoints);$  final int size=dataPoints.size();$  if (size < k) {$    throw new MathIllegalArgumentException(LocalizedCoreFormats.NUMBER_TOO_SMALL_BOUND_EXCLUDED,size,k);$  }$  points=Collections.unmodifiableList(new ArrayList<T>(dataPoints));$  clusters=new ArrayList<CentroidCluster<T>>();$  membershipMatrix=new double[size][k];$  final double[][] oldMatrix=new double[size][k];$  if (size == 0) {$    return clusters;$  }$  initializeMembershipMatrix();$  final int pointDimension=points.get(0).getPoint().length;$  for (int i=0; i < k; i++) {$    clusters.add(new CentroidCluster<T>(new DoublePoint(new double[pointDimension])));$  }$  int iteration=0;$  final int max=(maxIterations < 0) ? Integer.MAX_VALUE : maxIterations;$  double difference=0.0;$  do {$    saveMembershipMatrix(oldMatrix);$    updateClusterCenters();$    updateMembershipMatrix();$    difference=calculateMaxMembershipChange(oldMatrix);$  }$ while (difference > epsilon && ++iteration < max);$  return clusters;$}$
@Override public boolean isSet(DatatypeConstants.Field field){$  if (field == null) {$    String methodName="mf.javax.xml.datatype.Duration" + "#isSet(DatatypeConstants.Field field)";$    throw new NullPointerException(DatatypeMessageFormatter.formatMessage(null,"FieldCannotBeNull",new Object[]{methodName}));$  }$  if (field == DatatypeConstants.YEARS) {$    return years != null;$  }$  if (field == DatatypeConstants.MONTHS) {$    return months != null;$  }$  if (field == DatatypeConstants.DAYS) {$    return days != null;$  }$  if (field == DatatypeConstants.HOURS) {$    return hours != null;$  }$  if (field == DatatypeConstants.MINUTES) {$    return minutes != null;$  }$  if (field == DatatypeConstants.SECONDS) {$    return seconds != null;$  }$  String methodName="mf.javax.xml.datatype.Duration" + "#isSet(DatatypeConstants.Field field)";$  throw new IllegalArgumentException(DatatypeMessageFormatter.formatMessage(null,"UnknownField",new Object[]{methodName,field.toString()}));$}$
public SimplifiedIntervalList(Collection<Interval> intervals){$  super(simplifyIntervals(intervals));$}$
public LongAdder(){$}$
public GigaSpaceConfigurer(SpaceConfigurer configurer){$  gigaSpaceFactoryBean=new GigaSpaceFactoryBean();$  gigaSpaceFactoryBean.setSpace(configurer.space());$}$
public double remove(final int key){$  final int hash=hashOf(key);$  int index=hash & mask;$  if (containsKey(key,index)) {$    return doRemove(index);$  }$  if (states[index] == FREE) {$    return missingEntries;$  }$  int j=index;$  for (int perturb=perturb(hash); states[index] != FREE; perturb>>=PERTURB_SHIFT) {$    j=probe(perturb,j);$    index=j & mask;$    if (containsKey(key,index)) {$      return doRemove(index);$    }$  }$  return missingEntries;$}$
private boolean canStopTrackingJob(JobStatus job){$  return (!job.hasTimingDelayConstraint() || job.timeDelayConstraintSatisfied.get()) && (!job.hasDeadlineConstraint() || job.deadlineConstraintSatisfied.get());$}$
private static void debugPrintln(String msg){$  if (DEBUG) {$    System.err.println("XERCES: " + msg);$  }$}$
public String provideNetworkType(){$  return "unknown";$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Blind_END_A_TO_SELF(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200748,skilltarget);$}$
@Override public boolean isEnabled(){$  if ((attributeSelectionPanel != null) && !isValueOnly()) {$    return attributeSelectionPanel.isEnabled();$  }$ else {$    if (slider != null) {$      return slider.isEnabled();$    }$  }$  return false;$}$
public static String formatCreateTime(Date createAt){$  String strTime="";$  long beginOfToday=(new Date(Calendar.getInstance().get(Calendar.YEAR) - 1900,Calendar.getInstance().get(Calendar.MONTH),Calendar.getInstance().get(Calendar.DAY_OF_MONTH),0,0,0)).getTime();$  long beginOfThisYear=(new Date(Calendar.getInstance().get(Calendar.YEAR) - 1900,0,0,0,0,0)).getTime();$  if (createAt != null) {$    long interval=System.currentTimeMillis() - createAt.getTime();$    if (interval <= MIN) {$      strTime=MainApp.CONTEXT.getString(R.string.just_now);$    }$ else     if (createAt.getTime() >= beginOfToday) {$      strTime=DateUtil.formatDate(createAt,MainApp.CONTEXT.getString(R.string.date_format));$    }$ else     if (createAt.getTime() < beginOfToday && createAt.getTime() >= beginOfThisYear) {$      strTime=DateUtil.formatDate(createAt,MainApp.CONTEXT.getString(R.string.date_format_with_date));$    }$ else {$      strTime=DateUtil.formatDate(createAt,MainApp.CONTEXT.getString(R.string.date_format_with_year));$    }$  }$  return strTime;$}$
public OutOfRangeException(Number wrong,Number lo,Number hi){$  this(LocalizedFormats.OUT_OF_RANGE_SIMPLE,wrong,lo,hi);$}$
public FriendsGetRequestsQuery offset(Integer value){$  return unsafeParam("offset",value);$}$
@Nullable private static PsiFile findFileToOpen(@NotNull List<PsiFile> files){$  PsiFile bestFile=null;$  FolderConfiguration bestConfig=null;$  for (  PsiFile file : files) {$    PsiDirectory qualifiedDirectory=file.getParent();$    assert qualifiedDirectory != null : "Resource file's parent directory cannot be null";$    FolderConfiguration config=FolderConfiguration.getConfigForFolder(qualifiedDirectory.getName());$    if (bestConfig == null || config == null || config.compareTo(bestConfig) < 0) {$      bestConfig=config;$      bestFile=file;$    }$  }$  return bestFile;$}$
@SuppressLint("SetTextI18n") @Override public void drawUserInfo(User u){$  if (!TextUtils.isEmpty(u.location)) {$    locationTxt.setText(u.location);$  }$ else {$    locationTxt.setText("Unknown");$  }$  if (!TextUtils.isEmpty(u.bio)) {$    bioTxt.setText(u.bio);$  }$ else {$    bioTxt.setVisibility(GONE);$  }$  List<String> titleList=new ArrayList<>();$  titleList.add(u.total_photos + " " + getResources().getStringArray(R.array.user_tabs)[0]);$  titleList.add(u.total_collections + " " + getResources().getStringArray(R.array.user_tabs)[1]);$  titleList.add(u.total_likes + " " + getResources().getStringArray(R.array.user_tabs)[2]);$  adapter.titleList=titleList;$  adapter.notifyDataSetChanged();$}$
private void updateLocationPreferenceForXGeo(Preference preference){$  ListPreference listPreference=(ListPreference)preference;$  Resources res=getResources();$  listPreference.setEntries(new String[]{res.getString(R.string.website_settings_permissions_allow_dse),res.getString(ContentSettingsResources.getSiteSummary(ContentSetting.BLOCK))});$  listPreference.setEntryValues(new String[]{ContentSetting.DEFAULT.toString(),ContentSetting.BLOCK.toString()});$  listPreference.setValueIndex(0);$}$
static void verify(Class c){$  if (c == null) {$    throw new NullPointerException("elements cannot be null");$  }$  if (c.isArray() || c.isPrimitive() || (Modifier.isFinal(c.getModifiers()) && !Principal.class.isAssignableFrom(c))) {$    throw new IllegalArgumentException("invalid class");$  }$}$
public static void writeVLong(DataOutput stream,long i) throws IOException {$  if (i >= -112 && i <= 127) {$    stream.writeByte((byte)i);$    return;$  }$  int len=-112;$  if (i < 0) {$    i^=-1L;$    len=-120;$  }$  long tmp=i;$  while (tmp != 0) {$    tmp=tmp >> 8;$    len--;$  }$  stream.writeByte((byte)len);$  len=(len < -120) ? -(len + 120) : -(len + 112);$  for (int idx=len; idx != 0; idx--) {$    int shiftbits=(idx - 1) * 8;$    long mask=0xFFL << shiftbits;$    stream.writeByte((byte)((i & mask) >> shiftbits));$  }$}$
public void clear(){$  setAccessToken(null);$}$
@SuppressWarnings({"unchecked","cast"}) public PrimitiveCompilationUnit fullCopy(){$  PrimitiveCompilationUnit tree=(PrimitiveCompilationUnit)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public void freeSLHolder(IStoredListIterator<T> slh){$  if (slh != null) {$    SegmentedListIterator<T> si=(SegmentedListIterator<T>)slh;$    slh.release();$  }$}$
public boolean isMp4(){$  return isOptionEnabled(UrlFilterRuleOption.MP4);$}$
protected void showIndeterminate(@StringRes final int resId){$  dismissProgress();$  progress=new MaterialDialog.Builder(context).content(resId).progress(true,0).build();$  progress.show();$}$
public V putIfAbsent(long key,V value){$  int index=insertionIndex(key);$  if (index < 0)   return _values[-index - 1];$  return doPut(key,value,index);$}$
public boolean isCaseSensitive(){$  return sensitive;$}$
public void addCommonJARs(URL[] jars){$  if (jars == null)   return;$  for (int i=0; i < jars.length; i++) {$    if (!hasURL(jars[i]))     addURL(jars[i]);$  }$}$
public Viterbi(List<Target> targets,UnitDatabase database,float wTargetCosts,float wSCosts,int beamSize){$  this.database=database;$  this.targetCostFunction=database.getTargetCostFunction();$  this.joinCostFunction=database.getJoinCostFunction();$  this.sCostFunction=database.getSCostFunction();$  this.wTargetCosts=wTargetCosts;$  this.wSCosts=wSCosts;$  wJoinCosts=1 - (wTargetCosts + wSCosts);$  this.beamSize=beamSize;$  this.cumulJoinCosts=0;$  this.nJoinCosts=0;$  this.cumulTargetCosts=0;$  this.nTargetCosts=0;$  ViterbiPoint last=null;$  for (  Target target : targets) {$    ViterbiPoint nextPoint=new ViterbiPoint(target);$    if (last != null) {$      last.setNext(nextPoint);$    }$ else {$      firstPoint=nextPoint;$      firstPoint.getPaths().add(new ViterbiPath(null,null,0));$    }$    last=nextPoint;$  }$  lastPoint=new ViterbiPoint(null);$  last.setNext(lastPoint);$  if (beamSize == 0) {$    throw new IllegalStateException("General beam search not implemented");$  }$}$
public static boolean isError(Map<String,? extends Object> results){$  if (results == null || results.get(ModelService.RESPONSE_MESSAGE) == null) {$    return false;$  }$  return ModelService.RESPOND_ERROR.equals(results.get(ModelService.RESPONSE_MESSAGE));$}$
public VisiblePredicate(){$  super(VisualItem.VISIBLE);$}$
public Shape star(float x,float y,float height){$  float s=(float)(height / (2 * Math.sin(Math.toRadians(54))));$  float shortSide=(float)(height / (2 * Math.tan(Math.toRadians(54))));$  float mediumSide=(float)(s * Math.sin(Math.toRadians(18)));$  float longSide=(float)(s * Math.cos(Math.toRadians(18)));$  float innerLongSide=(float)(s / (2 * Math.cos(Math.toRadians(36))));$  float innerShortSide=innerLongSide * (float)Math.sin(Math.toRadians(36));$  float innerMediumSide=innerLongSide * (float)Math.cos(Math.toRadians(36));$  m_path.reset();$  m_path.moveTo(x,y + shortSide);$  m_path.lineTo((x + innerLongSide),(y + shortSide));$  m_path.lineTo((x + height / 2),y);$  m_path.lineTo((x + height - innerLongSide),(y + shortSide));$  m_path.lineTo((x + height),(y + shortSide));$  m_path.lineTo((x + height - innerMediumSide),(y + shortSide + innerShortSide));$  m_path.lineTo((x + height - mediumSide),(y + height));$  m_path.lineTo((x + height / 2),(y + shortSide + longSide - innerShortSide));$  m_path.lineTo((x + mediumSide),(y + height));$  m_path.lineTo((x + innerMediumSide),(y + shortSide + innerShortSide));$  m_path.closePath();$  return m_path;$}$
public static void f(String tag,String msg){$  if (sLevel > LEVEL_FATAL) {$    return;$  }$  Log.wtf(tag,msg);$}$
public ChangeReport onSubEquipmentUnitAdd(final SubEquipmentUnitAdd subEquipmentUnitAdd){$  log.debug("onSubEquipmentUnitAdd - entering onSubEquipmentUnitAdd()..");$  ProcessConfiguration configuration=ProcessConfigurationHolder.getInstance();$  ChangeReport changeReport=new ChangeReport(subEquipmentUnitAdd);$  changeReport.setState(CHANGE_STATE.SUCCESS);$  EquipmentConfiguration parentEquipmentConfiguration=configuration.getEquipmentConfiguration(subEquipmentUnitAdd.getParentEquipmentId());$  if (parentEquipmentConfiguration == null) {$    changeReport.appendError("Parent Equipment unit id: " + subEquipmentUnitAdd.getParentEquipmentId() + " for SubEquipment unit "+ subEquipmentUnitAdd.getSubEquipmentId()+ " is unknown");$    changeReport.setState(CHANGE_STATE.FAIL);$    return changeReport;$  }$  if (parentEquipmentConfiguration.getSubEquipmentConfiguration(subEquipmentUnitAdd.getSubEquipmentId()) != null) {$    changeReport.appendError("onSubEquipmentUnitAdd - SubEquipment unit id: " + subEquipmentUnitAdd.getSubEquipmentId() + " is already registered");$    changeReport.setState(CHANGE_STATE.FAIL);$    return changeReport;$  }$  SubEquipmentConfiguration subEquipmentConfiguration=null;$  EquipmentConfigurationFactory equipmentConfigurationFactory=EquipmentConfigurationFactory.getInstance();$  try {$    subEquipmentConfiguration=equipmentConfigurationFactory.createSubEquipmentConfiguration(subEquipmentUnitAdd.getSubEquipmentUnitXml());$  }$ catch (  Exception e) {$    changeReport.setState(CHANGE_STATE.FAIL);$    changeReport.appendError(StackTraceHelper.getStackTrace(e));$    return changeReport;$  }$  parentEquipmentConfiguration.addSubEquipmentConfiguration(subEquipmentConfiguration);$  return changeReport;$}$
public static boolean isLegacyIdeaAndroidModule(@NotNull Module module){$  AndroidFacet facet=AndroidFacet.getInstance(module);$  if (facet != null && !facet.requiresAndroidModel()) {$    return true;$  }$  return false;$}$
public CollectionsImplementor(CollectionsModel model,CollectionsView view){$  this.model=model;$  this.view=view;$}$
public LocationCursor queryLocations(){$  return mHelper.queryLocations();$}$
public static void removeCallbacks(Runnable r){$  sMainHandler.removeCallbacks(r);$}$
public Set<String> toFilenameSet(int iSubset){$  HashSet s=new HashSet();$  if ((iSubset & FROM_TRAINING_SET) > 0)   for (  Object elem : getTrainingSet()) {$    CategorizedFileEntry cfeCur=(CategorizedFileEntry)elem;$    s.add(cfeCur.getFileName());$  }$  if ((iSubset & FROM_TEST_SET) > 0)   for (  Object elem : getTestSet()) {$    CategorizedFileEntry cfeCur=(CategorizedFileEntry)elem;$    s.add(cfeCur.getFileName());$  }$  return s;$}$
public static String toString(JSONObject jo) throws JSONException {$  boolean b=false;$  Iterator<String> keys=jo.keys();$  String string;$  StringBuilder sb=new StringBuilder();$  while (keys.hasNext()) {$    string=keys.next();$    if (!jo.isNull(string)) {$      if (b) {$        sb.append(';');$      }$      sb.append(Cookie.escape(string));$      sb.append("=");$      sb.append(Cookie.escape(jo.getString(string)));$      b=true;$    }$  }$  return sb.toString();$}$
public GenericValue queryFirst() throws GenericEntityException {$  EntityFindOptions efo=makeEntityFindOptions();$  if (!this.useCache && !this.filterByDate) {$    efo.setMaxRows(1);$  }$  GenericValue result=EntityUtil.getFirst(query(efo));$  return result;$}$
public NewsfeedDeleteBanQuery deleteBan(UserActor actor){$  return new NewsfeedDeleteBanQuery(getClient(),actor);$}$
public int size(){$  return summonTemplates.size();$}$
public void onDestroy(){$}$
private boolean isPermissionRequested(String permission){$  SharedPreferences preferences=PreferenceManager.getDefaultSharedPreferences(this);$  return preferences.getBoolean(permission,false);$}$
@Override public String toString(){$  return "Cluster []";$}$
public Suggester(double dLookupThreshold){$  vPreviousDecisions=new Vector();$  LookupThreshold=dLookupThreshold;$}$
@Override public void retry(VolleyError error) throws VolleyError {$  mCurrentRetryCount++;$  mCurrentTimeoutMs+=(mCurrentTimeoutMs * mBackoffMultiplier);$  if (!hasAttemptRemaining()) {$    throw error;$  }$}$
public void cleanResult(){$  consG.clear();$  pointers.clear();$  allocations.clear();$  constraints.clear();$  func2int.clear();$  int2func.clear();$  edgeMapping.clear();$  hasTransformed=false;$  hasExecuted=false;$  System.gc();$  System.gc();$  System.gc();$  System.gc();$}$
public void sortbyselection(List<String> sortFlds,List<Integer> sortDirs){$  moveToId(-1);$  int i=0;$  while (super.next()) {$    int minId=findSmallestFrom(i,sortFlds,sortDirs);$    if (minId != i) {$      swapRecords(i,minId);$    }$    moveToId(i);$    i++;$  }$}$
public final void write(OutputStream out) throws IOException {$  writeLong(bits0,out);$  writeLong(bits1,out);$}$
final long fn(long v,long x){$  return v + x;$}$
public static SM_SYSTEM_MESSAGE STR_COMBINE_FAIL(String value0){$  return new SM_SYSTEM_MESSAGE(1330050,value0);$}$
public NGramGaussNormSymWinDocument(){$  Graph=new DocumentNGramSymWinGraph();$  Histogram=new DocumentNGramHistogram();$}$
public IntervalsSet(final double lower,final double upper,final double tolerance){$  super(buildTree(lower,upper,tolerance),tolerance);$}$
public static synchronized void removeInstance(String storeName){$  MAP_STORES.remove(storeName);$}$
private PrivateKey(byte[] priv,Cryptography crypto){$  this.priv=priv;$  this.crypto=crypto;$}$
public DocumentNGramHistogram(int iMinSize,int iMaxSize){$  MinSize=iMinSize;$  MaxSize=iMaxSize;$  DataString="";$  NGramHistogram=new HashMap();$}$
public void onSuccess(int statusCode,JSONObject response){$  onSuccess(response);$}$
public ReplicationFilterException(String message,Throwable cause,String filterClassName,String sourceMemberName,String targetMemberName,int filterDirection){$  super(message,cause);$  _filterClassName=filterClassName;$  _sourceMemberName=sourceMemberName;$  _targetMemberName=targetMemberName;$  _filterDirection=filterDirection;$}$
@Override public void flush() throws IOException {$  writer.write(buffer,0,fill);$  fill=0;$}$
static void commitElement(ConstraintModel model,@NotNull ConstraintWidget widget){$  AttributesTransaction transaction=updateElement(model,widget);$  if (transaction != null) {$    transaction.commit();$  }$}$
@Override public void redoAction(UndoInterface undoRedoObject){$  if (textField != null) {$    if (undoRedoObject != null) {$      String newValue=(String)undoRedoObject.getNewValue();$      textField.setText(newValue);$    }$  }$}$
public static String jsonToString(JsonRootNode node){$  JsonFormatter JSON_FORMATTER=new PrettyJsonFormatter();$  return JSON_FORMATTER.format(node);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_LEAVE_INSTANCE_PARTY(String value0){$  return new SM_SYSTEM_MESSAGE(1400045,value0);$}$
boolean isBaseHeader(){$  return value == BASE_HEADER;$}$
public void add(Predicate p,Font font){$  super.add(p,font);$}$
private soot.Value createLiteral(polyglot.ast.Lit lit){$  if (lit instanceof polyglot.ast.IntLit) {$    polyglot.ast.IntLit intLit=(polyglot.ast.IntLit)lit;$    long litValue=intLit.value();$    if (intLit.kind() == polyglot.ast.IntLit.INT) {$      return soot.jimple.IntConstant.v((int)litValue);$    }$ else {$      return soot.jimple.LongConstant.v(litValue);$    }$  }$ else   if (lit instanceof polyglot.ast.StringLit) {$    String litValue=((polyglot.ast.StringLit)lit).value();$    return soot.jimple.StringConstant.v(litValue);$  }$ else   if (lit instanceof polyglot.ast.NullLit) {$    return soot.jimple.NullConstant.v();$  }$ else   if (lit instanceof polyglot.ast.FloatLit) {$    polyglot.ast.FloatLit floatLit=(polyglot.ast.FloatLit)lit;$    double litValue=floatLit.value();$    if (floatLit.kind() == polyglot.ast.FloatLit.DOUBLE) {$      return soot.jimple.DoubleConstant.v(floatLit.value());$    }$ else {$      return soot.jimple.FloatConstant.v((float)(floatLit.value()));$    }$  }$ else   if (lit instanceof polyglot.ast.CharLit) {$    char litValue=((polyglot.ast.CharLit)lit).value();$    return soot.jimple.IntConstant.v(litValue);$  }$ else   if (lit instanceof polyglot.ast.BooleanLit) {$    boolean litValue=((polyglot.ast.BooleanLit)lit).value();$    if (litValue)     return soot.jimple.IntConstant.v(1);$ else     return soot.jimple.IntConstant.v(0);$  }$ else   if (lit instanceof polyglot.ast.ClassLit) {$    return getSpecialClassLitLocal((polyglot.ast.ClassLit)lit);$  }$ else {$    throw new RuntimeException("Unknown Literal - Unhandled: " + lit.getClass());$  }$}$
private InfoflowResults analyzeAPKFile(boolean enableImplicitFlows) throws IOException, XmlPullParserException {$  String androidJars=System.getenv("ANDROID_JARS");$  if (androidJars == null)   androidJars=System.getProperty("ANDROID_JARS");$  if (androidJars == null)   throw new RuntimeException("Android JAR dir not set");$  System.out.println("Loading Android.jar files from " + androidJars);$  SetupApplication setupApplication=new SetupApplication(androidJars,"insecureBank" + File.separator + "InsecureBank.apk");$  setupApplication.setTaintWrapper(new EasyTaintWrapper("EasyTaintWrapperSource.txt"));$  setupApplication.setEnableImplicitFlows(enableImplicitFlows);$  setupApplication.setLayoutMatchingMode(LayoutMatchingMode.MatchAll);$  setupApplication.calculateSourcesSinksEntrypoints("SourcesAndSinks.txt");$  return setupApplication.runInfoflow();$}$
public GroupsSetCallbackServerSettingsQuery(VkApiClient client,Actor actor,int groupId){$  super(client,"groups.setCallbackServerSettings",OkResponse.class);$  accessToken(actor.getAccessToken());$  groupId(groupId);$}$
private DataQueryParams retainDataDimensionReportingRates(ReportingRateMetric metric){$  DimensionalObject dimension=getDimensionOrFilter(DATA_X_DIM_ID);$  List<ReportingRate> items=DimensionalObjectUtils.asTypedList(AnalyticsUtils.getByDataDimensionItemType(DataDimensionItemType.REPORTING_RATE,dimension.getItems()));$  items=items.stream().filter(null).collect(Collectors.toList());$  dimension.getItems().clear();$  dimension.getItems().addAll(items);$  return this;$}$
public static final MediaFormat createAudioFormat(String mime,int sampleRate,int channelCount){$  MediaFormat format=new MediaFormat();$  format.setString(KEY_MIME,mime);$  format.setInteger(KEY_SAMPLE_RATE,sampleRate);$  format.setInteger(KEY_CHANNEL_COUNT,channelCount);$  return format;$}$
public boolean isManufactured(){$  return isManufactured(false);$}$
public static String factoryLinkByType(String type){$  if (null == type) {$    return null;$  }$  List<RegistryEntry> list=entries.stream().filter(null).collect(Collectors.toList());$  if (list.isEmpty()) {$    return null;$  }$  return list.get(0).descriptionFactoryLink;$}$
public static <T>IStoredList<T> createConcurrentList(boolean segmented){$  return createConcurrentList(segmented,false);$}$
private ValueEncoderMeta deserializeEncoderMeta(byte[] encoderMeta){$  ByteArrayInputStream aos=null;$  ObjectInputStream objStream=null;$  ValueEncoderMeta meta=null;$  try {$    aos=new ByteArrayInputStream(encoderMeta);$    objStream=new ObjectInputStream(aos);$    meta=(ValueEncoderMeta)objStream.readObject();$  }$ catch (  ClassNotFoundException e) {$    LOGGER.error(e);$  }$catch (  IOException e) {$    CarbonUtil.closeStreams(objStream);$  }$  return meta;$}$
public LogSeqNum logLogicalAbort(long txNum,LogSeqNum undoNextLSN){$  if (enableLogging) {$    return new LogicalAbortRecord(txNum,undoNextLSN).writeToLog();$  }$ else   return null;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ExtendAuraRange_A_TO_B(String skillcaster,String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200972,skillcaster,skilltarget,skillname);$}$
public Map<String,Object> createRenderContext(Appendable writer,Map<String,Object> currentContext,Map<String,Object> extraValues) throws IOException {$  Map<String,Object> renderContext;$  if (currentContext != null) {$    throw new UnsupportedOperationException("Not expecting to receive current context in current implementation");$  }$ else   if (screenRenderer != null) {$    MapStack<String> initContext=screenRenderer.initialContext;$    if (initContext != null) {$      renderContext=createRenderContextFromInitial(initContext,extraValues);$    }$ else {$      Debug.logError("macro " + rendererLabel + " renderer template environment initial context absent",MacroScreenRenderer.module);$      renderContext=new HashMap<String,Object>(extraValues);$    }$  }$ else {$    Debug.logError("macro " + rendererLabel + " renderer template environment initial context populate "+ "could not retrieve macro screen renderer instance",MacroScreenRenderer.module);$    renderContext=new HashMap<String,Object>(extraValues);$  }$  lastRenderContext=renderContext;$  return renderContext;$}$
private void drawYAxis(Graphics2D gc){$  int x0=leftMargin;$  int x1=getWidth() - rightMargin;$  int y0=getHeight() - bottomMargin;$  int y1=topMargin;$  gc.setColor(Color.BLACK);$  gc.drawLine(x0,y0,x0,y1 - 10);$  drawArrowHead(gc,new Point(x0,y0),new Point(x0,y1 - 10));$  drawYAxisTicks(gc);$  if (getChartData().getCountsLabel() != null) {$    String label=getChartData().getCountsLabel();$    if (scalingType == ChartViewer.ScalingType.PERCENT)     label+=" (%)";$    Dimension labelSize=Basic.getStringSize(gc,label,gc.getFont()).getSize();$    int x=15;$    int y=(y0 + y1) / 2 - labelSize.width / 2;$    gc.setFont(getFont(ChartViewer.FontKeys.YAxisFont.toString()));$    gc.setColor(getFontColor(ChartViewer.FontKeys.YAxisFont.toString(),Color.BLACK));$    drawString(gc,label,x,y,Math.PI / 2);$  }$}$
public static String toString(Reader input) throws IOException {$  StringBuilderWriter sw=new StringBuilderWriter();$  copy(input,sw);$  return sw.toString();$}$
public InputStream newInputStream(int index) throws IOException {$synchronized (DiskLruCache.this) {$    if (entry.currentEditor != this) {$      throw new IllegalStateException();$    }$    if (!entry.readable) {$      return null;$    }$    try {$      return new FileInputStream(entry.getCleanFile(index));$    }$ catch (    FileNotFoundException e) {$      return null;$    }$  }$}$
public Builder conditionalCopyValueTransform(String columnToReplace,String sourceColumn,Condition condition){$  return transform(new ConditionalCopyValueTransform(columnToReplace,sourceColumn,condition));$}$
public Builder lineCap(String lineCap){$  this.lineCap=lineCap;$  return this;$}$
public static IOFileFilter sizeRangeFileFilter(long minSizeInclusive,long maxSizeInclusive){$  IOFileFilter minimumFilter=new SizeFileFilter(minSizeInclusive,true);$  IOFileFilter maximumFilter=new SizeFileFilter(maxSizeInclusive + 1L,false);$  return new AndFileFilter(minimumFilter,maximumFilter);$}$
@Override public void notationDecl(String name,String publicId,String systemId) throws SAXException {$  allowXMLCatalogPI=false;$  if (dtdHandler != null) {$    dtdHandler.notationDecl(name,publicId,systemId);$  }$}$
public boolean isExpanded(){$  return expanded;$}$
public void halt(){$  for (  WorkProcessor<?> processor : workProcessors) {$    processor.halt();$  }$  started.set(false);$}$
public Matrix inverse(){$  return solve(identity(m,m));$}$
public int indexOf(int offset,short value){$  for (int i=offset; i < _pos; i++) {$    if (_data[i] == value) {$      return i;$    }$  }$  return -1;$}$
static String encode(List<String> eventIds){$  checkArgument(!eventIds.isEmpty(),"Empty event ID list.");$  if (eventIds.size() == 1) {$    return checkValid(eventIds.get(0));$  }$  StringBuilder buf=new StringBuilder();$  String prevId=null;$  for (  String eventId : eventIds) {$    checkValid(eventId);$    int commonPrefixLength;$    if (prevId == null) {$      buf.append(eventId);$    }$ else     if (prevId.length() == eventId.length() && (commonPrefixLength=getCommonPrefixLength(prevId,eventId)) > 0) {$      buf.append(DELIM_SHARED_PREFIX).append(eventId.substring(commonPrefixLength));$    }$ else {$      buf.append(DELIM_REGULAR).append(eventId);$    }$    prevId=eventId;$  }$  return buf.toString();$}$
@Override public boolean checkCanSwipeBack(int dir){$  return view.checkCanSwipeBack(dir);$}$
@Theory public void logEntriesHaveSameOrderAsIndexes(Object[] dataPoint){$  int index1=(int)dataPoint[0];$  int index2=(int)dataPoint[1];$  LogEntry first=logEntries[index1];$  LogEntry second=logEntries[index2];$  LOG.debug("testing comparator for log entries: {} and {}",index1,index2);$  int result=tested.compare(first,second);$  int expected=Integer.compare(index1,index2);$  assertThatHaveSameSignum(expected,result);$}$
public Builder cloneFrom(DisplayImageOptions options){$  imageResOnLoading=options.imageResOnLoading;$  imageResForEmptyUri=options.imageResForEmptyUri;$  imageResOnFail=options.imageResOnFail;$  imageOnLoading=options.imageOnLoading;$  imageForEmptyUri=options.imageForEmptyUri;$  imageOnFail=options.imageOnFail;$  resetViewBeforeLoading=options.resetViewBeforeLoading;$  cacheInMemory=options.cacheInMemory;$  cacheOnDisk=options.cacheOnDisk;$  imageScaleType=options.imageScaleType;$  decodingOptions=options.decodingOptions;$  delayBeforeLoading=options.delayBeforeLoading;$  considerExifParams=options.considerExifParams;$  extraForDownloader=options.extraForDownloader;$  preProcessor=options.preProcessor;$  postProcessor=options.postProcessor;$  displayer=options.displayer;$  handler=options.handler;$  isSyncLoading=options.isSyncLoading;$  return this;$}$
public UseItemReviveResponse.Result revive() throws LoginFailedException, RemoteServerException {$  if (!isFainted())   return UseItemReviveResponse.Result.ERROR_CANNOT_USE;$  if (api.getInventories().getItemBag().getItem(ItemId.ITEM_REVIVE).getCount() > 0)   return useRevive(ItemId.ITEM_REVIVE);$  if (api.getInventories().getItemBag().getItem(ItemId.ITEM_MAX_REVIVE).getCount() > 0)   return useRevive(ItemId.ITEM_MAX_REVIVE);$  return UseItemReviveResponse.Result.ERROR_CANNOT_USE;$}$
public HttpResponseWrapper(JsonObject json){$  this.statusCode=HttpResponseStatus.valueOf(json.getInteger("statusCode"));$  if (json.containsKey("body")) {$    this.body=Buffer.buffer(json.getString("body"));$  }$  if (json.containsKey("headers")) {$    this.headers=MultiMap.caseInsensitiveMultiMap();$    json.getJsonArray("headers").stream().map(null).flatMap(null).forEach(null);$  }$}$
public void dispose(){$  if (metadata != null)   metadata.dispose();$  if (index != null)   index.dispose();$}$
@Nonnull public DataBuilder appendDevicePattern(@Nonnull final DevicePattern pattern){$  Check.notNull(pattern,"pattern");$  if (!devicePatterns.containsKey(pattern.getId())) {$    devicePatterns.put(pattern.getId(),new TreeSet<DevicePattern>(DEVICE_PATTERN_COMPARATOR));$  }$  devicePatterns.get(pattern.getId()).add(pattern);$  return this;$}$
public static _Fields findByName(String name){$  return byName.get(name);$}$
@Nullable @Override @CallSuper public List<String> validate(JobTrigger trigger){$  if (trigger == Trigger.NOW) {$    return null;$  }$  if (!(trigger instanceof JobTrigger.ExecutionWindowTrigger)) {$    return getMutableSingletonList("Unknown trigger provided");$  }$  return null;$}$
public void actionPerformed(ActionEvent ev){$  execute("set flipH=" + (!isSelected()) + ";");$}$
public void stop(){$  if (!status.compareAndSet(STATUS_RUNNING,STATUS_STOPPING)) {$    if (status.get() == STATUS_STOPPING) {$      LOGGER.warn("processor is already stopping, now");$    }$ else {$      LOGGER.error("status should be RUNNING. status=" + status.get());$    }$    return;$  }$  try {$    binlogReceiver.stop(config.binlogReceiverStopTimeout,TimeUnit.MILLISECONDS);$  }$ catch (  Exception e) {$    LOGGER.error("Failed to stop binlogReceiver.",e);$  }$  LOGGER.info("try to shutdown threadPool");$  threadPool.shutdownNow();$  try {$    threadPool.awaitTermination(config.threadPoolTerminationTimeout,TimeUnit.MILLISECONDS);$  }$ catch (  Exception e) {$    LOGGER.error("Failed to await thread pool termination.",e);$  }$  status.set(STATUS_STOPPED);$  logRemainedBinlogFileStatCounter();$  getHandler().afterStop();$  waitStopLatch.countDown();$}$
@Override protected final boolean writeData(ByteBuffer data){$synchronized (guard) {$    GsServerPacket packet=sendMsgQueue.pollFirst();$    if (packet == null) {$      return false;$    }$    packet.write(this,data);$    return true;$  }$}$
public ParserException(String message){$  this(message,null);$  return;$}$
public EntityQuery from(String entityName){$  this.entityName=entityName;$  this.dynamicViewEntity=null;$  return this;$}$
private final SortedMap identifyCandidateDelimiters(String sStr,int iNGramSize){$  String sSubStr=null;$  Integer[] iRes=null;$  ArrayList alRes=new ArrayList();$  TreeMap tmRes=new TreeMap();$  for (int iCnt=0; iCnt <= sStr.length() - iNGramSize; iCnt++) {$    if (iCnt + iNGramSize > sStr.length())     continue;$    sSubStr=sStr.substring(iCnt,iCnt + iNGramSize);$    if (tmRes.containsValue(sSubStr))     continue;$    Vertex vStrNode=clLocator.locateVertexInGraph(sgOverallGraph,new VertexImpl(sSubStr));$    if (vStrNode == null)     continue;$    double dEntropy=getEntropyOfNextChar(sSubStr,false);$    tmRes.put(dEntropy,sSubStr);$  }$  return tmRes;$}$
private List<String> prepareYColumn(Double yValue,int yMaxLines,int y0){$  Double yPosDotU=Math.abs(yValue / this.scorePerDot);$  if ((int)Math.rint(yPosDotU) == 0) {$    ArrayList<String> strDepth=new ArrayList<String>();$    for (int j=0; j < yMaxLines; j++) {$      strDepth.add(strForFill);$    }$    if (yValue.isNaN()) {$      strDepth.set(y0,this.strForNaN);$    }$ else     if (y0 < yMaxLines - 1 || yMaxLines == 1) {$      strDepth.set(y0,this.strForZero);$    }$ else {$      strDepth.set(y0,this.strForZeroTop);$    }$    return strDepth;$  }$ else   if (yValue < 0) {$    return pileForNegative(yValue,yMaxLines,y0);$  }$ else   if (yValue > 0) {$    return pileForPositive(yValue,yMaxLines,y0);$  }$ else {$    throw new RuntimeException("Unexpected exception");$  }$}$
@Override public void run(){$  while (!keyList.isEmpty()) {$    Object key=keyList.pollFirst();$    cache.putQuiet(new Element(key,preloadBuffer.get(key)));$    cache.putQuiet(new Element(key,preloadBuffer.get(key)));$  }$}$
public void draw(GL10 gl){$  GLES10.glClear(GLES10.GL_COLOR_BUFFER_BIT | GLES10.GL_DEPTH_BUFFER_BIT);$}$
public void testFloatField() throws Exception {$  AnObject empty=new AnObject();$  AnObject full=helper.fill(new AnObject());$  assertTrue(helper.areEquals(full,full));$  assertFalse(helper.areEquals(empty,full));$}$
public CMMModel train(List<String> taggedSentences,String modelFileName,CMMParams params){$  DataFrame dataset=createDataFrame(taggedSentences);$  return train(dataset,modelFileName,params);$}$
@RequestMapping(value="/{id}",method=GET,produces=APPLICATION_JSON_VALUE) public ResponseEntity<AuthorDTO> findById(@PathVariable Integer id) throws URISyntaxException {$  log.debug("Find by id Author : {}",id);$  return Optional.ofNullable(authorDTOService.findOne(id)).map(null).orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));$}$
public static boolean updateGradleDistributionUrl(@NotNull Project project,@NotNull File propertiesFile,@NotNull String gradleVersion){$  try {$    boolean updated=updateGradleDistributionUrl(gradleVersion,propertiesFile);$    if (updated) {$      VirtualFile virtualFile=findFileByIoFile(propertiesFile,true);$      if (virtualFile != null) {$        virtualFile.refresh(false,false);$      }$      return true;$    }$  }$ catch (  IOException e) {$    String msg=String.format("Unable to update Gradle wrapper to use Gradle %1$s\n",gradleVersion);$    msg+=e.getMessage();$    Messages.showErrorDialog(project,msg,"Unexpected Error");$  }$  return false;$}$
public static void checkState(boolean expression){$  if (!expression) {$    throw new IllegalStateException();$  }$}$
public boolean isLoaded(){$  return loaded;$}$
public GeoServerLayerNode(FileSystemInterface handler,GeoServerLayer layer){$  super(layer.getLayerName());$  this.layer=layer;$  this.handler=handler;$}$
public SyntaxView(Element element,Configuration config,String prefix){$  super(element);$  singleColorSelect=config.getPrefixBoolean(prefix,PROPERTY_SINGLE_COLOR_SELECT,false);$  rightMarginColor=new Color(config.getPrefixInteger(prefix,PROPERTY_RIGHT_MARGIN_COLOR,0xFF7777));$  rightMarginColumn=config.getPrefixInteger(prefix,PROPERTY_RIGHT_MARGIN_COLUMN,0);$  String textaa=config.getPrefixProperty(prefix,PROPERTY_TEXTAA,"DEFAULT");$  textAAHint=TEXT_AA_HINT_NAMES.get(textaa);$}$
protected void validateNamespaceOwnership(String property,String cluster,String namespace,boolean authoritative,boolean readOnly){$  NamespaceName fqnn=new NamespaceName(property,cluster,namespace);$  try {$    validateFullNamespaceOwnership(fqnn,authoritative,readOnly);$  }$ catch (  WebApplicationException wae) {$    throw wae;$  }$catch (  Exception e) {$    throw new WebApplicationException(e);$  }$}$
public void asinh(final double[] operand,final int operandOffset,final double[] result,final int resultOffset){$  double[] function=new double[1 + order];$  final double x=operand[operandOffset];$  function[0]=FastMath.asinh(x);$  if (order > 0) {$    final double[] p=new double[order];$    p[0]=1;$    final double x2=x * x;$    final double f=1.0 / (1 + x2);$    double coeff=FastMath.sqrt(f);$    function[1]=coeff * p[0];$    for (int n=2; n <= order; ++n) {$      double v=0;$      p[n - 1]=(1 - n) * p[n - 2];$      for (int k=n - 1; k >= 0; k-=2) {$        v=v * x2 + p[k];$        if (k > 2) {$          p[k - 2]=(k - 1) * p[k - 1] + (k - 2 * n) * p[k - 3];$        }$ else         if (k == 2) {$          p[0]=p[1];$        }$      }$      if ((n & 0x1) == 0) {$        v*=x;$      }$      coeff*=f;$      function[n]=coeff * v;$    }$  }$  compose(operand,operandOffset,function,result,resultOffset);$}$
public static void resetPlugins(){$  getInstance().reset();$}$
public Response(boolean requiredencode){$  this();$  requiredEncode=requiredencode;$}$
public void checkSymbolIsValid(){$  boolean valid=false;$  Expression expression=getExpression();$  if (expression != null) {$    valid=!expression.toString().isEmpty();$  }$  SelectedSymbol.getInstance().setValidSymbol(VALIDITY_KEY,valid);$}$
public void monitorsUpdated(VmEvent event){$  assert event.getMonitoredVm().equals(monitoredVm);$  try {$    if (monitoredHost.activeVms().contains(pid)) {$      List<JvmstatListener> listenersCopy;$synchronized (listeners) {$        listenersCopy=new ArrayList(listeners);$      }$      for (      JvmstatListener listener : listenersCopy) {$        listener.dataChanged(this);$      }$    }$ else {$      disableListeners();$      monitoredVm.detach();$    }$  }$ catch (  MonitorException ex) {$    ErrorManager.getDefault().notify(ErrorManager.WARNING,ex);$    disableListeners();$    monitoredVm.detach();$  }$}$
public ExpressionPanelv2(List<VersionData> vendorOptionList){$  super(Controller.getInstance().getFrame(),"",true);$  this.setResizable(false);$  this.vendorOptionList=vendorOptionList;$  setPreferredSize(new Dimension(800,450));$  createUI();$  DataSourceInterface dataSource=DataSourceFactory.getDataSource();$  if (dataSource != null) {$    dataSource.addListener(this);$  }$  this.pack();$  Controller.getInstance().centreDialog(this);$}$
private static boolean hasNonEmptyGrid(List<Grid> grids){$  if (grids != null && grids.size() > 0) {$    for (    Grid grid : grids) {$      if (isNonEmptyGrid(grid)) {$        return true;$      }$    }$  }$  return false;$}$
public boolean isNavBarTintEnabled(){$  return mNavBarTintEnabled;$}$
public Zmat qb(Zmat B) throws JampackException {$  if (B.ncol != ncol) {$    throw new JampackException("Inconsistent dimensions.");$  }$  Zmat C=new Zmat(B);$  for (int k=ntran - 1; k >= 0; k--) {$    House.ua(U[k],C,C.bx + k,C.rx,C.bx,C.cx);$  }$  return C;$}$
public int geom_encoding(){$  String s=soot.PhaseOptions.getString(options,"geom-encoding");$  if (s.equalsIgnoreCase("Geom"))   return geom_encoding_Geom;$  if (s.equalsIgnoreCase("HeapIns"))   return geom_encoding_HeapIns;$  if (s.equalsIgnoreCase("PtIns"))   return geom_encoding_PtIns;$  throw new RuntimeException("Invalid value " + s + " of phase option geom-encoding");$}$
public static <T>T checkNotNull(T reference,String errorMessageTemplate,Object... errorMessageArgs){$  if (reference == null) {$    throw new NullPointerException(format(errorMessageTemplate,errorMessageArgs));$  }$  return reference;$}$
public VideoGetAlbumsQueryWithExtended count(Integer value){$  return unsafeParam("count",value);$}$
public GeoServerReadProgress(FileSystemInterface handler,GeoServerParseCompleteInterface parseComplete){$  this.handler=handler;$  this.parseComplete=parseComplete;$}$
public boolean hasNavigtionBar(){$  return mHasNavigationBar;$}$
@Override public void destroy() throws Exception {$  if (this.cacheManager != null) {$    this.cacheManager.stop();$  }$}$
public void testDeployZipFile(){$  InputStream inputStream=this.getClass().getClassLoader().getResourceAsStream("org/activiti/engine/test/api/repository/test-processes.zip");$  assertNotNull(inputStream);$  ZipInputStream zipInputStream=new ZipInputStream(inputStream);$  assertNotNull(zipInputStream);$  repositoryService.createDeployment().addZipInputStream(zipInputStream).deploy();$  assertEquals(6,repositoryService.createProcessDefinitionQuery().count());$  for (  org.activiti.engine.repository.Deployment deployment : repositoryService.createDeploymentQuery().list()) {$    repositoryService.deleteDeployment(deployment.getId(),true);$  }$}$
public float readFloat() throws JMSException {$  initializeReading();$  try {$    if (this.dataIn.available() == 0) {$      throw new MessageEOFException("reached end of data");$    }$    this.dataIn.mark(33);$    int type=this.dataIn.read();$    if (type == _FLOAT) {$      return this.dataIn.readFloat();$    }$    if (type == _STRING) {$      return Float.valueOf(this.dataIn.readUTF()).floatValue();$    }$    if (type == _NULL) {$      this.dataIn.reset();$      throw new NullPointerException("Cannot convert _NULL value to float.");$    }$ else {$      this.dataIn.reset();$      throw new MessageFormatException(" not a float type");$    }$  }$ catch (  NumberFormatException mfe) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException ioe) {$      JMSException jmsEx=new JMSException("reset failed");$      jmsEx.setLinkedException(ioe);$    }$    throw mfe;$  }$catch (  EOFException e) {$    JMSException jmsEx=new MessageEOFException(e.toString());$    jmsEx.setLinkedException(e);$    throw jmsEx;$  }$catch (  IOException e) {$    JMSException jmsEx=new MessageFormatException(e.toString());$    jmsEx.setLinkedException(e);$    throw jmsEx;$  }$}$
private String doPrefix(String uri,String qName,boolean isElement){$  String defaultNS=nsSupport.getURI("");$  if ("".equals(uri)) {$    if (isElement && defaultNS != null)     nsSupport.declarePrefix("","");$    return null;$  }$  String prefix;$  if (isElement && defaultNS != null && uri.equals(defaultNS)) {$    prefix="";$  }$ else {$    prefix=nsSupport.getPrefix(uri);$  }$  if (prefix != null) {$    return prefix;$  }$  prefix=(String)doneDeclTable.get(uri);$  if (prefix != null && ((!isElement || defaultNS != null) && "".equals(prefix) || nsSupport.getURI(prefix) != null)) {$    prefix=null;$  }$  if (prefix == null) {$    prefix=(String)prefixTable.get(uri);$    if (prefix != null && ((!isElement || defaultNS != null) && "".equals(prefix) || nsSupport.getURI(prefix) != null)) {$      prefix=null;$    }$  }$  if (prefix == null && qName != null && !"".equals(qName)) {$    int i=qName.indexOf(':');$    if (i == -1) {$      if (isElement && defaultNS == null) {$        prefix="";$      }$    }$ else {$      prefix=qName.substring(0,i);$    }$  }$  for (; prefix == null || nsSupport.getURI(prefix) != null; prefix="__NS" + ++prefixCounter)   ;$  nsSupport.declarePrefix(prefix,uri);$  doneDeclTable.put(uri,prefix);$  return prefix;$}$
@Override public boolean isAcceptable(JsonPath jsonPath,String requestType){$  return jsonPath.isCollection() && jsonPath instanceof ResourcePath && HttpMethod.GET.name().equals(requestType);$}$
private String pickCharset(){$  if (charset != null) {$    return charset;$  }$ else   if (utf8Supported) {$    return "UTF-8";$  }$ else {$    return System.getProperty("file.encoding");$  }$}$
public static DataTagCacheObject createTestDataTag3(){$  DataTagCacheObject cacheObject=new DataTagCacheObject();$  cacheObject.setId(new Long(100003));$  cacheObject.setName("Junit_test_datatag3");$  cacheObject.setDescription("test description");$  cacheObject.setMode(DataTagConstants.MODE_TEST);$  cacheObject.setDataType("String");$  cacheObject.setLogged(false);$  cacheObject.setUnit("test unit");$  cacheObject.setDipAddress("testDIPaddress");$  cacheObject.setJapcAddress("testJAPCaddress");$  cacheObject.setValue("DOWN");$  cacheObject.setValueDescription("test value description");$  cacheObject.setSimulated(false);$  cacheObject.setEquipmentId(new Long(100));$  cacheObject.setMinValue(new Float(23.3));$  cacheObject.setMaxValue(new Float(12.2));$  cacheObject.setValueDictionary(new DataTagValueDictionary());$  cacheObject.setAddress(new DataTagAddress());$  cacheObject.setDataTagQuality(createValidQuality());$  cacheObject.setCacheTimestamp(new Timestamp(System.currentTimeMillis()));$  cacheObject.setDaqTimestamp(new Timestamp(System.currentTimeMillis()));$  cacheObject.setSourceTimestamp(new Timestamp(System.currentTimeMillis()));$  cacheObject.getAlarmIds().add(1L);$  cacheObject.getAlarmIds().add(3L);$  return cacheObject;$}$
private void init(){$  parseActions();$  parseName(new StringTokenizer(getName()," ",true),false);$}$
private static int endOfTagMatch(String string,String tag){$  return endOfTagMatch(string,0,tag);$}$
public void addProperty(String property,Number value){$  add(property,createJsonElement(value));$}$
public boolean accept(String inputString){$  int symbol;$  int state=transition(0,'#');$  int leftEnd=inputString.length() - 1;$  int start=(scanFromFront) ? 0 : leftEnd;$  for (int i=start; 0 <= i && i <= leftEnd; ) {$    char c=inputString.charAt(i);$    if (c == 'n' || c == 'm') {$      symbol='N';$    }$ else     if ("aeiouy".indexOf(c) != -1) {$      symbol='V';$    }$ else {$      symbol=c;$    }$    state=transition(state,symbol);$    if (state == -1) {$      return false;$    }$ else     if (symbol == 'V') {$      return true;$    }$    if (scanFromFront) {$      i++;$    }$ else {$      i--;$    }$  }$  return false;$}$
private String toHexString(long value,int digits){$  long cutoff=1L << (digits * 4);$  return Long.toHexString(cutoff | (value & (cutoff - 1))).substring(1);$}$
public static void addRequest(AbstractAI ai2,Player player,int requestId,int senderId,final AI2Request request,Object... requestParams){$  addRequest(ai2,player,requestId,senderId,0,request,requestParams);$}$
public <T>void addEntry(Class<T> resource,RegistryEntry<? extends T> registryEntry){$  resources.put(resource,registryEntry);$  registryEntry.initialize(this);$  logger.debug("Added resource {} to ResourceRegistry",resource.getName());$}$
public void apply(NexusStreamParser np) throws Exception {$}$
public static String removeLineEnds(String text){$  return text.replaceAll("[\r\n]+"," ").trim();$}$
public SpringForce(float springCoeff,float defaultLength){$  params=new float[]{springCoeff,defaultLength};$  minValues=new float[]{DEFAULT_MIN_SPRING_COEFF,DEFAULT_MIN_SPRING_LENGTH};$  maxValues=new float[]{DEFAULT_MAX_SPRING_COEFF,DEFAULT_MAX_SPRING_LENGTH};$}$
public FriendsGetRequestsQuery out(Boolean value){$  return unsafeParam("out",value);$}$
public DistributedLogClientBuilder requestTimeoutMs(int timeoutMs){$  DistributedLogClientBuilder newBuilder=newBuilder(this);$  newBuilder._clientConfig.setRequestTimeoutMs(timeoutMs);$  return newBuilder;$}$
public static String specificationVersion(){$  return specificationVersion;$}$
public void writeBoolean(boolean value) throws JMSException {$  initializeWriting();$  try {$    this.dataOut.write(_BOOLEAN);$    this.dataOut.writeBoolean(value);$  }$ catch (  IOException ioe) {$    raise(ioe);$  }$}$
public boolean fileExists(){$  return mId != -1;$}$
public void requestPreviewFrame(Handler handler,int message){$  if (camera != null && previewing) {$    previewCallback.setHandler(handler,message);$    if (useOneShotPreviewCallback) {$      camera.setOneShotPreviewCallback(previewCallback);$    }$ else {$      camera.setPreviewCallback(previewCallback);$    }$  }$}$
public TopicSubscriber createDurableSubscriber(Topic topic,String name) throws JMSException {$  ensureOpen();$  throw new JMSException("This version of JMS does not support durable subscribers.");$}$
public FriendsGetQuery nameCase(UsersNameCase value){$  return unsafeParam("name_case",value);$}$
public void toggleSelection(final int location){$  this.selectItem(location,!this.selectedItems.get(location));$}$
public HttpClient(URL url){$  this.url=url.toExternalForm();$}$
public static void textRight(double x,double y,String text){$  if (text == null)   throw new NullPointerException();$  offscreen.setFont(font);$  FontMetrics metrics=offscreen.getFontMetrics();$  double xs=scaleX(x);$  double ys=scaleY(y);$  int ws=metrics.stringWidth(text);$  int hs=metrics.getDescent();$  offscreen.drawString(text,(float)(xs - ws),(float)(ys + hs));$  draw();$}$
static public Properties findCustomPropertiesObj(String schemaPropertiesFileName) throws IOException, ConfigurationException {$  InputStream schemaInputStream=null;$  String schemaPropertiesPath=null;$  boolean downloadingPropsFromHTTP=schemaPropertiesFileName.startsWith("http:");$  if (downloadingPropsFromHTTP) {$    try {$      URL theUrl=new URL(schemaPropertiesFileName);$      URLConnection con=theUrl.openConnection();$      schemaInputStream=con.getInputStream();$      schemaPropertiesPath=schemaPropertiesFileName;$    }$ catch (    Exception e) {$      throw new ConfigurationException("Failed to download properties file from '" + schemaPropertiesFileName + "' cause: "+ e.getClass().getName()+ " message: "+ e.getMessage(),e);$    }$  }$ else {$    schemaPropertiesPath=Constants.Container.CONTAINER_CONFIG_DIRECTORY + "/" + schemaPropertiesFileName+ ".properties";$    schemaInputStream=getResourceStream(schemaPropertiesPath);$  }$  Properties schemaProperties=null;$  if (schemaInputStream != null) {$    if (_logger.isLoggable(Level.INFO)) {$      _logger.info("Loading properties file from: " + (downloadingPropsFromHTTP ? schemaPropertiesFileName : getResourceURL(schemaPropertiesPath).toString()));$    }$    schemaProperties=new Properties();$    schemaProperties.load(schemaInputStream);$    schemaInputStream.close();$    if (_logger.isLoggable(Level.FINE)) {$      _logger.fine("custom properties file values: ");$      schemaProperties.list(System.out);$    }$  }$ else {$    throw new ConfigurationException("Failed to load properties file: " + schemaPropertiesPath);$  }$  return schemaProperties;$}$
public Optional<Number> min(){$  String dataType=checkSelectedResourceTypesHaveCorrectDataType(statisticsResourceTypes);$  if (!selectedTypesHaveInstanceInSubgraph(statisticsResourceTypes,subtypes))   return Optional.empty();$  Set<String> allSubtypes=statisticsResourceTypes.stream().map(null).collect(Collectors.toSet());$  allSubtypes.addAll(subtypes);$  allSubtypes.addAll(statisticsResourceTypes);$  MindmapsComputer computer=Mindmaps.factory(Mindmaps.DEFAULT_URI,keySpace).getGraphComputer();$  ComputerResult result=computer.compute(new DegreeVertexProgram(allSubtypes),new MinMapReduce(statisticsResourceTypes,dataType));$  Map<String,Number> min=result.memory().get(MindmapsMapReduce.MAP_REDUCE_MEMORY_KEY);$  return Optional.of(min.get(MinMapReduce.MEMORY_KEY));$}$
private boolean checkBlockDrifting(int x,int y,int z){$  for (int height=y - 1; height <= y + 1; height++) {$    IBlockState blockState=worldObj.getBlockState(new BlockPos(x,height,z));$    if (blockState.getBlock() == Blocks.FLOWING_WATER || blockState.getBlock() == Blocks.WATER) {$      int meta=blockState.getBlock().getMetaFromState(blockState);$      if (meta >= 8)       return true;$    }$  }$  return false;$}$
public static double random(){$  return uniform();$}$
@SuppressWarnings("unchecked") public Configuration(Configuration other){$  this.resources=(ArrayList)other.resources.clone();$synchronized (other) {$    if (other.properties != null) {$      this.properties=(Properties)other.properties.clone();$    }$    if (other.overlay != null) {$      this.overlay=(Properties)other.overlay.clone();$    }$  }$  this.finalParameters=new HashSet<>(other.finalParameters);$synchronized (Configuration.class) {$    REGISTRY.put(this,null);$  }$}$
public boolean isUnloadDisabledInLoadShedding(){$  if (!pulsar.getConfiguration().isLoadBalancerEnabled()) {$    return true;$  }$  boolean unloadDisabledInLoadShedding=false;$  try {$    unloadDisabledInLoadShedding=pulsar.getGlobalZkCache().exists(AdminResource.LOAD_SHEDDING_UNLOAD_DISABLED_FLAG_PATH);$  }$ catch (  Exception e) {$    log.warn("Unable to fetch contents of [{}] from global zookeeper",AdminResource.LOAD_SHEDDING_UNLOAD_DISABLED_FLAG_PATH,e);$  }$  return unloadDisabledInLoadShedding;$}$
private static int hash(Object[] elements){$  int h=0;$  for (int i=elements.length; --i >= 0; ) {$    h+=elements[i].hashCode();$  }$  return h;$}$
public SimpleTextHistoDocument(){$  Graph=new DocumentWordGraph();$  Histogram=new DocumentWordHistogram();$}$
public final TestSubscriber<T> configureValuesStorage(boolean enabled){$  this.valuesStorage=enabled;$  return this;$}$
public int propagator(){$  String s=soot.PhaseOptions.getString(options,"propagator");$  if (s.equalsIgnoreCase("auto"))   return propagator_auto;$  if (s.equalsIgnoreCase("iter"))   return propagator_iter;$  if (s.equalsIgnoreCase("worklist"))   return propagator_worklist;$  if (s.equalsIgnoreCase("alias"))   return propagator_alias;$  if (s.equalsIgnoreCase("bdd"))   return propagator_bdd;$  if (s.equalsIgnoreCase("incbdd"))   return propagator_incbdd;$  throw new RuntimeException("Invalid value " + s + " of phase option propagator");$}$
public void linearCombination(final double a1,final double[] c1,final int offset1,final double a2,final double[] c2,final int offset2,final double[] result,final int resultOffset){$  for (int i=0; i < getSize(); ++i) {$    result[resultOffset + i]=MathArrays.linearCombination(a1,c1[offset1 + i],a2,c2[offset2 + i]);$  }$}$
private void applySpeechRateSpecifications(NodeList nl,Element prosodyElement){$  String rateAttribute=null;$  if (!prosodyElement.hasAttribute("rate")) {$    return;$  }$  rateAttribute=prosodyElement.getAttribute("rate");$  Pattern p=Pattern.compile("[+|-]\\d+%");$  Matcher m=p.matcher(rateAttribute);$  if (m.find()) {$    double percentage=new Integer(rateAttribute.substring(1,rateAttribute.length() - 1)).doubleValue();$    if (rateAttribute.startsWith("+")) {$      setSpeechRateSpecifications(nl,percentage,-1.0);$    }$ else {$      setSpeechRateSpecifications(nl,percentage,+1.0);$    }$  }$}$
public static int needInteger(String property) throws NoSuchPropertyException {$  String value=getProperty(property);$  if (value == null) {$    throw new NoSuchPropertyException("Missing property `" + property + "' in configuration files");$  }$  try {$    return Integer.decode(value).intValue();$  }$ catch (  NumberFormatException e) {$    throw new NoSuchPropertyException("Integer property `" + property + "' in configuration files has wrong value `"+ value+ "'");$  }$}$
public Response<?> response(){$  return response;$}$
public void updateResize(NlComponent child,Rectangle newBounds,int modifierMask){$  mySnap=(modifierMask & InputEvent.SHIFT_MASK) == 0;$  myBounds=newBounds;$  clearSuggestions();$  @SuppressWarnings("UnnecessaryLocalVariable") Rectangle b=newBounds;$  Segment hEdge=null;$  Segment vEdge=null;$  String childId=child.getId();$  if (myHorizontalEdgeType == SegmentType.TOP) {$    hEdge=new Segment(b.y,b.x,x2(b),child,childId,myHorizontalEdgeType,NO_MARGIN);$  }$ else   if (myHorizontalEdgeType == SegmentType.BOTTOM) {$    hEdge=new Segment(y2(b),b.x,x2(b),child,childId,myHorizontalEdgeType,NO_MARGIN);$  }$ else {$    assert myHorizontalEdgeType == null;$  }$  if (myVerticalEdgeType != null && myTextDirection.isLeftSegment(myVerticalEdgeType)) {$    vEdge=new Segment(b.x,b.y,y2(b),child,childId,myVerticalEdgeType,NO_MARGIN);$  }$ else   if (myVerticalEdgeType != null && myTextDirection.isRightSegment(myVerticalEdgeType)) {$    vEdge=new Segment(x2(b),b.y,y2(b),child,childId,myVerticalEdgeType,NO_MARGIN);$  }$ else {$    assert myVerticalEdgeType == null;$  }$  myTopMargin=myBottomMargin=myLeftMargin=myRightMargin=0;$  if (hEdge != null && myHorizontalEdges.size() > 0) {$    myHorizontalSuggestions=findClosest(hEdge,myHorizontalEdges);$    Match match=pickBestMatch(myHorizontalSuggestions);$    if (match != null && (!mySnap || abs(match.delta) < MAX_MATCH_DISTANCE)) {$      if (myHorizontalDeps.contains(match.edge.component)) {$        match.cycle=true;$      }$      snapHorizontal(hEdge,match.edge.at,newBounds);$      if (hEdge.edgeType == SegmentType.TOP) {$        myCurrentTopMatch=match;$      }$ else       if (hEdge.edgeType == SegmentType.BOTTOM) {$        myCurrentBottomMatch=match;$      }$ else {$        assert hEdge.edgeType == SegmentType.CENTER_HORIZONTAL || hEdge.edgeType == SegmentType.BASELINE : hEdge;$        myCurrentTopMatch=match;$      }$    }$  }$  if (vEdge != null && myVerticalEdges.size() > 0) {$    myVerticalSuggestions=findClosest(vEdge,myVerticalEdges);$    Match match=pickBestMatch(myVerticalSuggestions);$    if (match != null && (!mySnap || abs(match.delta) < MAX_MATCH_DISTANCE)) {$      if (myVerticalDeps.contains(match.edge.component)) {$        match.cycle=true;$      }$      snapVertical(vEdge,match.edge.at,newBounds);$      if (myTextDirection.isLeftSegment(vEdge.edgeType)) {$        myCurrentLeftMatch=match;$      }$ else       if (myTextDirection.isRightSegment(vEdge.edgeType)) {$        myCurrentRightMatch=match;$      }$ else {$        assert vEdge.edgeType == SegmentType.CENTER_VERTICAL;$        myCurrentLeftMatch=match;$      }$    }$  }$  checkCycles();$}$
public boolean isApplicable(){$  return getViewer().getSelectedComponent() == getViewer().getPcoaTab();$}$
public OpenIntToFieldHashMap(final Field<T> field,final T missingEntries){$  this(field,DEFAULT_EXPECTED_SIZE,missingEntries);$}$
<T>T onSum(String tableName,String column,String[] conditions,Class<T> type){$  return mathQuery(tableName,new String[]{"sum(" + column + ")"},conditions,type);$}$
public void deleteItem(String sItem){$  for (int iNGramSize=MinSize; iNGramSize <= MaxSize; iNGramSize++) {$    UniqueVertexGraph gCurLevel=getGraphLevelByNGramSize(iNGramSize);$    Vertex v=utils.locateVertexInGraph(gCurLevel,sItem);$    if (v == null)     return;$    try {$      gCurLevel.remove(v);$    }$ catch (    Exception e) {$      e.printStackTrace();$    }$  }$}$
public StdoutReporter(){$  this.stream=System.out;$}$
public Builder requestTimeoutMs(long requestTimeoutMs){$  this._requestTimeoutMs=requestTimeoutMs;$  return this;$}$
public void addComplexTypeDecl(XSComplexTypeDecl decl,SimpleLocator locator){$  if (fCTCount == fComplexTypeDecls.length) {$    fComplexTypeDecls=resize(fComplexTypeDecls,fCTCount + INC_SIZE);$    fCTLocators=resize(fCTLocators,fCTCount + INC_SIZE);$  }$  fCTLocators[fCTCount]=locator;$  fComplexTypeDecls[fCTCount++]=decl;$}$
public static FixedWidthTextTableSchema load(String loc) throws DataIOException {$  try {$    InputStream is=IOLib.streamFromString(loc);$    if (is == null)     return null;$    FixedWidthTextTableSchema fws=new FixedWidthTextTableSchema();$    BufferedReader br=new BufferedReader(new InputStreamReader(is));$    String line;$    while ((line=br.readLine()) != null) {$      String[] tok=line.split("\t");$      fws.addColumn(tok[0],Integer.parseInt(tok[1]));$    }$    return fws;$  }$ catch (  Exception e) {$    throw new DataIOException(e);$  }$}$
public static String toPercentString(Number number,int scale,int roundingMode){$  if (!(number instanceof BigDecimal)) {$    number=new BigDecimal(number.doubleValue());$  }$  BigDecimal bd=(BigDecimal)number;$  bd=bd.multiply(new BigDecimal(100.0)).setScale(scale,roundingMode);$  return (bd.toString() + "%");$}$
public ScanResult scanPokemon(Bitmap pokemonImage,int trainerLevel){$  double estimatedPokemonLevel=getPokemonLevelFromImg(pokemonImage,trainerLevel);$  String pokemonName=getPokemonNameFromImg(pokemonImage);$  String candyName=getCandyNameFromImg(pokemonImage);$  Optional<Integer> pokemonHP=getPokemonHPFromImg(pokemonImage);$  Optional<Integer> pokemonCP=getPokemonCPFromImg(pokemonImage);$  Optional<Integer> pokemonCandyAmount=getCandyAmountFromImg(pokemonImage);$  Optional<Integer> pokemonUpgradeCost=getPokemonEvolutionCostFromImg(pokemonImage);$  return new ScanResult(estimatedPokemonLevel,pokemonName,candyName,pokemonHP,pokemonCP,pokemonCandyAmount,pokemonUpgradeCost);$}$
private FileHelper(){$}$
@Override public JsonObject convert(IFeatureRenderer renderer){$  RepresentationRenderer representationRenderer=(RepresentationRenderer)renderer;$  logger.info(RepresentationRendererKeys.REPRESENTATION_RENDERER);$  String value=null;$  String referenceValue=null;$  int index=-1;$  try {$    JsonObject jsonObject=new JsonObject();$    JsonObject rendererObject=new JsonObject();$    JsonArray fieldArray=new JsonArray();$    IName dataSourceName=representationRenderer.getDataSourceName();$    if (dataSourceName != null) {$      rendererObject.addProperty(RepresentationRendererKeys.DATA_SOURCE_NAME,dataSourceName.getNameString());$    }$    JsonObject invalidRuleColour=CommonObjects.createColour(representationRenderer.getInvalidRuleColor());$    if (invalidRuleColour != null) {$      rendererObject.add(RepresentationRendererKeys.INVALID_RULE_COLOUR,invalidRuleColour);$    }$    JsonObject invisibleRuleColour=CommonObjects.createColour(representationRenderer.getInvisibleColor());$    if (invisibleRuleColour != null) {$      rendererObject.add(RepresentationRendererKeys.INVISIBLE_RULE_COLOUR,invisibleRuleColour);$    }$    rendererObject.addProperty(RepresentationRendererKeys.RELATIVE_BASE,representationRenderer.getRelativeBase());$    JsonObject representationClassObject=getRepresentationClass(representationRenderer.getRepresentationClass());$    if (representationClassObject != null) {$      rendererObject.add(RepresentationRendererKeys.REPRESENTATION_CLASS,representationClassObject);$    }$    for (int fieldIndex=0; fieldIndex < representationRenderer.getFieldCount(); fieldIndex++) {$      JsonObject jsonValueObject=new JsonObject();$      jsonValueObject.addProperty(RepresentationRendererKeys.FIELD_NAME,representationRenderer.getField(fieldIndex));$      ITable table=null;$      jsonValueObject.addProperty(RepresentationRendererKeys.WHERE_CLAUSE,representationRenderer.getWhereClause(fieldIndex,table));$      fieldArray.add(jsonValueObject);$    }$    rendererObject.addProperty(RepresentationRendererKeys.DRAW_INVALID_RULE,representationRenderer.isDrawInvalidRule());$    rendererObject.addProperty(RepresentationRendererKeys.DRAW_INVISIBLE,representationRenderer.isDrawInvisible());$    rendererObject.addProperty(CommonRendererKeys.GRADUATED_SYMBOLS,representationRenderer.isSymbolsAreGraduated());$    rendererObject.add(RepresentationRendererKeys.FIELDS,fieldArray);$    jsonObject.add(RepresentationRendererKeys.REPRESENTATION_RENDERER,rendererObject);$    return jsonObject;$  }$ catch (  AutomationException e) {$    logger.error(String.format("%s %s %d",value,referenceValue,index));$    e.printStackTrace();$  }$catch (  IOException e) {$    e.printStackTrace();$    logger.error(e.getMessage());$  }$  return null;$}$
public static DoubleStream shiftingWindowAveragingDouble(DoubleStream doubleStream,int rollingFactor){$  Objects.requireNonNull(doubleStream);$  RollingOfDoubleSpliterator ofDoubleSpliterator=RollingOfDoubleSpliterator.of(doubleStream.spliterator(),rollingFactor);$  return StreamSupport.stream(ofDoubleSpliterator,doubleStream.isParallel()).onClose(null).mapToDouble(null);$}$
public void onFinish(){$}$
public float determinant(){$  float fA0=m00 * m11 - m01 * m10;$  float fA1=m00 * m12 - m02 * m10;$  float fA2=m00 * m13 - m03 * m10;$  float fA3=m01 * m12 - m02 * m11;$  float fA4=m01 * m13 - m03 * m11;$  float fA5=m02 * m13 - m03 * m12;$  float fB0=m20 * m31 - m21 * m30;$  float fB1=m20 * m32 - m22 * m30;$  float fB2=m20 * m33 - m23 * m30;$  float fB3=m21 * m32 - m22 * m31;$  float fB4=m21 * m33 - m23 * m31;$  float fB5=m22 * m33 - m23 * m32;$  float fDet=fA0 * fB5 - fA1 * fB4 + fA2 * fB3 + fA3 * fB2 - fA4 * fB1 + fA5 * fB0;$  return fDet;$}$
public boolean isApplicable(){$  return getViewer() instanceof MainViewer && getDir().getDocument().getNumberOfSamples() > 0;$}$
public short remove(int offset){$  short old=get(offset);$  remove(offset,1);$  return old;$}$
@Override public String toString(){$  return getClass().getSimpleName() + " [Normal: " + normal+ " - Constant: "+ constant+ "]";$}$
@Override public boolean validateLabel(String label){$  Objects.requireNonNull(label,"label cannot be null");$  return !labels.contains(label);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillToggleCost_ME_TO_SELF(String skillname){$  return new SM_SYSTEM_MESSAGE(1200334,skillname);$}$
public static SM_SYSTEM_MESSAGE STR_BINDSTONE_WARNING_REMAIN_TIME(String durationtime0){$  return new SM_SYSTEM_MESSAGE(1400169,durationtime0);$}$
private void updateTexts(DocumentEvent e){$  Document doc=e.getDocument();$  if (doc == projectNameTextField.getDocument() || doc == projectLocationTextField.getDocument()) {$    String projectName=projectNameTextField.getText();$    String projectFolder=projectLocationTextField.getText();$    createdFolderTextField.setText(projectFolder + File.separatorChar + projectName);$  }$  panel.fireChangeEvent();$}$
public TextPartsBuilder addTextPart(@StringRes int textRes){$  return addTextPart(mContext.getText(textRes));$}$
public short[] toNativeArray(){$  return toNativeArray(0,_pos);$}$
private void checkQuartiles(RealDistribution dist,int sampleSize,double tolerance){$  final long seed=1000;$  RandomDataGenerator randomDataGenerator=RandomDataGenerator.of(new MersenneTwister(seed));$  final RandomPercentile randomPercentile=new RandomPercentile(RandomPercentile.DEFAULT_EPSILON,randomDataGenerator,50d);$  for (int i=0; i < sampleSize; i++) {$    randomPercentile.increment(randomDataGenerator.nextDeviate(dist));$  }$  final double q1=randomPercentile.getResult(25);$  final double q2=randomPercentile.getResult();$  final double q3=randomPercentile.getResult(75);$  randomDataGenerator.setSeed(seed);$  double v;$  double ct1=0;$  double ct2=0;$  double ct3=0;$  for (int i=0; i < sampleSize; i++) {$    v=randomDataGenerator.nextDeviate(dist);$    if (v < q1) {$      ct1++;$      ct2++;$      ct3++;$    }$ else     if (v < q2) {$      ct2++;$      ct3++;$    }$ else     if (v < q3) {$      ct3++;$    }$  }$  assertEquals(0.25,ct1 / sampleSize,tolerance);$  assertEquals(0.5,ct2 / sampleSize,tolerance);$  assertEquals(0.75,ct3 / sampleSize,tolerance);$}$
@AfterClass public static void teardownClass(){$  System.clearProperty("http.proxyHost");$  System.clearProperty("http.proxyPort");$  System.clearProperty("http.nonProxyHosts");$  System.clearProperty("https.proxyHost");$  System.clearProperty("https.proxyPort");$  System.clearProperty("ftp.proxyHost");$  System.clearProperty("ftp.nonProxyHosts");$  System.clearProperty("ftp.proxyPort");$  System.clearProperty("socksProxyHost");$  System.clearProperty("socksProxyPort");$}$
public boolean isLongPressDragEnabled(){$  return mDefaultItemTouchHelperCallback.isLongPressDragEnabled();$}$
public static Map<String,Object> ccProcessor(DispatchContext dctx,Map<String,? extends Object> context){$  Delegator delegator=dctx.getDelegator();$  GenericValue paymentPref=(GenericValue)context.get("orderPaymentPreference");$  GenericValue authTrans=(GenericValue)context.get("authTrans");$  String orderId=(String)context.get("orderId");$  String cvv2=(String)context.get("cardSecurityCode");$  BigDecimal processAmount=(BigDecimal)context.get("processAmount");$  GenericValue party=(GenericValue)context.get("billToParty");$  GenericValue cc=(GenericValue)context.get("creditCard");$  GenericValue payPalPaymentMethod=(GenericValue)context.get("payPalPaymentMethod");$  GenericValue ps=(GenericValue)context.get("billingAddress");$  String paymentGatewayConfigId=(String)context.get("paymentGatewayConfigId");$  String configString=(String)context.get("paymentConfig");$  if (configString == null) {$    configString="payment.properties";$  }$  boolean isPayPal=false;$  if ("EXT_PAYPAL".equals(paymentPref.getString("paymentMethodTypeId"))) {$    isPayPal=true;$  }$  Map<String,String> data=FastMap.newInstance();$  boolean isReAuth=false;$  if (isPayPal) {$    data.put("TRXTYPE","A");$    data.put("TENDER","P");$    data.put("ORIGID",payPalPaymentMethod.getString("transactionId"));$  }$ else {$    if (authTrans == null) {$      authTrans=PaymentGatewayServices.getAuthTransaction(paymentPref);$    }$    data.put("COMMENT1",orderId);$    data.put("PONUM",orderId);$    data.put("CUSTCODE",party.getString("partyId"));$    if (comparePaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"preAuth",configString,"payment.verisign.preAuth","Y")) {$      data.put("TRXTYPE","A");$      if (authTrans != null) {$        String refNum=authTrans.getString("referenceNum");$        data.put("ORIGID",refNum);$        isReAuth=true;$      }$    }$ else {$      data.put("TRXTYPE","S");$    }$    data.put("TENDER","C");$    if (UtilValidate.isNotEmpty(cvv2)) {$      data.put("CVV2",cvv2);$    }$    data.put("ACCT",cc.getString("cardNumber"));$    String name=cc.getString("firstNameOnCard") + " " + cc.getString("lastNameOnCard");$    data.put("FIRSTNAME",cc.getString("firstNameOnCard"));$    data.put("LASTNAME",cc.getString("lastNameOnCard"));$    data.put("COMMENT2",name);$    if (cc.get("expireDate") != null) {$      String exp=cc.getString("expireDate");$      String expDate=exp.substring(0,2);$      expDate=expDate + exp.substring(exp.length() - 2);$      data.put("EXPDATE",expDate);$    }$    if (ps != null) {$      String street=ps.getString("address1") + ((UtilValidate.isNotEmpty(ps.getString("address2"))) ? " " + ps.getString("address2") : "");$      data.put("STREET" + "[" + street.length() + "]",street);$      data.put("ZIP",ps.getString("postalCode"));$    }$  }$  data.put("AMT",processAmount.toString());$  PayflowAPI pfp=init(delegator,paymentGatewayConfigId,configString,context);$  StringBuilder params=makeBaseParams(delegator,paymentGatewayConfigId,configString);$  params.append("&").append(parseContext(data));$  String resp;$  if (!comparePaymentGatewayConfigValue(delegator,paymentGatewayConfigId,"enableTransmit",configString,"payment.verisign.enable_transmit","false")) {$    resp=pfp.submitTransaction(params.toString(),pfp.generateRequestId());$  }$ else {$    resp="RESULT=0&AUTHCODE=T&PNREF=" + (new Date()).getTime() + "&RESPMSG=Testing";$  }$  if (Debug.verboseOn()) {$    Debug.logVerbose("Response from Verisign: " + resp,module);$  }$  if (isPayPal) {$    resp+="&AVSADDR=" + payPalPaymentMethod.getString("avsAddr") + "&AVSZIP="+ payPalPaymentMethod.getString("avsZip");$  }$  Map<String,Object> result=ServiceUtil.returnSuccess();$  parseAuthResponse(delegator,paymentGatewayConfigId,resp,result,configString,isReAuth,isPayPal);$  result.put("processAmount",processAmount);$  return result;$}$
public boolean runAfter(java.util.List tasks,int size){$  return false;$}$
@SuppressWarnings("rawtypes") public Expression isInstance(Value obj,Class c){$  throw new RuntimeException("Unsupported operation.");$}$
public static ViewAction checkDescendantViewAction(Matcher<View> viewMatcher,ViewAssertion viewAssertion){$  return ViewActions.actionWithAssertions(new CheckDescendantViewAction(viewMatcher,viewAssertion));$}$
private Bitmap replaceColors(Bitmap srcBitmap,boolean mutateSrc,int keepCr,int keepCg,int keepCb,int replaceColor,int distance,boolean simpleBG){$  int[] allpixels=new int[srcBitmap.getHeight() * srcBitmap.getWidth()];$  srcBitmap.getPixels(allpixels,0,srcBitmap.getWidth(),0,0,srcBitmap.getWidth(),srcBitmap.getHeight());$  int bgColor=replaceColor;$  int distanceSq=distance * distance;$  if (simpleBG) {$    bgColor=allpixels[0];$  }$  for (int i=0; i < allpixels.length; i++) {$    if (allpixels[i] == bgColor) {$      allpixels[i]=replaceColor;$      continue;$    }$    int rDiff=keepCr - Color.red(allpixels[i]);$    int gDiff=keepCg - Color.green(allpixels[i]);$    int bDiff=keepCb - Color.blue(allpixels[i]);$    int dSq=rDiff * rDiff + gDiff * gDiff + bDiff * bDiff;$    if (dSq > distanceSq) {$      allpixels[i]=replaceColor;$    }$  }$  Bitmap dstBitmap;$  if (mutateSrc) {$    dstBitmap=srcBitmap;$  }$ else {$    dstBitmap=Bitmap.createBitmap(srcBitmap.getWidth(),srcBitmap.getHeight(),srcBitmap.getConfig());$  }$  dstBitmap.setPixels(allpixels,0,srcBitmap.getWidth(),0,0,srcBitmap.getWidth(),srcBitmap.getHeight());$  return dstBitmap;$}$
public boolean intersects(final S1Interval y){$  if (isEmpty() || y.isEmpty()) {$    return false;$  }$  if (isInverted()) {$    return y.isInverted() || y.lo() <= hi() || y.hi() >= lo();$  }$ else {$    if (y.isInverted()) {$      return y.lo() <= hi() || y.hi() >= lo();$    }$    return y.lo() <= hi() && y.hi() >= lo();$  }$}$
public MarketReorderAlbumsQuery before(Integer value){$  return unsafeParam("before",value);$}$
public void startFragment(String fragmentClass,Bundle args){$  Intent intent=new Intent(Intent.ACTION_MAIN);$  intent.setClass(this,getClass());$  intent.putExtra(EXTRA_SHOW_FRAGMENT,fragmentClass);$  intent.putExtra(EXTRA_SHOW_FRAGMENT_ARGUMENTS,args);$  startActivity(intent);$}$
public static void o(Z a){$  o(a,Parameters.OutputFieldWidth,Parameters.OutputFracPlaces);$}$
public synchronized SlabRef detach(){$  if (!isAttached()) {$    return null;$  }$  SlabRef slab=_slab;$  _slab=null;$  _slabExpiresAt=0;$  return slab;$}$
public PolarLocationAnimator(String group){$  super(group);$}$
public Counter<E> asCounter(){$  PriorityQueue<E> pq=clone();$  Counter<E> counter=new Counter<>();$  while (pq.hasNext()) {$    double priority=pq.getPriority();$    E element=pq.next();$    counter.incrementCount(element,priority);$  }$  return counter;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_A_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200963,skilltarget,skillcaster,skillname);$}$
public AwsIotCompletion(String topic,AWSIotQos qos,byte[] payload,long timeout){$  super(topic,qos,payload);$  this.timeout=timeout;$  this.request=null;$  this.isAsync=false;$}$
public void initWithSaveInstanceState(Bundle savedInstanceState){$  this.savedInstanceState=savedInstanceState;$}$
public static TestLookupDimensionConfig buildStandardLookupDimensionConfig(TestApiDimensionName dimensionName,List<String> namespaces){$  return new TestLookupDimensionConfig(buildStandardDimensionConfig(dimensionName),namespaces);$}$
@deprecated public boolean isFrozen(){$  return this._frozen;$}$
public void delete() throws IOException {$  close();$  Util.deleteContents(directory);$}$
@SubscribeEvent public void onRender(RenderTickEvent event){$  if (event.phase == Phase.START) {$    resizeIfNeeded();$  }$}$
public synchronized boolean holdsLock(String tableName,long transNum,LockType lockType){$  return this.databaseLocked && this.databaseTransactionOwner == transNum;$}$
public static String toString(long l){$  StringBuilder sb=new StringBuilder();$  for (int i=0; i < 11; i++) {$    int t=(int)(l & 0x3f);$    l=l >> 6;$    sb.append(chars[t]);$  }$  return sb.reverse().toString();$}$
private static IConfigElement categoryElement(String category,String name,String tooltip_key){$  return new DummyConfigElement.DummyCategoryElement(name,tooltip_key,new ConfigElement(BWConfig.config.getCategory(category)).getChildElements());$}$
public void reset(){$  get();$}$
public static Map<String,Object> entityMaintPermCheck(DispatchContext dctx,Map<String,? extends Object> context){$  GenericValue userLogin=(GenericValue)context.get("userLogin");$  Locale locale=(Locale)context.get("locale");$  Security security=dctx.getSecurity();$  Map<String,Object> resultMap=null;$  if (security.hasPermission("ENTITY_MAINT",userLogin)) {$    resultMap=ServiceUtil.returnSuccess();$    resultMap.put("hasPermission",true);$  }$ else {$    resultMap=ServiceUtil.returnFailure(UtilProperties.getMessage(resource,"WebtoolsPermissionError",locale));$    resultMap.put("hasPermission",false);$  }$  return resultMap;$}$
public static double mean(double[] data,int[] inds){$  double mean=0;$  for (int i=0; i < inds.length; i++) {$    if (Double.isNaN(data[inds[i]]))     throw new IllegalArgumentException("NaN not allowed in mean calculation");$    mean+=data[inds[i]];$  }$  mean/=inds.length;$  return mean;$}$
public ServerConfiguration killBookie(int index) throws Exception {$  if (index >= bs.size()) {$    throw new IOException("Bookie does not exist");$  }$  BookieServer server=bs.get(index);$  server.shutdown();$  stopAutoRecoveryService(server);$  bs.remove(server);$  return bsConfs.remove(index);$}$
public boolean isApplicable(){$  return getViewer() != null;$}$
public void remove(int offset,int length){$  if (offset < 0 || offset >= _pos) {$    throw new ArrayIndexOutOfBoundsException(offset);$  }$  if (offset == 0) {$    System.arraycopy(_data,length,_data,0,_pos - length);$  }$ else   if (_pos - length == offset) {$  }$ else {$    System.arraycopy(_data,offset + length,_data,offset,_pos - (offset + length));$  }$  _pos-=length;$}$
public static char[] toCharArray(InputStream is,String encoding) throws IOException {$  return toCharArray(is,Charsets.toCharset(encoding));$}$
public static JsonValue value(float value){$  if (Float.isInfinite(value) || Float.isNaN(value)) {$    throw new IllegalArgumentException("Infinite and NaN values not permitted in JSON");$  }$  return new JsonNumber(cutOffPointZero(Float.toString(value)));$}$
@Override public void mouseEntered(MouseEvent e){$}$
private boolean shouldGiveModelIdValue(String idName,Class<?> idType,long id){$  return idName != null && idType != null && id > 0;$}$
public static LocalDispatcher makeWebappDispatcher(ServletContext servletContext,Delegator delegator){$  if (delegator == null) {$    Debug.logError("[ContextFilter.init] ERROR: delegator not defined.",module);$    return null;$  }$  String dispatcherName=servletContext.getInitParameter("localDispatcherName");$  if (dispatcherName == null) {$    Debug.logError("No localDispatcherName specified in the web.xml file",module);$    dispatcherName=delegator.getDelegatorName();$  }$  LocalDispatcher dispatcher=ServiceContainer.getLocalDispatcher(dispatcherName,delegator);$  if (dispatcher == null) {$    Debug.logError("[ContextFilter.init] ERROR: dispatcher could not be initialized.",module);$  }$  return dispatcher;$}$
public SimpleMetricGroup(GroupName name){$  name_=name;$}$
public static Zmat uzmat(int m,int n) throws JampackException {$  Zmat zm=new Zmat(m,n);$  for (int i=0; i < m; i++) {$    for (int j=0; j < n; j++) {$      zm.re[i][j]=R.nextDouble();$      zm.im[i][j]=R.nextDouble();$    }$  }$  return zm;$}$
public void check(){$  for (  Object object : pag.allocSources()) {$    handleAllocNode((AllocNode)object);$  }$  for (  Object object : pag.simpleSources()) {$    handleSimples((VarNode)object);$  }$  for (  Object object : pag.loadSources()) {$    handleLoads((FieldRefNode)object);$  }$  for (  Object object : pag.storeSources()) {$    handleStores((VarNode)object);$  }$  for (  Object object : pag.loadSources()) {$    final FieldRefNode fr=(FieldRefNode)object;$    fieldToBase.put(fr.getField(),fr.getBase());$  }$  for (  Object object : pag.storeInvSources()) {$    final FieldRefNode fr=(FieldRefNode)object;$    fieldToBase.put(fr.getField(),fr.getBase());$  }$  for (  final VarNode src : pag.getVarNodeNumberer()) {$    for (    FieldRefNode fr : src.getAllFieldRefs()) {$      for (      VarNode dst : fieldToBase.get(fr.getField())) {$        if (!src.getP2Set().hasNonEmptyIntersection(dst.getP2Set()))         continue;$        FieldRefNode fr2=dst.dot(fr.getField());$        if (fr2.getReplacement() != fr.getReplacement()) {$          G.v().out.println("Check failure: " + fr + " should be merged with "+ fr2);$        }$      }$    }$  }$}$
public static void loadResizedImage(final Context _context,final ImageView _imageView,final String _imageUrl,final int _placeHolderResource,final int _width,final int _height){$  getBitmapLoader(_context,_imageUrl,_placeHolderResource).override(_width,_height).into(_imageView);$}$
public ComponentCursor queryComponentCreated(long id){$  QueryHelper qh=new QueryHelper();$  qh.Columns=null;$  qh.Table=S.TABLE_COMPONENTS;$  qh.Selection="c." + S.COLUMN_COMPONENTS_CREATED_ITEM_ID + " = ? ";$  qh.SelectionArgs=new String[]{"" + id};$  qh.GroupBy=null;$  qh.Having=null;$  qh.OrderBy="c.type";$  qh.Limit=null;$  return new ComponentCursor(wrapJoinHelper(builderComponent(),qh));$}$
public static final Future<?> newFollowingToTargetCheckTask(final QuestEnv env,Npc npc,int npcTargetId){$  SpawnSearchResult searchResult=DataManager.SPAWNS_DATA2.getFirstSpawnByNpcId(npc.getWorldId(),npcTargetId);$  if (searchResult == null) {$    throw new IllegalArgumentException("Supplied npc doesn't exist: " + npcTargetId);$  }$  return ThreadPoolManager.getInstance().scheduleAtFixedRate(new FollowingNpcCheckTask(env,new CoordinateDestinationChecker(npc,searchResult.getSpot().getX(),searchResult.getSpot().getY(),searchResult.getSpot().getZ())),1000,1000);$}$
public IteratorBuilder eventSessionConfig(EventSessionConfig eventSessionConfig){$  this.iteratorConfig.setEventSessionConfig(eventSessionConfig);$  return this;$}$
private void createUI(){$  readConfigFile(null,this,"geoserver/GeoServerRandomFill.xml");$}$
public static final SM_SYSTEM_MESSAGE STR_MSG_UNEQUIP_RANKITEM_TIMER_10M(int value0){$  return new SM_SYSTEM_MESSAGE(1401327,new DescriptionId(value0));$}$
protected void initializePageContainer(){$  Composite General_OptionsChild=General_OptionsCreate(getPageContainer());$  Composite Input_OptionsChild=Input_OptionsCreate(getPageContainer());$  Composite Output_OptionsChild=Output_OptionsCreate(getPageContainer());$  Composite Processing_OptionsChild=Processing_OptionsCreate(getPageContainer());$  Composite Application_Mode_OptionsChild=Application_Mode_OptionsCreate(getPageContainer());$  Composite Input_Attribute_OptionsChild=Input_Attribute_OptionsCreate(getPageContainer());$  Composite Annotation_OptionsChild=Annotation_OptionsCreate(getPageContainer());$  Composite Miscellaneous_OptionsChild=Miscellaneous_OptionsCreate(getPageContainer());$  Composite jbChild=jbCreate(getPageContainer());$  Composite jjChild=jjCreate(getPageContainer());$  Composite wjppChild=wjppCreate(getPageContainer());$  Composite wsppChild=wsppCreate(getPageContainer());$  Composite cgChild=cgCreate(getPageContainer());$  Composite wstpChild=wstpCreate(getPageContainer());$  Composite wsopChild=wsopCreate(getPageContainer());$  Composite wjtpChild=wjtpCreate(getPageContainer());$  Composite wjopChild=wjopCreate(getPageContainer());$  Composite wjapChild=wjapCreate(getPageContainer());$  Composite shimpleChild=shimpleCreate(getPageContainer());$  Composite stpChild=stpCreate(getPageContainer());$  Composite sopChild=sopCreate(getPageContainer());$  Composite jtpChild=jtpCreate(getPageContainer());$  Composite jopChild=jopCreate(getPageContainer());$  Composite japChild=japCreate(getPageContainer());$  Composite gbChild=gbCreate(getPageContainer());$  Composite gopChild=gopCreate(getPageContainer());$  Composite bbChild=bbCreate(getPageContainer());$  Composite bopChild=bopCreate(getPageContainer());$  Composite tagChild=tagCreate(getPageContainer());$  Composite dbChild=dbCreate(getPageContainer());$  Composite jbjb_lsChild=jbjb_lsCreate(getPageContainer());$  Composite jbjb_aChild=jbjb_aCreate(getPageContainer());$  Composite jbjb_uleChild=jbjb_uleCreate(getPageContainer());$  Composite jbjb_trChild=jbjb_trCreate(getPageContainer());$  Composite jbjb_ulpChild=jbjb_ulpCreate(getPageContainer());$  Composite jbjb_lnsChild=jbjb_lnsCreate(getPageContainer());$  Composite jbjb_cpChild=jbjb_cpCreate(getPageContainer());$  Composite jbjb_daeChild=jbjb_daeCreate(getPageContainer());$  Composite jbjb_cp_uleChild=jbjb_cp_uleCreate(getPageContainer());$  Composite jbjb_lpChild=jbjb_lpCreate(getPageContainer());$  Composite jbjb_neChild=jbjb_neCreate(getPageContainer());$  Composite jbjb_uceChild=jbjb_uceCreate(getPageContainer());$  Composite jbjb_ttChild=jbjb_ttCreate(getPageContainer());$  Composite jjjj_lsChild=jjjj_lsCreate(getPageContainer());$  Composite jjjj_aChild=jjjj_aCreate(getPageContainer());$  Composite jjjj_uleChild=jjjj_uleCreate(getPageContainer());$  Composite jjjj_trChild=jjjj_trCreate(getPageContainer());$  Composite jjjj_ulpChild=jjjj_ulpCreate(getPageContainer());$  Composite jjjj_lnsChild=jjjj_lnsCreate(getPageContainer());$  Composite jjjj_cpChild=jjjj_cpCreate(getPageContainer());$  Composite jjjj_daeChild=jjjj_daeCreate(getPageContainer());$  Composite jjjj_cp_uleChild=jjjj_cp_uleCreate(getPageContainer());$  Composite jjjj_lpChild=jjjj_lpCreate(getPageContainer());$  Composite jjjj_neChild=jjjj_neCreate(getPageContainer());$  Composite jjjj_uceChild=jjjj_uceCreate(getPageContainer());$  Composite cgcg_chaChild=cgcg_chaCreate(getPageContainer());$  Composite cgcg_sparkChild=cgcg_sparkCreate(getPageContainer());$  Composite cgcg_paddleChild=cgcg_paddleCreate(getPageContainer());$  Composite cgSpark_General_OptionsChild=cgSpark_General_OptionsCreate(getPageContainer());$  Composite cgSpark_Pointer_Assignment_Graph_Building_OptionsChild=cgSpark_Pointer_Assignment_Graph_Building_OptionsCreate(getPageContainer());$  Composite cgSpark_Pointer_Assignment_Graph_Simplification_OptionsChild=cgSpark_Pointer_Assignment_Graph_Simplification_OptionsCreate(getPageContainer());$  Composite cgSpark_Points_To_Set_Flowing_OptionsChild=cgSpark_Points_To_Set_Flowing_OptionsCreate(getPageContainer());$  Composite cgSpark_Output_OptionsChild=cgSpark_Output_OptionsCreate(getPageContainer());$  Composite cgContext_sensitive_refinementChild=cgContext_sensitive_refinementCreate(getPageContainer());$  Composite cgGeometric_context_sensitive_analysis_from_ISSTA_2011Child=cgGeometric_context_sensitive_analysis_from_ISSTA_2011Create(getPageContainer());$  Composite cgPaddle_General_OptionsChild=cgPaddle_General_OptionsCreate(getPageContainer());$  Composite cgPaddle_Context_Sensitivity_OptionsChild=cgPaddle_Context_Sensitivity_OptionsCreate(getPageContainer());$  Composite cgPaddle_Pointer_Assignment_Graph_Building_OptionsChild=cgPaddle_Pointer_Assignment_Graph_Building_OptionsCreate(getPageContainer());$  Composite cgPaddle_Points_To_Set_Flowing_OptionsChild=cgPaddle_Points_To_Set_Flowing_OptionsCreate(getPageContainer());$  Composite cgPaddle_Output_OptionsChild=cgPaddle_Output_OptionsCreate(getPageContainer());$  Composite wjtpwjtp_mhpChild=wjtpwjtp_mhpCreate(getPageContainer());$  Composite wjtpwjtp_tnChild=wjtpwjtp_tnCreate(getPageContainer());$  Composite wjtpwjtp_rdcChild=wjtpwjtp_rdcCreate(getPageContainer());$  Composite wjopwjop_smbChild=wjopwjop_smbCreate(getPageContainer());$  Composite wjopwjop_siChild=wjopwjop_siCreate(getPageContainer());$  Composite wjapwjap_raChild=wjapwjap_raCreate(getPageContainer());$  Composite wjapwjap_umtChild=wjapwjap_umtCreate(getPageContainer());$  Composite wjapwjap_uftChild=wjapwjap_uftCreate(getPageContainer());$  Composite wjapwjap_tqtChild=wjapwjap_tqtCreate(getPageContainer());$  Composite wjapwjap_cggChild=wjapwjap_cggCreate(getPageContainer());$  Composite wjapwjap_purityChild=wjapwjap_purityCreate(getPageContainer());$  Composite sopsop_cpfChild=sopsop_cpfCreate(getPageContainer());$  Composite jopjop_cseChild=jopjop_cseCreate(getPageContainer());$  Composite jopjop_bcmChild=jopjop_bcmCreate(getPageContainer());$  Composite jopjop_lcmChild=jopjop_lcmCreate(getPageContainer());$  Composite jopjop_cpChild=jopjop_cpCreate(getPageContainer());$  Composite jopjop_cpfChild=jopjop_cpfCreate(getPageContainer());$  Composite jopjop_cbfChild=jopjop_cbfCreate(getPageContainer());$  Composite jopjop_daeChild=jopjop_daeCreate(getPageContainer());$  Composite jopjop_nceChild=jopjop_nceCreate(getPageContainer());$  Composite jopjop_uce1Child=jopjop_uce1Create(getPageContainer());$  Composite jopjop_ubf1Child=jopjop_ubf1Create(getPageContainer());$  Composite jopjop_uce2Child=jopjop_uce2Create(getPageContainer());$  Composite jopjop_ubf2Child=jopjop_ubf2Create(getPageContainer());$  Composite jopjop_uleChild=jopjop_uleCreate(getPageContainer());$  Composite japjap_npcChild=japjap_npcCreate(getPageContainer());$  Composite japjap_npcolorerChild=japjap_npcolorerCreate(getPageContainer());$  Composite japjap_abcChild=japjap_abcCreate(getPageContainer());$  Composite japjap_profilingChild=japjap_profilingCreate(getPageContainer());$  Composite japjap_seaChild=japjap_seaCreate(getPageContainer());$  Composite japjap_fieldrwChild=japjap_fieldrwCreate(getPageContainer());$  Composite japjap_cgtaggerChild=japjap_cgtaggerCreate(getPageContainer());$  Composite japjap_parityChild=japjap_parityCreate(getPageContainer());$  Composite japjap_patChild=japjap_patCreate(getPageContainer());$  Composite japjap_lvtaggerChild=japjap_lvtaggerCreate(getPageContainer());$  Composite japjap_rdtaggerChild=japjap_rdtaggerCreate(getPageContainer());$  Composite japjap_cheChild=japjap_cheCreate(getPageContainer());$  Composite japjap_umtChild=japjap_umtCreate(getPageContainer());$  Composite japjap_litChild=japjap_litCreate(getPageContainer());$  Composite japjap_aetChild=japjap_aetCreate(getPageContainer());$  Composite japjap_dmtChild=japjap_dmtCreate(getPageContainer());$  Composite gbgb_a1Child=gbgb_a1Create(getPageContainer());$  Composite gbgb_cfChild=gbgb_cfCreate(getPageContainer());$  Composite gbgb_a2Child=gbgb_a2Create(getPageContainer());$  Composite gbgb_uleChild=gbgb_uleCreate(getPageContainer());$  Composite bbbb_lsoChild=bbbb_lsoCreate(getPageContainer());$  Composite bbbb_phoChild=bbbb_phoCreate(getPageContainer());$  Composite bbbb_uleChild=bbbb_uleCreate(getPageContainer());$  Composite bbbb_lpChild=bbbb_lpCreate(getPageContainer());$  Composite tagtag_lnChild=tagtag_lnCreate(getPageContainer());$  Composite tagtag_anChild=tagtag_anCreate(getPageContainer());$  Composite tagtag_depChild=tagtag_depCreate(getPageContainer());$  Composite tagtag_fieldrwChild=tagtag_fieldrwCreate(getPageContainer());$  Composite dbdb_transformationsChild=dbdb_transformationsCreate(getPageContainer());$  Composite dbdb_renamerChild=dbdb_renamerCreate(getPageContainer());$  Composite dbdb_deobfuscateChild=dbdb_deobfuscateCreate(getPageContainer());$  Composite dbdb_force_recompileChild=dbdb_force_recompileCreate(getPageContainer());$  addOtherPages(getPageContainer());$  initializeRadioGroups();$  initializeEnableGroups();$}$
public IntStringTranslator(String[] strings){$  list=new ArrayList<String>(Arrays.asList(strings));$  map=new HashMap<String,Integer>();$  for (int i=0; i < strings.length; i++) {$    map.put(strings[i],i);$  }$}$
public static <K,R>Observable<R> switchCase(Callable<? extends K> caseSelector,Map<? super K,? extends ObservableSource<? extends R>> mapOfCases,Scheduler scheduler){$  return switchCase(caseSelector,mapOfCases,Observable.<R>empty().subscribeOn(scheduler));$}$
public Vector multiply(double m){$  x*=m;$  y*=m;$  z*=m;$  return this;$}$
public void crawl() throws Exception {$  Connection conn=null;$  try {$    conn=getConnection();$    final Statement stmt=conn.createStatement();$    processResult(stmt.executeQuery(firstQuery));$    stmt.close();$  }$ catch (  Exception e) {$    throw e;$  }$ finally {$    closeConnection(conn);$  }$  completeLatch.await();$  while (this.threadPool.getTaskCount() != 0 && this.threadPool.getActiveCount() != 0) {$    Thread.sleep(1);$  }$  if (exception != null) {$    throw exception;$  }$}$
public Object clone(){$  try {$    return super.clone();$  }$ catch (  CloneNotSupportedException e) {$    throw new InternalError();$  }$}$
public void write(int b) throws IOException {$  raf.write(b);$}$
public static SM_SYSTEM_MESSAGE STR_GET_EXP_MAKEUP_BONUS(String value0,long num1,long num2){$  return new SM_SYSTEM_MESSAGE(1400343,value0,num1,num2);$}$
public void testImportSubprojects() throws IOException, ConfigurationException {$  String[] paths={module(1),module(2),SAMPLE_PROJECT_PATH};$  VirtualFile projectRoot=createProjectWithSubprojects(projectsWithDefaultLocations(paths));$  Map<String,VirtualFile> toImport=moduleListToMap(GradleModuleImporter.getRelatedProjects(projectRoot,getProject()));$  assertEquals(paths.length,toImport.size());$  for (  String path : paths) {$    assertEquals(projectRoot.findFileByRelativePath(path),toImport.get(pathToGradleName(path)));$  }$  GradleModuleImporter.importModules(this,toImport,getProject(),null);$  for (  String path : paths) {$    VirtualFile moduleRoot=projectRoot.findFileByRelativePath(path);$    assertNotNull(String.format("Module was not imported into %s\n",projectRoot.getPath() + "/" + path),moduleRoot);$    assertModuleImported(getProject(),path,moduleRoot);$  }$  System.out.println();$}$
public int log10K(){$  return exp - 1;$}$
public static double[] pageRank(MatrixInterface preparedMatrix,int maxIteration,double d,double[] init){$  double[] impact=new double[preparedMatrix.getRowsCount()];$  for (int i=0; i != init.length; i++)   impact[i]=DEFAULT_I;$  return pageRank(preparedMatrix,maxIteration,d,init,impact);$}$
public static ShoppingCartItem makeItem(Integer cartLocation,GenericValue product,BigDecimal selectedAmount,BigDecimal quantity,BigDecimal unitPrice,Timestamp reservStart,BigDecimal reservLength,BigDecimal reservPersons,String accommodationMapId,String accommodationSpotId,Timestamp shipBeforeDate,Timestamp shipAfterDate,Map<String,GenericValue> additionalProductFeatureAndAppls,Map<String,Object> attributes,String prodCatalogId,ProductConfigWrapper configWrapper,String itemType,ShoppingCart.ShoppingCartItemGroup itemGroup,LocalDispatcher dispatcher,ShoppingCart cart,Boolean triggerExternalOpsBool,Boolean triggerPriceRulesBool,GenericValue parentProduct,Boolean skipInventoryChecks,Boolean skipProductChecks) throws CartItemModifyException {$  ShoppingCartItem newItem=new ShoppingCartItem(product,additionalProductFeatureAndAppls,attributes,prodCatalogId,configWrapper,cart.getLocale(),itemType,itemGroup,parentProduct);$  selectedAmount=selectedAmount == null ? BigDecimal.ZERO : selectedAmount;$  unitPrice=unitPrice == null ? BigDecimal.ZERO : unitPrice;$  reservLength=reservLength == null ? BigDecimal.ZERO : reservLength;$  reservPersons=reservPersons == null ? BigDecimal.ZERO : reservPersons;$  boolean triggerPriceRules=triggerPriceRulesBool == null ? true : triggerPriceRulesBool.booleanValue();$  boolean triggerExternalOps=triggerExternalOpsBool == null ? true : triggerExternalOpsBool.booleanValue();$  if ("Y".equals(product.getString("isVirtual"))) {$    Map<String,Object> messageMap=UtilMisc.<String,Object>toMap("productName",product.getString("productName"),"productId",product.getString("productId"));$    String excMsg=UtilProperties.getMessage(resource_error,"item.cannot_add_product_virtual",messageMap,cart.getLocale());$    Debug.logWarning(excMsg,module);$    throw new CartItemModifyException(excMsg);$  }$  java.sql.Timestamp nowTimestamp=UtilDateTime.nowTimestamp();$  if (!skipProductChecks.booleanValue()) {$    isValidCartProduct(configWrapper,product,nowTimestamp,cart.getLocale());$  }$  if ("ASSET_USAGE".equals(product.getString("productTypeId")) || "ASSET_USAGE_OUT_IN".equals(product.getString("productTypeId"))) {$    if (reservStart == null) {$      String excMsg=UtilProperties.getMessage(resource_error,"item.missing_reservation_starting_date",cart.getLocale());$      throw new CartItemModifyException(excMsg);$    }$    if (reservStart.before(UtilDateTime.nowTimestamp())) {$      String excMsg=UtilProperties.getMessage(resource_error,"item.reservation_from_tomorrow",cart.getLocale());$      throw new CartItemModifyException(excMsg);$    }$    newItem.setReservStart(reservStart);$    if (reservLength.compareTo(BigDecimal.ONE) < 0) {$      String excMsg=UtilProperties.getMessage(resource_error,"item.number_of_days",cart.getLocale());$      throw new CartItemModifyException(excMsg);$    }$    newItem.setReservLength(reservLength);$    if (product.get("reservMaxPersons") != null) {$      BigDecimal reservMaxPersons=product.getBigDecimal("reservMaxPersons");$      if (reservMaxPersons.compareTo(reservPersons) < 0) {$        Map<String,Object> messageMap=UtilMisc.<String,Object>toMap("reservMaxPersons",product.getBigDecimal("reservMaxPersons"),"reservPersons",reservPersons);$        String excMsg=UtilProperties.getMessage(resource_error,"item.maximum_number_of_person_renting",messageMap,cart.getLocale());$        Debug.logInfo(excMsg,module);$        throw new CartItemModifyException(excMsg);$      }$    }$    newItem.setReservPersons(reservPersons);$    if (product.get("reserv2ndPPPerc") != null)     newItem.setReserv2ndPPPerc(product.getBigDecimal("reserv2ndPPPerc"));$    if (product.get("reservNthPPPerc") != null)     newItem.setReservNthPPPerc(product.getBigDecimal("reservNthPPPerc"));$    if ((accommodationMapId != null) && (accommodationSpotId != null)) {$      newItem.setAccommodationId(accommodationMapId,accommodationSpotId);$    }$    String isAvailable=checkAvailability(product.getString("productId"),quantity,reservStart,reservLength,cart);$    if (isAvailable.compareTo("OK") != 0) {$      Map<String,Object> messageMap=UtilMisc.<String,Object>toMap("productId",product.getString("productId"),"availableMessage",isAvailable);$      String excMsg=UtilProperties.getMessage(resource_error,"item.product_not_available",messageMap,cart.getLocale());$      Debug.logInfo(excMsg,module);$      throw new CartItemModifyException(isAvailable);$    }$  }$  newItem.setShipBeforeDate(shipBeforeDate != null ? shipBeforeDate : cart.getDefaultShipBeforeDate());$  newItem.setShipAfterDate(shipAfterDate != null ? shipAfterDate : cart.getDefaultShipAfterDate());$  newItem.setBasePrice(unitPrice);$  if (cartLocation == null) {$    cart.addItemToEnd(newItem);$  }$ else {$    cart.addItem(cartLocation.intValue(),newItem);$  }$  if (selectedAmount.compareTo(BigDecimal.ZERO) > 0) {$    newItem.setSelectedAmount(selectedAmount);$  }$  try {$    newItem.setQuantity(quantity,dispatcher,cart,triggerExternalOps,true,triggerPriceRules,skipInventoryChecks.booleanValue());$  }$ catch (  CartItemModifyException e) {$    Debug.logWarning(e.getMessage(),module);$    cart.removeCartItem(cart.getItemIndex(newItem),triggerExternalOps,dispatcher);$    cart.clearItemShipInfo(newItem);$    cart.removeEmptyCartItems();$    throw e;$  }$  return newItem;$}$
public boolean containsKey(int key){$  return contains(key);$}$
public FriendsGetSuggestionsQuery fields(UserField... value){$  return unsafeParam("fields",value);$}$
private void preOnCreate(){$  if (!getClass().getSimpleName().equals("RubotoService")) {$    System.out.println("RubotoService preOnCreate(): " + getClass().getName());$    getScriptInfo().setRubyClassName(getClass().getSimpleName());$    JRubyAdapter.setUpJRuby(this);$  }$}$
public void print(){$  System.out.println("mean:");$  mean.print(6,3);$  System.out.println("covariance matrix:");$  covariances.print(6,3);$  System.out.println("component weight:");$  System.out.println(componentWeight);$  System.out.println("---------------------------------------------");$}$
protected OutputStream to(){$  return to;$}$
public void displayMessage(final SimpleMqttMessage message){$  if (message == null) {$    publicationTopicText.setValue("");$    publicationTopicText.setPromptText("(cannot be empty)");$    publicationQosChoice.getSelectionModel().select(0);$    publicationData.clear();$    retainedBox.setSelected(false);$  }$ else {$    publicationTopicText.setValue(message.getTopic());$    publicationQosChoice.getSelectionModel().select(message.getQos());$    publicationData.clear();$    publicationData.appendText(message.getValue());$    retainedBox.setSelected(message.isRetained());$  }$}$
public ExtendedIndexIterator<TemplateCacheInfo> establishScan(K startPos,short relation,K endPos,boolean endPosInclusive){$  return establishScan(startPos,relation,endPos,endPosInclusive,false);$}$
protected void onModelUnbound(EpoxyViewHolder holder,EpoxyModel<?> model){$}$
public void onLeaveZone(ZoneInstance zoneInstance){$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CarveSignet_A_TO_SELF(String skillcaster,int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200797,skillcaster,num0,skillname);$}$
@Override public Long processIdentifier(Object id){$  Objects.requireNonNull(id,"Element identifier cannot be null");$  if (id instanceof Long)   return (Long)id;$  if (id instanceof Number)   return ((Number)id).longValue();$  if (id instanceof String)   return Long.valueOf((String)id);$  throw new IllegalArgumentException(String.format("Expected an id that is convertible to Long but received %s",id.getClass()));$}$
private String positiveInteger2RelativeValues(String rateAttribute){$  double positiveNumber=(new Float(rateAttribute)).doubleValue();$  double relativePercentage=(positiveNumber * 100.0);$  if (relativePercentage > 100) {$    return "+" + df.format((relativePercentage - 100)) + "%";$  }$  return "-" + df.format((100 - relativePercentage)) + "%";$}$
public static short swapShort(short value){$  return (short)((((value >> 0) & 0xff) << 8) + (((value >> 8) & 0xff) << 0));$}$
@Override public boolean isDataPresent(){$  return true;$}$
public static Date millisecondsToDate(long milliseconds){$  return new Date(milliseconds);$}$
private void writeVersionFile() throws IOException {$  RandomAccessFile out=new RandomAccessFile(fName(versionFile),"rw");$  try {$    writeInt(out,version);$    out.getFD().sync();$  }$  finally {$    out.close();$  }$}$
private boolean hasNext(){$  return this.fileCounter > 0;$}$
public JsonObject add(String name,JsonValue value){$  if (name == null) {$    throw new NullPointerException("name is null");$  }$  if (value == null) {$    throw new NullPointerException("value is null");$  }$  table.add(name,names.size());$  names.add(name);$  values.add(value);$  return this;$}$
@Override public boolean equals(Object object){$  if (this == object) {$    return true;$  }$  if (object == null) {$    return false;$  }$  if (getClass() != object.getClass()) {$    return false;$  }$  final ValidationResult other=(ValidationResult)object;$  if (period == null) {$    if (other.period != null) {$      return false;$    }$  }$ else   if (!period.equals(other.period)) {$    return false;$  }$  if (attributeOptionCombo == null) {$    if (other.attributeOptionCombo != null) {$      return false;$    }$  }$ else   if (attributeOptionCombo.getId() != other.attributeOptionCombo.getId()) {$    return false;$  }$  if (orgUnit == null) {$    if (other.orgUnit != null) {$      return false;$    }$  }$ else   if (!orgUnit.equals(other.orgUnit)) {$    return false;$  }$  if (validationRule == null) {$    if (other.validationRule != null) {$      return false;$    }$  }$ else   if (!validationRule.equals(other.validationRule)) {$    return false;$  }$  if (leftsideValue == null) {$    if (other.leftsideValue != null) {$      return false;$    }$  }$ else   if (other.leftsideValue == null) {$    return false;$  }$ else   if (Math.round(100.0 * leftsideValue) != Math.round(100.0 * other.leftsideValue)) {$    return false;$  }$  if (rightsideValue == null) {$    if (other.rightsideValue != null) {$      return false;$    }$  }$ else   if (other.rightsideValue == null) {$    return false;$  }$ else   if (Math.round(100.0 * leftsideValue) != Math.round(100.0 * other.leftsideValue)) {$    return false;$  }$  return true;$}$
private static boolean eq(Object o1,Object o2){$  return (o1 == null ? o2 == null : o1.equals(o2));$}$
public void addBodyDecl(BodyDecl node){$  List<BodyDecl> list=(parent == null || state == null) ? getBodyDeclListNoTransform() : getBodyDeclList();$  list.addChild(node);$}$
public void removeListeners(String tag){$}$
@SuppressWarnings({"unchecked","cast"}) public BooleanType fullCopy(){$  BooleanType tree=(BooleanType)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public void calculateNormal(){$  if (normal == null) {$    normal=new Vector3f(pointb);$  }$ else {$    normal.set(pointb);$  }$  normal.subtractLocal(pointa).crossLocal(pointc.x - pointa.x,pointc.y - pointa.y,pointc.z - pointa.z);$  normal.normalizeLocal();$}$
private void loadStats(String resource,Object u) throws Exception {$  DescriptiveStatistics d=null;$  StreamingStatistics s=null;$  if (u instanceof DescriptiveStatistics) {$    d=(DescriptiveStatistics)u;$    d.clear();$  }$ else {$    s=(StreamingStatistics)u;$    s.clear();$  }$  mean=Double.NaN;$  std=Double.NaN;$  InputStream resourceAsStream=CertifiedDataTest.class.getResourceAsStream(resource);$  Assert.assertNotNull("Could not find resource " + resource,resourceAsStream);$  BufferedReader in=new BufferedReader(new InputStreamReader(resourceAsStream));$  String line=null;$  for (int j=0; j < 60; j++) {$    line=in.readLine();$    if (j == 40) {$      mean=Double.parseDouble(line.substring(line.lastIndexOf(":") + 1).trim());$    }$    if (j == 41) {$      std=Double.parseDouble(line.substring(line.lastIndexOf(":") + 1).trim());$    }$  }$  line=in.readLine();$  while (line != null) {$    if (d != null) {$      d.addValue(Double.parseDouble(line.trim()));$    }$ else {$      s.addValue(Double.parseDouble(line.trim()));$    }$    line=in.readLine();$  }$  resourceAsStream.close();$  in.close();$}$
public void updateTree(){$  final PhyloTree tree=getTree();$  if (hasSyncedFormatFromSummaryToViewer)   SyncDataTableAndClassificationViewer.syncFormattingFromViewer2Summary(this,doc.getDataTable());$  classification.getFullTree().extractInducedTree(id2NodeData,getCollapsedIds(),tree,id2Nodes);$  nodeDrawer.setCounts(determineMaxAssigned());$  if (tree.getRoot() != null) {$    embedTree(tree.getRoot());$  }$  nodesWithMovedLabels.clear();$  trans.setCoordinateRect(getBBox());$  Rectangle rect=new Rectangle();$  trans.w2d(getBBox(),rect);$  setPreferredSize(rect.getSize());$  if (tree.getRoot() != null) {$    for (Edge e=tree.getRoot().getFirstOutEdge(); e != null; e=tree.getRoot().getNextOutEdge(e)) {$      Node v=e.getTarget();$      if ((Integer)v.getInfo() >= -3 && (Integer)v.getInfo() <= -1) {$        setColor(e,Color.LIGHT_GRAY);$        setColor(v,Color.LIGHT_GRAY);$        setLabelColor(v,Color.LIGHT_GRAY);$      }$    }$    setColor(getTree().getRoot(),Color.LIGHT_GRAY);$    setLabelColor(getTree().getRoot(),Color.LIGHT_GRAY);$    for (Edge e=tree.getRoot().getFirstOutEdge(); e != null; e=tree.getRoot().getNextOutEdge(e))     setColor(e,Color.LIGHT_GRAY);$    if (getNumberOfDatasets() > 1 && nodeDrawer.getStyle() == NodeDrawer.Style.Circle) {$      legendPanel.setStyle(getNodeDrawer().getStyle());$    }$    setupNodeLabels(false);$  }$  fitGraphToWindow();$  if (!hasSyncedFormatFromSummaryToViewer) {$    SyncDataTableAndClassificationViewer.syncFormattingFromSummary2Viewer(doc.getDataTable(),this);$    hasSyncedFormatFromSummaryToViewer=true;$  }$  repaint();$  updateStatusBar();$  setPOWEREDBY(getMajorityRankOfLeaves());$  viewerJTable.update();$  viewerJTree.update();$}$
private void checkLiteralValue(String message,Expression expression,double expectedValue){$  Assert.assertEquals(expression.getClass(),LiteralExpressionImpl.class);$  LiteralExpressionImpl literalExpression=(LiteralExpressionImpl)expression;$  Object value=literalExpression.getValue();$  Assert.assertEquals(message,value.getClass(),Double.class);$  Double actualValue=(Double)value;$  String additional=String.format(" Expected '%f' Actual '%f'",expectedValue,actualValue);$  Assert.assertTrue(message + additional,Math.abs(expectedValue - actualValue) < epsilon);$}$
public ShardRouterException(Throwable cause){$  super(cause);$}$
private void unpausePathEdgesForSource(LeakKey<N> leakKey){$  Set<PausedEdge> pausedEdges=pausedPathEdges.get(leakKey);$  if (pausedEdges != null) {$    for (    PausedEdge edge : pausedEdges) {$      if (pausedEdges.remove(edge)) {$        if (DEBUG)         logger.debug("-- UNPAUSE {}: {}",debugName,edge);$        super.propagateUnbalancedReturnFlow(edge.retSiteC,edge.targetVal,edge.edgeFunction,edge.relatedCallSite);$      }$    }$  }$}$
public MersenneTwister(){$  mt=new int[N];$  setSeed(System.currentTimeMillis() + System.identityHashCode(this));$}$
public static LogicalMetricColumn addNewLogicalMetricColumn(Schema schema,String name,LogicalMetric metric){$  LogicalMetricColumn col=new LogicalMetricColumn(name,metric);$  schema.addColumn(col);$  return col;$}$
private int sampleLine(ResultPoint p1,ResultPoint p2,int size){$  int result=0;$  float d=distance(p1,p2);$  float moduleSize=d / size;$  float px=p1.getX();$  float py=p1.getY();$  float dx=moduleSize * (p2.getX() - p1.getX()) / d;$  float dy=moduleSize * (p2.getY() - p1.getY()) / d;$  for (int i=0; i < size; i++) {$    if (image.get(MathUtils.round(px + i * dx),MathUtils.round(py + i * dy))) {$      result|=1 << (size - i - 1);$    }$  }$  return result;$}$
public boolean isSelected(){$  ClusterViewer viewer=getViewer();$  return viewer.getPcoaTab() != null && viewer.getPcoaTab().getFirstPC() == 0 && viewer.getPcoaTab().getSecondPC() == 1 && viewer.getPcoaTab().getThirdPC() == 2 && viewer.getPcoaTab().isIs3dMode();$}$
protected AdsDeleteAdsQuery accountId(int value){$  return unsafeParam("account_id",value);$}$
public ThrowableSet mightThrowImplicitly(ThrowInst t){$  return ThrowableSet.Manager.v().ALL_THROWABLES;$}$
private int[] blackWhiteRange(int fixedDimension,int maxWhiteRun,int minDim,int maxDim,boolean horizontal){$  int center=(minDim + maxDim) / 2;$  int start=center;$  while (start >= minDim) {$    if (horizontal ? image.get(start,fixedDimension) : image.get(fixedDimension,start)) {$      start--;$    }$ else {$      int whiteRunStart=start;$      do {$        start--;$      }$ while (start >= minDim && !(horizontal ? image.get(start,fixedDimension) : image.get(fixedDimension,start)));$      int whiteRunSize=whiteRunStart - start;$      if (start < minDim || whiteRunSize > maxWhiteRun) {$        start=whiteRunStart;$        break;$      }$    }$  }$  start++;$  int end=center;$  while (end < maxDim) {$    if (horizontal ? image.get(end,fixedDimension) : image.get(fixedDimension,end)) {$      end++;$    }$ else {$      int whiteRunStart=end;$      do {$        end++;$      }$ while (end < maxDim && !(horizontal ? image.get(end,fixedDimension) : image.get(fixedDimension,end)));$      int whiteRunSize=end - whiteRunStart;$      if (end >= maxDim || whiteRunSize > maxWhiteRun) {$        end=whiteRunStart;$        break;$      }$    }$  }$  end--;$  return end > start ? new int[]{start,end} : null;$}$
private void sendProcessDisconnectionRequest(){$  EasyMock.expect(this.configurationControllerMock.getProcessConfiguration()).andReturn(this.processConfigurationMock).times(1);$  EasyMock.expect(this.processConfigurationMock.getProcessID()).andReturn(-1L).times(1,2);$  EasyMock.expect(this.processConfigurationMock.getProcessName()).andReturn(PROCESS_NAME).times(1,3);$  EasyMock.expect(this.processConfigurationMock.getprocessPIK()).andReturn(PROCESS_PIK).times(1,2);$  EasyMock.replay(this.configurationControllerMock,this.processConfigurationMock);$  this.activeRequestSender.sendProcessDisconnectionRequest(this.configurationControllerMock.getProcessConfiguration(),-1L);$  EasyMock.verify(this.configurationControllerMock,this.processConfigurationMock);$}$
public static String readStringFromFile(String path,JavaSparkContext sc) throws IOException {$  return readStringFromFile(path,sc.sc());$}$
public boolean hasDiphone(String diphone){$  return !(missingDiphones != null && missingDiphones.contains(diphone));$}$
public static int expForDefence(Creature attacker,Creature defenced){$  float attackerCost=getTotalCost(attacker);$  float defencedCost=getTotalCost(defenced);$  return result(ln(attackerCost / 1.3f - defencedCost * 1.7f));$}$
@Transactional public UserDTO save(UserDTO dto){$  if (dto == null) {$    return null;$  }$  User user;$  if (dto.isIdSet()) {$    user=userRepository.findOne(dto.id);$  }$ else {$    user=new User();$  }$  user.setLogin(dto.login);$  user.setPassword(dto.password);$  user.setEmail(dto.email);$  user.setIsEnabled(dto.isEnabled);$  user.setCivility(dto.civility);$  user.setFirstName(dto.firstName);$  user.setLastName(dto.lastName);$  user.setCreationDate(dto.creationDate);$  user.setCreationAuthor(dto.creationAuthor);$  user.setLastModificationDate(dto.lastModificationDate);$  user.setLastModificationAuthor(dto.lastModificationAuthor);$  user.setVersion(dto.version);$  user.getRoles().clear();$  if (dto.roles != null) {$    dto.roles.stream().forEach(null);$  }$  return toDTO(userRepository.save(user));$}$
@RequestProcessing(value="/qq",method=HTTPRequestMethod.POST) public void qq(final HTTPRequestContext context,final HttpServletRequest request,final HttpServletResponse response) throws Exception {$  final String key=XiaoVs.getString("qq.bot.key");$  if (!key.equals(request.getParameter("key"))) {$    response.sendError(HttpServletResponse.SC_FORBIDDEN);$    return;$  }$  String msg=request.getParameter("msg");$  if (StringUtils.isBlank(msg)) {$    LOGGER.warn("Empty msg body");$    response.sendError(HttpServletResponse.SC_BAD_REQUEST);$    return;$  }$  LOGGER.info("Push QQ groups [msg=" + msg + "]");$  qqService.sendToPushQQGroups(msg);$  final JSONObject ret=new JSONObject();$  context.renderJSON(ret);$  ret.put(Keys.STATUS_CODE,true);$}$
private void initView(){$  initBasicPart();$  initFilterPart();$  initDownloadPart();$}$
public synchronized boolean unexport(boolean force){$  if (!used) {$    throw new IllegalStateException("an object has not been exported via this exporter");$  }$  return underlyingExporter.unexport(force);$}$
private Token pollNext(){$  Token result=currentToken;$  if (matcher.find()) {$    if (index < matcher.start()) {$      currentToken=new Token(TokenKind.TEXT,source.substring(index,matcher.start()),lineNum);$      index=matcher.start();$      matcher.region(index,matcher.regionEnd());$    }$ else {$      currentToken=createTokenFromMatcher();$      index=matcher.end();$    }$  }$ else {$    if (index < source.length()) {$      currentToken=new Token(TokenKind.TEXT,source.substring(index),lineNum);$      index=source.length();$    }$ else {$      currentToken=null;$    }$  }$  return result;$}$
@Override public int available(){$  int available=currentlyInBuffer();$  if (inputSource != null)   available+=inputSource.available();$  return available;$}$
public void print(){$  if (DEBUG_PRINT_REF_COUNTS) {$    System.out.print("num\t");$    System.out.print("type\t");$    System.out.print("name\t");$    System.out.print("val\t");$    System.out.print("par\t");$    System.out.print("lch\t");$    System.out.print("psib");$    System.out.println();$    for (int i=0; i < fNodeType.length; i++) {$      if (fNodeType[i] != null) {$        System.out.print("--------");$        System.out.print("--------");$        System.out.print("--------");$        System.out.print("--------");$        System.out.print("--------");$        System.out.print("--------");$        System.out.print("--------");$        System.out.println();$        System.out.print(i);$        System.out.print('\t');$switch (fNodeType[i][CHUNK_SIZE]) {$case NodeImpl.ELEMENT_DEFINITION_NODE:${$            System.out.print("EDef");$            break;$          }$case Node.DOCUMENT_NODE:${$          System.out.print("Doc");$          break;$        }$case Node.DOCUMENT_TYPE_NODE:${$        System.out.print("DType");$        break;$      }$case Node.COMMENT_NODE:${$      System.out.print("Com");$      break;$    }$case Node.PROCESSING_INSTRUCTION_NODE:${$    System.out.print("PI");$    break;$  }$case Node.ELEMENT_NODE:${$  System.out.print("Elem");$  break;$}$case Node.ENTITY_NODE:${$System.out.print("Ent");$break;$}$case Node.ENTITY_REFERENCE_NODE:${$System.out.print("ERef");$break;$}$case Node.TEXT_NODE:${$System.out.print("Text");$break;$}$case Node.ATTRIBUTE_NODE:${$System.out.print("Attr");$break;$}$case DeferredNode.TYPE_NODE:${$System.out.print("TypeInfo");$break;$}$default :${$System.out.print("?" + fNodeType[i][CHUNK_SIZE]);$}$}$System.out.print('\t');$System.out.print(fNodeName[i][CHUNK_SIZE]);$System.out.print('\t');$System.out.print(fNodeValue[i][CHUNK_SIZE]);$System.out.print('\t');$System.out.print(fNodeURI[i][CHUNK_SIZE]);$System.out.print('\t');$System.out.print(fNodeParent[i][CHUNK_SIZE]);$System.out.print('\t');$System.out.print(fNodeLastChild[i][CHUNK_SIZE]);$System.out.print('\t');$System.out.print(fNodePrevSib[i][CHUNK_SIZE]);$System.out.print('\t');$System.out.print(fNodeExtra[i][CHUNK_SIZE]);$System.out.println();$}$}$}$if (DEBUG_PRINT_TABLES) {$System.out.println("# start table");$for (int i=0; i < fNodeCount; i++) {$int chunk=i >> CHUNK_SHIFT;$int index=i & CHUNK_MASK;$if (i % 10 == 0) {$System.out.print("num\t");$System.out.print("type\t");$System.out.print("name\t");$System.out.print("val\t");$System.out.print("uri\t");$System.out.print("par\t");$System.out.print("lch\t");$System.out.print("psib\t");$System.out.print("xtra");$System.out.println();$}$System.out.print(i);$System.out.print('\t');$switch (getChunkIndex(fNodeType,chunk,index)) {$case NodeImpl.ELEMENT_DEFINITION_NODE:${$System.out.print("EDef");$break;$}$case Node.DOCUMENT_NODE:${$System.out.print("Doc");$break;$}$case Node.DOCUMENT_TYPE_NODE:${$System.out.print("DType");$break;$}$case Node.COMMENT_NODE:${$System.out.print("Com");$break;$}$case Node.PROCESSING_INSTRUCTION_NODE:${$System.out.print("PI");$break;$}$case Node.ELEMENT_NODE:${$System.out.print("Elem");$break;$}$case Node.ENTITY_NODE:${$System.out.print("Ent");$break;$}$case Node.ENTITY_REFERENCE_NODE:${$System.out.print("ERef");$break;$}$case Node.TEXT_NODE:${$System.out.print("Text");$break;$}$case Node.ATTRIBUTE_NODE:${$System.out.print("Attr");$break;$}$case DeferredNode.TYPE_NODE:${$System.out.print("TypeInfo");$break;$}$default :${$System.out.print("?" + getChunkIndex(fNodeType,chunk,index));$}$}$System.out.print('\t');$System.out.print(getChunkValue(fNodeName,chunk,index));$System.out.print('\t');$System.out.print(getNodeValue(chunk,index));$System.out.print('\t');$System.out.print(getChunkValue(fNodeURI,chunk,index));$System.out.print('\t');$System.out.print(getChunkIndex(fNodeParent,chunk,index));$System.out.print('\t');$System.out.print(getChunkIndex(fNodeLastChild,chunk,index));$System.out.print('\t');$System.out.print(getChunkIndex(fNodePrevSib,chunk,index));$System.out.print('\t');$System.out.print(getChunkIndex(fNodeExtra,chunk,index));$System.out.println();$}$System.out.println("# end table");$}$}$
public Door(final TreeSpecies species,BlockFace face){$  this(getWoodDoorOfSpecies(species),face,false);$}$
@Override public SourceDataTag clone(){$  SourceDataTag clonedSourceDataTag=null;$  try {$    clonedSourceDataTag=(SourceDataTag)super.clone();$    if (this.address != null) {$      clonedSourceDataTag.setAddress(this.address.clone());$    }$    if (this.currentValue != null) {$      clonedSourceDataTag.currentValue=this.currentValue.clone();$    }$  }$ catch (  CloneNotSupportedException e) {$    e.printStackTrace();$  }$  return clonedSourceDataTag;$}$
public boolean isContent(){$  return isOptionEnabled(UrlFilterRuleOption.CONTENT);$}$
private void initPresenter(){$  this.multiFilterBarPresenter=new MultiFilterBarImplementor(multiFilterBarModel,this);$  this.popupManagePresenter=new MultiFilterFragmentPopupManageImplementor(this);$  this.messageManagePresenter=new MessageManageImplementor(this);$}$
public CandidateEstimator(DoubleDataSource signal,Window window,int frameShift,int samplingRate){$  super(signal,window,frameShift,samplingRate,NCANDIDATES);$  this.correlationInput=new double[MathUtils.closestPowerOfTwoAbove(2 * window.getLength())];$  this.minF0=DEFAULT_MINF0;$  this.maxF0=DEFAULT_MAXF0;$}$
public Criteria or(){$  Criteria criteria=createCriteriaInternal();$  oredCriteria.add(criteria);$  return criteria;$}$
public static void i(String tag,String msg,Object... args){$  if (sLevel > LEVEL_INFO) {$    return;$  }$  if (args.length > 0) {$    msg=String.format(msg,args);$  }$  Log.i(tag,msg);$}$
public void startHorizontalAnimate(){$  isPlaying=true;$  invalidate();$}$
protected AudioDeleteQuery ownerId(int value){$  return unsafeParam("owner_id",value);$}$
public static float toFloatBits(int r,int g,int b,int a){$  int color=(a << 24) | (b << 16) | (g << 8)| r;$  float floatColor=NumberUtils.intToFloatColor(color);$  return floatColor;$}$
public static String loadFileToStringWithNewlines(String sFilename){$  StringBuffer sb=new StringBuffer();$  try {$    BufferedReader in=new BufferedReader(new FileReader(sFilename));$    String line;$    while ((line=in.readLine()) != null) {$      sb.append(line);$      sb.append("\n");$    }$    in.close();$  }$ catch (  Exception e) {$    System.err.println("Coult not load file:" + sFilename);$    e.printStackTrace(System.err);$  }$  return sb.toString();$}$
private void updateDimensionRow(Document luceneDimensionRowDoc,Map<DimensionField,Field> fieldMap,IndexWriter writer,DimensionRow newRow) throws IOException {$  for (  DimensionField field : dimension.getDimensionFields()) {$    Field fieldToUpdate=fieldMap.get(field);$    fieldToUpdate.setStringValue(newRow.get(field));$  }$  Term keyTerm=new Term(fieldMap.get(dimension.getKey()).name(),newRow.get(dimension.getKey()));$  writer.updateDocument(keyTerm,luceneDimensionRowDoc);$}$
private Map<String,List<ChartObject>> convertResult(StatisticsDocumentHandler handler){$  Map<String,List<ChartObject>> asResult=new HashMap<>();$  List<ChartObject> initial=handler.getResult();$  final ChartObject chartObject=new ChartObject();$  chartObject.setValues(new HashMap<>());$  asResult.put(RESULT,Collections.singletonList(!initial.isEmpty() ? initial.get(0) : chartObject));$  return asResult;$}$
protected void shareBySinaWeibo(){$  ShareUtil.startShare(this,ShareConstant.SHARE_CHANNEL_SINA_WEIBO,getShareData(ShareConstant.SHARE_CHANNEL_SINA_WEIBO),ShareConstant.REQUEST_CODE);$}$
public BOMInputStream(InputStream delegate,boolean include,ByteOrderMark... boms){$  super(delegate);$  if (boms == null || boms.length == 0) {$    throw new IllegalArgumentException("No BOMs specified");$  }$  this.include=include;$  Arrays.sort(boms,ByteOrderMarkLengthComparator);$  this.boms=Arrays.asList(boms);$}$
public User(){$}$
public AbortPreparedTransactionSpaceOperationResult(){$}$
private VUserManagerService(Context context,VPackageManagerService pm,Object installLock,Object packagesLock,File dataDir,File baseUserPath){$  mContext=context;$  mPm=pm;$  mInstallLock=installLock;$  mPackagesLock=packagesLock;$synchronized (mInstallLock) {$synchronized (mPackagesLock) {$      mUsersDir=new File(dataDir,USER_INFO_DIR);$      mUsersDir.mkdirs();$      File userZeroDir=new File(mUsersDir,"0");$      userZeroDir.mkdirs();$      mBaseUserPath=baseUserPath;$      mUserListFile=new File(mUsersDir,USER_LIST_FILENAME);$      readUserListLocked();$      ArrayList<VUserInfo> partials=new ArrayList<VUserInfo>();$      for (int i=0; i < mUsers.size(); i++) {$        VUserInfo ui=mUsers.valueAt(i);$        if (ui.partial && i != 0) {$          partials.add(ui);$        }$      }$      for (int i=0; i < partials.size(); i++) {$        VUserInfo ui=partials.get(i);$        VLog.w(LOG_TAG,"Removing partially created user #" + i + " (name="+ ui.name+ ")");$        removeUserStateLocked(ui.id);$      }$      sInstance=this;$    }$  }$}$
public static int readInt(){$  return scanner.nextInt();$}$
public SootClass(String name,int modifiers){$  if (name.charAt(0) == '[')   throw new RuntimeException("Attempt to make a class whose name starts with [");$  setName(name);$  this.modifiers=modifiers;$  refType=RefType.v(name);$  refType.setSootClass(this);$  if (Options.v().debug_resolver())   G.v().out.println("created " + name + " with modifiers "+ modifiers);$  setResolvingLevel(BODIES);$  Scene.v().getClassNumberer().add(this);$}$
public TopicSubscriber createDurableSubscriber(Topic topic,String name,String selector,boolean noLocal) throws JMSException {$  throw new IllegalStateException("Forbidden call on a QueueSession.");$}$
public static <T,U,V>ImmutablePair<T,V> withRight(ImmutablePair<T,U> pair,V right){$  return new ImmutablePair<>(pair.getLeft(),right);$}$
protected void mergeLists(GossipManager gossipManager,RemoteGossipMember senderMember,List<GossipMember> remoteList){$  for (  LocalGossipMember i : gossipManager.getDeadList()) {$    if (i.getId().equals(senderMember.getId())) {$      LOGGER.info(gossipManager.getMyself() + " contacted by dead member " + senderMember.getUri());$      LocalGossipMember newLocalMember=new LocalGossipMember(senderMember.getClusterName(),senderMember.getUri(),senderMember.getId(),senderMember.getHeartbeat(),gossipManager,gossipManager.getSettings().getCleanupInterval());$      gossipManager.reviveMember(newLocalMember);$      newLocalMember.startTimeoutTimer();$    }$  }$  for (  GossipMember remoteMember : remoteList) {$    if (remoteMember.getId().equals(gossipManager.getMyself().getId())) {$      continue;$    }$    if (gossipManager.getLiveMembers().contains(remoteMember)) {$      LocalGossipMember localMember=gossipManager.getLiveMembers().get(gossipManager.getLiveMembers().indexOf(remoteMember));$      if (remoteMember.getHeartbeat() > localMember.getHeartbeat()) {$        localMember.setHeartbeat(remoteMember.getHeartbeat());$        localMember.resetTimeoutTimer();$      }$    }$ else     if (!gossipManager.getLiveMembers().contains(remoteMember) && !gossipManager.getDeadList().contains(remoteMember)) {$      LocalGossipMember newLocalMember=new LocalGossipMember(remoteMember.getClusterName(),remoteMember.getUri(),remoteMember.getId(),remoteMember.getHeartbeat(),gossipManager,gossipManager.getSettings().getCleanupInterval());$      gossipManager.createOrReviveMember(newLocalMember);$      newLocalMember.startTimeoutTimer();$    }$ else {$      if (gossipManager.getDeadList().contains(remoteMember)) {$        LocalGossipMember localDeadMember=gossipManager.getDeadList().get(gossipManager.getDeadList().indexOf(remoteMember));$        if (remoteMember.getHeartbeat() > localDeadMember.getHeartbeat()) {$          LocalGossipMember newLocalMember=new LocalGossipMember(remoteMember.getClusterName(),remoteMember.getUri(),remoteMember.getId(),remoteMember.getHeartbeat(),gossipManager,gossipManager.getSettings().getCleanupInterval());$          gossipManager.reviveMember(newLocalMember);$          newLocalMember.startTimeoutTimer();$          LOGGER.debug("Removed remote member " + remoteMember.getAddress() + " from dead list and added to local member list.");$        }$ else {$          LOGGER.debug("me " + gossipManager.getMyself());$          LOGGER.debug("sender " + senderMember);$          LOGGER.debug("remote " + remoteList);$          LOGGER.debug("live " + gossipManager.getLiveMembers());$          LOGGER.debug("dead " + gossipManager.getDeadList());$        }$      }$ else {$        LOGGER.debug("me " + gossipManager.getMyself());$        LOGGER.debug("sender " + senderMember);$        LOGGER.debug("remote " + remoteList);$        LOGGER.debug("live " + gossipManager.getLiveMembers());$        LOGGER.debug("dead " + gossipManager.getDeadList());$      }$    }$  }$}$
private void readObjectNoData() throws ObjectStreamException {$  throw new InvalidObjectException("no data found when attempting to " + "deserialize TxnMgrProxy instance");$}$
public static void normalizeVector3(FloatBuffer buf,int index){$  Vector3f tempVec3=Vector3f.newInstance();$  populateFromBuffer(tempVec3,buf,index);$  tempVec3.normalizeLocal();$  setInBuffer(tempVec3,buf,index);$  Vector3f.recycle(tempVec3);$}$
@VisibleForTesting public boolean isSystemBuild(PackageManager pm,String packageName){$  try {$    ApplicationInfo info=pm.getApplicationInfo(packageName,ApplicationInfo.FLAG_SYSTEM);$    if ((info.flags & ApplicationInfo.FLAG_SYSTEM) == 0)     throw new SecurityException();$  }$ catch (  NameNotFoundException e) {$    Log.e(TAG,"Package with name " + packageName + " not found");$    return false;$  }$catch (  SecurityException e) {$    Log.e(TAG,"Caller with package name " + packageName + " is not in the system build");$    return false;$  }$  return true;$}$
public boolean isRetained(){$  return retained;$}$
protected synchronized void startEvictor(long delay){$  if (null != evictor) {$    evictor.cancel();$    evictor=null;$  }$  if (delay > 0) {$    evictor=new Evictor();$    EVICTION_TIMER.schedule(evictor,delay,delay);$  }$}$
public void close() throws JMSException {$  try {$    if (!m_closed) {$      if (_logger.isLoggable(Level.FINE)) {$        _logger.fine("GSQueueBrowserImpl.close() closing browser: " + toString());$      }$      m_session.removeBrower(this);$    }$    m_closed=true;$  }$  finally {$    if (null != gsIterator) {$      gsIterator.cancel();$      gsIterator=null;$    }$  }$}$
public void updateView(String what){$  uptodate=false;$  if (doClear) {$    clear();$    doClear=false;$  }$  commandManager.updateEnableState();$  setTitle();$  statusBar.setText2("Rows: " + countVisibleNodes());$  uptodate=true;$  FindToolBar findToolBar=searchManager.getFindDialogAsToolBar();$  if (findToolBar.isClosing()) {$    showFindToolBar=false;$    findToolBar.setClosing(false);$  }$  if (!findToolBar.isEnabled() && showFindToolBar) {$    mainPanel.add(findToolBar,BorderLayout.NORTH);$    findToolBar.setEnabled(true);$    frame.getContentPane().validate();$    getCommandManager().updateEnableState();$  }$ else   if (findToolBar.isEnabled() && !showFindToolBar) {$    mainPanel.remove(findToolBar);$    findToolBar.setEnabled(false);$    frame.getContentPane().validate();$    getCommandManager().updateEnableState();$  }$  if (findToolBar.isEnabled())   findToolBar.clearMessage();$}$
private static Set<URL> urlsToReflect(List<String> packagePrefixes){$  List<String> prefixesWithFlags=ImmutableList.<String>builder().addAll(packagePrefixes).add("org.flagz").build();$  return prefixesWithFlags.stream().flatMap(null).collect(Collectors.toSet());$}$
private RevealatorHelper(){$}$
public List<X509Certificate> checkServerTrusted(X509Certificate[] chain,String authType,String hostname) throws CertificateException {$  return checkTrusted(chain,authType,hostname,false);$}$
private Object readResolve(){$  return LazyHolder.INSTANCE;$}$
public void write(OutputStream os) throws IOException {$  if (responseFormatType == ResponseFormatType.CSV) {$    writeCsvResponse(os);$  }$ else   if (responseFormatType == ResponseFormatType.JSONAPI) {$    writeJsonApiResponse(os,missingIntervals,volatileIntervals,pagination);$  }$ else {$    writeJsonResponse(os,missingIntervals,volatileIntervals,pagination);$  }$}$
@Override public Change configureCacheObject(final RuleTag ruleTag,final Properties properties) throws ConfigurationException {$  setCommonProperties((RuleTagCacheObject)ruleTag,properties);$  String tmpStr=properties.getProperty("ruleText");$  if (tmpStr != null) {$    ((RuleTagCacheObject)ruleTag).setRuleText(tmpStr);$    setParentSupervisionIds(ruleTag);$  }$  ruleTag.setTopic(tagPublicationTrunk + "." + ruleTag.getLowestProcessId());$  return null;$}$
@Deprecated public UrlSpaceConfigurer userDetails(UserDetails userDetails){$  return credentialsProvider(new DefaultCredentialsProvider(userDetails));$}$
protected AbstractSpaceQuery(Class<?> entryClass,ISpacePredicate predicate){$  this._entryTypeName=entryClass.getName();$  this._predicate=predicate;$}$
public JSONException syntaxError(String message){$  return new JSONException(message + toString());$}$
protected FaveAddLinkQuery link(String value){$  return unsafeParam("link",value);$}$
public static String copyFromClipboard(){$  try {$    String data=(String)Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor);$    return data;$  }$ catch (  HeadlessException|UnsupportedFlavorException|IOException e) {$    LOGGER.log(Level.WARNING,"Error retrieving text from clipboard.",e);$    return "";$  }$}$
private void addHelpNodesToTree(HelpNode node,DefaultTreeModel model,MutableTreeNode parent){$  MutableTreeNode n=new DefaultMutableTreeNode(node);$  int index=model.getChildCount(parent);$  model.insertNodeInto(n,parent,index);$  for (int i=0; i < node.nodes.size(); i++) {$    addHelpNodesToTree(node.nodes.get(i),model,n);$  }$}$
public XmlStreamReader(InputStream is,boolean lenient) throws IOException {$  this(is,lenient,null);$}$
public TIntIterator(TIntHash hash){$  super(hash);$  this._hash=hash;$}$
public static int geometric(double p){$  if (!(p >= 0.0 && p <= 1.0))   throw new IllegalArgumentException("Probability must be between 0.0 and 1.0");$  return (int)Math.ceil(Math.log(uniform()) / Math.log(1.0 - p));$}$
public NumberRangeModel(long lo,long hi,long min,long max){$  this(new Long(lo),new Long(hi),new Long(min),new Long(max));$}$
private void prepareBuffers(){$  ByteBuffer[] out1=new ByteBuffer[1];$  ByteBuffer buffer=ByteBuffer.allocate(dimensionValue1.length());$  buffer.put(dimensionValue1.getBytes(Charset.forName(CarbonCommonConstants.DEFAULT_CHARSET)));$  buffer.rewind();$  out1[0]=buffer;$  ByteBuffer[] out2=new ByteBuffer[1];$  ByteBuffer buffer2=ByteBuffer.allocate(dimensionValue2.length());$  buffer2.put(dimensionValue2.getBytes(Charset.forName(CarbonCommonConstants.DEFAULT_CHARSET)));$  buffer2.rewind();$  out2[0]=buffer2;$  byte[] arr1=packByteBufferIntoSingleByteArray(out1);$  byte[] arr2=packByteBufferIntoSingleByteArray(out2);$  buff1=ByteBuffer.wrap(arr1);$  buff1.position(4);$  buff1.limit(buff1.position() + dimensionValue1.length());$  buff2=ByteBuffer.wrap(arr2);$  buff2.position(4);$  buff2.limit(buff2.position() + dimensionValue2.length());$}$
public static String toDateString(java.util.Date date,String format){$  if (date == null)   return "";$  SimpleDateFormat dateFormat=null;$  if (format != null) {$    dateFormat=new SimpleDateFormat(format);$  }$ else {$    dateFormat=new SimpleDateFormat();$  }$  Calendar calendar=Calendar.getInstance();$  calendar.setTime(date);$  return dateFormat.format(date);$}$
protected void checkAndSendNotation(Notation not){$  if (isRootDocument()) {$    int index=fNotations.indexOf(not);$    if (index == -1) {$      XMLResourceIdentifier id=new XMLResourceIdentifierImpl(not.publicId,not.systemId,not.baseURI,not.expandedSystemId);$      addNotation(not.name,id,not.augmentations);$      if (fSendUEAndNotationEvents && fDTDHandler != null) {$        fDTDHandler.notationDecl(not.name,id,not.augmentations);$      }$    }$ else {$      Notation localNotation=(Notation)fNotations.get(index);$      if (!not.isDuplicate(localNotation)) {$        reportFatalError("NonDuplicateNotation",new Object[]{not.name});$      }$    }$  }$ else {$    fParentXIncludeHandler.checkAndSendNotation(not);$  }$}$
private static Scope buildScope(){$  return Scope.build(Scope.R_BASICPROFILE,Scope.R_EMAILADDRESS);$}$
public static void forEachRegistry(ServiceHost serviceHost,String tenantLink,Consumer<Collection<String>> registryLinksConsumer,Consumer<Collection<Throwable>> failureConsumer){$  List<QueryTask> queryTasks=new ArrayList<QueryTask>();$  if (tenantLink != null) {$    queryTasks.add(buildRegistryQueryByGroup(null));$    queryTasks.add(buildRegistryQueryByGroup(tenantLink));$  }$ else {$    queryTasks.add(buildAllRegistriesQuery());$  }$  List<Operation> queryOperations=new ArrayList<>();$  for (  QueryTask queryTask : queryTasks) {$    queryOperations.add(Operation.createPost(UriUtils.buildUri(serviceHost,ServiceUriPaths.CORE_QUERY_TASKS)).setBody(queryTask).setReferer(serviceHost.getUri()));$  }$  if (!queryOperations.isEmpty()) {$    OperationJoin.create(queryOperations.toArray(new Operation[0])).setCompletion(null).sendWith(serviceHost);$  }$ else {$    registryLinksConsumer.accept(Collections.emptyList());$  }$}$
public ArithmeticExpression(int operation,Expression left,Expression right){$  super(operation,ADD,MOD,left,right);$  m_type=null;$}$
public static int daysInFebruary(int year){$  return (((year % 4 == 0) && ((!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28);$}$
public int insertBefore(int parentIndex,int newChildIndex,int refChildIndex){$  if (refChildIndex == -1) {$    appendChild(parentIndex,newChildIndex);$    return newChildIndex;$  }$  int nchunk=newChildIndex >> CHUNK_SHIFT;$  int nindex=newChildIndex & CHUNK_MASK;$  int rchunk=refChildIndex >> CHUNK_SHIFT;$  int rindex=refChildIndex & CHUNK_MASK;$  int previousIndex=getChunkIndex(fNodePrevSib,rchunk,rindex);$  setChunkIndex(fNodePrevSib,newChildIndex,rchunk,rindex);$  setChunkIndex(fNodePrevSib,previousIndex,nchunk,nindex);$  return newChildIndex;$}$
public static <K,V>boolean putMapNotNullKey(Map<K,V> map,K key,V value){$  if (map == null || key == null) {$    return false;$  }$  map.put(key,value);$  return true;$}$
public static boolean hasNameChanged(final ISourceDataTag sourceDataTag,final ISourceDataTag oldSourceDataTag){$  return !sourceDataTag.getName().equals(oldSourceDataTag.getName());$}$
@Override protected void onCreate(Bundle savedInstanceState){$  super.onCreate(savedInstanceState);$  setContentView(R.layout.activity_bluetooth);$  setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);$  unpairedListView=(ListView)findViewById(R.id.unpairedListView);$  mBluetoothAdapter=BluetoothAdapter.getDefaultAdapter();$  if (mBluetoothAdapter == null) {$    Toast.makeText(Bluetooth.this,"Sorry, Your device doesn't support Bluetooth !",Toast.LENGTH_SHORT).show();$  }$ else {$    if (mBluetoothAdapter.isEnabled()) {$      mBluetoothAdapter.disable();$    }$    Intent enableBtIntent=new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);$    startActivityForResult(enableBtIntent,REQUEST_ENABLE_BT);$  }$  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);$}$
public LabelRenderer(){$}$
public NonSquareOperatorException(int wrong,int expected){$  super(org.hipparchus.migration.exception.util.LocalizedFormats.NON_SQUARE_OPERATOR,wrong,expected);$}$
private ClassLoader lookupLoader(final URL[] urls,final ClassLoader parent){$  if (urls == null) {$    return parent;$  }$synchronized (loaderTable) {$    Object ref;$    while ((ref=refQueue.poll()) != null) {$      if (ref instanceof LoaderKey) {$        LoaderKey key=(LoaderKey)ref;$        loaderTable.remove(key);$      }$ else       if (ref instanceof LoaderEntry) {$        LoaderEntry entry=(LoaderEntry)ref;$        if (!entry.removed) {$          loaderTable.remove(entry.key);$        }$      }$    }$    LoaderKey key=new LoaderKey(urls,parent);$    LoaderEntry entry=(LoaderEntry)loaderTable.get(key);$    ClassLoader loader;$    if (entry == null || (loader=(ClassLoader)entry.get()) == null) {$      if (entry != null) {$        loaderTable.remove(key);$        entry.removed=true;$      }$      loader=findOriginLoader(urls,parent);$      if (loader == null) {$        loader=createClassLoader(urls,parent,requireDlPerm);$      }$      entry=new LoaderEntry(key,loader);$      loaderTable.put(key,entry);$    }$    return loader;$  }$}$
protected void mouseClicked(int mouseX,int mouseY,int mouseButton){$  this.buttonId=null;$  if (mouseButton != 0 || !this.guiList.mouseClicked(mouseX,mouseY,mouseButton)) {$    try {$      super.mouseClicked(mouseX,mouseY,mouseButton);$    }$ catch (    IOException e) {$      e.printStackTrace();$    }$  }$}$
public boolean isClosed(){$  return journalWriter == null;$}$
public void flushChanges(){$  for (  GradleEditorEntityTable table : myTablesByGroupName.values()) {$    if (table.isEditing()) {$      table.getCellEditor().stopCellEditing();$    }$  }$}$
public PhotosDeleteCommentQuery(VkApiClient client,UserActor actor,int commentId){$  super(client,"photos.deleteComment",BoolInt.class);$  accessToken(actor.getAccessToken());$  commentId(commentId);$}$
private final StringBuilder appendParameterSignature(StringBuilder buffer,char[][] parameterTypes,char[][] parameterNames){$  if (parameterTypes != null) {$    for (int i=0; i < parameterTypes.length; i++) {$      if (i > 0) {$        buffer.append(',');$        buffer.append(' ');$      }$      buffer.append(parameterTypes[i]);$      if (parameterNames != null && parameterNames[i] != null) {$        buffer.append(' ');$        buffer.append(parameterNames[i]);$      }$    }$  }$  return buffer;$}$
public AccountGetBannedQuery offset(Integer value){$  return unsafeParam("offset",value);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_FPHeal_INTERVAL_ME_TO_B(String skilltarget,int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200519,skilltarget,num0,skillname);$}$
public void simulateMethod(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  String subSignature=method.getSubSignature();${$    defaultMethod(method,thisVar,returnVar,params);$    return;$  }$}$
@SuppressWarnings({"unchecked","cast"}) public ConstructorDecl fullCopy(){$  ConstructorDecl tree=(ConstructorDecl)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
private void grow(int newLength){$  if (newLength < segments.length)   throw new IllegalArgumentException("grow(newLine=" + newLength + "): can't grow smaller");$ else   if (newLength > segments.length) {$    final int[][] tmp=new int[newLength][];$    System.arraycopy(segments,0,tmp,0,segments.length);$    for (int i=segments.length; i < newLength; i++) {$      tmp[i]=new int[SEGMENT_SIZE];$    }$    segments=tmp;$  }$}$
private void pickBaseLineConnections(ScoutWidget[] list){$  final int baseline=Direction.BASE.getDirection();$  final int north=Direction.NORTH.getDirection();$  final int south=Direction.SOUTH.getDirection();$  final int east=Direction.EAST.getDirection();$  final int west=Direction.WEST.getDirection();$  for (int i=1; i < len; i++) {$    float[][] widgetProbability=mProbability[i];$    if (widgetProbability == null || widgetProbability[baseline] == null) {$      continue;$    }$    float maxValue=0.0f;$    float maxNorth=widgetProbability[north][Utils.max(widgetProbability[north])];$    float maxSouth=widgetProbability[south][Utils.max(widgetProbability[south])];$    int maxIndex=Utils.max(widgetProbability[baseline]);$    float maxBaseline=widgetProbability[baseline][maxIndex];$    if (maxBaseline < maxNorth || maxBaseline < maxSouth) {$      continue;$    }$    String s;$    if (DEBUG) {$      System.out.println(" b check " + list[i] + " "+ widgetProbability[4][maxIndex]);$      s=list[i] + "(" + Direction.toString(baseline)+ ") -> "+ list[maxIndex]+ " "+ Direction.toString(baseline);$      System.out.println("try " + s);$    }$    if (list[i].setConstraint(baseline,list[maxIndex],baseline,0)) {$      Utils.zero(mBinaryProbability[i][Direction.ORIENTATION_VERTICAL]);$      Arrays.fill(widgetProbability[baseline],0.0f);$      widgetProbability[north]=null;$      Arrays.fill(widgetProbability[south],0.0f);$      if (DEBUG) {$        System.out.println("connect " + s);$      }$    }$  }$}$
public static void usage(){$  System.out.println(VERSION);$  System.out.println("Usage:");$  System.out.println("    -dumpASCII file : dump the final wave to file");$  System.out.println("    -dumpAudio file : dump audio to file ");$  System.out.println("    -help           : shows usage information");$  System.out.println("    -detailedMetrics: turn on detailed metrics");$  System.out.println("    -dumpRelations  : dump the relations ");$  System.out.println("    -dumpUtterance  : dump the final utterance");$  System.out.println("    -metrics        : turn on metrics");$  System.out.println("    -run  name      : sets the name of the run");$  System.out.println("    -silent         : don't say anything");$  System.out.println("    -verbose        : verbose output");$  System.out.println("    -version        : shows version number");$  System.out.println("    -timeTest       : runs a lengthy time test");$  System.out.println("    -iter count     : run for count iterations");$  System.out.println("    -time XX:XX     : speak the given time");$  System.out.println("    -time now       : speak the current time");$  System.out.println("    -period secs    : period of iter");$  System.out.println("    -clockMode      : tells time every 5 mins");$  System.out.println("    -voice VOICE    : " + VoiceManager.getInstance().toString());$  System.exit(0);$}$
@Override public void actionPerformed(ActionEvent ev){$  executeImmediately(getSyntax());$}$
public static String readFileToString(File file,Charset encoding) throws IOException {$  InputStream in=null;$  try {$    in=openInputStream(file);$    return IOUtils.toString(in,Charsets.toCharset(encoding));$  }$  finally {$    IOUtils.closeQuietly(in);$  }$}$
public static boolean lenientOn(){$  return "lenient".equals(UtilProperties.getPropertyValue("minilang.properties","validation.level"));$}$
private void destroyChildGroup(ThreadGroup group){$  int numChildren=group.activeGroupCount();$  if (numChildren == 0)   return;$  ThreadGroup[] children=new ThreadGroup[numChildren];$  int numGroups=group.enumerate(children);$  for (int i=0; i < numGroups; i++) {$    children[i].interrupt();$    destroyChildGroup(children[i]);$  }$}$
public static void copyFile(String source,String dest) throws IOException {$  File sourceFile=new File(source);$  File destFile=new File(dest);$  FileChannel inputChannel=null;$  FileChannel outputChannel=null;$  try {$    inputChannel=new FileInputStream(sourceFile).getChannel();$    outputChannel=new FileOutputStream(destFile).getChannel();$    outputChannel.transferFrom(inputChannel,0,inputChannel.size());$  }$  finally {$    try {$      inputChannel.close();$      outputChannel.close();$    }$ catch (    IOException e) {$      e.printStackTrace();$    }$  }$}$
public void action(){$synchronized (myAgent) {$    NGramDocumentComparatorAgent a=(NGramDocumentComparatorAgent)myAgent;$    ACLMessage msg=new ACLMessage(ACLMessage.INFORM);$    msg.setSender(a.getAID());$    msg.addReceiver(a.ResultConsumer);$    try {$      msg.setContentObject(Result);$    }$ catch (    IOException ex) {$      System.err.println("Cannot add result to message. Sending empty message.");$      ex.printStackTrace(System.err);$    }$    a.send(msg);$  }$}$
public void nullify(){$  for (int iNGramSize=MinSize; iNGramSize <= MaxSize; iNGramSize++) {$    UniqueVertexGraph gCurLevel=getGraphLevelByNGramSize(iNGramSize);$    java.util.Iterator iIter=gCurLevel.getEdgeSet().iterator();$    while (iIter.hasNext()) {$      WeightedEdge weEdge=(WeightedEdge)iIter.next();$      weEdge.setWeight(0.0);$    }$  }$}$
@SuppressWarnings({"unchecked","cast"}) public ElementAnnotationValue fullCopy(){$  ElementAnnotationValue tree=(ElementAnnotationValue)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public static float max(float a,float b){$  return (a >= b) ? a : b;$}$
public static boolean contentEqualsIgnoreEOL(Reader input1,Reader input2) throws IOException {$  BufferedReader br1=toBufferedReader(input1);$  BufferedReader br2=toBufferedReader(input2);$  String line1=br1.readLine();$  String line2=br2.readLine();$  while (line1 != null && line2 != null && line1.equals(line2)) {$    line1=br1.readLine();$    line2=br2.readLine();$  }$  return line1 == null ? line2 == null ? true : false : line1.equals(line2);$}$
public PhotosGetByIdQuery photoSizes(Boolean value){$  return unsafeParam("photo_sizes",value);$}$
public InGroupPredicate(String group){$  super(group);$}$
public Set<String> pullingUpdatedConfigs(Map<String,String> configItemMaps,int readTimeout){$  Map<String,Object> params=Maps.newHashMapWithExpectedSize(1);$  params.put("configs",JsonUtil.INSTANCE.toJson(configItemMaps));$  return doPost(ClientUris.CONFIG_PULLING,headers,params,readTimeout,Set.class);$}$
public void testXmlRpcRequest() throws Exception {$  XmlRpcClient client=this.getRpcClient(url,"admin","ofbiz");$  Object[] params=new Object[]{55.00,"message from xml-rpc client"};$  Map<String,Object> result=UtilGenerics.cast(client.execute("testScv",params));$  assertEquals("XML-RPC Service result success","service done",result.get("resp"));$}$
public static String readFileToString(File file,Charset encoding) throws IOException {$  InputStream in=null;$  try {$    in=openInputStream(file);$    return IOUtils.toString(in,Charsets.toCharset(encoding));$  }$  finally {$    IOUtils.closeQuietly(in);$  }$}$
@Override public void suiteStart(){$  throw new UnsupportedOperationException();$}$
public BoardFixTopicQuery fixTopic(UserActor actor,int groupId,int topicId){$  return new BoardFixTopicQuery(getClient(),actor,groupId,topicId);$}$
public IntIterator rangeSortedBy(String field,long lo,long hi,int indexType){$  Index index=getIndex(field,long.class,true);$  return index.rows(lo,hi,indexType);$}$
public void updateView(){$  Set<Integer> needToBeUncollapsed=new HashSet<>();$  for (  Integer taxId : toSelectTaxonIds) {$    if (mainViewer.getTaxId2Node(taxId) == null) {$      needToBeUncollapsed.add(taxId);$    }$  }$  if (needToBeUncollapsed.size() > 0) {$    Set<Integer> toDelete=new HashSet<>();$    for (    int t : needToBeUncollapsed) {$      Node v=TaxonomyData.getTree().getANode(t);$      while (v.getInDegree() > 0) {$        v=v.getFirstInEdge().getSource();$        int vt=(Integer)v.getInfo();$        toDelete.add(vt);$      }$    }$    needToBeUncollapsed.removeAll(toDelete);$    for (    int t : needToBeUncollapsed) {$      Node v=TaxonomyData.getTree().getANode(t);$      while (v.getInDegree() > 0) {$        Node w=v.getFirstInEdge().getSource();$        int wt=(Integer)v.getInfo();$        if (mainViewer.getCollapsedIds().contains(wt)) {$          mainViewer.getCollapsedIds().remove(wt);$          break;$        }$        for (Edge e=w.getFirstOutEdge(); e != null; e=w.getNextOutEdge(e)) {$          Node u=e.getTarget();$          if (u != v) {$            mainViewer.getCollapsedIds().add((Integer)u.getInfo());$          }$        }$        v=w;$      }$    }$    mainViewer.setDoReInduce(true);$    mainViewer.updateView(Director.ALL);$  }$  toSelect.clear();$  for (  int t : toSelectTaxonIds) {$    toSelect.add(mainViewer.getTaxId2Node(t));$  }$  toDeselect.clear();$  for (  int t : toDeSelectTaxonIds) {$    toDeselect.add(mainViewer.getTaxId2Node(t));$  }$  mainViewer.selectedNodes.addAll(toSelect);$  mainViewer.fireDoSelect(toSelect);$  Node v=toSelect.getLastElement();$  if (v != null) {$    final Point p=mainViewer.trans.w2d(mainViewer.getLocation(v));$    if (mainViewer.getFoundNode() == null)     mainViewer.setFoundNode(v);$    mainViewer.scrollRectToVisible(new Rectangle(p.x - 60,p.y - 25,120,50));$  }$  mainViewer.selectedNodes.removeAll(toDeselect);$  mainViewer.fireDoDeselect(toDeselect);$  toSelect.clear();$  toDeselect.clear();$  mainViewer.repaint();$  toSelectTaxonIds.clear();$  toDeSelectTaxonIds.clear();$  mainViewer.repaint();$}$
@NotNull public ThreeState isSyncNeeded(){$  long lastSync=getLastGradleSyncTimestamp();$  if (lastSync < 0) {$    return ThreeState.UNSURE;$  }$  return isSyncNeeded(lastSync) ? ThreeState.YES : ThreeState.NO;$}$
public int findRow(String name){$  for (int row=0; row < getRowCount(); row++)   if (getRowName(row).equals(name))   return row;$  return -1;$}$
public boolean dnsDomainIs(String host,String domain){$  return host.endsWith(domain);$}$
public double doGraphCompareToSet(String sSummaryTextFile,Set<String> ssModelFiles,String sGraphModelClassName,String sComparatorClassName,int iMinNGramRank,int iMaxNGramRank,int iNGramDist){$  throw new NotImplementedException();$}$
public ResourcesPoet addIntegerArrayStrings(String name,@NotNull List<String> values){$  Element element=document.createElement("integer-array");$  element.setAttribute("name",name);$  for (  String value : values) {$    Element valueElement=document.createElement("item");$    valueElement.appendChild(document.createTextNode(value));$    element.appendChild(valueElement);$  }$  resourceElement.appendChild(element);$  return this;$}$
public static <T>void addToJMenu(JPopupMenu popupMenu,T[] choices,T initialChoice,final CallBack<T> callBack){$  add(popupMenu,choices,initialChoice,callBack);$}$
public void or(Criteria criteria){$  oredCriteria.add(criteria);$}$
private void loadProxySettings(){$  this.httpProxy=System.getenv(this.httpEnv);$  this.httpsProxy=System.getenv(this.httpsEnv);$  this.ftpProxy=System.getenv(this.ftpEnv);$  this.noProxy=System.getenv(this.noProxyEnv);$}$
public ItemStack(final Material type,final int amount){$  this(type.getId(),amount);$}$
public void clear(){$  oredCriteria.clear();$  orderByClause=null;$  distinct=false;$}$
public TestLogAppender(){$  logger=(Logger)LoggerFactory.getILoggerFactory().getLogger(ROOT_LOGGER_NAME);$  logger.addAppender(this);$  setContext(logger.getLoggerContext());$  start();$}$
public PhotosObject(Activity a,int photosType){$  this.adapter=new PhotoAdapter(a,new ArrayList<Photo>());$  this.service=PhotoService.getService();$  this.requestKey=Mysplash.getInstance().getUser();$  this.photosType=photosType;$  this.photosOrder=PhotoApi.ORDER_BY_LATEST;$  this.photosPage=0;$  this.refreshing=false;$  this.loading=false;$  this.over=false;$}$
protected void writeNetscapeExt() throws IOException {$  out.write(0x21);$  out.write(0xff);$  out.write(11);$  writeString("NETSCAPE" + "2.0");$  out.write(3);$  out.write(1);$  writeShort(repeat);$  out.write(0);$}$
@Override public boolean equals(Object o){$  return o instanceof AirMapPilotPermit && getId().equals(((AirMapPilotPermit)o).getId());$}$
public void addGlobalGroupDecl(XSGroupDecl decl){$  fGlobalGroupDecls.put(decl.fName,decl);$  decl.setNamespaceItem(this);$}$
@SuppressWarnings({"unchecked","cast"}) public Annotation fullCopy(){$  Annotation tree=(Annotation)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
private static boolean hasSpecializedHandlerIntents(Context context,Intent intent){$  try {$    PackageManager pm=context.getPackageManager();$    List<ResolveInfo> handlers=pm.queryIntentActivities(intent,PackageManager.GET_RESOLVED_FILTER);$    if (handlers == null || handlers.size() == 0) {$      return false;$    }$    for (    ResolveInfo resolveInfo : handlers) {$      IntentFilter filter=resolveInfo.filter;$      if (filter == null)       continue;$      if (filter.countDataAuthorities() == 0 || filter.countDataPaths() == 0)       continue;$      if (resolveInfo.activityInfo == null)       continue;$      return true;$    }$  }$ catch (  RuntimeException e) {$    Log.e(TAG,"Runtime exception while getting specialized handlers");$  }$  return false;$}$
public boolean computeScrollOffset(long time){$  if (isFinished()) {$    return false;$  }$switch (mMode) {$case SCROLL_MODE:$    final long elapsedTime=time - mScrollerX.mStartTime;$  final int duration=mScrollerX.mDuration;$if (elapsedTime < duration) {$  float q=(float)(elapsedTime) / duration;$  q=viscousFluid(q);$  mScrollerX.updateScroll(q);$  mScrollerY.updateScroll(q);$}$ else {$  abortAnimation();$}$break;$case FLING_MODE:$if (!mScrollerX.mFinished) {$if (!mScrollerX.update(time)) {$if (!mScrollerX.continueWhenFinished(time)) {$  mScrollerX.finish();$}$}$}$if (!mScrollerY.mFinished) {$if (!mScrollerY.update(time)) {$if (!mScrollerY.continueWhenFinished(time)) {$mScrollerY.finish();$}$}$}$break;$default :$break;$}$return true;$}$
public MaryHeader(int newType){$  if ((newType > TIMELINE) || (newType < UNKNOWN)) {$    throw new IllegalArgumentException("Unauthorized Mary file type [" + type + "].");$  }$  type=newType;$  assert version == VERSION;$  assert hasLegalMagic();$  assert hasLegalType();$}$
public Well19937a(){$  super(K);$}$
private final int popPEStack(){$  return fPEStack[--fPEDepth];$}$
public static String sampaEn2sampaDe(String En){$  String result=En;$  if (sampaEn2sampaDe.containsKey(En)) {$    result=sampaEn2sampaDe.get(En);$  }$  return result;$}$
public void loadCommentHistory(){$  IPath pluginStateLocation=SVNUIPlugin.getPlugin().getStateLocation().append(COMMENT_HIST_FILE);$  File file=pluginStateLocation.toFile();$  if (!file.exists())   return;$  try {$    BufferedInputStream is=new BufferedInputStream(new FileInputStream(file));$    try {$      SAXParserFactory factory=SAXParserFactory.newInstance();$      try {$        SAXParser parser=factory.newSAXParser();$        parser.parse(new InputSource(is),new CommentHistoryContentHandler());$      }$ catch (      SAXException ex) {$        throw new SVNException(Policy.bind("RepositoryManager.parsingProblem",COMMENT_HIST_FILE),ex);$      }$catch (      ParserConfigurationException e) {$        throw new SVNException(Policy.bind("RepositoryManager.parsingProblem",COMMENT_HIST_FILE),e);$      }$    }$  finally {$      is.close();$    }$  }$ catch (  IOException e) {$    SVNUIPlugin.log(new Status(IStatus.ERROR,SVNUIPlugin.ID,TeamException.UNABLE,Policy.bind("RepositoryManager.ioException"),e));$  }$catch (  TeamException e) {$    SVNUIPlugin.log(e.getStatus());$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_CaseHeal_INTERVAL_A_TO_B(String skilltarget,int num0,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200952,skilltarget,num0,skillcaster,skillname);$}$
@RequestMapping(method=RequestMethod.POST) ResponseEntity<Bookmark> addBookmark(@PathVariable(value="username") String username,@RequestBody Bookmark bookmark) throws UserNotFoundException {$  Optional<User> optional=usersRepository.findByUsername(username);$  if (optional.isPresent()) {$    User user=optional.get();$    user.addBookmark(bookmark);$    bookmark.setUser(user);$    bookmarksRepository.save(bookmark);$    return new ResponseEntity<>(bookmark,HttpStatus.CREATED);$  }$ else {$    throw new UserNotFoundException(username);$  }$}$
private String stringToConstant(String string){$  int length=string.length();$  for (int i=0; i < length; i++) {$    char character=string.charAt(i);$    if (character != "_".charAt(0) && Character.isUpperCase(character) && i != 0) {$      String firstPart=string.substring(0,i);$      String secondPart=string.substring(i,length);$      String newFirstPart=firstPart + "_";$      string=newFirstPart + secondPart;$      i=newFirstPart.length();$      length++;$    }$  }$  return string;$}$
@Override protected void synchronizeChildren(){$  needsSyncChildren(false);$  DocumentType doctype;$  NamedNodeMap entities;$  EntityImpl entDef;$  if (null != (doctype=getOwnerDocument().getDoctype()) && null != (entities=doctype.getEntities())) {$    entDef=(EntityImpl)entities.getNamedItem(getNodeName());$    if (entDef == null)     return;$    isReadOnly(false);$    for (Node defkid=entDef.getFirstChild(); defkid != null; defkid=defkid.getNextSibling()) {$      Node newkid=defkid.cloneNode(true);$      insertBefore(newkid,null);$    }$    setReadOnly(true,true);$  }$}$
public Message receive(long timeout) throws JMSException {$  if (m_closed) {$    return null;$  }$  if (m_session.m_msgListeners.getValue() != 0) {$    throw new IllegalStateException("Forbidden call to receive() on asynchronous session.");$  }$  if (_logger.isLoggable(Level.FINE)) {$    _logger.log(Level.FINE,toString2() + "GSMessageConsumerImpl.receive()");$  }$  if (timeout == Message.DEFAULT_TIME_TO_LIVE) {$    timeout=Lease.FOREVER;$  }$  long startTime=0;$  GSMessageImpl message=null;$  while (!m_closed && timeout > 10) {$    try {$      startTime=SystemTime.timeMillis();$synchronized (m_session.stopMonitor) {$        if (m_session.m_stopped) {$          if (_logger.isLoggable(Level.FINE)) {$            _logger.log(Level.FINE,toString2() + "receive(): Waiting on a stopped session.");$          }$          try {$            m_session.stopMonitor.wait(timeout);$          }$ catch (          InterruptedException e) {$            if (_logger.isLoggable(Level.SEVERE)) {$              _logger.log(Level.SEVERE,toString2() + "receive(): Interrupted while waiting on a stopped session: " + e);$            }$          }$          if (_logger.isLoggable(Level.FINE)) {$            _logger.log(Level.FINE,toString2() + "receive(): Stopped waiting on a stopped session - restarting iteration.");$          }$          continue;$        }$        if (_logger.isLoggable(Level.FINEST)) {$          _logger.log(Level.FINEST,toString2() + "onProcess=true");$        }$        m_session.onProcess=true;$      }$      if (m_isQueue) {$        if (_logger.isLoggable(Level.FINEST)) {$          _logger.log(Level.FINEST,toString2() + "Retrieving a message from queue.");$        }$        message=receiveFromQueueNoBlock(timeout);$      }$ else {$        if (_logger.isLoggable(Level.FINEST)) {$          _logger.log(Level.FINEST,toString2() + "Retrieving a message from topic.");$        }$        message=receiveFromTopic(timeout);$      }$      if (message == null) {$        continue;$      }$      if (_logger.isLoggable(Level.FINE)) {$        _logger.log(Level.FINE,toString2() + "receive(): Got message: " + message.JMSMessageID);$      }$      if (checkMessageForConsumer(message)) {$        prepareMessageForConsumer(message);$        if (m_session.isAutoAck()) {$          m_session.acknowledge();$          if (m_isQueue && !m_session.isAutoAck()) {$            m_session.renewTransaction();$          }$        }$ else {$          m_session.addUnackedMessage(message,m_consumerID);$        }$        m_session.m_numOfConsumedMsg++;$        break;$      }$ else {$        if (_logger.isLoggable(Level.FINE)) {$          _logger.log(Level.FINE,toString2() + "Message not valid for consumer: " + message.JMSMessageID);$        }$      }$    }$ catch (    ReceiveFromQueueException e) {$      String text="Internal error while fetching a message from a Queue. ";$      if (_logger.isLoggable(Level.SEVERE)) {$        _logger.log(Level.SEVERE,toString2() + text + e.orig);$      }$      if (m_session.isAutoAck()) {$        if (_logger.isLoggable(Level.FINE)) {$          _logger.log(Level.FINE,toString2() + "receive(): Session's ack mode is AUTO_ACKNOWLEDGE" + " or DUPS_OK_ACKNOWLEDGE.\nRenewing transaction.");$        }$      }$ else       if (m_session.m_acknowledgeMode == Session.SESSION_TRANSACTED) {$        if (_logger.isLoggable(Level.FINE)) {$          _logger.log(Level.FINE,toString2() + "receive(): Session's ack mode is SESSION_TRANSACTED.\n" + "Rolling back transaction "+ m_session.getTransaction());$        }$        try {$          m_session.rollback();$        }$ catch (        JMSException e1) {$          if (_logger.isLoggable(Level.SEVERE)) {$            _logger.log(Level.SEVERE,toString2() + "receive(): Failed to roll back transaction");$          }$        }$        TransactionRolledBackException re=new TransactionRolledBackException(text + "Transaction rolled back.");$        re.setLinkedException(e.orig);$        throw re;$      }$ else       if (m_session.m_acknowledgeMode == Session.CLIENT_ACKNOWLEDGE) {$        if (_logger.isLoggable(Level.FINE)) {$          _logger.log(Level.FINE,toString2() + "receive(): Session's ack mode is CLIENT_ACKNOWLEDGE.\n" + "Recovering messages of transaction "+ m_session.getTransaction());$        }$        try {$          m_session.recoverMessages();$        }$ catch (        RollbackFailedException e1) {$          if (_logger.isLoggable(Level.SEVERE)) {$            _logger.log(Level.SEVERE,toString2() + "receive(): Failed to recover messages of transaction " + m_session.getTransaction()+ e1.orig);$          }$        }$        try {$          m_session.renewTransaction();$        }$ catch (        TransactionCreateException e1) {$          if (_logger.isLoggable(Level.SEVERE)) {$            _logger.log(Level.SEVERE,toString2() + "receive(): Failed to renew transaction",e1.orig);$          }$        }$        TransactionRolledBackException re=new TransactionRolledBackException(text + "Transaction rolled back.");$        re.setLinkedException(e.orig);$        throw re;$      }$    }$catch (    CommitFailedException e) {$      String text="Internal error during auto commit. Message=" + message.JMSMessageID + ", Txn="+ m_session.getTransaction();$      if (_logger.isLoggable(Level.SEVERE)) {$        _logger.log(Level.SEVERE,toString2() + text + e.orig);$      }$      try {$        m_session.renewTransaction();$      }$ catch (      TransactionCreateException e1) {$        if (_logger.isLoggable(Level.SEVERE)) {$          _logger.log(Level.SEVERE,toString2() + "receive(): Failed to renew transaction: " + e1.orig);$        }$      }$    }$catch (    TransactionCreateException e) {$      if (_logger.isLoggable(Level.SEVERE)) {$        _logger.log(Level.SEVERE,toString2() + "receive(): Failed to renew transaction: " + e.orig);$      }$      break;$    }$ finally {$      long now=SystemTime.timeMillis();$      timeout=timeout - (now - startTime);$synchronized (m_session.stopMonitor) {$        if (m_session.onProcess) {$          if (_logger.isLoggable(Level.FINEST)) {$            _logger.log(Level.FINEST,toString2() + "onProcess=false");$          }$          m_session.onProcess=false;$          m_session.stopMonitor.notifyAll();$        }$      }$    }$  }$  return (Message)message;$}$
public static UserLayer createNewUserLayer(){$  UserLayer userLayer=styleFactory.createUserLayer();$  return userLayer;$}$
public double[] generate(int nSamples){$  int m=nSamples / 2;$  double r;$  double pi=Math.PI;$  double[] w=new double[nSamples];$switch (windowType) {$case BARTLETT:$    for (int n=0; n < nSamples; n++)     w[n]=1.0f - Math.abs(n - m) / m;$  break;$case HANNING:$r=pi / (m + 1);$for (int n=-m; n < m; n++) w[m + n]=0.5f + 0.5f * Math.cos(n * r);$break;$case HAMMING:$r=pi / m;$for (int n=-m; n < m; n++) w[m + n]=0.54f + 0.46f * Math.cos(n * r);$break;$case BLACKMAN:$r=pi / m;$for (int n=-m; n < m; n++) w[m + n]=0.42f + 0.5f * Math.cos(n * r) + 0.08f * Math.cos(2 * n * r);$break;$default :$for (int n=0; n < nSamples; n++) w[n]=1.0f;$}$return w;$}$
private VendorOptionManager(){$  internal_addVendorOption(new NoVendorOption());$  internal_addVendorOption(new GeoServerVendorOption());$  populate();$}$
@Override public void updateValue(String key,String value){$  boolean dataUpdated=false;$  if (fieldValueMap.containsKey(key)) {$    if (fieldValueMap.get(key).compareTo(value) != 0) {$      dataUpdated=true;$      fieldValueMap.put(key,value);$    }$  }$ else {$    dataUpdated=true;$    fieldValueMap.put(key,value);$  }$  if (dataUpdated) {$    writeConfigFile();$  }$}$
public Builder discCacheExtraOptions(int maxImageWidthForDiscCache,int maxImageHeightForDiscCache,CompressFormat compressFormat,int compressQuality,BitmapProcessor processorForDiscCache){$  this.maxImageWidthForDiscCache=maxImageWidthForDiscCache;$  this.maxImageHeightForDiscCache=maxImageHeightForDiscCache;$  this.imageCompressFormatForDiscCache=compressFormat;$  this.imageQualityForDiscCache=compressQuality;$  this.processorForDiscCache=processorForDiscCache;$  return this;$}$
private void distributeExtraSpace(int extraHeight){$  int topSpacerHeight;$  int middleSpacerHeight;$  int bottomSpacerHeight;$  if (extraHeight < mTotalSpacerHeight) {$    topSpacerHeight=Math.round(extraHeight * (TOP_SPACER_HEIGHT_DP / TOTAL_SPACER_HEIGHT_DP));$    extraHeight-=topSpacerHeight;$    middleSpacerHeight=Math.round(extraHeight * (MIDDLE_SPACER_HEIGHT_DP / (MIDDLE_SPACER_HEIGHT_DP + BOTTOM_SPACER_HEIGHT_DP)));$    extraHeight-=middleSpacerHeight;$    bottomSpacerHeight=extraHeight;$  }$ else {$    topSpacerHeight=mTopSpacerHeight;$    middleSpacerHeight=mMiddleSpacerHeight;$    bottomSpacerHeight=mBottomSpacerHeight;$    extraHeight-=mTotalSpacerHeight;$    topSpacerHeight+=(extraHeight + 1) / 2;$    bottomSpacerHeight+=extraHeight / 2;$  }$  int widthSpec=MeasureSpec.makeMeasureSpec(0,MeasureSpec.EXACTLY);$  mTopSpacer.measure(widthSpec,MeasureSpec.makeMeasureSpec(topSpacerHeight,MeasureSpec.EXACTLY));$  mMiddleSpacer.measure(widthSpec,MeasureSpec.makeMeasureSpec(middleSpacerHeight,MeasureSpec.EXACTLY));$  mBottomSpacer.measure(widthSpec,MeasureSpec.makeMeasureSpec(bottomSpacerHeight,MeasureSpec.EXACTLY));$}$
private BooleanQuery startswithFilterQuery(String luceneFieldName,ApiFilter filter){$  return filter.getValues().stream().map(null).map(null).collect(getBooleanQueryCollector(BooleanClause.Occur.SHOULD)).build();$}$
@Override public void endElement(String name) throws SAXException {$  if (saxParser != null) {$    saxParser.endElement(name);$  }$}$
public boolean isSelected(){$  ClusterViewer viewer=getViewer();$  return viewer.getPcoaTab() != null && viewer.getPcoaTab().getFirstPC() == 1 && viewer.getPcoaTab().getSecondPC() == 2 && !viewer.getPcoaTab().isIs3dMode();$}$
private AttackGymResponse doActions(List<BattleAction> actions) throws LoginFailedException, RemoteServerException {$  AttackGymMessage.Builder message=AttackGymMessage.newBuilder().setGymId(gym.getId()).setPlayerLatitude(api.getLatitude()).setPlayerLongitude(api.getLongitude()).setBattleId(battleResponse.getBattleId());$  for (  BattleAction action : actions) {$    message.addAttackActions(action);$  }$  ServerRequest serverRequest=new ServerRequest(RequestType.ATTACK_GYM,message.build());$  api.getRequestHandler().sendServerRequests(serverRequest);$  try {$    AttackGymResponse response=AttackGymResponse.parseFrom(serverRequest.getData());$    if (response.getBattleLog().getState() == BattleState.DEFEATED || response.getBattleLog().getState() == BattleState.VICTORY || response.getBattleLog().getState() == BattleState.TIMED_OUT) {$      concluded=true;$    }$    outcome=response.getBattleLog().getState();$    return response;$  }$ catch (  InvalidProtocolBufferException e) {$    throw new RemoteServerException();$  }$}$
protected PhotosEditQuery photoId(int value){$  return unsafeParam("photo_id",value);$}$
static public InputStream findClusterXSLSchema(String _clusterXSLSchema) throws ClusterConfigurationException {$  String schemaNameToBeUsed=_clusterXSLSchema;$  if (schemaNameToBeUsed.equalsIgnoreCase(ClusterXML.CLUSTER_SCHEMA_NAME_PARTITIONED_SYNC2BACKUP))   schemaNameToBeUsed=ClusterXML.CLUSTER_SCHEMA_NAME_PARTITIONED;$  InputStream schemaInputStream;$  String schemaFilePath=Constants.Container.CONTAINER_CONFIG_DIRECTORY + "/" + Constants.Schemas.SCHEMAS_FOLDER+ "/"+ schemaNameToBeUsed+ ClusterXML.CLUSTER_SCHEMA_XSL_FILE_SUFFIX;$  schemaInputStream=getResourceStream(schemaFilePath);$  if (schemaInputStream != null) {$    if (_logger.isLoggable(Level.FINE)) {$      _logger.fine("Loaded the cluster xsl schema < " + getResourceURL(schemaFilePath) + " > for the cluster config setup.");$    }$    return schemaInputStream;$  }$ else {$    String missingSchemaMsg="Could not find the cluster xsl schema file: " + _clusterXSLSchema;$    throw new ClusterConfigurationException(missingSchemaMsg);$  }$}$
public PhotosGetAllQuery photoSizes(Boolean value){$  return unsafeParam("photo_sizes",value);$}$
protected void computeWeightsForPts(){$  int i;$  int s, t;$  off_graph_edge p;$  IVarAbstraction node;$  pre_cnt=0;$  for (i=0; i < n_var; ++i) {$    pre[i]=-1;$    count[i]=0;$    rep[i]=i;$    repsize[i]=1;$    node=int2var.get(i);$    node.top_value=Integer.MIN_VALUE;$  }$  for (i=0; i < n_var; ++i)   if (pre[i] == -1)   tarjan_scc(i);$  for (i=0; i < n_var; ++i) {$    p=varGraph.get(i);$    s=find_parent(i);$    while (p != null) {$      t=find_parent(p.t);$      if (t != s)       count[t]++;$      p=p.next;$    }$  }$  for (i=0; i < n_var; ++i) {$    p=varGraph.get(i);$    if (p != null && rep[i] != i) {$      t=find_parent(i);$      while (p.next != null)       p=p.next;$      p.next=varGraph.get(t);$      varGraph.set(t,varGraph.get(i));$      varGraph.set(i,null);$    }$  }$  queue.clear();$  for (i=0; i < n_var; ++i)   if (rep[i] == i && count[i] == 0)   queue.addLast(i);$  i=0;$  while (!queue.isEmpty()) {$    s=queue.getFirst();$    queue.removeFirst();$    node=int2var.get(s);$    node.top_value=i;$    i+=repsize[s];$    p=varGraph.get(s);$    while (p != null) {$      t=find_parent(p.t);$      if (t != s) {$        if (--count[t] == 0)         queue.addLast(t);$      }$      p=p.next;$    }$  }$  for (i=n_var - 1; i > -1; --i) {$    if (rep[i] != i) {$      node=int2var.get(find_parent(i));$      IVarAbstraction me=int2var.get(i);$      me.top_value=node.top_value + repsize[node.id] - 1;$      --repsize[node.id];$    }$  }$}$
public void start() throws ErlangVersionException, DownloadException, ExtractionException, StartupException {$  if (rabbitMqProcess != null) {$    throw new IllegalStateException("Start shouldn't be called more than once unless stop() has been called before.");$  }$  check();$  download();$  extract();$  run();$}$
public CMM(){$  params=new CMMParams();$}$
public void linkConceptTypes(){$  Set<Rule> rules=getRules();$  LOG.debug(rules.size() + " rules initialized...");$  for (  Rule rule : rules) {$    workingMemory.putIfAbsent(rule.getId(),new InferenceRule(rule,graph));$    if (rule.getHypothesisTypes().isEmpty() && rule.getConclusionTypes().isEmpty()) {$      linkConceptTypes(rule);$    }$  }$}$
public static GeneralPath cardinalSpline(GeneralPath p,float pts[],int start,int npoints,float slack,boolean closed,float tx,float ty){$  int len=2 * npoints;$  int end=start + len;$  if (len < 6) {$    throw new IllegalArgumentException("To create spline requires at least 3 points");$  }$  float dx1, dy1, dx2, dy2;$  if (closed) {$    dx2=pts[start + 2] - pts[end - 2];$    dy2=pts[start + 3] - pts[end - 1];$  }$ else {$    dx2=pts[start + 4] - pts[start];$    dy2=pts[start + 5] - pts[start + 1];$  }$  int i;$  for (i=start + 2; i < end - 2; i+=2) {$    dx1=dx2;$    dy1=dy2;$    dx2=pts[i + 2] - pts[i - 2];$    dy2=pts[i + 3] - pts[i - 1];$    p.curveTo(tx + pts[i - 2] + slack * dx1,ty + pts[i - 1] + slack * dy1,tx + pts[i] - slack * dx2,ty + pts[i + 1] - slack * dy2,tx + pts[i],ty + pts[i + 1]);$  }$  if (closed) {$    dx1=dx2;$    dy1=dy2;$    dx2=pts[start] - pts[i - 2];$    dy2=pts[start + 1] - pts[i - 1];$    p.curveTo(tx + pts[i - 2] + slack * dx1,ty + pts[i - 1] + slack * dy1,tx + pts[i] - slack * dx2,ty + pts[i + 1] - slack * dy2,tx + pts[i],ty + pts[i + 1]);$    dx1=dx2;$    dy1=dy2;$    dx2=pts[start + 2] - pts[end - 2];$    dy2=pts[start + 3] - pts[end - 1];$    p.curveTo(tx + pts[end - 2] + slack * dx1,ty + pts[end - 1] + slack * dy1,tx + pts[0] - slack * dx2,ty + pts[1] - slack * dy2,tx + pts[0],ty + pts[1]);$    p.closePath();$  }$ else {$    p.curveTo(tx + pts[i - 2] + slack * dx2,ty + pts[i - 1] + slack * dy2,tx + pts[i] - slack * dx2,ty + pts[i + 1] - slack * dy2,tx + pts[i],ty + pts[i + 1]);$  }$  return p;$}$
private void BrowseSummaryDirBtnActionPerformed(java.awt.event.ActionEvent evt){$  JFileChooser fc=new JFileChooser();$  fc.setCurrentDirectory((SummariesRootDirEdt.getText().length() == 0) ? new java.io.File(".") : new java.io.File(SummariesRootDirEdt.getText()));$  fc.setSelectedFile(fc.getCurrentDirectory());$  fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);$  int iRet=fc.showOpenDialog(this);$  if (iRet == JFileChooser.APPROVE_OPTION) {$    SummariesRootDirEdt.setText(fc.getSelectedFile().getAbsolutePath());$  }$}$
public int model(){$  return theModel;$}$
public void addMultiOptionGroup(MultiOptionGroup multiOption){$  Map<GroupIdEnum,GroupConfigInterface> panelMap=groupMap.get(panelId);$  if (panelMap == null) {$    panelMap=new HashMap<GroupIdEnum,GroupConfigInterface>();$    groupMap.put(panelId,panelMap);$  }$  if (multiOption != null) {$    panelMap.put(multiOption.getId(),multiOption);$  }$}$
private static byte[] readClass(final InputStream is) throws IOException {$  if (is == null) {$    throw new IOException("Class not found");$  }$  byte[] b=new byte[is.available()];$  int len=0;$  while (true) {$    int n=is.read(b,len,b.length - len);$    if (n == -1) {$      if (len < b.length) {$        byte[] c=new byte[len];$        System.arraycopy(b,0,c,0,len);$        b=c;$      }$      return b;$    }$    len+=n;$    if (len == b.length) {$      byte[] c=new byte[b.length + 1000];$      System.arraycopy(b,0,c,0,len);$      b=c;$    }$  }$}$
public Builder longColumnsMathOp(String newColumnName,MathOp mathOp,String... columnNames){$  return transform(new LongColumnsMathOpTransform(newColumnName,mathOp,columnNames));$}$
private boolean indicateReadCommitted(ITransactionalEntryData entry,ITemplateHolder template){$  if (indicateDirtyRead(template) || !template.isReadCommittedRequested())   return false;$  ServerTransaction est=entry.getWriteLockTransaction();$  if (template.getXidOriginatedTransaction() != null && est != null && template.getXidOriginatedTransaction().equals(est))   return false;$  return true;$}$
private byte[] createBitfield(List<IChunkDescriptor> chunks){$  int chunkCount=chunks.size();$  byte[] bitfield=new byte[(int)Math.ceil(chunkCount / 8d)];$  int completePieces=0;$  int bitfieldIndex=0;$  while (chunkCount > 0) {$    int b=0, offset=bitfieldIndex * 8;$    int k=chunkCount < 8 ? chunkCount : 8;$    for (int i=0; i < k; i++) {$      IChunkDescriptor chunk=chunks.get(offset + i);$      if (chunk.getStatus() == DataStatus.VERIFIED) {$        b+=0b1 << (7 - i);$        completePieces++;$      }$    }$    bitfield[bitfieldIndex]=(byte)b;$    bitfieldIndex++;$    chunkCount-=8;$  }$  this.completePieces.addAndGet(completePieces);$  return bitfield;$}$
public void updateView(){$  if (classificationViewer == null)   classificationViewer=(ClassificationViewer)dir.getViewerByClass(ClassificationViewer.class);$  if (classificationViewer == null)   return;$  classificationViewer.updateView(Director.ALL);$}$
private Entry findEntry(Lease lease) throws UnknownLeaseException {$  Entry e=findEntryDo(lease);$  if (e != null && (e.renew < e.endTime || SystemTime.timeMillis() < e.endTime)) {$    return e;$  }$  throw new UnknownLeaseException();$}$
public ImageSize scale(float scale){$  return new ImageSize((int)(width * scale),(int)(height * scale));$}$
public void recordHit(){$  mIsHit=true;$}$
public XIncludeParserConfiguration(SymbolTable symbolTable,XMLGrammarPool grammarPool){$  this(symbolTable,grammarPool,null);$}$
private void purgeCache(){$  boolean removedOne=false;$  Entry<String,CacheEntry> oldest=null;$  Set<Entry<String,CacheEntry>> entries=this.cache.entrySet();$  for (Iterator<Entry<String,CacheEntry>> it=entries.iterator(); it.hasNext(); ) {$    Entry<String,CacheEntry> entry=it.next();$    if (entry.getValue().isExpired()) {$      it.remove();$      removedOne=true;$    }$ else     if (oldest == null || entry.getValue().expireAt < oldest.getValue().expireAt) {$      oldest=entry;$    }$  }$  if (!removedOne && oldest != null) {$    this.cache.remove(oldest.getKey());$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_ME_TO_B(String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200463,skilltarget,skillname);$}$
public static JsonWriterWithViewHelper withView(Class view){$  return new JsonWriterWithViewHelper(JSON.writerWithView(view));$}$
public static long readVLong(DataInput stream) throws IOException {$  byte firstByte=stream.readByte();$  int len=decodeVIntSize(firstByte);$  if (len == 1) {$    return firstByte;$  }$  long i=0;$  for (int idx=0; idx < len - 1; idx++) {$    byte b=stream.readByte();$    i=i << 8;$    i=i | (b & 0xFF);$  }$  return (isNegativeVInt(firstByte) ? (i ^ -1L) : i);$}$
private static String limitErrorMessage(@NotNull String message){$  int offset=StringUtil.lineColToOffset(message,30,0);$  if (offset < 0) {$    offset=message.length();$  }$  return message.substring(0,Math.min(offset,1024));$}$
public boolean isSrcPrec(){$  return isSrcPrec;$}$
public GammaDistribution(double shape,double scale) throws MathIllegalArgumentException {$  this(shape,scale,DEFAULT_SOLVER_ABSOLUTE_ACCURACY);$}$
public boolean hasSuperClassAccess(){$  return getSuperClassAccessOpt().getNumChild() != 0;$}$
public static void e(String tag,String msg,Object... args){$  if (sLevel > LEVEL_ERROR) {$    return;$  }$  if (args.length > 0) {$    msg=String.format(msg,args);$  }$  Log.e(tag,msg);$}$
public void loadData(String path){$  if (path == null) {$    LogUtils.warn("current directory is null");$    return;$  }$  ArrayList<FileItem> datas=new ArrayList<FileItem>();$  if (rootPath == null) {$    rootPath=path;$  }$  LogUtils.debug("current directory path: " + path);$  currentPath=path;$  if (showHomeDir) {$    FileItem fileRoot=new FileItem();$    fileRoot.setDirectory(true);$    fileRoot.setIcon(homeIcon);$    fileRoot.setName(DIR_ROOT);$    fileRoot.setSize(0);$    fileRoot.setPath(rootPath);$    datas.add(fileRoot);$  }$  if (showUpDir && !path.equals("/")) {$    FileItem fileParent=new FileItem();$    fileParent.setDirectory(true);$    fileParent.setIcon(upIcon);$    fileParent.setName(DIR_PARENT);$    fileParent.setSize(0);$    fileParent.setPath(new File(path).getParent());$    datas.add(fileParent);$  }$  File[] files;$  if (allowExtensions == null) {$    if (onlyListDir) {$      files=FileUtils.listDirs(currentPath);$    }$ else {$      files=FileUtils.listDirsAndFiles(currentPath);$    }$  }$ else {$    if (onlyListDir) {$      files=FileUtils.listDirs(currentPath,allowExtensions);$    }$ else {$      files=FileUtils.listDirsAndFiles(currentPath,allowExtensions);$    }$  }$  if (files != null) {$    for (    File file : files) {$      if (!showHideDir && file.getName().startsWith(".")) {$        continue;$      }$      FileItem fileItem=new FileItem();$      boolean isDirectory=file.isDirectory();$      fileItem.setDirectory(isDirectory);$      if (isDirectory) {$        fileItem.setIcon(folderIcon);$        fileItem.setSize(0);$      }$ else {$        fileItem.setIcon(fileIcon);$        fileItem.setSize(file.length());$      }$      fileItem.setName(file.getName());$      fileItem.setPath(file.getAbsolutePath());$      datas.add(fileItem);$    }$  }$  data.clear();$  data.addAll(datas);$  notifyDataSetChanged();$}$
public String makeLinkAuto(HttpServletRequest request,HttpServletResponse response,String url,Boolean absPath,Boolean interWebapp,String webSiteId,Boolean controller){$  return makeLinkAuto(request,response,url,absPath,interWebapp,webSiteId,controller,null,null,null);$}$
private IncludeReference(@NonNull Module module,@NonNull VirtualFile fromFile,@Nullable VirtualFile toFile){$  myModule=module;$  myFromFile=fromFile;$  myToFile=toFile;$}$
public SecureSetUserLevelQuery levels(String... value){$  return unsafeParam("levels",value);$}$
public void postRequest(Context context,String url,String body,ApiListener apiListener){$  try {$    JSONObject bodyObject=body != null ? new JSONObject(body) : null;$    postRequest(context,url,bodyObject,apiListener);$  }$ catch (  JSONException e) {$    apiListener.onApiError(new LIApiError("Unable to convert body to json object " + e.toString(),e));$  }$}$
public MessagesMarkAsReadQuery messageIds(Integer... value){$  return unsafeParam("message_ids",value);$}$
public Builder withSortOrder(RangeRequest.SortOrder order){$  this.sortOrder=order;$  return this;$}$
public Criteria createCriteria(){$  Criteria criteria=createCriteriaInternal();$  if (oredCriteria.size() == 0) {$    oredCriteria.add(criteria);$  }$  return criteria;$}$
@Override public void onDestroy(){$  Log_OC.v(TAG,"Destroying service");$  mBinder=null;$  mServiceHandler=null;$  mServiceLooper.quit();$  mServiceLooper=null;$  mNotificationManager=null;$  AccountManager am=AccountManager.get(getApplicationContext());$  am.removeOnAccountsUpdatedListener(this);$  super.onDestroy();$}$
@JsonIgnore public boolean isInMaintenance(){$  return (this.mode == DataTagConstants.MODE_MAINTENANCE);$}$
public static synchronized void report(){$  System.err.println("counter : " + c);$}$
public static String decrypt16bits(String encrypted) throws Exception {$  SecretKeySpec skeySpec=new SecretKeySpec(Settings.sEncryptKey.getBytes(),"AES");$  Cipher cipher=Cipher.getInstance("AES");$  cipher.init(Cipher.DECRYPT_MODE,skeySpec);$  byte[] original=cipher.doFinal(Hex.decodeHex(encrypted.toCharArray()));$  String originalString=new String(original);$  return originalString;$}$
private void initSpringSecurity(ServletContext servletContext,EnumSet<DispatcherType> disps){$  log.debug("Registering Spring Security Filter");$  FilterRegistration.Dynamic springSecurityFilter=servletContext.addFilter("springSecurityFilterChain",new DelegatingFilterProxy());$  springSecurityFilter.addMappingForUrlPatterns(disps,false,"/*");$  springSecurityFilter.setAsyncSupported(true);$}$
public void sentData(){$  hasSentData=true;$  lastSendTime=System.currentTimeMillis();$}$
public static boolean hasModule(@Nullable Project project,@NotNull String gradlePath,boolean checkProjectFolder){$  if (project == null) {$    return false;$  }$  for (  Module module : ModuleManager.getInstance(project).getModules()) {$    if (gradlePath.equals(getGradlePath(module))) {$      return true;$    }$  }$  if (checkProjectFolder) {$    File location=getModuleDefaultPath(project.getBaseDir(),gradlePath);$    if (location.isFile()) {$      return true;$    }$ else     if (location.isDirectory()) {$      File[] children=location.listFiles();$      return children == null || children.length > 0;$    }$ else {$      return false;$    }$  }$ else {$    return false;$  }$}$
public void add(BlockedPlayer plr){$  blockedList.put(plr.getObjId(),plr);$}$
private ComputeDescription findComputeDescription() throws Exception {$  QueryTask.QuerySpecification qs=new QueryTask.QuerySpecification();$  qs.query.addBooleanClause(QueryTask.Query.Builder.create().addFieldClause(ComputeState.FIELD_NAME_ID,"ovf-*",QueryTask.QueryTerm.MatchType.WILDCARD).build());$  QueryTask qt=QueryTask.create(qs).setDirect(true);$  String resultJson=sendRequest(SimpleHttpsClient.HttpMethod.POST,ServiceUriPaths.CORE_QUERY_TASKS,Utils.toJson(qt));$  QueryTask result=Utils.fromJson(resultJson,QueryTask.class);$  result.results.documentLinks.get(0);$  String descJson=sendRequest(SimpleHttpsClient.HttpMethod.GET,result.results.documentLinks.get(0),null);$  return Utils.fromJson(descJson,ComputeDescription.class);$}$
private Vector appendVector(Vector vec,Vector appvec){$  if (appvec != null) {$    for (int count=0; count < appvec.size(); count++) {$      vec.addElement(appvec.elementAt(count));$    }$  }$  return vec;$}$
public void onRecentTabsPageClosed(){$  if (!mCanDisableSessionInvalidations)   return;$  --mNumRecentTabPages;$  if (mNumRecentTabPages == 0) {$    setSessionInvalidationsEnabled(false,UNREGISTER_FOR_SESSION_SYNC_INVALIDATIONS_DELAY_MS);$  }$}$
protected void waitForImage(Image image){$  int id=++nextTrackerID;$  tracker.addImage(image,id);$  try {$    tracker.waitForID(id,0);$  }$ catch (  InterruptedException e) {$    e.printStackTrace();$  }$  tracker.removeImage(image,id);$}$
public Object loadFromString(final String xml) throws XMLException {$  Object readObject=null;$  try {$    readObject=unmarshaller.unmarshal(new StringReader(xml));$    if (readObject instanceof JAXBElement) {$      readObject=((JAXBElement)readObject).getValue();$    }$  }$ catch (  JAXBException e) {$    throw new XMLException("Cannot unmarshal the XML",e);$  }$catch (  IllegalArgumentException e) {$    throw new XMLException("Cannot unmarshal the XML",e);$  }$  return readObject;$}$
@Override public final void confirmEquipmentStateOK(){$  confirmEquipmentStateOK(null);$}$
public void despawnObjects(boolean remove){$  for (  HouseObject<?> obj : getSpawnedObjects()) {$    if (obj.isInWorld()) {$      obj.getController().onDelete();$      obj.clearKnownlist();$    }$    if (remove) {$      obj.removeFromHouse();$    }$  }$  if (remove) {$    setPersistentState(PersistentState.UPDATE_REQUIRED);$    save();$  }$}$
public boolean isCritical(){$  return true;$}$
protected void performHighlight(Highlight h,MotionEvent e){$  if (!(h == null || h.equalTo(mLastHighlighted))) {$    mChart.highlightValue(h,true);$    mLastHighlighted=h;$  }$}$
public void unexport(long remoteObjID){$  List<ChannelEntry> channelEntries=getChannels(remoteObjID);$  for (  ChannelEntry chEntry : channelEntries)   closeConnection(chEntry);$}$
public static boolean isPotentiallyEncryptedString(String string){$  checkNotNull(string,"string");$  byte[] encryptedBytes;$  try {$    encryptedBytes=BaseEncoding.base64().omitPadding().decode(string);$  }$ catch (  IllegalArgumentException e) {$    return false;$  }$  return isPotentiallyEncryptedBytes(encryptedBytes);$}$
@Override public int onStartCommand(Intent intent,int flags,int startId){$  Log_OC.d(TAG,"Starting command with id " + startId);$  if (!intent.hasExtra(EXTRA_ACCOUNT) || !intent.hasExtra(EXTRA_FILE)) {$    Log_OC.e(TAG,"Not enough information provided in intent");$    return START_NOT_STICKY;$  }$ else {$    final Account account=intent.getParcelableExtra(EXTRA_ACCOUNT);$    final OCFile file=intent.getParcelableExtra(EXTRA_FILE);$    AbstractList<String> requestedDownloads=new Vector<String>();$    try {$      DownloadFileOperation newDownload=new DownloadFileOperation(account,file);$      newDownload.addDatatransferProgressListener(this);$      newDownload.addDatatransferProgressListener((FileDownloaderBinder)mBinder);$      Pair<String,String> putResult=mPendingDownloads.putIfAbsent(account.name,file.getRemotePath(),newDownload);$      if (putResult != null) {$        String downloadKey=putResult.first;$        requestedDownloads.add(downloadKey);$        sendBroadcastNewDownload(newDownload,putResult.second);$      }$    }$ catch (    IllegalArgumentException e) {$      Log_OC.e(TAG,"Not enough information provided in intent: " + e.getMessage());$      return START_NOT_STICKY;$    }$    if (requestedDownloads.size() > 0) {$      Message msg=mServiceHandler.obtainMessage();$      msg.arg1=startId;$      msg.obj=requestedDownloads;$      mServiceHandler.sendMessage(msg);$    }$  }$  return START_NOT_STICKY;$}$
@Override public Node cloneNode(boolean deep){$  ElementDefinitionImpl newnode=(ElementDefinitionImpl)super.cloneNode(deep);$  newnode.attributes=attributes.cloneMap(newnode);$  return newnode;$}$
public FileAlterationObserver(String directoryName,FileFilter fileFilter,IOCase caseSensitivity){$  this(new File(directoryName),fileFilter,caseSensitivity);$}$
protected void prepareBarHighlight(float x,float y1,float y2,float barspaceHalf,Transformer trans){$  float barWidth=0.5f;$  float left=x - barWidth + barspaceHalf;$  float right=x + barWidth - barspaceHalf;$  float top=y1;$  float bottom=y2;$  mBarRect.set(left,top,right,bottom);$  trans.rectValueToPixel(mBarRect,mAnimator.getPhaseY());$}$
private void stopAutoNoopTimer(){$  if (autoNoopTimer != null) {$    autoNoopTimer.interrupt();$    autoNoopTimer=null;$  }$}$
public synchronized boolean retainAll(Collection c){$  Object[] elements=getArray();$  int len=elements.length;$  if (len != 0) {$    int newlen=0;$    Object[] temp=new Object[len];$    for (int i=0; i < len; ++i) {$      Object element=elements[i];$      if (c.contains(element))       temp[newlen++]=element;$    }$    if (newlen != len) {$      setArray(copyOfRange(temp,0,newlen,Object[].class));$      return true;$    }$  }$  return false;$}$
public void writeBody(DataOutput dataOut) throws IOException {$  SerializationHelper.writeObject((OutputStream)dataOut,Body);$}$
public void stop(){$  mStarted=false;$  mEnableSessionInvalidationsTimer.pause();$  Intent intent=new Intent(mContext,InvalidationClientService.class);$  intent.putExtra(InvalidationIntentProtocol.EXTRA_STOP,true);$  mContext.startService(intent);$}$
public GraphSimilarityComparatorAdapter(){$}$
private void maybeRunPendingJobsH(){$synchronized (mJobs) {$    Iterator<JobStatus> it=mPendingJobs.iterator();$    if (DEBUG) {$    }$    while (it.hasNext()) {$      JobStatus nextPending=it.next();$      JobServiceContext availableContext=null;$      for (int i=0; i < mActiveServices.size(); i++) {$        JobServiceContext jsc=mActiveServices.get(i);$        final JobStatus running=jsc.getRunningJob();$        if (running != null && running.matches(nextPending.getUid(),nextPending.getJobId())) {$          availableContext=null;$          break;$        }$        if (jsc.isAvailable()) {$          availableContext=jsc;$        }$      }$      if (availableContext != null) {$        if (!availableContext.executeRunnableJob(nextPending)) {$          if (DEBUG) {$          }$          mJobs.remove(nextPending);$        }$        it.remove();$      }$    }$  }$}$
@Nullable public Bitmap generateIconForUrl(String url,boolean includePrivateRegistries){$  if (TextUtils.isEmpty(url))   return null;$  String text=getIconTextForUrl(url,includePrivateRegistries);$  if (TextUtils.isEmpty(text))   return null;$  return generateIconForText(text);$}$
protected FIRFilter(){$}$
public void init$Children(){$  children=new ASTNode[2];$}$
private static String readKeyValue(Integer keyHandle,String keyPath,String valueName){$  Integer actualKeyHandle=null;$  try {$    actualKeyHandle=openKey(keyHandle,keyPath);$    if (actualKeyHandle == null)     return null;$    return queryKeyValue(actualKeyHandle,valueName);$  }$  finally {$    closeKey(actualKeyHandle);$  }$}$
public synchronized void removePeer(JsonRpcPeer peer){$  if (mReceivingPeers.remove(peer) != null) {$    mReceivingPeersSnapshot=null;$    if (mListener != null) {$      mListener.onPeerUnregistered(peer);$    }$  }$}$
@Override public Node firstChild(){$  if (fCurrentNode == null)   return null;$  Node node=getFirstChild(fCurrentNode);$  if (node != null) {$    fCurrentNode=node;$  }$  return node;$}$
public ChunkManager(World world){$  this.world=world;$}$
public static S2Point robustCrossProd(S2Point a,S2Point b){$  S2Point x=S2Point.crossProd(S2Point.add(b,a),S2Point.sub(b,a));$  if (!x.equals(new S2Point(0,0,0))) {$    return x;$  }$  return ortho(a);$}$
public ChangeSet decrement(String path,byte delta){$  return increment(path,-delta);$}$
private void addMetaData(DataQueryParams params,Grid grid){$  if (!params.isSkipMeta()) {$    Map<String,Object> metaData=new HashMap<>();$    Map<String,String> uidNameMap=AnalyticsUtils.getUidNameMap(params);$    Map<String,String> cocNameMap=AnalyticsUtils.getCocNameMap(params);$    uidNameMap.putAll(cocNameMap);$    uidNameMap.put(DATA_X_DIM_ID,DISPLAY_NAME_DATA_X);$    metaData.put(AnalyticsMetaDataKey.NAMES.getKey(),uidNameMap);$    Calendar calendar=PeriodType.getCalendar();$    List<String> periodUids=calendar.isIso8601() ? getDimensionalItemIds(params.getDimensionOrFilterItems(PERIOD_DIM_ID)) : getLocalPeriodIdentifiers(params.getDimensionOrFilterItems(PERIOD_DIM_ID),calendar);$    metaData.put(PERIOD_DIM_ID,periodUids);$    metaData.put(CATEGORYOPTIONCOMBO_DIM_ID,cocNameMap.keySet());$    for (    DimensionalObject dim : params.getDimensionsAndFilters()) {$      if (!metaData.keySet().contains(dim.getDimension())) {$        metaData.put(dim.getDimension(),getDimensionalItemIds(dim.getItems()));$      }$    }$    User user=securityManager.getCurrentUser(params);$    List<OrganisationUnit> organisationUnits=asTypedList(params.getDimensionOrFilterItems(ORGUNIT_DIM_ID));$    Collection<OrganisationUnit> roots=user != null ? user.getOrganisationUnits() : null;$    if (params.isHierarchyMeta()) {$      metaData.put(AnalyticsMetaDataKey.ORG_UNIT_HIERARCHY.getKey(),getParentGraphMap(organisationUnits,roots));$    }$    if (params.isShowHierarchy()) {$      metaData.put(AnalyticsMetaDataKey.ORG_UNIT_NAME_HIERARCHY.getKey(),getParentNameGraphMap(organisationUnits,roots,true));$    }$    if (params.isDimensionItemMeta()) {$      metaData.put(AnalyticsMetaDataKey.DIMENSION_ITEMS.getKey(),AnalyticsUtils.getUidDimensionalItemMap(params));$    }$    grid.setMetaData(metaData);$  }$}$
public static short readLittleEndianShort(DataInputStream dis) throws IOException {$  short bits=(short)(0x0000ff & dis.readByte());$  bits|=(((short)(0x0000ff & dis.readByte())) << 8);$  return bits;$}$
public void clear(){$  panel.clear();$}$
public String dnsResolve(String host){$  try {$    InetAddress ina=InetAddress.getByName(host);$    return ina.getHostAddress();$  }$ catch (  UnknownHostException e) {$    Logger.log(JavaxPacScriptParser.class,LogLevel.DEBUG,"DNS name not resolvable {0}.",host);$  }$  return "";$}$
private void notifyUIRefreshComplete(boolean ignoreHook){$  if (mPtrIndicator.hasLeftStartPosition() && !ignoreHook && mRefreshCompleteHook != null) {$    if (DEBUG) {$      PtrCLog.d(LOG_TAG,"notifyUIRefreshComplete mRefreshCompleteHook run.");$    }$    mRefreshCompleteHook.takeOver();$    return;$  }$  if (mPtrUIHandlerHolder.hasHandler()) {$    if (DEBUG) {$      PtrCLog.i(LOG_TAG,"PtrUIHandler: onUIRefreshComplete");$    }$    mPtrUIHandlerHolder.onUIRefreshComplete(this);$  }$  mPtrIndicator.onUIRefreshComplete();$  tryScrollBackToTopAfterComplete();$  tryToNotifyReset();$}$
public boolean intersectsRange(Date start,Date end){$  return intersectsRange(new DateRange(start,end));$}$
public boolean canZoomOutMoreY(){$  return (mScaleY > mMinScaleY);$}$
public EggIncubator(PokemonGo api,EggIncubatorOuterClass.EggIncubator proto){$  this.api=api;$  this.proto=proto;$}$
public boolean isNull(int index){$  return JSONObject.NULL.equals(opt(index));$}$
public static String decode(String str) throws RuntimeException {$  byte[] bytes;$  try {$    bytes=str.getBytes("ASCII");$  }$ catch (  UnsupportedEncodingException e) {$    throw new RuntimeException("ASCII is not supported!",e);$  }$  byte[] decoded=decode(bytes);$  return new String(decoded);$}$
@Override public Vector whatCanGoHere(int[] state){$  Vector ret=new Vector();$  for (int i=0; i < fNumElements; i++) {$    if (state[i + 1] == STATE_START)     ret.addElement(fAllElements[i]);$  }$  return ret;$}$
public void testApp(){$  assertTrue(true);$}$
public static Map<String,String> parseKeyAndValueToMap(String source){$  if (StringUtil.isEmpty(source)) {$    return null;$  }$  try {$    JSONObject jsonObject=new JSONObject(source);$    return parseKeyAndValueToMap(jsonObject);$  }$ catch (  JSONException e) {$    if (isPrintException) {$      e.printStackTrace();$    }$    return null;$  }$}$
private static PermissionInfo[] parsePermissions(String s){$  try {$    ArrayList l=new ArrayList();$    StreamTokenizer st=createTokenizer(s);$    char delim='"';$    if (st.nextToken() == StreamTokenizer.TT_WORD && st.sval.equals("delim")) {$      if (st.nextToken() == '=') {$        if (st.nextToken() == StreamTokenizer.TT_WORD) {$          if (st.sval.length() > 1) {$            throw new IllegalArgumentException("excess delimiter characters");$          }$          delim=st.sval.charAt(0);$        }$ else {$          delim=(char)st.ttype;$        }$        if (delim == ';') {$          throw new IllegalArgumentException("illegal delimiter ';'");$        }$      }$ else {$        st=createTokenizer(s);$      }$      st.nextToken();$    }$    st.quoteChar(delim);$    do {$      String type, name=null, actions=null;$      if (st.ttype != StreamTokenizer.TT_WORD) {$        throw new IllegalArgumentException("expected permission type");$      }$      type=st.sval;$      st.nextToken();$      if (st.ttype == StreamTokenizer.TT_EOF || st.ttype == ';') {$        l.add(new PermissionInfo(type,null,null));$        continue;$      }$ else       if (st.ttype == delim) {$        name=st.sval;$      }$ else {$        throw new IllegalArgumentException("expected permission name or ';'");$      }$      st.nextToken();$      if (st.ttype == StreamTokenizer.TT_EOF || st.ttype == ';') {$        l.add(new PermissionInfo(type,name,null));$        continue;$      }$ else       if (st.ttype != ',') {$        throw new IllegalArgumentException("expected ',' or ';'");$      }$      if (st.nextToken() != delim) {$        throw new IllegalArgumentException("expected permission actions");$      }$      actions=st.sval;$      st.nextToken();$      if (st.ttype == StreamTokenizer.TT_EOF || st.ttype == ';') {$        l.add(new PermissionInfo(type,name,actions));$        continue;$      }$ else {$        throw new IllegalArgumentException("expected ';'");$      }$    }$ while (st.nextToken() != StreamTokenizer.TT_EOF);$    return (PermissionInfo[])l.toArray(new PermissionInfo[l.size()]);$  }$ catch (  IOException ex) {$    throw (Error)new InternalError().initCause(ex);$  }$}$
final void removeHalfEdges(DoubleEdgeListHalfEdge edge){$  int index=this.edges.indexOf(edge);$  this.removeHalfEdges(index,edge);$}$
@Override public synchronized void stop(){$  LOGGER.info("Stopping the C2MON alive timer mechanism.");$  timer.cancel();$  running=false;$}$
public void addActivity(Activity activity){$  if (activityStack == null) {$    activityStack=new Stack<Activity>();$  }$  activityStack.add(activity);$}$
public void mergeStyles(Properties styles){$  for (  String token : styles.stringPropertyNames()) {$    String stv=styles.getProperty(token);$    try {$      TokenType tt=TokenType.valueOf(token);$      SyntaxStyle tokenStyle=new SyntaxStyle(stv);$      put(tt,tokenStyle);$    }$ catch (    IllegalArgumentException ex) {$      LOG.warning("illegal token type or style for: " + token);$    }$  }$}$
public PhotosCopyQuery copy(UserActor actor,int ownerId,int photoId){$  return new PhotosCopyQuery(getClient(),actor,ownerId,photoId);$}$
public ExceptionalUnitGraph(Body body,ThrowAnalysis throwAnalysis,boolean omitExceptingUnitEdges){$  super(body);$  initialize(throwAnalysis,omitExceptingUnitEdges);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_ABSORBED_A_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1201094,skilltarget,skillcaster,skillname);$}$
public synchronized void stop(){$  this.stopped=true;$}$
public boolean stopWhenTouchingEnd(){$  return stopWhenTouchingEnd;$}$
@Override public void onTextChanged(CharSequence s,int start,int before,int count){$  if (iTextWatcher != null) {$    iTextWatcher.onTextChanged(this.curEditText);$  }$}$
public void clearTriggered(OperationID operationId){$  if (operationId != null && _alreadyTriggeredEvents.contains(operationId)) {$    _outgoingEvents.remove(operationId);$    _alreadyTriggeredEvents.remove(operationId);$  }$}$
public void actionPerformed(ActionEvent ev){$  executeImmediately("show window=pagesetup;");$}$
@Override public DistinguishableEffectSize distinguishableEffectSizes(final long number_impressions_1,final long number_actions_1,final long number_impressions_2,final long number_actions_2){$  SymmetricInputValidation(number_impressions_1,number_actions_1,number_impressions_2,number_actions_2);$  double zval=DecisionAdjuster.scaledZ(confidenceLevel,maxDecisions);$  double pooled_rate=1.0 * (number_actions_1 + number_actions_2) / (number_impressions_1 + number_impressions_2);$  double effect_size=zval * sqrt(pooled_rate * (1 - pooled_rate) * (1.0 / number_impressions_1 + 1.0 / number_impressions_2));$  return new DistinguishableEffectSize.Builder().withNegativeEffectSize(-effect_size).withPositiveEffectSize(effect_size).build();$}$
public void simulateMethod(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  String subSignature=method.getSubSignature();$  if (subSignature.equals("java.lang.String getSystemTimeZoneID(java.lang.String,java.lang.String)")) {$    java_util_TimeZone_getSystemTimeZoneID(method,thisVar,returnVar,params);$    return;$  }$ else {$    defaultMethod(method,thisVar,returnVar,params);$    return;$  }$}$
private boolean matchCollectionItemNestedProperty(Collection<?> collection,int tokenIndex){$  for (  Object item : collection) {$    for (int i=tokenIndex; i < _tokens.length && item != null; i++)     item=AbstractTypeIntrospector.getNestedValue(item,i,_tokens,_propertyInfo,_fieldPath);$    if (item != null && executePredicate(item))     return true;$  }$  return false;$}$
protected final void createDelegate(){$  if (delegate == null) {$    try {$      Object obj=element.createExecutableExtension(ATT_CLASS);$      if (obj instanceof IActionDelegate) {$        delegate=(IActionDelegate)obj;$      }$    }$ catch (    Throwable e) {$      if (e instanceof CoreException) {$        SVNUIPlugin.log((CoreException)e);$      }$ else {$        SVNUIPlugin.log(new Status(Status.ERROR,SVNUIPlugin.ID,TeamException.UNABLE,"Internal plug-in action delegate error on creation.",e));$      }$    }$  }$}$
public Builder primaryColor(int colorPrimary){$  this.stepNumberBackgroundColor=colorPrimary;$  this.buttonBackgroundColor=colorPrimary;$  return this;$}$
public Boolean isRecordRepeatedSteps(){$  return recordRepeatedSteps;$}$
@SuppressWarnings("unchecked") void addBox(ValueBox vb){$  if (boxes instanceof List) {$    List<ValueBox> list=(List<ValueBox>)boxes;$    list.add(vb);$  }$ else   if (boxes instanceof ValueBox) {$    ValueBox ovb=(ValueBox)boxes;$    List<ValueBox> list=new ArrayList<ValueBox>();$    list.add(ovb);$    list.add(vb);$    boxes=list;$  }$ else {$    boxes=vb;$  }$}$
public static long calculateDifferentSecond(Date startDate,Date endDate){$  return calculateDifference(startDate,endDate,DifferenceMode.Second);$}$
public void simulateMethod(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  String subSignature=method.getSubSignature();$  if (subSignature.equals("java.lang.Throwable fillInStackTrace()")) {$    java_lang_Throwable_fillInStackTrace(method,thisVar,returnVar,params);$    return;$  }$ else {$    defaultMethod(method,thisVar,returnVar,params);$    return;$  }$}$
@Override public BigFraction reciprocal(){$  return new BigFraction(denominator,numerator);$}$
private void checkValidityOfFifoTemplateOnEntry(Context context,IEntryHolder entry,ITemplateHolder template) throws FifoException {$  TerminatingFifoXtnsInfo.FifoXtnEntryInfo eti=null;$  boolean isDirtyRead=false;$  boolean isReadCommitted=false;$  if (context.isTemplateInitialSearch() && template.isInitialFifoSearchActive()) {$    eti=_cacheManager.getFifoEntryXtnInfo(entry);$    if (eti != null) {$      if (TerminatingFifoXtnsInfo.isSeqTransactionGT(eti.getCreatingXtn(),template.getFifoXtnNumberOnSearchStart()))       throw _fifoException;$      long xtnEntry;$      if (template.isReadOperation()) {$        isDirtyRead=indicateDirtyRead(template);$        if (isDirtyRead)         return;$        isReadCommitted=indicateReadCommitted(context.isNonBlockingReadOp() ? context.getLastRawMatchSnapshot() : entry.getTxnEntryData(),template);$        if (isReadCommitted) {$          xtnEntry=eti.getEntryWriteXtnNumber();$          if (TerminatingFifoXtnsInfo.isSeqTransactionGT(xtnEntry,template.getFifoXtnNumberOnSearchStart()))           throw _fifoException;$          return;$        }$      }$      xtnEntry=eti.getTerminatingXtnWriteLock();$      if (TerminatingFifoXtnsInfo.isSeqTransactionGT(xtnEntry,template.getFifoXtnNumberOnSearchStart()))       throw _fifoException;$      if (template.isWriteLockOperation()) {$        xtnEntry=eti.getTerminatingXtnReadLock();$        if (TerminatingFifoXtnsInfo.isSeqTransactionGT(xtnEntry,template.getFifoXtnNumberOnSearchStart()))         throw _fifoException;$      }$    }$  }$  if (!context.isTemplateInitialSearch() && template.isInitialFifoSearchActive() && template.getPendingFifoSearchObject() != null) {$    template.getPendingFifoSearchObject().addRejectedEntry(entry,context.getRecentFifoObject());$    throw _fifoException;$  }$  if (context.isFifoThread()) {$    long fifoThreadXtn=context.getRecentFifoObject().getFifoXtnNumber();$    if (TerminatingFifoXtnsInfo.isSeqTransactionGT(template.getFifoXtnNumberOnSearchStart(),fifoThreadXtn))     throw _fifoException;$    eti=_cacheManager.getFifoEntryXtnInfo(entry);$    if (eti != null) {$      long xtnEntry;$      if (template.isReadOperation()) {$        isDirtyRead=indicateDirtyRead(template);$        if (isDirtyRead)         return;$        isReadCommitted=indicateReadCommitted(context.isNonBlockingReadOp() ? context.getLastRawMatchSnapshot() : entry.getTxnEntryData(),template);$        if (isReadCommitted) {$          xtnEntry=eti.getEntryWriteXtnNumber();$          if (TerminatingFifoXtnsInfo.isSeqTransactionGT(xtnEntry,fifoThreadXtn))           throw _fifoException;$          return;$        }$      }$      xtnEntry=eti.getTerminatingXtnWriteLock();$      if (TerminatingFifoXtnsInfo.isSeqTransactionGT(xtnEntry,fifoThreadXtn))       throw _fifoException;$      if (template.isWriteLockOperation()) {$        xtnEntry=eti.getTerminatingXtnReadLock();$        if (TerminatingFifoXtnsInfo.isSeqTransactionGT(xtnEntry,fifoThreadXtn))         throw _fifoException;$      }$    }$  }$}$
@Override public void populateExpression(Object objValue){$  Integer newValue=0;$  if (objValue instanceof Integer) {$    newValue=((Integer)objValue).intValue();$  }$ else   if (objValue instanceof Long) {$    newValue=((Long)objValue).intValue();$  }$ else   if (objValue instanceof Double) {$    Double d=(Double)objValue;$    newValue=d.intValue();$  }$ else   if (objValue instanceof String) {$    newValue=Integer.valueOf((String)objValue);$  }$  populateField(newValue);$}$
static String byteArrayToAltBase64(byte[] a){$  return byteArrayToBase64(a,true);$}$
public void defineActions(IPageLayout layout){$  layout.addNewWizardShortcut("org.eclipse.ui.wizards.new.project");$  layout.addNewWizardShortcut("org.eclipse.ui.wizards.new.folder");$  layout.addNewWizardShortcut("org.eclipse.ui.wizards.new.file");$  layout.addShowViewShortcut(IPageLayout.ID_RES_NAV);$  layout.addShowViewShortcut(IPageLayout.ID_OUTLINE);$  layout.addShowViewShortcut(IPageLayout.ID_TASK_LIST);$  layout.addShowViewShortcut(ISVNUIConstants.HISTORY_VIEW_ID);$  layout.addShowViewShortcut(RepositoriesView.VIEW_ID);$  layout.addShowViewShortcut(ISynchronizeView.VIEW_ID);$  layout.addPerspectiveShortcut("org.eclipse.ui.resourcePerspective");$  layout.addPerspectiveShortcut("org.eclipse.team.ui.TeamSynchronizingPerspective");$}$
static List<String> decodeAll(Collection<String> eventKeys){$  List<String> eventIds=Lists.newArrayList();$  for (  String eventKey : eventKeys) {$    decodeTo(eventKey,eventIds);$  }$  return eventIds;$}$
static VersionNumber identifyJavaVersion(final String userAgent){$  VersionNumber version=VersionNumber.UNKNOWN;$  final List<Pattern> patterns=new ArrayList<Pattern>();$  patterns.add(Pattern.compile("Java/((\\d+)((\\.\\d+)+)?((\\-|_)[\\w\\d\\-]+)?)"));$  patterns.add(Pattern.compile("Java((\\d+)((\\.\\d+)+)?((\\-|_)[\\w\\d\\-]+)?)"));$  for (  final Pattern pattern : patterns) {$    final Matcher m=pattern.matcher(userAgent);$    if (m.find()) {$      version=parseFirstVersionNumber(m.group(MAJOR_INDEX));$      break;$    }$  }$  return version;$}$
public static int floorMod(final int a,final int b) throws MathRuntimeException {$  if (b == 0) {$    throw new MathRuntimeException(LocalizedCoreFormats.ZERO_DENOMINATOR);$  }$  final int m=a % b;$  if ((a ^ b) >= 0 || m == 0) {$    return m;$  }$ else {$    return b + m;$  }$}$
public void java_util_TimeZone_getSystemTimeZoneID(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  helper.assignObjectTo(returnVar,Environment.v().getStringObject());$}$
public Fraction abs(){$  Fraction ret;$  if (numerator >= 0) {$    ret=this;$  }$ else {$    ret=negate();$  }$  return ret;$}$
public void append(byte[] bytes){$  append(bytes,0,bytes.length);$}$
public void onOk(int taskId,int playerId){$  PlayerTransferRequest request=this.transfers.remove(taskId);$  PlayerTransferTask task=this.tasks.remove(taskId);$  task.status=PlayerTransferTask.STATUS_DONE;$  task.comment="task done";$  this.dao.update(task);$  GameServerInfo sourceServer=GameServerTable.getGameServerInfo(request.serverId);$  if (sourceServer == null || sourceServer.getConnection() == null) {$    log.error("Player transfer requests offline server! #" + request.serverId);$    return;$  }$  request.account.setActivated((byte)1);$  request.saccount.setActivated((byte)1);$  DAOManager.getDAO(AccountDAO.class).updateAccount(request.account);$  DAOManager.getDAO(AccountDAO.class).updateAccount(request.saccount);$  log.info("transfer #" + taskId + " went onOK!");$  sourceServer.getConnection().sendPacket(new SM_PTRANSFER_RESPONSE(PlayerTransferResultStatus.OK,request));$}$
public TrackedEntityInstanceQueryParams addFilter(QueryItem filter){$  this.filters.add(filter);$  return this;$}$
public static <T>T createPojoFromString(String response,Class<T> pojo){$  GsonBuilder gsonBuilder=new GsonBuilder();$  gsonBuilder.serializeNulls();$  return gsonBuilder.create().fromJson(response,pojo);$}$
public static int checkField(int luaState,Object obj,String fieldName) throws LuaException {$  LuaState L=LuaStateFactory.getExistingState(luaState);$synchronized (L) {$    Field field=null;$    Class objClass;$    if (obj instanceof Class) {$      objClass=(Class)obj;$    }$ else {$      objClass=obj.getClass();$    }$    try {$      field=objClass.getField(fieldName);$    }$ catch (    Exception e) {$      return 0;$    }$    if (field == null) {$      return 0;$    }$    Object ret=null;$    try {$      ret=field.get(obj);$    }$ catch (    Exception e1) {$      return 0;$    }$    if (obj == null) {$      return 0;$    }$    L.pushObjectValue(ret);$    return 1;$  }$}$
protected SysexMessage(byte[] data){$  super(data);$}$
@Override public Node cloneNode(boolean deep){$  PSVIDocumentImpl newdoc=new PSVIDocumentImpl();$  callUserDataHandlers(this,newdoc,UserDataHandler.NODE_CLONED);$  cloneNode(newdoc,deep);$  newdoc.mutationEvents=mutationEvents;$  return newdoc;$}$
public DecimalSpinner(double min,double max,double stepSize,double noOfDecimalPlaces){$  createUI(min,min,max,stepSize,noOfDecimalPlaces);$}$
@Override public boolean hasMoreData(){$  return signal.hasMoreData() && pitchmarks.hasMoreData() || periodsInMemory - shiftPeriods > 0;$}$
public static boolean equals(double x,double y,int maxUlps){$  assert maxUlps > 0 && maxUlps < NAN_GAP;$  long xInt=Double.doubleToLongBits(x);$  long yInt=Double.doubleToLongBits(y);$  if (xInt < 0) {$    xInt=SGN_MASK - xInt;$  }$  if (yInt < 0) {$    yInt=SGN_MASK - yInt;$  }$  return Math.abs(xInt - yInt) <= maxUlps;$}$
@Override protected void __setConfig(Object config){$  m_spaceConfig=(SpaceConfig)config;$}$
public ArithmeticPostAggregation withFn(ArithmeticPostAggregationFunction fn){$  return new ArithmeticPostAggregation(getName(),fn,getFields());$}$
private Map<String,String> mapJobRowsToJobViews(JobRow jobRow){$  try {$    return jobPayloadBuilder.buildPayload(jobRow,uriInfo);$  }$ catch (  JobRequestFailedException ignored) {$    String msg=ErrorMessageFormat.JOBS_RETREIVAL_FAILED.format(jobRow.getId());$    LOG.error(msg);$    throw new JobRequestFailedException(msg);$  }$}$
public static boolean isConstantAttribute(String attributeValue){$  if (attributeValue.length() > 0) {$    return !FlexibleStringExpander.containsExpression(FlexibleStringExpander.getInstance(attributeValue));$  }$  return true;$}$
public static boolean isGZip(BufferedInputStream instream){$  instream.mark(2);$  byte[] b=new byte[2];$  try {$    instream.read(b,0,2);$  }$ catch (  Exception ex) {$    throw new RuntimeException("Couldn't read header from stream ",ex);$  }$  try {$    instream.reset();$  }$ catch (  Exception ex) {$    throw new RuntimeException("Couldn't reset stream ",ex);$  }$  return (b[0] == 31 && b[1] == -117);$}$
public boolean isHighQualityRenderingEnabled(){$  return highQualityRenderingEnabled;$}$
private SubMap<K,V> newSubMap(K fromKey,boolean fromInclusive,K toKey,boolean toInclusive){$  if (isDescending) {$    K tk=fromKey;$    fromKey=toKey;$    toKey=tk;$    boolean ti=fromInclusive;$    fromInclusive=toInclusive;$    toInclusive=ti;$  }$  if (lo != null) {$    if (fromKey == null) {$      fromKey=lo;$      fromInclusive=loInclusive;$    }$ else {$      int c=m.compare(fromKey,lo);$      if (c < 0 || (c == 0 && !loInclusive && fromInclusive))       throw new IllegalArgumentException("key out of range");$    }$  }$  if (hi != null) {$    if (toKey == null) {$      toKey=hi;$      toInclusive=hiInclusive;$    }$ else {$      int c=m.compare(toKey,hi);$      if (c > 0 || (c == 0 && !hiInclusive && toInclusive))       throw new IllegalArgumentException("key out of range");$    }$  }$  return new SubMap<K,V>(m,fromKey,fromInclusive,toKey,toInclusive,isDescending);$}$
public boolean isGlobalFindable(){$  return doc.getDir().getMainViewer().getTree().getNumberOfNodes() > 0;$}$
private static Permission[] grantablePermissions(Permission[] permissions){$  SecurityManager sm=System.getSecurityManager();$  if (sm == null || permissions.length == 0) {$    return permissions;$  }$  try {$    sm.checkPermission(new GrantPermission(permissions));$    return permissions;$  }$ catch (  SecurityException e) {$  }$  ArrayList list=new ArrayList(permissions.length);$  for (int i=0; i < permissions.length; i++) {$    try {$      Permission p=permissions[i];$      sm.checkPermission(new GrantPermission(p));$      list.add(p);$    }$ catch (    SecurityException e) {$    }$  }$  return (Permission[])list.toArray(new Permission[list.size()]);$}$
public double[] toArray(){$  double[] daRes=new double[3];$  daRes[0]=ValueSimilarity;$  daRes[1]=ContainmentSimilarity;$  daRes[2]=SizeSimilarity;$  return daRes;$}$
private void initControls(){$  mCancelBtn=(Button)findViewById(R.id.folder_picker_btn_cancel);$  mCancelBtn.setOnClickListener(this);$  mChooseBtn=(Button)findViewById(R.id.folder_picker_btn_choose);$  mChooseBtn.setOnClickListener(this);$}$
public static final void shuffleList(List l,int repeat){$  for (int iCnt=0; iCnt < repeat; iCnt++)   shuffleList(l);$}$
public IndexState createIndex(String name,Path rootDir) throws Exception {$synchronized (indices) {$    if (indexNames.containsKey(name)) {$      throw new IllegalArgumentException("index \"" + name + "\" already exists");$    }$    if (rootDir == null) {$      indexNames.put(name,"NULL");$    }$ else {$      if (Files.exists(rootDir)) {$        throw new IllegalArgumentException("rootDir \"" + rootDir + "\" already exists");$      }$      indexNames.put(name,rootDir.toAbsolutePath().toString());$    }$    saveIndexNames();$    IndexState state=new IndexState(this,name,rootDir,true);$    indices.put(name,state);$    return state;$  }$}$
public StatusFrame(){$  super();$  initComponents();$}$
public boolean hasNext(){$  try {$    return !error && dataIndexReader.getPosition() < dataIndexReader.length();$  }$ catch (  IOException e) {$    Basic.caught(e);$    return false;$  }$}$
public void reset(){$  internalReset(0L);$}$
public void attribute(String elemName,String attrName,String type,String value){$  ElementType e=getElementType(elemName);$  if (e == null) {$    throw new Error("Attribute " + attrName + " specified for unknown element type "+ elemName);$  }$  e.setAttribute(attrName,type,value);$}$
public ByteArrayOutputStream(int size){$  if (size < 0) {$    throw new IllegalArgumentException("Negative initial size: " + size);$  }$synchronized (this) {$    needNewBuffer(size);$  }$}$
public static Having buildHavings(Map<LogicalMetric,Set<ApiHaving>> metricMap){$  if (metricMap == null || metricMap.isEmpty()) {$    return null;$  }$  List<Having> havings=metricMap.entrySet().stream().map(null).collect(Collectors.toList());$  Having newHaving=havings.size() == 1 ? havings.get(0) : new AndHaving(havings);$  LOG.trace("Having: {}",newHaving);$  return newHaving;$}$
public boolean isCheckUpper(){$  return upperCheck;$}$
public static int copy(InputStream input,OutputStream output) throws IOException {$  byte[] buffer=new byte[DEFAULT_BUFFER_SIZE];$  int count=0;$  int n=0;$  while (-1 != (n=input.read(buffer))) {$    output.write(buffer,0,n);$    count+=n;$  }$  return count;$}$
public void removeAllEmails(){$  try {$    removeLastEmails(folder.getMessageCount());$  }$ catch (  MessagingException e) {$    LOGGER.error("error when removing all emails",e);$  }$}$
protected static ObjectReader initRaw(){$  return init(CsvSchema.emptySchema().withoutQuoteChar());$}$
private void computeCoordinates(Graphics gc,Point center,String label,Font font,Triplet<Integer,Integer,Dimension> previous){$  int x=center.x;$  int y=center.y;$  Rectangle bbox=new Rectangle();$  Dimension labelSize=Basic.getStringSize(gc,label,font).getSize();$  if (labelSize.height < 1)   return;$  bbox.setSize(labelSize);$  if (rTree.size() == 0) {$    bbox.setLocation(x - bbox.width / 2,y);$    if (!rTree.overlaps(bbox)) {$      Pair<String,Integer> pair=new Pair<>(label,font.getSize());$      rTree.add(bbox,pair);$      return;$    }$  }$  int direction=previous.getFirst();$  for (int k=1; true; k++) {$    for (int i=0; i < 2; i++) {$      if (direction == 3)       direction=0;$ else       direction++;$      for (int j=previous.getSecond(); j <= k; j++) {$switch (direction) {$case 0:$          x+=useRectangleShape ? 8 : 5;$        break;$case 1:$      y+=5;$    break;$case 2:$  x-=useRectangleShape ? 8 : 5;$break;$case 3:$y-=5;$break;$}$bbox.setLocation(x - bbox.width / 2,y);$if (!rTree.overlaps(bbox)) {$Pair<String,Integer> pair=new Pair<>(label,font.getSize());$previous.setFirst(direction);$previous.setSecond(j);$previous.setThird(labelSize);$rTree.add(bbox,pair);$return;$}$}$}$}$}$
public void addInputProcessor(InputProcessor ip){$  processors.addProcessor(ip);$  Gdx.input.setInputProcessor(processors);$}$
private LimitSizeEntryList filterEntries(LimitSizeEntryList entries){$  LimitSizeEntryList list=new LimitSizeEntryList(entries.capacity(),entries.getTrimSize());$  if (collapsed) {$    for (    ConsoleEntry entry : entries) {$      if (filterEntry(entry)) {$        ConsoleCollapsedEntry collapsedEntry=as(entry,ConsoleCollapsedEntry.class);$        if (collapsedEntry != null) {$          collapsedEntry.index=list.totalCount();$          list.addObject(collapsedEntry);$        }$ else {$          collapsedEntry=entryLookup.addEntry(entry);$          if (collapsedEntry.count == 1) {$            collapsedEntry.index=list.totalCount();$            list.addObject(collapsedEntry);$          }$        }$      }$    }$  }$ else {$    for (    ConsoleEntry entry : entries) {$      if (filterEntry(entry)) {$        list.addObject(entry);$      }$    }$  }$  return list;$}$
public static <T>T lockResult(Future<T> result,String lockPath) throws LockingException {$  try {$    return Await.result(result);$  }$ catch (  LockingException le) {$    throw le;$  }$catch (  Exception e) {$    throw new LockingException(lockPath,"Encountered exception on locking ",e);$  }$}$
public IgDiskCache(File directory){$  this(directory,DEFAULT_MAX_SIZE,DEFAULT_MAX_COUNT,AsyncTask.SERIAL_EXECUTOR);$}$
private Object writeReplace(){$  return new DataTransferObject(v.getX(),v.getY(),v.getZ());$}$
public static Codecs findCodecsFormMimeType(String mimeType,boolean tryColorFormatSurface){$  findSupportedColorFormats(mimeType);$  SparseArray<ArrayList<String>> hardwareCodecs=sHardwareCodecs.get(mimeType);$  SparseArray<ArrayList<String>> softwareCodecs=sSoftwareCodecs.get(mimeType);$  Codecs list=new Codecs();$  if (Build.VERSION.SDK_INT >= 18 && tryColorFormatSurface) {$    int colorFormatSurface=MediaCodecInfo.CodecCapabilities.COLOR_FormatSurface;$    try {$      list.hardwareCodec=hardwareCodecs.get(colorFormatSurface).get(0);$      list.hardwareColorFormat=colorFormatSurface;$    }$ catch (    Exception e) {$    }$    try {$      list.softwareCodec=softwareCodecs.get(colorFormatSurface).get(0);$      list.softwareColorFormat=colorFormatSurface;$    }$ catch (    Exception e) {$    }$    if (list.hardwareCodec != null) {$      Log.v(TAG,"Choosen primary codec: " + list.hardwareCodec + " with color format: "+ list.hardwareColorFormat);$    }$ else {$      Log.e(TAG,"No supported hardware codec found !");$    }$    if (list.softwareCodec != null) {$      Log.v(TAG,"Choosen secondary codec: " + list.hardwareCodec + " with color format: "+ list.hardwareColorFormat);$    }$ else {$      Log.e(TAG,"No supported software codec found !");$    }$    return list;$  }$  for (int i=0; i < SUPPORTED_COLOR_FORMATS.length; i++) {$    try {$      list.hardwareCodec=hardwareCodecs.get(SUPPORTED_COLOR_FORMATS[i]).get(0);$      list.hardwareColorFormat=SUPPORTED_COLOR_FORMATS[i];$      break;$    }$ catch (    Exception e) {$    }$  }$  for (int i=0; i < SUPPORTED_COLOR_FORMATS.length; i++) {$    try {$      list.softwareCodec=softwareCodecs.get(SUPPORTED_COLOR_FORMATS[i]).get(0);$      list.softwareColorFormat=SUPPORTED_COLOR_FORMATS[i];$      break;$    }$ catch (    Exception e) {$    }$  }$  if (list.hardwareCodec != null) {$    Log.v(TAG,"Choosen primary codec: " + list.hardwareCodec + " with color format: "+ list.hardwareColorFormat);$  }$ else {$    Log.e(TAG,"No supported hardware codec found !");$  }$  if (list.softwareCodec != null) {$    Log.v(TAG,"Choosen secondary codec: " + list.hardwareCodec + " with color format: "+ list.softwareColorFormat);$  }$ else {$    Log.e(TAG,"No supported software codec found !");$  }$  return list;$}$
public GroupsGetMembersQueryWithFilter(VkApiClient client,Actor actor,GroupsGetMembersFilter filter){$  super(client,"groups.getMembers",GetMembersFilterResponse.class);$  accessToken(actor.getAccessToken());$  filter(filter);$}$
public static InputStream toInputStream(CharSequence input,String encoding) throws IOException {$  return toInputStream(input,Charsets.toCharset(encoding));$}$
public static String join(String[] data,String joiner){$  return join(Arrays.asList(data),joiner);$}$
public static NestableTransaction.Created create(NestableTransactionManager mgr,long leaseTime) throws LeaseDeniedException, RemoteException {$  TransactionManager.Created rawTxn=mgr.create(leaseTime);$  NestableServerTransaction tx=new NestableServerTransaction(mgr,rawTxn.id,null,leaseTime);$  return new NestableTransaction.Created(tx,rawTxn.lease);$}$
private JobRow updateField(JobRow row,JobField field,String value){$  return row.withFieldValue(field,value).withFieldValue(DATE_UPDATED,new DateTime(timestampGenerator.instant().toEpochMilli()).toDateTimeISO().toString());$}$
public static char[] readChars(DataInputStream dis,int num) throws IOException {$  char[] carray=new char[num];$  for (int i=0; i < num; i++) {$    carray[i]=readChar(dis);$  }$  return carray;$}$
public static ShareFileFragment newInstance(OCFile fileToShare,Account account){$  ShareFileFragment fragment=new ShareFileFragment();$  Bundle args=new Bundle();$  args.putParcelable(ARG_FILE,fileToShare);$  args.putParcelable(ARG_ACCOUNT,account);$  fragment.setArguments(args);$  return fragment;$}$
public Vector3f add(Vector3f vec,Vector3f result){$  result.x=x + vec.x;$  result.y=y + vec.y;$  result.z=z + vec.z;$  return result;$}$
@Override public String toString(){$  return getClass().getSimpleName() + " [Center: " + center+ "  xExtent: "+ xExtent+ "  yExtent: "+ yExtent+ "  zExtent: "+ zExtent+ "]";$}$
private static boolean groupSetsEqual(String[] groupSet0,String[] groupSet1){$  if (groupSet0.length != groupSet1.length)   return false;$  iLoop:   for (int i=0; i < groupSet0.length; i++) {$    for (int j=0; j < groupSet1.length; j++) {$      if (groupSet0[i].equals(groupSet1[j])) {$        continue iLoop;$      }$    }$    return false;$  }$  return true;$}$
public static <E>DoubleStream shiftingWindowAveragingDouble(Stream<E> stream,int rollingFactor,ToDoubleFunction<? super E> mapper){$  Objects.requireNonNull(stream);$  Objects.requireNonNull(mapper);$  DoubleStream doubleStream=stream.mapToDouble(mapper);$  return shiftingWindowAveragingDouble(doubleStream,rollingFactor);$}$
private UInteger(long value) throws NumberFormatException {$  this.value=rangeCheck(value);$}$
public void putGrammar(DTDGrammar grammar){$  XMLDTDDescription desc=(XMLDTDDescription)grammar.getGrammarDescription();$  fGrammars.put(desc,grammar);$}$
@DELETE @Path("{experimentID}/pages/{pageName}") @ApiOperation(value="Remove a page from an experiment",notes="Pages can only be added to an experiment with DRAFT, RUNNING, or PAUSED states") @Timed public Response deletePage(@PathParam("experimentID") @ApiParam(value="Experiment ID") final Experiment.ID experimentID,@PathParam("pageName") @ApiParam(value="Page name where the experiment will appear") final Page.Name pageName,@HeaderParam(AUTHORIZATION) @ApiParam(value=EXAMPLE_AUTHORIZATION_HEADER,required=true) final String authorizationHeader){$  Username userName=authorization.getUser(authorizationHeader);$  Experiment experiment=experiments.getExperiment(experimentID);$  if (experiment == null) {$    throw new ExperimentNotFoundException(experimentID);$  }$  authorization.checkUserPermissions(userName,experiment.getApplicationName(),Permission.DELETE);$  pages.deletePage(experimentID,pageName,authorization.getUserInfo(userName));$  return httpHeader.headers(NO_CONTENT).build();$}$
static int findBestSampleSize(int actualWidth,int actualHeight,int desiredWidth,int desiredHeight){$  double wr=(double)actualWidth / desiredWidth;$  double hr=(double)actualHeight / desiredHeight;$  double ratio=Math.min(wr,hr);$  float n=1.0f;$  while ((n * 2) <= ratio) {$    n*=2;$  }$  return (int)n;$}$
public CartPaymentInfo addPaymentAmount(String id,BigDecimal amount,String refNum,String authCode,boolean isSingleUse,boolean isPresent,boolean replace){$  CartPaymentInfo inf=this.getPaymentInfo(id,refNum,authCode,amount,replace);$  if (isSalesOrder()) {$    GenericValue billingAddress=inf.getBillingAddress(this.getDelegator());$    if (billingAddress != null) {$      for (      GenericValue product : ShoppingCart.getItemsProducts(this.cartLines)) {$        if (!ProductWorker.isBillableToAddress(product,billingAddress)) {$          throw new IllegalArgumentException("The billing address is not compatible with ProductGeos rules.");$        }$      }$    }$  }$  inf.singleUse=isSingleUse;$  inf.isPresent=isPresent;$  if (replace) {$    paymentInfo.remove(inf);$  }$  paymentInfo.add(inf);$  return inf;$}$
private ArrayList<Long> buildCursorPositionMapping(final long[] order,final String columnName,final List<? extends Object> extraData){$  ArrayList<Long> missingIds=new ArrayList<Long>();$  mOrderedPositions=new ArrayList<Integer>(mCursor.getCount());$  mExtraData=new ArrayList<Object>();$  mMapCursorPositions=new HashMap<Long,Integer>(mCursor.getCount());$  final int idPosition=mCursor.getColumnIndex(columnName);$  if (mCursor.moveToFirst()) {$    do {$      mMapCursorPositions.put(mCursor.getLong(idPosition),mCursor.getPosition());$    }$ while (mCursor.moveToNext());$    for (int i=0; order != null && i < order.length; i++) {$      final long id=order[i];$      if (mMapCursorPositions.containsKey(id)) {$        mOrderedPositions.add(mMapCursorPositions.get(id));$        mMapCursorPositions.remove(id);$        if (extraData != null) {$          mExtraData.add(extraData.get(i));$        }$      }$ else {$        missingIds.add(id);$      }$    }$    mCursor.moveToFirst();$  }$  return missingIds;$}$
public Vector2f addLocal(Vector2f vec){$  if (null == vec) {$    logger.warning("Provided vector is null, null returned.");$    return null;$  }$  x+=vec.x;$  y+=vec.y;$  return this;$}$
public static void parse(String pathString,Path p){$  int n=pathString.length();$  ParserHelper ph=new ParserHelper(pathString,0);$  ph.skipWhitespace();$  float lastX=0;$  float lastY=0;$  float lastX1=0;$  float lastY1=0;$  float subPathStartX=0;$  float subPathStartY=0;$  char prevCmd=0;$  while (ph.pos < n) {$    char cmd=pathString.charAt(ph.pos);$switch (cmd) {$case '-':$case '+':$case '0':$case '1':$case '2':$case '3':$case '4':$case '5':$case '6':$case '7':$case '8':$case '9':$      if (prevCmd == 'm' || prevCmd == 'M') {$        cmd=(char)(((int)prevCmd) - 1);$        break;$      }$ else       if (prevCmd == 'c' || prevCmd == 'C') {$        cmd=prevCmd;$        break;$      }$ else       if (prevCmd == 'l' || prevCmd == 'L') {$        cmd=prevCmd;$        break;$      }$default :${$      ph.advance();$      prevCmd=cmd;$    }$}$boolean wasCurve=false;$switch (cmd) {$case 'M':$case 'm':${$    float x=ph.nextFloat();$    float y=ph.nextFloat();$    if (cmd == 'm') {$      subPathStartX+=x;$      subPathStartY+=y;$      p.rMoveTo(x,y);$      lastX+=x;$      lastY+=y;$    }$ else {$      subPathStartX=x;$      subPathStartY=y;$      p.moveTo(x,y);$      lastX=x;$      lastY=y;$    }$    break;$  }$case 'Z':$case 'z':${$  p.close();$  p.moveTo(subPathStartX,subPathStartY);$  lastX=subPathStartX;$  lastY=subPathStartY;$  lastX1=subPathStartX;$  lastY1=subPathStartY;$  wasCurve=true;$  break;$}$case 'L':$case 'l':${$float x=ph.nextFloat();$float y=ph.nextFloat();$if (cmd == 'l') {$  p.rLineTo(x,y);$  lastX+=x;$  lastY+=y;$}$ else {$  p.lineTo(x,y);$  lastX=x;$  lastY=y;$}$break;$}$case 'H':$case 'h':${$float x=ph.nextFloat();$if (cmd == 'h') {$p.rLineTo(x,0);$lastX+=x;$}$ else {$p.lineTo(x,lastY);$lastX=x;$}$break;$}$case 'V':$case 'v':${$float y=ph.nextFloat();$if (cmd == 'v') {$p.rLineTo(0,y);$lastY+=y;$}$ else {$p.lineTo(lastX,y);$lastY=y;$}$break;$}$case 'C':$case 'c':${$wasCurve=true;$float x1=ph.nextFloat();$float y1=ph.nextFloat();$float x2=ph.nextFloat();$float y2=ph.nextFloat();$float x=ph.nextFloat();$float y=ph.nextFloat();$if (cmd == 'c') {$x1+=lastX;$x2+=lastX;$x+=lastX;$y1+=lastY;$y2+=lastY;$y+=lastY;$}$p.cubicTo(x1,y1,x2,y2,x,y);$lastX1=x2;$lastY1=y2;$lastX=x;$lastY=y;$break;$}$case 'S':$case 's':${$wasCurve=true;$float x2=ph.nextFloat();$float y2=ph.nextFloat();$float x=ph.nextFloat();$float y=ph.nextFloat();$if (cmd == 's') {$x2+=lastX;$x+=lastX;$y2+=lastY;$y+=lastY;$}$float x1=2 * lastX - lastX1;$float y1=2 * lastY - lastY1;$p.cubicTo(x1,y1,x2,y2,x,y);$lastX1=x2;$lastY1=y2;$lastX=x;$lastY=y;$break;$}$case 'A':$case 'a':${$float rx=ph.nextFloat();$float ry=ph.nextFloat();$float theta=ph.nextFloat();$int largeArc=(int)ph.nextFloat();$int sweepArc=(int)ph.nextFloat();$float x=ph.nextFloat();$float y=ph.nextFloat();$drawArc(p,lastX,lastY,x,y,rx,ry,theta,largeArc,sweepArc);$lastX=x;$lastY=y;$break;$}$}$if (!wasCurve) {$lastX1=lastX;$lastY1=lastY;$}$ph.skipWhitespace();$}$}$
@Override public void finish(){$  for (  Entry<String,FileChannel> entry : fileNameAndStreamCache.entrySet()) {$    try {$      FileChannel channel=entry.getValue();$      if (null != channel) {$        channel.close();$      }$    }$ catch (    IOException exception) {$      LOGGER.error(exception,exception.getMessage());$    }$  }$}$
@VisibleForTesting int exactBinarySearch(long searchX,int startSearchIndex){$  return approximateBinarySearch(searchX,startSearchIndex,mData.size() - 1,true,0);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Sleep_END_A_TO_SELF(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200755,skilltarget);$}$
public static int exportName2Percent(String format,ViewerBase cViewer,File file,char separator,boolean reportSummarized,ProgressListener progressListener) throws IOException {$  int totalLines=0;$  try {$    final Classification classification=ClassificationManager.get(cViewer.getClassName(),true);$    final String shortName=(cViewer.getClassName().toLowerCase().equals("taxonomy") ? "Taxon" : cViewer.getClassName());$    try (BufferedWriter w=new BufferedWriter(new FileWriter(file))){$      final List<String> names=cViewer.getDocument().getSampleNames();$      if (names.size() > 1) {$        w.write("#Datasets");$        for (        String name : names) {$          if (separator == ',')           name=name.replaceAll(",","_");$          w.write(separator + " " + name);$        }$        w.write("\n");$      }$      final NodeSet selected=cViewer.getSelectedNodes();$      progressListener.setSubtask(shortName + " to counts");$      progressListener.setMaximum(2 * selected.size());$      progressListener.setProgress(0);$      int[] total=new int[cViewer.getDocument().getSampleNames().size()];${$        final Set<Integer> seen=new HashSet<>();$        for (Node v=selected.getFirstElement(); v != null; v=selected.getNextElement(v)) {$          final Integer id=(Integer)v.getInfo();$          if (id != null && !seen.contains(id)) {$            seen.add(id);$            final NodeData data=cViewer.getNodeData(v);$            final int[] counts=(reportSummarized || v.getOutDegree() == 0 ? data.getSummarized() : data.getAssigned());$            for (int i=0; i < counts.length; i++) {$              total[i]+=counts[i];$            }$          }$          progressListener.incrementProgress();$        }$      }${$        final Set<Integer> seen=new HashSet<>();$        for (Node v=selected.getFirstElement(); v != null; v=selected.getNextElement(v)) {$          final Integer id=(Integer)v.getInfo();$          if (id != null && !seen.contains(id)) {$            seen.add(id);$            final NodeData data=cViewer.getNodeData(v);$            final int[] counts=(reportSummarized || v.getOutDegree() == 0 ? data.getSummarized() : data.getAssigned());$            final String name=getLabelSource(shortName,classification,format,v);$            if (name != null) {$              if (counts.length == names.size()) {$                w.write(name);$                for (int i=0; i < counts.length; i++) {$                  double value=(total[i] == 0 ? 0 : (100.0 * counts[i]) / (double)total[i]);$                  w.write(String.format("%c%f",separator,(float)value));$                }$                w.write("\n");$                totalLines++;$              }$ else               System.err.println("Skipped " + name + ", number of values: "+ counts.length);$            }$          }$          progressListener.incrementProgress();$        }$      }$    }$   }$ catch (  CanceledException canceled) {$    System.err.println("USER CANCELED");$  }$  return totalLines;$}$
public static List<ItemStack> consolidateItemStacks(List<ItemStack> inputStacks){$  List<ItemStack> outputStacks=new ArrayList<ItemStack>();$  for (  ItemStack sourceIS : inputStacks) {$    boolean bFound=false;$    for (    ItemStack destIS : outputStacks) {$      if (destIS != null && sourceIS != null && itemStackIngredientsMatch(destIS,sourceIS)) {$        bFound=true;$        destIS.stackSize+=sourceIS.stackSize;$      }$    }$    if (!bFound)     outputStacks.add(sourceIS.copy());$  }$  return outputStacks;$}$
protected void writeImageDesc() throws IOException {$  out.write(0x2c);$  writeShort(0);$  writeShort(0);$  writeShort(width);$  writeShort(height);$  if (firstFrame) {$    out.write(0);$  }$ else {$    out.write(0x80 | 0 | 0| 0| palSize);$  }$}$
public boolean after(Model m){$  for (  String name : filters.keySet()) {$    if (m.getURI().matches(name)) {$      Object o=filters.get(name);$      try {$        IFilter f=null;$        if (o instanceof IFilter) {$          f=(IFilter)o;$        }$ else {$          f=(IFilter)(Class.forName((String)o).newInstance());$          filters.put(name,f);$        }$        if (!f.after(m)) {$          return false;$        }$      }$ catch (      Exception e) {$        log.error(e.getMessage(),e);$        filters.remove(name);$      }$    }$  }$  Module m1=floor();$  if (m1 != null) {$    return m1.after(m);$  }$  return true;$}$
public final String removeSizeInfo(String label){$  int pos=label.indexOf("[");$  if (pos > 0)   return label.substring(0,pos).trim();$  return label;$}$
public static byte[] decodeFromFile(String filename) throws java.io.IOException {$  byte[] decodedData=null;$  Base64.InputStream bis=null;$  try {$    java.io.File file=new java.io.File(filename);$    byte[] buffer=null;$    int length=0;$    int numBytes=0;$    if (file.length() > Integer.MAX_VALUE) {$      throw new java.io.IOException("File is too big for this convenience method (" + file.length() + " bytes).");$    }$    buffer=new byte[(int)file.length()];$    bis=new Base64.InputStream(new java.io.BufferedInputStream(new java.io.FileInputStream(file)),Base64.DECODE);$    while ((numBytes=bis.read(buffer,length,4096)) >= 0) {$      length+=numBytes;$    }$    decodedData=new byte[length];$    System.arraycopy(buffer,0,decodedData,0,length);$  }$ catch (  java.io.IOException e) {$    throw e;$  }$ finally {$    try {$      bis.close();$    }$ catch (    Exception e) {$    }$  }$  return decodedData;$}$
public static SpaceIndex createCompoundIndex(String[] paths,SpaceIndexType indexType,String indexName,boolean unique){$  return createCompoundIndex_Impl(paths,indexType,indexName,unique);$}$
public static java.util.Date convertToDate(String str,boolean isExpiry){$  SimpleDateFormat fmt=new SimpleDateFormat("yyyy-MM-dd HH:mm");$  java.util.Date dt=null;$  try {$    dt=fmt.parse(str);$  }$ catch (  ParseException ex) {$    Calendar cal=Calendar.getInstance();$    if (isExpiry) {$      cal.add(Calendar.DAY_OF_MONTH,1);$      cal.set(Calendar.HOUR_OF_DAY,23);$      cal.set(Calendar.MINUTE,59);$    }$ else {$      cal.set(Calendar.HOUR_OF_DAY,0);$      cal.set(Calendar.MINUTE,0);$    }$    dt=cal.getTime();$  }$  return dt;$}$
public JSONObject(){$  this.map=new HashMap();$}$
public int remove(final int key){$  if (key == FREE_KEY) {$    if (!m_hasFreeKey)     return NO_VALUE;$    m_hasFreeKey=false;$    --m_size;$    return m_freeValue;$  }$  int ptr=(Tools.phiMix(key) & m_mask) << 1;$  int k=m_data[ptr];$  if (k == key) {$    final int res=m_data[ptr + 1];$    shiftKeys(ptr);$    --m_size;$    return res;$  }$ else   if (k == FREE_KEY)   return NO_VALUE;$  while (true) {$    ptr=(ptr + 2) & m_mask2;$    k=m_data[ptr];$    if (k == key) {$      final int res=m_data[ptr + 1];$      shiftKeys(ptr);$      --m_size;$      return res;$    }$ else     if (k == FREE_KEY)     return NO_VALUE;$  }$}$
@Override protected void createItemsLayout(){$  if (mItemsLayout == null) {$    mItemsLayout=new LinearLayout(getContext());$    mItemsLayout.setOrientation(LinearLayout.VERTICAL);$  }$}$
public static void zipFiles(Collection<File> resFileList,File zipFile) throws IOException {$  ZipOutputStream zipout=new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(zipFile),TypedValue.BUFFER_SIZE));$  for (  File resFile : resFileList) {$    if (resFile.exists()) {$      zipFile(resFile,zipout,"");$    }$  }$  zipout.close();$}$
public void refreshToken(String refreshToken) throws LoginFailedException, RemoteServerException {$  HttpUrl url=HttpUrl.parse(OAUTH_TOKEN_ENDPOINT).newBuilder().addQueryParameter("client_id",CLIENT_ID).addQueryParameter("client_secret",SECRET).addQueryParameter("refresh_token",refreshToken).addQueryParameter("grant_type","refresh_token").build();$  RequestBody reqBody=RequestBody.create(null,new byte[0]);$  Request request=new Request.Builder().url(url).method("POST",reqBody).build();$  Response response=null;$  try {$    response=client.newCall(request).execute();$  }$ catch (  IOException e) {$    throw new RemoteServerException("Network Request failed to fetch refreshed tokenId",e);$  }$  Moshi moshi=new Moshi.Builder().build();$  GoogleAuthTokenJson googleAuthTokenJson=null;$  try {$    googleAuthTokenJson=moshi.adapter(GoogleAuthTokenJson.class).fromJson(response.body().string());$    Log.d(TAG,"" + googleAuthTokenJson.getExpiresIn());$  }$ catch (  IOException e) {$    throw new RemoteServerException("Failed to unmarshal the Json response to fetch refreshed tokenId",e);$  }$  if (googleAuthTokenJson.getError() != null) {$    throw new LoginFailedException(googleAuthTokenJson.getError());$  }$ else {$    Log.d(TAG,"Refreshed Token " + googleAuthTokenJson.getIdToken());$    expiresTimestamp=time.currentTimeMillis() + (googleAuthTokenJson.getExpiresIn() * 1000 - REFRESH_TOKEN_BUFFER_TIME);$    tokenId=googleAuthTokenJson.getIdToken();$  }$}$
private File createBmxFrameworkParameterFile(JAXBSource source,DMFramework framework,File workingDir){$  Transformer transformer;$  try {$    TransformerFactory tf=TransformerFactory.newInstance(XSLT2_TRANSFORMER_IMPLEMENTATION,null);$    InputStream transformationStream=ResourceHelper.getResourceInputStream(BMX_PARAMETERS_TRANSFORMATION);$    if (transformationStream == null) {$      throw new FileNotFoundException(String.format("Metadata.xml to BMX transformation file is absent: %s",BMX_PARAMETERS_TRANSFORMATION));$    }$    StreamSource xslt=new StreamSource(transformationStream);$    transformer=tf.newTransformer(xslt);$    transformer.setParameter(BMX_FRAMEWORK_PARAM,framework.value());$  }$ catch (  TransformerException|IOException e) {$    throw new RuntimeException(e);$  }$  File result=new File(workingDir,framework.value + ".txt");$  try (Writer writer=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(result),"UTF-8"))){$    StreamResult streamResult=new StreamResult(writer);$    transformer.transform(source,streamResult);$    writer.flush();$    return result;$  }$ catch (  TransformerException|IOException e) {$    throw new RuntimeException(e);$  }$}$
public void updateDatabaseUploadResult(RemoteOperationResult uploadResult,UploadFileOperation upload){$  Log_OC.d(TAG,"updateDataseUploadResult uploadResult: " + uploadResult + " upload: "+ upload);$  if (uploadResult.isCancelled()) {$    removeUpload(upload.getAccount().name,upload.getRemotePath());$  }$ else {$    String localPath=(FileUploader.LOCAL_BEHAVIOUR_MOVE == upload.getLocalBehaviour()) ? upload.getStoragePath() : null;$    if (uploadResult.isSuccess()) {$      updateUploadStatus(upload.getOCUploadId(),UploadStatus.UPLOAD_SUCCEEDED,UploadResult.UPLOADED,upload.getRemotePath(),localPath);$    }$ else {$      updateUploadStatus(upload.getOCUploadId(),UploadStatus.UPLOAD_FAILED,UploadResult.fromOperationResult(uploadResult),upload.getRemotePath(),localPath);$    }$  }$}$
private List<DataQueryParams> groupByAggregationType(DataQueryParams params){$  List<DataQueryParams> queries=new ArrayList<>();$  if (!params.getDataElements().isEmpty()) {$    ListMap<AggregationType,DimensionalItemObject> aggregationTypeDataElementMap=QueryPlannerUtils.getAggregationTypeDataElementMap(params);$    for (    AggregationType aggregationType : aggregationTypeDataElementMap.keySet()) {$      DataQueryParams query=DataQueryParams.newBuilder(params).withDataElements(aggregationTypeDataElementMap.get(aggregationType)).withAggregationType(aggregationType).build();$      queries.add(query);$    }$  }$ else   if (!params.getDataElementGroupSets().isEmpty()) {$    DimensionalObject degs=params.getDataElementGroupSets().get(0);$    DataElementGroup deg=(DataElementGroup)(degs.hasItems() ? degs.getItems().get(0) : null);$    AggregationType aggregationType=ObjectUtils.firstNonNull(params.getAggregationType(),SUM);$    if (deg != null && !deg.getMembers().isEmpty()) {$      PeriodType periodType=PeriodType.getPeriodTypeByName(params.getPeriodType());$      aggregationType=ObjectUtils.firstNonNull(params.getAggregationType(),deg.getAggregationType());$      aggregationType=QueryPlannerUtils.getAggregationType(deg.getValueType(),aggregationType,periodType,deg.getPeriodType());$    }$    DataQueryParams query=DataQueryParams.newBuilder(params).withAggregationType(aggregationType).build();$    queries.add(query);$  }$ else {$    DataQueryParams query=DataQueryParams.newBuilder(params).withAggregationType(ObjectUtils.firstNonNull(params.getAggregationType(),SUM)).build();$    queries.add(query);$  }$  if (queries.size() > 1) {$    log.debug("Split on aggregation type: " + queries.size());$  }$  return queries;$}$
public void zoom(float scaleX,float scaleY,float xValue,float yValue,AxisDependency axis){$  Runnable job=new ZoomJob(mViewPortHandler,scaleX,scaleY,xValue,yValue,getTransformer(axis),axis,this);$  addViewportJob(job);$}$
public Matrix(int m,int n,double s){$  this.m=m;$  this.n=n;$  A=new double[m][n];$  for (int i=0; i < m; i++) {$    for (int j=0; j < n; j++) {$      A[i][j]=s;$    }$  }$}$
public void onPinch(long time,float x0,float y0,float x1,float y1,boolean firstEvent){$  if ((mOverviewAnimationType != OverviewAnimationType.START_PINCH && mOverviewAnimationType != OverviewAnimationType.NONE) || mStackTabs == null) {$    return;$  }$  if (mPinch0TabIndex < 0)   startAnimation(time,OverviewAnimationType.START_PINCH);$  boolean inverse=(mCurrentMode == Orientation.PORTRAIT) ? y0 > y1 : LocalizationUtils.isLayoutRtl() ? (x0 <= x1) : (x0 > x1);$  float pinch0X=inverse ? x1 : x0;$  float pinch0Y=inverse ? y1 : y0;$  float pinch1X=inverse ? x0 : x1;$  float pinch1Y=inverse ? y0 : y1;$  float pinch0Offset=(mCurrentMode == Orientation.PORTRAIT) ? pinch0Y : LocalizationUtils.isLayoutRtl() ? -pinch0X : pinch0X;$  float pinch1Offset=(mCurrentMode == Orientation.PORTRAIT) ? pinch1Y : LocalizationUtils.isLayoutRtl() ? -pinch1X : pinch1X;$  if (firstEvent) {$    mPinch0TabIndex=-1;$    mPinch1TabIndex=-1;$    mScrollingTab=null;$    commitDiscard(time,false);$  }$  int pinch0TabIndex=mPinch0TabIndex;$  int pinch1TabIndex=mPinch1TabIndex;$  if (mPinch0TabIndex < 0) {$    pinch0TabIndex=getTabIndexAtPositon(pinch0X,pinch0Y);$    pinch1TabIndex=getTabIndexAtPositon(pinch1X,pinch1Y);$    if (pinch0TabIndex < 0 || pinch1TabIndex < 0) {$      pinch0TabIndex=-1;$      pinch1TabIndex=-1;$    }$  }$  if (pinch0TabIndex >= 0 && mPinch0TabIndex == pinch0TabIndex && mPinch1TabIndex == pinch1TabIndex) {$    final float minScrollTarget=getMinScroll(false);$    final float maxScrollTarget=getMaxScroll(false);$    final float oldScrollTarget=MathUtils.clamp(mScrollTarget,minScrollTarget,maxScrollTarget);$    if (pinch0TabIndex >= pinch1TabIndex) {$      float screenDelta0=pinch0Offset - mLastPinch0Offset;$      if (pinch0TabIndex == 0) {$        setScrollTarget(oldScrollTarget + screenDelta0,false);$      }$ else {$        float tab0ScrollSpace=mStackTabs[pinch0TabIndex].getScrollOffset() + oldScrollTarget;$        float tab0Screen=scrollToScreen(tab0ScrollSpace);$        float tab0ScrollFinal=screenToScroll(tab0Screen + screenDelta0);$        setScrollTarget(tab0ScrollFinal - mStackTabs[pinch0TabIndex].getScrollOffset(),false);$      }$    }$ else {$      float screenDelta0=pinch0Offset - mLastPinch0Offset;$      float tab0ScreenBefore=approxScreen(mStackTabs[pinch0TabIndex],oldScrollTarget);$      float tab0ScreenAfter=tab0ScreenBefore + screenDelta0;$      float screenDelta1=pinch1Offset - mLastPinch1Offset;$      float tab1ScreenBefore=approxScreen(mStackTabs[pinch1TabIndex],oldScrollTarget);$      float tab1ScreenAfter=tab1ScreenBefore + screenDelta1;$      float globalScrollBefore=screenToScroll(tab0ScreenBefore);$      float globalScrollAfter=screenToScroll((tab0ScreenAfter + tab0ScreenBefore) / 2);$      setScrollTarget(oldScrollTarget + globalScrollAfter - globalScrollBefore,true);$      float minScreen=tab0ScreenAfter;$      float maxScreen=tab0ScreenAfter;$      for (int i=pinch0TabIndex; i <= pinch1TabIndex; i++) {$        float screenBefore=approxScreen(mStackTabs[i],oldScrollTarget);$        float t=(screenBefore - tab0ScreenBefore) / (tab1ScreenBefore - tab0ScreenBefore);$        float screenAfter=(1 - t) * tab0ScreenAfter + t * tab1ScreenAfter;$        screenAfter=Math.max(minScreen,screenAfter);$        screenAfter=Math.min(maxScreen,screenAfter);$        minScreen=screenAfter + StackTab.sStackedTabVisibleSize;$        maxScreen=screenAfter + mStackTabs[i].getSizeInScrollDirection(mCurrentMode);$        float newScrollOffset=screenToScroll(screenAfter) - mScrollTarget;$        mStackTabs[i].setScrollOffset(newScrollOffset);$      }$      float delta1=tab1ScreenAfter - tab1ScreenBefore;$      for (int i=pinch1TabIndex + 1; i < mStackTabs.length; i++) {$        delta1/=2;$        float screenAfter=approxScreen(mStackTabs[i],oldScrollTarget) + delta1;$        screenAfter=Math.max(minScreen,screenAfter);$        screenAfter=Math.min(maxScreen,screenAfter);$        minScreen=screenAfter + StackTab.sStackedTabVisibleSize;$        maxScreen=screenAfter + mStackTabs[i].getSizeInScrollDirection(mCurrentMode);$        mStackTabs[i].setScrollOffset(screenToScroll(screenAfter) - mScrollTarget);$      }$      minScreen=tab0ScreenAfter;$      maxScreen=tab0ScreenAfter;$      float posScreen=tab0ScreenAfter;$      float delta0=tab0ScreenAfter - tab0ScreenBefore;$      for (int i=pinch0TabIndex - 1; i > 0; i--) {$        delta0/=2;$        minScreen=posScreen - mStackTabs[i].getSizeInScrollDirection(mCurrentMode);$        maxScreen=posScreen - StackTab.sStackedTabVisibleSize;$        float screenAfter=approxScreen(mStackTabs[i],oldScrollTarget) + delta0;$        screenAfter=Math.max(minScreen,screenAfter);$        screenAfter=Math.min(maxScreen,screenAfter);$        mStackTabs[i].setScrollOffset(screenToScroll(screenAfter) - mScrollTarget);$      }$    }$  }$  mPinch0TabIndex=pinch0TabIndex;$  mPinch1TabIndex=pinch1TabIndex;$  mLastPinch0Offset=pinch0Offset;$  mLastPinch1Offset=pinch1Offset;$  mEvenOutProgress=0.0f;$  requestUpdate();$}$
private void initPresenter(int type){$switch (type) {$case SEARCH_PHOTOS_TYPE:$    this.searchPresenter=new SearchPhotosImplementor(searchModel,this);$  break;$case SEARCH_COLLECTIONS_TYPE:$this.searchPresenter=new SearchCollectionsImplementor(searchModel,this);$break;$case SEARCH_USERS_TYPE:$this.searchPresenter=new SearchUsersImplementor(searchModel,this);$break;$}$this.pagerPresenter=new PagerImplementor(this);$this.loadPresenter=new LoadImplementor(loadModel,this);$this.scrollPresenter=new ScrollImplementor(scrollModel,this);$}$
boolean isAliveTag(Long tagId){$  if (equipmentConfiguration.getAliveTagId() == tagId) {$    return true;$  }$  for (  SubEquipmentConfiguration subEquipmentConfiguration : equipmentConfiguration.getSubEquipmentConfigurations().values()) {$    if (subEquipmentConfiguration.getAliveTagId() != null && subEquipmentConfiguration.getAliveTagId().equals(tagId)) {$      return true;$    }$  }$  return false;$}$
private void buildDFA(CMNode syntaxTree){$  int EOCPos=fLeafCount;$  XSCMLeaf nodeEOC=new XSCMLeaf(XSParticleDecl.PARTICLE_ELEMENT,null,-1,fLeafCount++);$  fHeadNode=new XSCMBinOp(XSModelGroupImpl.MODELGROUP_SEQUENCE,syntaxTree,nodeEOC);$  fLeafList=new XSCMLeaf[fLeafCount];$  fLeafListType=new int[fLeafCount];$  postTreeBuildInit(fHeadNode);$  fFollowList=new CMStateSet[fLeafCount];$  for (int index=0; index < fLeafCount; index++)   fFollowList[index]=new CMStateSet(fLeafCount);$  calcFollowList(fHeadNode);$  fElemMap=new Object[fLeafCount];$  fElemMapType=new int[fLeafCount];$  fElemMapId=new int[fLeafCount];$  fElemMapSize=0;$  Occurence[] elemOccurenceMap=null;$  for (int outIndex=0; outIndex < fLeafCount; outIndex++) {$    fElemMap[outIndex]=null;$    int inIndex=0;$    final int id=fLeafList[outIndex].getParticleId();$    for (; inIndex < fElemMapSize; inIndex++) {$      if (id == fElemMapId[inIndex])       break;$    }$    if (inIndex == fElemMapSize) {$      XSCMLeaf leaf=fLeafList[outIndex];$      fElemMap[fElemMapSize]=leaf.getLeaf();$      if (leaf instanceof XSCMRepeatingLeaf) {$        if (elemOccurenceMap == null) {$          elemOccurenceMap=new Occurence[fLeafCount];$        }$        elemOccurenceMap[fElemMapSize]=new Occurence((XSCMRepeatingLeaf)leaf,fElemMapSize);$      }$      fElemMapType[fElemMapSize]=fLeafListType[outIndex];$      fElemMapId[fElemMapSize]=id;$      fElemMapSize++;$    }$  }$  if (DEBUG) {$    if (fElemMapId[fElemMapSize - 1] != -1)     System.err.println("interal error in DFA: last element is not EOC.");$  }$  fElemMapSize--;$  int[] fLeafSorter=new int[fLeafCount + fElemMapSize];$  int fSortCount=0;$  for (int elemIndex=0; elemIndex < fElemMapSize; elemIndex++) {$    final int id=fElemMapId[elemIndex];$    for (int leafIndex=0; leafIndex < fLeafCount; leafIndex++) {$      if (id == fLeafList[leafIndex].getParticleId())       fLeafSorter[fSortCount++]=leafIndex;$    }$    fLeafSorter[fSortCount++]=-1;$  }$  int curArraySize=fLeafCount * 4;$  CMStateSet[] statesToDo=new CMStateSet[curArraySize];$  fFinalStateFlags=new boolean[curArraySize];$  fTransTable=new int[curArraySize][];$  CMStateSet setT=fHeadNode.firstPos();$  int unmarkedState=0;$  int curState=0;$  fTransTable[curState]=makeDefStateList();$  statesToDo[curState]=setT;$  curState++;$  HashMap stateTable=new HashMap();$  while (unmarkedState < curState) {$    setT=statesToDo[unmarkedState];$    int[] transEntry=fTransTable[unmarkedState];$    fFinalStateFlags[unmarkedState]=setT.getBit(EOCPos);$    unmarkedState++;$    CMStateSet newSet=null;$    int sorterIndex=0;$    for (int elemIndex=0; elemIndex < fElemMapSize; elemIndex++) {$      if (newSet == null)       newSet=new CMStateSet(fLeafCount);$ else       newSet.zeroBits();$      int leafIndex=fLeafSorter[sorterIndex++];$      while (leafIndex != -1) {$        if (setT.getBit(leafIndex)) {$          newSet.union(fFollowList[leafIndex]);$        }$        leafIndex=fLeafSorter[sorterIndex++];$      }$      if (!newSet.isEmpty()) {$        Integer stateObj=(Integer)stateTable.get(newSet);$        int stateIndex=(stateObj == null ? curState : stateObj.intValue());$        if (stateIndex == curState) {$          statesToDo[curState]=newSet;$          fTransTable[curState]=makeDefStateList();$          stateTable.put(newSet,new Integer(curState));$          curState++;$          newSet=null;$        }$        transEntry[elemIndex]=stateIndex;$        if (curState == curArraySize) {$          final int newSize=(int)(curArraySize * 1.5);$          CMStateSet[] newToDo=new CMStateSet[newSize];$          boolean[] newFinalFlags=new boolean[newSize];$          int[][] newTransTable=new int[newSize][];$          System.arraycopy(statesToDo,0,newToDo,0,curArraySize);$          System.arraycopy(fFinalStateFlags,0,newFinalFlags,0,curArraySize);$          System.arraycopy(fTransTable,0,newTransTable,0,curArraySize);$          curArraySize=newSize;$          statesToDo=newToDo;$          fFinalStateFlags=newFinalFlags;$          fTransTable=newTransTable;$        }$      }$    }$  }$  if (elemOccurenceMap != null) {$    fCountingStates=new Occurence[curState];$    for (int i=0; i < curState; ++i) {$      int[] transitions=fTransTable[i];$      for (int j=0; j < transitions.length; ++j) {$        if (i == transitions[j]) {$          fCountingStates[i]=elemOccurenceMap[j];$          break;$        }$      }$    }$  }$  if (DEBUG_VALIDATE_CONTENT)   dumpTree(fHeadNode,0);$  fHeadNode=null;$  fLeafList=null;$  fFollowList=null;$  fLeafListType=null;$  fElemMapId=null;$}$
public static boolean isValidBedGraphLine(String line){$  String[] bdg=line.split("\t");$  if (bdg.length < 4) {$    return false;$  }$  try {$    Integer.parseInt(bdg[1]);$    Integer.parseInt(bdg[2]);$  }$ catch (  NumberFormatException e) {$    return false;$  }$  return true;$}$
public static void updateAll(DataStore dataStore,Iterable<Update> updates,Set<String> tags){$  updateAll(dataStore,updates.iterator(),tags);$}$
public void calculateDimensions(Paint labelpaint,ViewPortHandler viewPortHandler){$  mTextWidthMax=getMaximumEntryWidth(labelpaint);$  mTextHeightMax=getMaximumEntryHeight(labelpaint);$switch (mOrientation) {$case VERTICAL:${$      float maxWidth=0f, maxHeight=0f, width=0f;$      float labelLineHeight=Utils.getLineHeight(labelpaint);$      final int count=mLabels.length;$      boolean wasStacked=false;$      for (int i=0; i < count; i++) {$        boolean drawingForm=mColors[i] != ColorTemplate.COLOR_SKIP;$        if (!wasStacked)         width=0.f;$        if (drawingForm) {$          if (wasStacked)           width+=mStackSpace;$          width+=mFormSize;$        }$        if (mLabels[i] != null) {$          if (drawingForm && !wasStacked)           width+=mFormToTextSpace;$ else           if (wasStacked) {$            maxWidth=Math.max(maxWidth,width);$            maxHeight+=labelLineHeight + mYEntrySpace;$            width=0.f;$            wasStacked=false;$          }$          width+=Utils.calcTextWidth(labelpaint,mLabels[i]);$          if (i < count - 1)           maxHeight+=labelLineHeight + mYEntrySpace;$        }$ else {$          wasStacked=true;$          width+=mFormSize;$          if (i < count - 1)           width+=mStackSpace;$        }$        maxWidth=Math.max(maxWidth,width);$      }$      mNeededWidth=maxWidth;$      mNeededHeight=maxHeight;$      break;$    }$case HORIZONTAL:${$    int labelCount=mLabels.length;$    float labelLineHeight=Utils.getLineHeight(labelpaint);$    float labelLineSpacing=Utils.getLineSpacing(labelpaint) + mYEntrySpace;$    float contentWidth=viewPortHandler.contentWidth() * mMaxSizePercent;$    ArrayList<FSize> calculatedLabelSizes=new ArrayList<>(labelCount);$    ArrayList<Boolean> calculatedLabelBreakPoints=new ArrayList<>(labelCount);$    ArrayList<FSize> calculatedLineSizes=new ArrayList<>();$    float maxLineWidth=0.f;$    float currentLineWidth=0.f;$    float requiredWidth=0.f;$    int stackedStartIndex=-1;$    for (int i=0; i < labelCount; i++) {$      boolean drawingForm=mColors[i] != ColorTemplate.COLOR_SKIP;$      calculatedLabelBreakPoints.add(false);$      if (stackedStartIndex == -1) {$        requiredWidth=0.f;$      }$ else {$        requiredWidth+=mStackSpace;$      }$      if (mLabels[i] != null) {$        calculatedLabelSizes.add(Utils.calcTextSize(labelpaint,mLabels[i]));$        requiredWidth+=drawingForm ? mFormToTextSpace + mFormSize : 0.f;$        requiredWidth+=calculatedLabelSizes.get(i).width;$      }$ else {$        calculatedLabelSizes.add(new FSize(0.f,0.f));$        requiredWidth+=drawingForm ? mFormSize : 0.f;$        if (stackedStartIndex == -1) {$          stackedStartIndex=i;$        }$      }$      if (mLabels[i] != null || i == labelCount - 1) {$        float requiredSpacing=currentLineWidth == 0.f ? 0.f : mXEntrySpace;$        if (!mWordWrapEnabled || currentLineWidth == 0.f || (contentWidth - currentLineWidth >= requiredSpacing + requiredWidth)) {$          currentLineWidth+=requiredSpacing + requiredWidth;$        }$ else {$          calculatedLineSizes.add(new FSize(currentLineWidth,labelLineHeight));$          maxLineWidth=Math.max(maxLineWidth,currentLineWidth);$          calculatedLabelBreakPoints.set(stackedStartIndex > -1 ? stackedStartIndex : i,true);$          currentLineWidth=requiredWidth;$        }$        if (i == labelCount - 1) {$          calculatedLineSizes.add(new FSize(currentLineWidth,labelLineHeight));$          maxLineWidth=Math.max(maxLineWidth,currentLineWidth);$        }$      }$      stackedStartIndex=mLabels[i] != null ? -1 : stackedStartIndex;$    }$    mCalculatedLabelSizes=calculatedLabelSizes.toArray(new FSize[calculatedLabelSizes.size()]);$    mCalculatedLabelBreakPoints=calculatedLabelBreakPoints.toArray(new Boolean[calculatedLabelBreakPoints.size()]);$    mCalculatedLineSizes=calculatedLineSizes.toArray(new FSize[calculatedLineSizes.size()]);$    mNeededWidth=maxLineWidth;$    mNeededHeight=labelLineHeight * (float)(mCalculatedLineSizes.length) + labelLineSpacing * (float)(mCalculatedLineSizes.length == 0 ? 0 : (mCalculatedLineSizes.length - 1));$    break;$  }$}$}$
public boolean ifUserExists(){$  return this.firebaseAuth.getCurrentUser() != null;$}$
public AuthenticatorException(String msg,List<String> messages,Throwable nested){$  super(msg,messages,nested);$}$
public boolean isInitializationComplete(){$  return (currentStage == ZWaveNodeInitStage.DONE);$}$
@Override public void startElement(String uri,String localName,String qName,Attributes attributes) throws SAXException {$  elementText=new StringBuilder();$switch (qName) {$case "Iteration":$    iteration=new Iteration();$  iterationHits.clear();$break;$case "Iteration_stat":$break;$case "Iteration_hits":$iterationHits.clear();$break;$case "Hit":$hit=new Hit();$break;$case "Hsp":$hsp=new HSP();$break;$}$}$
void subscribeByRegex(final Set<String> regexList,final BaseListener listener,final boolean sendInitialUpdateSeperately) throws CacheSynchronizationException {$  final Set<Long> allMatchingTags=new HashSet<Long>();$  Set<Long> newTagIds=cacheSynchronizer.initTags(regexList,allMatchingTags);$  handleTagSubscription(allMatchingTags,newTagIds,listener,sendInitialUpdateSeperately);$}$
private boolean scanPokemonScreen(){$  @ColorInt int[] pixels=screen.grabPixels(area);$  if (pixels != null) {$    boolean shouldShow=pixels[0] == Color.rgb(250,250,250) && pixels[1] == Color.rgb(28,135,150);$    setIVButtonDisplay(shouldShow);$    return shouldShow;$  }$  return false;$}$
public BoolDataType(){$  this.bool=false;$}$
public String convert(){$  if (s == null) {$    try {$      ByteArrayInputStream bs=new ByteArrayInputStream(bytes);$      DataInputStream d=new DataInputStream(bs);$      String buf=d.readUTF();$      sHashCode=buf.hashCode();$      return buf;$    }$ catch (    IOException e) {$      return "!!IOException!!";$    }$  }$  return s;$}$
private static String[] modify(Integer[] order,String[] array){$  String[] tmp=new String[order.length];$  int pos=0;$  for (  Integer id : order) {$    if (id < array.length)     tmp[pos++]=array[id];$  }$  return tmp;$}$
private void addFallbackSelector(Properties settings,ProtocolDispatchSelector ps){$  String proxy=settings.getProperty("default");$  if (proxy != null) {$    ps.setFallbackSelector(ProxyUtil.parseProxySettings(proxy));$  }$}$
@Override public boolean equals(Object object){$  return object == null || object == this;$}$
final DoubleEdgeList createTriangulation(Vector2... points){$  if (points == null)   throw new NullPointerException(Messages.getString("geometry.decompose.nullArray"));$  int size=points.length;$  if (size < 4)   throw new IllegalArgumentException(Messages.getString("geometry.decompose.invalidSize"));$  double winding=Geometry.getWinding(points);$  if (winding < 0.0) {$    Geometry.reverseWinding(points);$  }$  SweepLineState sweepstate=new SweepLineState();$  PriorityQueue<SweepLineVertex> queue=sweepstate.initialize(points);$  while (!queue.isEmpty()) {$    SweepLineVertex vertex=queue.poll();$    if (vertex.type == SweepLineVertexType.START) {$      this.start(vertex,sweepstate);$    }$ else     if (vertex.type == SweepLineVertexType.END) {$      this.end(vertex,sweepstate);$    }$ else     if (vertex.type == SweepLineVertexType.SPLIT) {$      this.split(vertex,sweepstate);$    }$ else     if (vertex.type == SweepLineVertexType.MERGE) {$      this.merge(vertex,sweepstate);$    }$ else     if (vertex.type == SweepLineVertexType.REGULAR) {$      this.regular(vertex,sweepstate);$    }$  }$  sweepstate.dcel.triangulateYMonotonePolygons();$  return sweepstate.dcel;$}$
public static void main(String[] sArgs){$  int[][] iaTest=new int[1][2];$  for (int iX=0; iX < iaTest.length; iX++) {$    for (int iY=0; iY < iaTest[0].length; iY++) {$      iaTest[iX][iY]=iX;$      System.out.print(iX);$    }$    System.out.println();$  }$  ArrayGraph atg=new ArrayGraph();$  System.err.println(gr.demokritos.iit.jinsect.utils.graphToDot(atg.getGraphForArray(iaTest,2,100000).getGraphLevel(0),true));$}$
public synchronized void showThreadTrace(){$  if (!_threadLocalTraceEnabled)   throw new IllegalStateException();$  if (_traceLoggingLevel == OFF_VALUE && !_hasAssociatedLogOn)   return;$  _logger.log(Level.INFO,"Trace Thread Start [" + _traceLength + "]");$  sortTrace(_threadTrace.get());$  for (  LogRecord record : _threadTrace.get())   traceLogRecord(record);$  if (_associatedLoggers != null) {$    for (    String associatedLogName : _associatedLoggers)     TraceableLogger.getLogger(associatedLogName).showThreadTrace();$  }$  _logger.log(Level.INFO,"Trace Thread End [" + _traceLength + "]");$}$
public PolyType(Class baseClass,PolyEntry... entries){$  this(baseClass,null,entries);$}$
@Override public void showMessage(String message){$  Snackbar.make(root,message,Snackbar.LENGTH_SHORT).show();$}$
public short[][] production_table(){$  return _production_table;$}$
public void zoomOut(){$  PointF center=mViewPortHandler.getContentCenter();$  Matrix save=mViewPortHandler.zoomOut(center.x,-center.y);$  mViewPortHandler.refresh(save,this,false);$  calculateOffsets();$  postInvalidate();$}$
public BriefUnitGraph(Body body){$  super(body);$  int size=unitChain.size();$  if (Options.v().time())   Timers.v().graphTimer.start();$  unitToSuccs=new HashMap<Unit,List<Unit>>(size * 2 + 1,0.7f);$  unitToPreds=new HashMap<Unit,List<Unit>>(size * 2 + 1,0.7f);$  buildUnexceptionalEdges(unitToSuccs,unitToPreds);$  makeMappedListsUnmodifiable(unitToSuccs);$  makeMappedListsUnmodifiable(unitToPreds);$  buildHeadsAndTails();$  if (Options.v().time())   Timers.v().graphTimer.end();$  soot.util.PhaseDumper.v().dumpGraph(this,body);$}$
protected void initializeStorage(ISVNRemoteFile file,IProgressMonitor monitor) throws TeamException {$  storage=((IResourceVariant)file).getStorage(monitor);$}$
public GroupsJoinQuery groupId(Integer value){$  return unsafeParam("group_id",value);$}$
public final static double abs(double dNum){$  return (dNum > 0) ? dNum : -dNum;$}$
public static int makeListItemSurveyResp(Delegator delegator,GenericValue item,List<String> surveyResps) throws GenericEntityException {$  if (UtilValidate.isNotEmpty(surveyResps)) {$    int count=0;$    for (    String responseId : surveyResps) {$      GenericValue listResp=delegator.makeValue("ShoppingListItemSurvey");$      listResp.set("shoppingListId",item.getString("shoppingListId"));$      listResp.set("shoppingListItemSeqId",item.getString("shoppingListItemSeqId"));$      listResp.set("surveyResponseId",responseId);$      delegator.create(listResp);$      count++;$    }$    return count;$  }$  return -1;$}$
@Override protected int sizeOf(String key,BitmapDrawable value){$  final int bitmapSize=getBitmapSize(value) / 1024;$  return bitmapSize == 0 ? 1 : bitmapSize;$}$
public ResultEntry convertEntriesToResultArrays(IQueryResultSet<IEntryPacket> entries){$  LinkedList<String> columnNames=new LinkedList<String>();$  LinkedList<String> columnLabelsList=new LinkedList<String>();$  LinkedList<String> tableNamesList=new LinkedList<String>();$  for (  SelectColumn col : query.getQueryColumns()) {$    if (col.isVisible()) {$      columnNames.add(col.getName());$      columnLabelsList.add(col.getAlias());$      tableNamesList.add(col.getColumnTableData().getTableName());$    }$  }$  String[] fieldNames=columnNames.toArray(new String[columnNames.size()]);$  String[] columnLabels=columnLabelsList.toArray(new String[columnLabelsList.size()]);$  String[] tableNames=tableNamesList.toArray(new String[tableNamesList.size()]);$  Object[][] fieldValues=new Object[entries.size()][columnNames.size()];$  Iterator<IEntryPacket> iter=entries.iterator();$  int row=0;$  while (iter.hasNext()) {$    IEntryPacket entry=iter.next();$    int column=0;$    for (int i=0; i < query.getQueryColumns().size(); i++) {$      SelectColumn sc=query.getQueryColumns().get(i);$      if (!sc.isVisible())       continue;$      fieldValues[row][column++]=entries.getFieldValue(sc,entry);$    }$    row++;$  }$  ResultEntry result=new ResultEntry(fieldNames,columnLabels,tableNames,fieldValues);$  return result;$}$
public ChangeReport(final long changeId){$  this.changeId=changeId;$}$
public static AlarmValueImpl createAlarmValue(Alarm alarm,Tag tag){$  AlarmValueImpl alarmValueImpl=null;$  if (alarm != null && tag != null) {$    alarmValueImpl=new AlarmValueImpl(alarm.getId(),alarm.getFaultCode(),alarm.getFaultMember(),alarm.getFaultFamily(),alarm.getInfo(),alarm.getTagId(),tag.getDescription(),alarm.getTimestamp(),alarm.isActive());$  }$  return alarmValueImpl;$}$
@SuppressWarnings({"unchecked","cast"}) public PackageAccess fullCopy(){$  PackageAccess tree=(PackageAccess)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public boolean isCellEditable(int row,int col){$  return true;$}$
public double lengthSquared(){$  return NumberConversions.square(x) + NumberConversions.square(y) + NumberConversions.square(z);$}$
private void updateTexts(DocumentEvent e){$  Document doc=e.getDocument();$  if (doc == projectNameTextField.getDocument() || doc == projectLocationTextField.getDocument()) {$    String projectName=projectNameTextField.getText();$    String projectFolder=projectLocationTextField.getText();$    createdFolderTextField.setText(projectFolder + File.separatorChar + projectName);$  }$  panel.fireChangeEvent();$}$
public boolean isUseAntiAlias(){$  return useAntiAlias;$}$
@Override public void write(char[] chr) throws IOException {$  out.write(chr);$}$
String toString(int indentFactor,int indent) throws JSONException {$  int len=length();$  if (len == 0) {$    return "[]";$  }$  int i;$  StringBuilder sb=new StringBuilder("[");$  if (len == 1) {$    sb.append(JSONObject.valueToString(this.myArrayList.get(0),indentFactor,indent));$  }$ else {$    int newindent=indent + indentFactor;$    sb.append('\n');$    for (i=0; i < len; i+=1) {$      if (i > 0) {$        sb.append(",\n");$      }$      for (int j=0; j < newindent; j+=1) {$        sb.append(' ');$      }$      sb.append(JSONObject.valueToString(this.myArrayList.get(i),indentFactor,newindent));$    }$    sb.append('\n');$    for (i=0; i < indent; i+=1) {$      sb.append(' ');$    }$  }$  sb.append(']');$  return sb.toString();$}$
public ColorPanel(Color initialColor){$  this(initialColor,true);$}$
@Override public void start(){$  if (LOGGER.isDebugEnabled()) {$    LOGGER.debug("starting all alive timers");$  }$  clusterCache.acquireWriteLockOnKey(C2monCacheLoader.aliveStatusInitialized);$  try {$    if (!clusterCache.hasKey(C2monCacheLoader.aliveStatusInitialized) || !(Boolean)clusterCache.getCopy(C2monCacheLoader.aliveStatusInitialized)) {$      Long aliveTagId;$      Process process;$      for (      Long id : processCache.getKeys()) {$        processCache.acquireReadLockOnKey(id);$        try {$          process=processCache.get(id);$          aliveTagId=process.getAliveTagId();$          if (aliveTagId != null) {$            if (controlTagCache.hasKey(process.getStateTagId())) {$              if (processFacade.isRunning(process)) {$                aliveTimerFacade.start(aliveTagId);$              }$            }$ else {$              LOGGER.warn("Unable to locate state tag in cache (id = " + process.getStateTagId() + ") "+ "cannot start alive timer for this process.");$            }$          }$        }$  finally {$          processCache.releaseReadLockOnKey(id);$        }$      }$      Equipment equipment;$      for (      Long id : equipmentCache.getKeys()) {$        equipmentCache.acquireReadLockOnKey(id);$        try {$          equipment=equipmentCache.get(id);$          aliveTagId=equipment.getAliveTagId();$          if (aliveTagId != null) {$            if (controlTagCache.hasKey(equipment.getStateTagId())) {$              if (equipmentFacade.isRunning(equipment)) {$                aliveTimerFacade.start(aliveTagId);$              }$            }$ else {$              LOGGER.warn("Unable to locate state tag in cache (id = " + equipment.getStateTagId() + ") "+ "cannot start alive timer for this equipment.");$            }$          }$        }$  finally {$          equipmentCache.releaseReadLockOnKey(id);$        }$      }$      SubEquipment subEquipment;$      for (      Long id : subEquipmentCache.getKeys()) {$        subEquipmentCache.acquireReadLockOnKey(id);$        try {$          subEquipment=subEquipmentCache.get(id);$          aliveTagId=subEquipment.getAliveTagId();$          if (aliveTagId != null) {$            if (controlTagCache.hasKey(subEquipment.getStateTagId())) {$              if (subEquipmentFacade.isRunning(subEquipment)) {$                aliveTimerFacade.start(aliveTagId);$              }$            }$ else {$              LOGGER.warn("Unable to locate state tag in cache (id = " + subEquipment.getStateTagId() + ") cannot "+ "start alive timer for this subequipment.");$            }$          }$        }$  finally {$          subEquipmentCache.releaseReadLockOnKey(id);$        }$      }$      aliveTimerFacade.startAllTimers();$      clusterCache.put(C2monCacheLoader.aliveStatusInitialized,Boolean.TRUE);$    }$  }$ catch (  Exception e) {$    LOGGER.error("initialise() : Error starting alive timer mechanism.",e);$  }$ finally {$    clusterCache.releaseWriteLockOnKey(C2monCacheLoader.aliveStatusInitialized);$  }$  LOGGER.info("Finished initializing all alive timers.");$}$
public static INDArray[] append(INDArray[] history,INDArray append){$  INDArray[] appended=new INDArray[history.length];$  appended[0]=append;$  for (int i=0; i < history.length - 1; i++) {$    appended[i + 1]=history[i];$  }$  return appended;$}$
public GroupsGetInvitedUsersQuery fields(UserField... value){$  return unsafeParam("fields",value);$}$
public static Long streamOpCRC32(String stream){$  CRC32 crc=requestCRC.get();$  try {$    crc.update(stream.getBytes(UTF_8));$    return crc.getValue();$  }$  finally {$    crc.reset();$  }$}$
public CoreDocumentImpl(DocumentType doctype){$  this(doctype,false);$}$
public <OBJ extends SRC>InterfaceAdapter<SRC,DST> register(Class<OBJ> inClass,DST outInterface){$  Adapter<OBJ,DST> ret=new GenericAdapter<OBJ,DST>(inClass,outInterface);$  register(ret);$  return this;$}$
@BindingAdapter({"items","view_provider"}) public static void bindViewPagerAdapter(ViewPager viewPager,Observable<List<ViewModel>> items,ViewProvider viewProvider){$  PagerAdapter previousAdapter=viewPager.getAdapter();$  BindingUtils.bindAdapterWithDefaultBinder(viewPager,items,viewProvider);$  if (previousAdapter != null)   ExampleApplication.getRefWatcher(viewPager.getContext()).watch(previousAdapter);$}$
public void loadWeather(Player player){$  onWeatherChange(player.getWorldId(),player);$}$
private void populateResultsBox(IVScanResult ivScanResult){$  ivScanResult.sortCombinations();$  populateResultsHeader(ivScanResult);$  if (ivScanResult.getCount() == 1) {$    populateSingleIVMatch(ivScanResult);$  }$ else {$    populateMultipleIVMatch(ivScanResult);$  }$  setResultScreenPercentageRange(ivScanResult);$  adjustSeekbarsThumbs();$  hideSeeAllLinkIfFlagSet(ivScanResult);$  populateAdvancedInformation(ivScanResult);$  populatePrevScanNarrowing();$}$
public Feature build(){$  checkEncloses(supportedVersionRange,defaultVersionRange,"supportedVersionRange %s does not enclose defaultVersionRange %s on %s",featureName);$  for (  ChildBinding binding : childBindings.build()) {$    checkEncloses(supportedVersionRange,binding.range,"parent supportedVersionRange %s does not include binding range %s for child %s",binding.child.featureName);$    checkEncloses(binding.child.supportedVersionRange,binding.range,"child supportedVersionRange %s does not include binding range %s for child %s",binding.child.featureName);$  }$  return new Feature(this);$}$
public BasicBlock pull() throws NoSuchElementException {$  if (q.size() == 0)   throw new NoSuchElementException("Pull from empty BBQ");$  BasicBlock b=(q.get(0));$  q.remove(0);$  b.inq=false;$  return b;$}$
protected void initShapeRenderers(){$  shapeRendererList=new HashMap<>();$  shapeRendererList.put(ScatterChart.ScatterShape.SQUARE.toString(),new SquareShapeRenderer());$  shapeRendererList.put(ScatterChart.ScatterShape.CIRCLE.toString(),new CircleShapeRenderer());$  shapeRendererList.put(ScatterChart.ScatterShape.TRIANGLE.toString(),new TriangleShapeRenderer());$  shapeRendererList.put(ScatterChart.ScatterShape.CROSS.toString(),new CrossShapeRenderer());$  shapeRendererList.put(ScatterChart.ScatterShape.X.toString(),new XShapeRenderer());$  shapeRendererList.put(ScatterChart.ScatterShape.CHEVRON_UP.toString(),new ChevronUpShapeRenderer());$  shapeRendererList.put(ScatterChart.ScatterShape.CHEVRON_DOWN.toString(),new ChevronDownShapeRenderer());$}$
public ServerTransaction(){$}$
private static boolean isLowercaseLetter(char ch){$  return ('a' <= ch && ch <= 'z');$}$
protected TextViewer createText(Composite parent){$  return new TextViewer(parent,SWT.V_SCROLL | SWT.WRAP | SWT.MULTI| SWT.READ_ONLY);$}$
public boolean isCritical(){$  return true;$}$
private List<Result> makeTopNResults(JsonNode jsonResult,Set<DimensionColumn> dimensionColumns,Set<MetricColumn> metricColumns,DateTimeZone dateTimeZone){$  List<Result> results=new ArrayList<>();$  for (  JsonNode record : jsonResult) {$    DateTime timeStamp=new DateTime(record.get("timestamp").asText(),dateTimeZone);$    JsonNode result=record.get("result");$    for (    final JsonNode entry : result) {$      LinkedHashMap<DimensionColumn,DimensionRow> dimensionRows=extractDimensionRows(dimensionColumns,entry);$      LinkedHashMap<MetricColumn,Object> metricValues=extractMetricValues(metricColumns,entry);$      results.add(new Result(dimensionRows,metricValues,timeStamp));$    }$  }$  return results;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Summon_ME_TO_B(String value0,String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200574,value0,skilltarget,skillname);$}$
public Criteria or(){$  Criteria criteria=createCriteriaInternal();$  oredCriteria.add(criteria);$  return criteria;$}$
private boolean canChangeNickname(Legion legion,int targetObjectId,String newNickname){$  if (!isValidNickname(newNickname)) {$    return false;$  }$ else   if (!legion.isMember(targetObjectId)) {$    return false;$  }$  return true;$}$
public void handleDecode(Result rawResult){$  inactivityTimer.onActivity();$  beepManager.playBeepSoundAndVibrate();$  handleDecodeExternally(rawResult);$}$
@SuppressWarnings("unchecked") public static <K,V>Map<String,V> toMap(Object... data){$  if (data.length == 1 && data[0] instanceof Map) {$    return UtilGenerics.<String,V>checkMap(data[0]);$  }$  if (data.length % 2 == 1) {$    IllegalArgumentException e=new IllegalArgumentException("You must pass an even sized array to the toMap method (size = " + data.length + ")");$    Debug.logInfo(e,module);$    throw e;$  }$  Map<String,V> map=new HashMap<String,V>();$  for (int i=0; i < data.length; ) {$    map.put((String)data[i++],(V)data[i++]);$  }$  return map;$}$
public void clearMemoryCache(){$  checkConfiguration();$  configuration.memoryCache.clear();$}$
public ItemToSkillTreeCursor queryItemToSkillTreeItem(long id){$  QueryHelper qh=new QueryHelper();$  qh.Columns=null;$  qh.Selection="itst." + S.COLUMN_ITEM_TO_SKILL_TREE_ITEM_ID + " = ? ";$  qh.SelectionArgs=new String[]{"" + id};$  qh.GroupBy=null;$  qh.Having=null;$  qh.OrderBy=null;$  qh.Limit=null;$  return new ItemToSkillTreeCursor(wrapJoinHelper(builderItemToSkillTree(),qh));$}$
public MessagesDenyMessagesFromCommunityQuery(VkApiClient client,UserActor actor,int groupId){$  super(client,"messages.denyMessagesFromCommunity",OkResponse.class);$  accessToken(actor.getAccessToken());$  groupId(groupId);$}$
public ColorPoint(final double point,final Color color){$  if (color == null) {$    throw new NullPointerException("color can't be null");$  }$  if (point > 1 || point < 0) {$    throw new IndexOutOfBoundsException("Point of color must be between 0 and 1.");$  }$  this.point=point;$  this.color=color;$}$
public static void main(String[] args){$  try {$    ProgramProperties.setProgramName("Meganizer");$    ProgramProperties.setProgramVersion(megan.main.Version.SHORT_DESCRIPTION);$    PeakMemoryUsageMonitor.start();$    (new DAAMeganizer()).run(args);$    System.err.println("Total time:  " + PeakMemoryUsageMonitor.getSecondsSinceStartString());$    System.err.println("Peak memory: " + PeakMemoryUsageMonitor.getPeakUsageString());$    System.exit(0);$  }$ catch (  Exception ex) {$    Basic.caught(ex);$    System.exit(1);$  }$}$
public ZWaveScheduleEntryLockCommandClass(ZWaveNode node,ZWaveController controller,ZWaveEndpoint endpoint){$  super(node,controller,endpoint);$}$
public IdQuery(String typeName,Object id,Object routing,QueryResultType queryResultType){$  this(typeName,id,routing,queryResultType,0);$}$
public AudioGetRecommendationsQuery offset(Integer value){$  return unsafeParam("offset",value);$}$
public EmailBuilder bcc(String bcc){$  this.bcc.add(bcc);$  return this;$}$
public static void v(String tag,String msg){$  if (LOG_ENABLE) {$    Log.v(tag,buildMsg(msg));$  }$}$
private static URL[] pathToURLs(String path) throws MalformedURLException {$  if (path == null) {$    return null;$  }$synchronized (pathToURLsCache) {$    Object[] v=(Object[])pathToURLsCache.get(path);$    if (v != null) {$      return ((URL[])v[0]);$    }$  }$  StringTokenizer st=new StringTokenizer(path);$  URL[] urls=new URL[st.countTokens()];$  for (int i=0; st.hasMoreTokens(); i++) {$    urls[i]=new URL(st.nextToken());$  }$synchronized (pathToURLsCache) {$    pathToURLsCache.put(path,new Object[]{urls,new SoftReference(path)});$  }$  return urls;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Resurrect_A_TO_SELF(String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200862,skillcaster,skillname);$}$
@Override public int hashCode(){$  final int prime=31;$  int result=1;$  result=prime * result + ((getId() == null) ? 0 : getId().hashCode());$  result=prime * result + ((getCascadeId() == null) ? 0 : getCascadeId().hashCode());$  result=prime * result + ((getRootKey() == null) ? 0 : getRootKey().hashCode());$  result=prime * result + ((getRootName() == null) ? 0 : getRootName().hashCode());$  result=prime * result + ((getName() == null) ? 0 : getName().hashCode());$  result=prime * result + ((getHotkey() == null) ? 0 : getHotkey().hashCode());$  result=prime * result + ((getParentId() == null) ? 0 : getParentId().hashCode());$  result=prime * result + ((getIsLeaf() == null) ? 0 : getIsLeaf().hashCode());$  result=prime * result + ((getIsAutoExpand() == null) ? 0 : getIsAutoExpand().hashCode());$  result=prime * result + ((getIconName() == null) ? 0 : getIconName().hashCode());$  result=prime * result + ((getSortNo() == null) ? 0 : getSortNo().hashCode());$  result=prime * result + ((getEnable() == null) ? 0 : getEnable().hashCode());$  result=prime * result + ((getRemark() == null) ? 0 : getRemark().hashCode());$  result=prime * result + ((getCreateBy() == null) ? 0 : getCreateBy().hashCode());$  result=prime * result + ((getCreateTime() == null) ? 0 : getCreateTime().hashCode());$  result=prime * result + ((getUpdateBy() == null) ? 0 : getUpdateBy().hashCode());$  result=prime * result + ((getUpdateTime() == null) ? 0 : getUpdateTime().hashCode());$  return result;$}$
public Utf8_Enumeration(){$}$
public static void apply(Document srcDoc,String srcClassification,Collection<Integer> srcClassIds,String tarRMA6FileName,ProgressListener progress,Single<Long> totalReads) throws IOException, CanceledException {$  final long startTime=System.currentTimeMillis();$  final IConnector connector=srcDoc.getConnector();$  final String[] classifications=connector.getAllClassificationNames().clone();$  final RMA6FileCreator rma6FileCreator=new RMA6FileCreator(tarRMA6FileName,true);$  rma6FileCreator.writeHeader(ProgramProperties.getProgramVersion(),srcDoc.getBlastMode(),classifications,false);$  rma6FileCreator.startAddingQueries();$  try {$    try (IReadBlockIterator iterator=connector.getReadsIteratorForListOfClassIds(srcClassification,srcClassIds,0,10,true,true)){$      progress.setTasks("Extracting","Processing file: " + Basic.getFileNameWithoutPath(srcDoc.getMeganFile().getFileName()));$      progress.setProgress(0);$      progress.setMaximum(iterator.getMaximumProgress());$      while (iterator.hasNext()) {$        final IReadBlock readBlock=iterator.next();$        final StringBuilder blastTextBuf=new StringBuilder();$        blastTextBuf.append(FileInputIterator.PREFIX_TO_INDICATE_TO_PARSE_FILENAME_STRING);$        blastTextBuf.append("Query= ").append(readBlock.getReadHeader()).append("\n");$        int[][] match2classification2id=new int[readBlock.getNumberOfAvailableMatchBlocks()][classifications.length];$        for (int i=0; i < readBlock.getNumberOfAvailableMatchBlocks(); i++) {$          final IMatchBlock matchBlock=readBlock.getMatchBlock(i);$          blastTextBuf.append(matchBlock.getText());$          for (int k=0; k < classifications.length; k++) {$            match2classification2id[i][k]=matchBlock.getId(classifications[k]);$          }$        }$        totalReads.set(totalReads.get() + 1);$        final byte[] readBytes=(">" + readBlock.getReadHeader() + "\n"+ readBlock.getReadSequence()).getBytes();$        final byte[] matchBytes=computeSAM(srcDoc.getBlastMode(),1000,blastTextBuf.toString());$        rma6FileCreator.addQuery(readBytes,readBytes.length,readBlock.getNumberOfAvailableMatchBlocks(),matchBytes,matchBytes.length,match2classification2id,0L);$        progress.setProgress(iterator.getProgress());$      }$    }$   }$  finally {$    rma6FileCreator.endAddingQueries();$    rma6FileCreator.writeClassifications(new String[0],null,null);$    rma6FileCreator.writeAuxBlocks(null);$    rma6FileCreator.close();$    final Document doc=new Document();$    doc.setProgressListener(progress);$    doc.getMeganFile().setFile(tarRMA6FileName,MeganFile.Type.RMA6_FILE);$    doc.getActiveViewers().addAll(Arrays.asList(classifications));$  }$  System.err.println("Extraction required " + ((System.currentTimeMillis() - startTime) / 1000) + " seconds");$}$
@CalledByNative public static boolean isAccessibilityEnabled(Context context){$  AccessibilityManager manager=(AccessibilityManager)context.getSystemService(Context.ACCESSIBILITY_SERVICE);$  return manager != null && manager.isEnabled() && manager.isTouchExplorationEnabled();$}$
@Override protected Expression generateExpression(){$  if (windBarbsPanel == null) {$    return null;$  }$  Expression expression=windBarbsPanel.getExpression();$  return expression;$}$
public Node addRoot(){$  throw new UnsupportedOperationException("Changes to tree structure not allowed for spanning trees.");$}$
public static boolean checkAndCreateFolder(String path){$  boolean created=false;$  try {$    FileFactory.FileType fileType=FileFactory.getFileType(path);$    if (FileFactory.isFileExist(path,fileType)) {$      created=true;$    }$ else {$      created=FileFactory.mkdirs(path,fileType);$    }$  }$ catch (  IOException e) {$    LOGGER.error(e.getMessage());$  }$  return created;$}$
void addFillComponents(Container panel,int[] cols,int[] rows){$  Dimension filler=new Dimension(10,10);$  boolean filled_cell_11=false;$  CellConstraints cc=new CellConstraints();$  if (cols.length > 0 && rows.length > 0) {$    if (cols[0] == 1 && rows[0] == 1) {$      panel.add(Box.createRigidArea(filler),cc.xy(1,1));$      filled_cell_11=true;$    }$  }$  for (int index=0; index < cols.length; index++) {$    if (cols[index] == 1 && filled_cell_11) {$      continue;$    }$    panel.add(Box.createRigidArea(filler),cc.xy(cols[index],1));$  }$  for (int index=0; index < rows.length; index++) {$    if (rows[index] == 1 && filled_cell_11) {$      continue;$    }$    panel.add(Box.createRigidArea(filler),cc.xy(1,rows[index]));$  }$}$
public INSECTFileDB(String sPrefix,String sBaseDir){$  if (sPrefix == null)   Prefix="";$ else   Prefix=sPrefix;$  if (sBaseDir == null)   BaseDir="./";$ else   BaseDir=sBaseDir;$}$
public LoadImplementor(LoadModel model,LoadView view){$  this.model=model;$  this.view=view;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Summon_A_TO_B(String skillcaster,String value0,String skillname){$  return new SM_SYSTEM_MESSAGE(1201033,skillcaster,value0,skillname);$}$
@Override public void doctypeDecl(String rootElement,String publicId,String systemId,Augmentations augs) throws XNIException {$  fSeenDoctypeDecl=true;$  fRootElement.setValues(null,rootElement,rootElement,null);$  String eid=null;$  try {$    eid=XMLEntityManager.expandSystemId(systemId,fDocLocation.getExpandedSystemId(),false);$  }$ catch (  java.io.IOException e) {$  }$  XMLDTDDescription grammarDesc=new XMLDTDDescription(publicId,systemId,fDocLocation.getExpandedSystemId(),eid,rootElement);$  fDTDGrammar=fGrammarBucket.getGrammar(grammarDesc);$  if (fDTDGrammar == null) {$    if (fGrammarPool != null && (systemId != null || publicId != null)) {$      fDTDGrammar=(DTDGrammar)fGrammarPool.retrieveGrammar(grammarDesc);$    }$  }$  if (fDTDGrammar == null) {$    if (!fBalanceSyntaxTrees) {$      fDTDGrammar=new DTDGrammar(fSymbolTable,grammarDesc);$    }$ else {$      fDTDGrammar=new BalancedDTDGrammar(fSymbolTable,grammarDesc);$    }$  }$ else {$    fValidationManager.setCachedDTD(true);$  }$  fGrammarBucket.setActiveGrammar(fDTDGrammar);$  if (fDocumentHandler != null) {$    fDocumentHandler.doctypeDecl(rootElement,publicId,systemId,augs);$  }$}$
public boolean isCritical(){$  return true;$}$
public WallCreateCommentQuery createComment(UserActor actor,int postId){$  return new WallCreateCommentQuery(getClient(),actor,postId);$}$
@Override public synchronized void put(String key,Entry entry){$  pruneIfNeeded(entry.data.length);$  File file=getFileForKey(key);$  try {$    BufferedOutputStream fos=new BufferedOutputStream(new FileOutputStream(file));$    CacheHeader e=new CacheHeader(key,entry);$    boolean success=e.writeHeader(fos);$    if (!success) {$      fos.close();$      VolleyLog.d("Failed to write header for %s",file.getAbsolutePath());$      throw new IOException();$    }$    fos.write(entry.data);$    fos.close();$    putEntry(key,e);$    return;$  }$ catch (  IOException e) {$  }$  boolean deleted=file.delete();$  if (!deleted) {$    VolleyLog.d("Could not clean up file %s",file.getAbsolutePath());$  }$}$
public static boolean isDailyReminderSet(Context context){$  SharedPreferences prefs=PreferenceManager.getDefaultSharedPreferences(context);$  return prefs.getBoolean(context.getString(R.string.key_daily_reminder),true);$}$
public void init$Children(){$  children=new ASTNode[2];$}$
public void execute() throws BuildException {$  if (values.isEmpty()) {$    throw new BuildException("You must set at least one value!",getLocation());$  }$  if (target == null) {$    throw new BuildException("Target must be set!",getLocation());$  }$  for (  String val : values) {$    log("Process '" + val + "' location with '"+ target+ "' target ...",Project.MSG_VERBOSE);$    CallTarget antCall=(CallTarget)getProject().createTask("antcall");$    antCall.init();$    antCall.setLocation(getLocation());$    antCall.setTarget(target);$    Property prop=antCall.createParam();$    prop.setName(name);$    prop.setValue(val);$    antCall.execute();$  }$}$
public int pointsToSetHashCode(){$  final int PRIME=31;$  int result=1;$  for (  AllocAndContext elem : this) {$    result=PRIME * result + elem.hashCode();$  }$  return result;$}$
public void read(Reader reader,Collection<String> knownSamples,boolean clear) throws IOException {$  int countNotFound=0;$  if (clear)   clear();$  try (BufferedReader r=new BufferedReader(reader)){$    String aLine=r.readLine();$    while (aLine != null && aLine.trim().length() == 0) {$      aLine=r.readLine();$    }$    if (aLine != null) {$      String[] tokens=Basic.splitWithQuotes(aLine,'\t');$      if (tokens.length < 1 || !tokens[0].startsWith(SAMPLE_ID)) {$        throw new IOException(SAMPLE_ID + " tag not found, no sample-attributes data...");$      }$      final int tokensPerLine=tokens.length;$      final Set<String> newAttributes=new HashSet<>();$      final List<String> attributesOrder=new LinkedList<>();$      for (int i=1; i < tokensPerLine; i++) {$        String attribute=tokens[i];$        if (!isSecretAttribute(attribute) && !isHiddenAttribute(attribute) && (newAttributes.contains(attribute) || getAttributeOrder().contains(attribute))) {$          int count=1;$          while (newAttributes.contains(attribute + "." + count) || getAttributeOrder().contains(attribute + "." + count)) {$            count++;$          }$          System.err.println("Attribute " + attribute + " already exists, renaming to: "+ attribute+ "."+ count);$          attribute+="." + count;$        }$        newAttributes.add(attribute);$        attributesOrder.add(attribute);$      }$      final String[] pos2attribute=attributesOrder.toArray(new String[attributesOrder.size()]);$      for (int i=0; i < pos2attribute.length; i++) {$        if (isHiddenAttribute(pos2attribute[i]))         pos2attribute[i]=null;$ else         getAttributeOrder().add(pos2attribute[i]);$      }$      final Set<String> mentionedSamples=new HashSet<>();$      while ((aLine=r.readLine()) != null) {$        aLine=aLine.trim();$        if (aLine.startsWith("#")) {$          if (description == null)           description=aLine;$ else           if (!description.equals("#EOF") && !description.equals("# EOF"))           description+=" " + aLine;$        }$ else {$          tokens=Basic.splitWithQuotes(aLine,'\t');$          if (tokens.length > 0) {$            if (tokens.length != tokensPerLine)             throw new IOException("Expected " + tokensPerLine + " tokens, got "+ tokens.length+ " in line: "+ aLine);$            final String sample=tokens[0].trim();$            if (sample.length() == 0)             continue;$            if (mentionedSamples.contains(sample)) {$              System.err.println("Sample occurs more than once: " + sample + ", ignoring repeated occurrences");$              continue;$            }$            mentionedSamples.add(sample);$            if (knownSamples == null || knownSamples.contains(sample)) {$              Map<String,Object> attribute2value=new HashMap<>();$              for (int i=1; i < tokensPerLine; i++) {${$                  String attribute=pos2attribute[i - 1];$                  if (attribute != null)                   attribute2value.put(attribute,tokens[i].equals("NA") ? null : tokens[i]);$                }$              }$              addSample(sample,attribute2value,true,true);$            }$ else {$              System.err.println("Sample mentioned in metadata is not present in document, skipping: " + sample);$              countNotFound++;$            }$          }$        }$      }$      setAllAttributeTypesFromValues();$    }$  }$  finally {$    if (countNotFound > 0)     NotificationsInSwing.showWarning(MainViewer.getLastActiveFrame(),"Loaded metadata, ignored " + countNotFound + " unknown input samples.");$ else {$      if (knownSamples != null) {$        for (        String sample : knownSamples)         putSampleLabel(sample,sample);$      }$    }$  }$}$
@Deprecated public static boolean hasParentType(Delegator delegator,String entityName,String primaryKey,String childType,String parentTypeField,String parentType){$  return EntityTypeUtil.hasParentType(delegator,entityName,primaryKey,childType,parentTypeField,parentType);$}$
GSMessageImpl duplicate() throws JMSException {$  GSSimpleMessageImpl dup=new GSSimpleMessageImpl();$  copyTo(dup);$  return dup;$}$
public void run(IRunnableWithProgress runnable,IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {$  runnable.run(monitor);$}$
public SelectedSymbolMask(SymbolMaskEnum level){$  if (maskOrderlist.isEmpty()) {$    maskOrderlist.add(SymbolMaskEnum.E_STYLED_LAYER);$    maskOrderlist.add(SymbolMaskEnum.E_STYLE);$    maskOrderlist.add(SymbolMaskEnum.E_FEATURE_TYPE_STYLE);$    maskOrderlist.add(SymbolMaskEnum.E_RULE);$    maskOrderlist.add(SymbolMaskEnum.E_SYMBOLIZER);$  }$  for (  SymbolMaskEnum key : maskOrderlist) {$    maskList.add(key);$    if (key == level) {$      break;$    }$  }$}$
public static SM_SYSTEM_MESSAGE STR_MSG_GLORY_POINT_LOSE_PERSONAL(int num0){$  return new SM_SYSTEM_MESSAGE(1402209,num0);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Spin_END_A_TO_B(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200909,skilltarget);$}$
@Override public void postEvent(EventLogEvent event){$  AuditLogEntryEnvelope auditLogEntryEnvelope=new AuditLogEntryEnvelope(createFromEvent(event),repository);$  LOGGER.debug("posting auditLogEntryEnvelope: {}",auditLogEntryEnvelope);$  threadPoolExecutor.submit(auditLogEntryEnvelope);$  LOGGER.debug("posted auditLogEntryEnvelope: {}",auditLogEntryEnvelope);$}$
public String toString(){$  return getClass().getName() + "[" + lease+ "]";$}$
public static void dropAllTables(SQLiteDatabase db,boolean ifExists){$  VideoBeanDao.dropTable(db,ifExists);$}$
public DocsGetQuery count(Integer value){$  return unsafeParam("count",value);$}$
private int indexOf(int tabId){$  return mTabIdList.indexOf(tabId);$}$
protected boolean receiveAndExecute(SpaceDataEventListener eventListener) throws Throwable, TransactionException {$  Object template=getReceiveTemplate();$  if (triggerOperationHandler != null) {$    Object trigger;$    try {$      trigger=triggerOperationHandler.triggerReceive(template,getGigaSpace(),receiveTimeout);$    }$ catch (    SpaceInterruptedException e) {$      return false;$    }$    if (logger.isTraceEnabled()) {$      logger.trace(message("Trigger operation handler returned [" + trigger + "]"));$    }$    if (trigger == null) {$      return false;$    }$    if (triggerOperationHandler.isUseTriggerAsTemplate()) {$      template=trigger;$    }$  }$  if (this.getTransactionManager() != null) {$    TransactionStatus status=this.getTransactionManager().getTransaction(this.getTransactionDefinition());$    boolean messageReceived;$    try {$      messageReceived=doReceiveAndExecute(eventListener,template,status);$    }$ catch (    RuntimeException ex) {$      rollbackOnException(status,ex);$      throw ex;$    }$catch (    Error err) {$      rollbackOnException(status,err);$      throw err;$    }$    if (!status.isCompleted()) {$      if (!messageReceived || status.isRollbackOnly()) {$        this.getTransactionManager().rollback(status);$      }$ else {$        this.getTransactionManager().commit(status);$      }$    }$    return messageReceived;$  }$  return doReceiveAndExecute(eventListener,template,null);$}$
@Override public List<WebElement> findElementsByLinkText(String linkText){$  return ((FindsByLinkText)super.getWrappedDriver()).findElementsByLinkText(linkText);$}$
@NotNull public static String ensureNamespaceImported(@NotNull XmlFile file,@NotNull String namespaceUri,@Nullable String suggestedPrefix){$  final XmlTag rootTag=file.getRootTag();$  assert rootTag != null;$  final XmlElementFactory elementFactory=XmlElementFactory.getInstance(file.getProject());$  String prefix=rootTag.getPrefixByNamespace(namespaceUri);$  if (prefix != null) {$    return prefix;$  }$  ApplicationManager.getApplication().assertWriteAccessAllowed();$  if (suggestedPrefix != null) {$    prefix=suggestedPrefix;$  }$ else   if (TOOLS_URI.equals(namespaceUri)) {$    prefix=TOOLS_PREFIX;$  }$ else   if (ANDROID_URI.equals(namespaceUri)) {$    prefix=ANDROID_NS_NAME;$  }$ else {$    prefix=APP_PREFIX;$  }$  if (rootTag.getAttribute(XMLNS_PREFIX + prefix) != null) {$    String base=prefix;$    for (int i=2; ; i++) {$      prefix=base + Integer.toString(i);$      if (rootTag.getAttribute(XMLNS_PREFIX + prefix) == null) {$        break;$      }$    }$  }$  String name=XMLNS_PREFIX + prefix;$  final XmlAttribute xmlnsAttr=elementFactory.createXmlAttribute(name,namespaceUri);$  final XmlAttribute[] attributes=rootTag.getAttributes();$  XmlAttribute next=attributes.length > 0 ? attributes[0] : null;$  for (  XmlAttribute attribute : attributes) {$    String attributeName=attribute.getName();$    if (!attributeName.startsWith(XMLNS_PREFIX) || attributeName.compareTo(name) > 0) {$      next=attribute;$      break;$    }$  }$  if (next != null) {$    rootTag.addBefore(xmlnsAttr,next);$  }$ else {$    rootTag.add(xmlnsAttr);$  }$  return prefix;$}$
public NotIsolatedAnalysis(DirectedGraph<Unit> dg,LatestComputation latest,Map<Unit,EquivalentValue> equivRhsMap){$  this(dg,latest,equivRhsMap,new ArrayPackedSet<EquivalentValue>(new CollectionFlowUniverse<EquivalentValue>(equivRhsMap.values())));$}$
public void changeCurrentItem(int indexToChange){$  if (indexToChange < 0 || indexToChange > spaceItems.size())   throw new ArrayIndexOutOfBoundsException("Please be more careful, we do't have such item : " + indexToChange);$ else {$    updateSpaceItems(indexToChange);$  }$}$
@Deployment(resources={"process/errorHandling.bpmn20.xml"}) public void testCamelRouteWorksAsIntended() throws Exception {$  Map<String,Object> variables=new HashMap<String,Object>();$  variables.put("routing",Routing.DEFAULT);$  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("ErrorHandling",variables);$  Job job=managementService.createJobQuery().processInstanceId(processInstance.getId()).singleResult();$  assertNotNull(job);$  managementService.executeJob(job.getId());$  Thread.sleep(WAIT);$  assertEquals("Process instance not completed",0,runtimeService.createProcessInstanceQuery().processInstanceId(processInstance.getId()).count());$}$
@Override public boolean equals(Object object){$  if (object == this) {$    return true;$  }$  if (object instanceof MultivariateSummaryStatistics == false) {$    return false;$  }$  MultivariateSummaryStatistics other=(MultivariateSummaryStatistics)object;$  return other.getN() == getN() && MathArrays.equalsIncludingNaN(other.getGeometricMean(),getGeometricMean()) && MathArrays.equalsIncludingNaN(other.getMax(),getMax()) && MathArrays.equalsIncludingNaN(other.getMean(),getMean()) && MathArrays.equalsIncludingNaN(other.getMin(),getMin()) && MathArrays.equalsIncludingNaN(other.getSum(),getSum()) && MathArrays.equalsIncludingNaN(other.getSumSq(),getSumSq()) && MathArrays.equalsIncludingNaN(other.getSumLog(),getSumLog()) && other.getCovariance().equals(getCovariance());$}$
private void processResultFromGallery(int destType,Intent intent){$  Uri uri=intent.getData();$  if (uri == null) {$    if (croppedUri != null) {$      uri=croppedUri;$    }$ else {$      this.failPicture("null data from photo library");$      return;$    }$  }$  int rotate=0;$  String fileLocation=FileHelper.getRealPath(uri,this.cordova);$  Log.d(LOG_TAG,"File locaton is: " + fileLocation);$  if (this.mediaType != PICTURE) {$    this.callbackContext.success(fileLocation);$  }$ else {$    if (this.targetHeight == -1 && this.targetWidth == -1 && (destType == FILE_URI || destType == NATIVE_URI) && !this.correctOrientation) {$      this.callbackContext.success(uri.toString());$    }$ else {$      String uriString=uri.toString();$      String mimeType=FileHelper.getMimeType(uriString,this.cordova);$      if (!("image/jpeg".equalsIgnoreCase(mimeType) || "image/png".equalsIgnoreCase(mimeType))) {$        Log.d(LOG_TAG,"I either have a null image path or bitmap");$        this.failPicture("Unable to retrieve path to picture!");$        return;$      }$      Bitmap bitmap=null;$      try {$        bitmap=getScaledBitmap(uriString);$      }$ catch (      IOException e) {$        e.printStackTrace();$      }$      if (bitmap == null) {$        Log.d(LOG_TAG,"I either have a null image path or bitmap");$        this.failPicture("Unable to create bitmap!");$        return;$      }$      if (this.correctOrientation) {$        rotate=getImageOrientation(uri);$        if (rotate != 0) {$          Matrix matrix=new Matrix();$          matrix.setRotate(rotate);$          try {$            bitmap=Bitmap.createBitmap(bitmap,0,0,bitmap.getWidth(),bitmap.getHeight(),matrix,true);$            this.orientationCorrected=true;$          }$ catch (          OutOfMemoryError oom) {$            this.orientationCorrected=false;$          }$        }$      }$      if (destType == DATA_URL) {$        this.processPicture(bitmap,this.encodingType);$      }$ else       if (destType == FILE_URI || destType == NATIVE_URI) {$        if ((this.targetHeight > 0 && this.targetWidth > 0) || (this.correctOrientation && this.orientationCorrected)) {$          try {$            String modifiedPath=this.ouputModifiedBitmap(bitmap,uri);$            this.callbackContext.success("file://" + modifiedPath + "?"+ System.currentTimeMillis());$          }$ catch (          Exception e) {$            e.printStackTrace();$            this.failPicture("Error retrieving image.");$          }$        }$ else {$          this.callbackContext.success(fileLocation);$        }$      }$      if (bitmap != null) {$        bitmap.recycle();$        bitmap=null;$      }$      System.gc();$    }$  }$}$
public int size(){$  return 3;$}$
private static void clearReferencesRmiTargets(ClassLoader classLoader){$  try {$    Class<?> objectTargetClass=Class.forName("sun.rmi.transport.Target");$    Field cclField=objectTargetClass.getDeclaredField("ccl");$    cclField.setAccessible(true);$    Class<?> objectTableClass=Class.forName("sun.rmi.transport.ObjectTable");$    Field objTableField=objectTableClass.getDeclaredField("objTable");$    objTableField.setAccessible(true);$    Object objTable=objTableField.get(null);$    if (objTable == null) {$      return;$    }$    if (objTable instanceof Map<?,?>) {$      Iterator<?> iter=((Map<?,?>)objTable).values().iterator();$      while (iter.hasNext()) {$        Object obj=iter.next();$        Object cclObject=cclField.get(obj);$        if (classLoader == cclObject) {$          iter.remove();$        }$      }$    }$    Field implTableField=objectTableClass.getDeclaredField("implTable");$    implTableField.setAccessible(true);$    Object implTable=implTableField.get(null);$    if (implTable == null) {$      return;$    }$    if (implTable instanceof Map<?,?>) {$      Iterator<?> iter=((Map<?,?>)implTable).values().iterator();$      while (iter.hasNext()) {$        Object obj=iter.next();$        Object cclObject=cclField.get(obj);$        if (classLoader == cclObject) {$          iter.remove();$        }$      }$    }$  }$ catch (  Exception e) {$    logger.log(Level.WARNING,"Failed to clear context class loader referenced from sun.rmi.transport.Target ",e);$  }$}$
public void removeString(String word,Tuple t){$  removeLeaf(root,word,t,0);$}$
@Override public boolean isCritical(){$  return true;$}$
public static float readLittleEndianFloat(DataInputStream dataStream) throws IOException {$  return Float.intBitsToFloat(readLittleEndianInt(dataStream));$}$
public void addEvidence(DocumentNGramGraph dDoc,String sFinalCategory){$  addEvidence(new Decision(dDoc,sFinalCategory,1.0,new HashMap(0)),sFinalCategory);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_BoostSkillCastingTime_A_TO_ME(String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200638,skillcaster,skillname);$}$
@Override protected final void invalidateQuietly(final DataTag tag,final TagQualityStatus statusToAdd,final String description,final Timestamp timestamp){$  dataTagCacheObjectFacade.addQualityFlag(tag,statusToAdd,description);$  ((DataTagCacheObject)tag).setCacheTimestamp(timestamp);$}$
public JsonNodeELResolver(){$  this(false);$}$
@Override public double[] makeCumulativeTestPoints(){$  return new double[]{-3.0001,-3.0,-2.0,-1.0,0.0,1.0,2.0,3.0,4.0,10.0,11.0,12.0,12.0001};$}$
public void start() throws IOException {$}$
@Override public boolean isFingerprintRegistered(){$  return impl.isFingerprintRegistered();$}$
@Override public InputSource resolveEntity(String name,String publicId,String baseURI,String systemId) throws SAXException, IOException {$  if (fEntityResolver != null) {$    LSInput lsInput=fEntityResolver.resolveResource(XML_TYPE,null,publicId,systemId,baseURI);$    if (lsInput != null) {$      final String pubId=lsInput.getPublicId();$      final String sysId=lsInput.getSystemId();$      final String baseSystemId=lsInput.getBaseURI();$      final Reader charStream=lsInput.getCharacterStream();$      final InputStream byteStream=lsInput.getByteStream();$      final String data=lsInput.getStringData();$      final String encoding=lsInput.getEncoding();$      InputSource inputSource=new InputSource();$      inputSource.setPublicId(pubId);$      inputSource.setSystemId((baseSystemId != null) ? resolveSystemId(sysId,baseSystemId) : sysId);$      if (charStream != null) {$        inputSource.setCharacterStream(charStream);$      }$ else       if (byteStream != null) {$        inputSource.setByteStream(byteStream);$      }$ else       if (data != null && data.length() != 0) {$        inputSource.setCharacterStream(new StringReader(data));$      }$      inputSource.setEncoding(encoding);$      return inputSource;$    }$  }$  return null;$}$
public static Double evaluateToDouble(String expression,Map<String,Object> vars){$  Object result=evaluate(expression,vars);$  if (result == null) {$    throw new IllegalStateException("Result must be not null");$  }$  if (!isNumeric(String.valueOf(result))) {$    throw new IllegalStateException("Result must be numeric: " + result + ", "+ result.getClass());$  }$  return Double.valueOf(String.valueOf(result));$}$
public void writeServer(String server) throws IOException {$  writeHeader(HttpWriter.SERVER,server);$}$
public void resetCache(){$  Cache.clear();$  ElementAccessTime.clear();$  CacheAccess.clear();$  TimeCnt=Long.MIN_VALUE;$}$
public void pushDebugRect(Rect rect,int color){$  if (rect.left > rect.right) {$    int tmp=rect.right;$    rect.right=rect.left;$    rect.left=tmp;$  }$  if (rect.top > rect.bottom) {$    int tmp=rect.bottom;$    rect.bottom=rect.top;$    rect.top=tmp;$  }$  mRenderHost.pushDebugRect(rect,color);$}$
private boolean canReadFile(File file){$  if (!file.exists()) {$    log.info("File " + file.getAbsolutePath() + " does not exist");$    return false;$  }$  if (!file.canRead()) {$    log.info("File " + file.getAbsolutePath() + " cannot be read");$    return false;$  }$  return true;$}$
@Override public void close(){$  unsubscribe();$}$
public boolean select(Viewer viewer,Object parentElement,Object element){$  if (element instanceof ILogEntry) {$    ILogEntry logEntry=(ILogEntry)element;$    return (filterDate(logEntry,startDate,endDate) && filterRevision(logEntry,startRevision,endRevision) && filterUser(logEntry,user)&& filterComment(logEntry,comment));$  }$  return false;$}$
@Override public void endDTD(Augmentations augs) throws XNIException {$  fInDTD=false;$}$
public DividerDecoration build(){$  return new DividerDecoration(mHeight,mLPadding,mRPadding,mColour);$}$
public static boolean launchLyftApp(Context context,DeepLinkParams deepLinkParams){$  if (!isLyftInstalled(context)) {$    Intent intent=new Intent(Intent.ACTION_VIEW);$    intent.setData(Uri.parse("https://play.google.com/store/apps/details?id=" + LYFT_PACKAGE_NAME + "&referrer="+ deepLinkParams.getClientId()));$    context.startActivity(intent);$    return false;$  }$  PackageManager packageManager=context.getPackageManager();$  Intent i=packageManager.getLaunchIntentForPackage(LYFT_PACKAGE_NAME);$  if (i == null) {$    return false;$  }$  i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);$  String deepLinkString=createDeepLinkString(deepLinkParams);$  i.setData(Uri.parse(deepLinkString));$  context.startActivity(i);$  return true;$}$
public static boolean isFixed(InvokeExpr ie){$  return ie instanceof StaticInvokeExpr || ie instanceof SpecialInvokeExpr || !clientOverwriteableOverwrites(ie.getMethod());$}$
public EqIOException(final Throwable e){$  super(e);$}$
public StatusConsole(int iWidth){$  Width=iWidth;$}$
protected NewsfeedGetBannedQueryWithExtended extended(Boolean value){$  return unsafeParam("extended",value);$}$
public void hideToolbar(){$  hideToolbar(true);$}$
public static String joinPath(String... paths){$  if (paths.length == 0) {$    return "";$  }$ else {$    String output=paths[0];$    for (int i=1; i < paths.length; i++) {$      output=joinPath(output,paths[i]);$    }$    return output;$  }$}$
PacketSpec(PacketSpecBuilder builder){$  this.name=builder.name;$  this.types=ImmutableMap.copyOf(builder.types);$  this.handler=builder.handler;$}$
private void drawablesSelected(List<File> files){$  Array<FileHandle> fileHandles=new Array<>();$  for (  File file : files) {$    fileHandles.add(new FileHandle(file));$  }$  drawablesSelected(fileHandles);$}$
public PokemonGo(OkHttpClient client){$  this(client,new SystemTimeImpl(),hash(UUID.randomUUID().toString()));$}$
public static void main(String[] args){$  In in;$  String urlName="http://introcs.cs.princeton.edu/stdlib/InTest.txt";$  System.out.println("readAll() from URL " + urlName);$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In(urlName);$    System.out.println(in.readAll());$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println("readLine() from URL " + urlName);$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In(urlName);$    while (!in.isEmpty()) {$      String s=in.readLine();$      System.out.println(s);$    }$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println("readString() from URL " + urlName);$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In(urlName);$    while (!in.isEmpty()) {$      String s=in.readString();$      System.out.println(s);$    }$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println("readLine() from current directory");$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In("./InTest.txt");$    while (!in.isEmpty()) {$      String s=in.readLine();$      System.out.println(s);$    }$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println("readLine() from relative path");$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In("../stdlib/InTest.txt");$    while (!in.isEmpty()) {$      String s=in.readLine();$      System.out.println(s);$    }$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println("readChar() from file");$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In("InTest.txt");$    while (!in.isEmpty()) {$      char c=in.readChar();$      System.out.print(c);$    }$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println();$  System.out.println("readLine() from absolute OS X / Linux path");$  System.out.println("---------------------------------------------------------------------------");$  in=new In("/n/fs/introcs/www/java/stdlib/InTest.txt");$  try {$    while (!in.isEmpty()) {$      String s=in.readLine();$      System.out.println(s);$    }$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$  System.out.println("readLine() from absolute Windows path");$  System.out.println("---------------------------------------------------------------------------");$  try {$    in=new In("G:\\www\\introcs\\stdlib\\InTest.txt");$    while (!in.isEmpty()) {$      String s=in.readLine();$      System.out.println(s);$    }$    System.out.println();$  }$ catch (  Exception e) {$    System.out.println(e);$  }$  System.out.println();$}$
public static InputStream toInputStream(CharSequence input){$  return toInputStream(input,Charset.defaultCharset());$}$
@Override protected void readImpl(){$  macroPosition=readC();$  macroXML=readS();$}$
protected boolean isEnabledForManagedResources(){$  return true;$}$
private void applyTorqueAction(){$  TreePath path=this.tree.getSelectionPath();$  if (path != null) {$    DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();$    if (node.getUserObject() instanceof SandboxBody) {$      SandboxBody body=(SandboxBody)node.getUserObject();$      double torque=ApplyTorqueDialog.show(ControlUtilities.getParentWindow(this));$      if (torque != 0.0) {$synchronized (Simulation.LOCK) {$          body.applyTorque(torque);$        }$      }$    }$  }$}$
@deprecated public final void reset(String str){$  int length=0;$  if (str != null) {$    length=str.length();$  }$  reset(str,0,length);$}$
public MessagesIsMessagesFromGroupAllowedQuery isMessagesFromGroupAllowed(Actor actor,int groupId,int userId){$  return new MessagesIsMessagesFromGroupAllowedQuery(getClient(),actor,groupId,userId);$}$
private static Pattern createPattern(String propertyString,boolean asBoolean){$  Pattern pattern=null;$  if (!asBoolean) {$    String copyVariablesFromProperties=propertyString;$    pattern=patternsCache.get(copyVariablesFromProperties);$    if (pattern == null) {$      pattern=Pattern.compile(copyVariablesFromProperties);$      patternsCache.put(copyVariablesFromProperties,pattern);$    }$  }$  return pattern;$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase("set mode=");$  String mode=np.getLabelRespectCase();$  np.matchIgnoreCase(";");$  CompareWindow viewer=(CompareWindow)getParent();$  viewer.setMode(Comparer.COMPARISON_MODE.valueOfIgnoreCase(mode));$}$
protected MarketAddQuery price(float value){$  return unsafeParam("price",value);$}$
public boolean isSuccessful(){$  return code >= 200 && code < 300;$}$
@RequestMapping(value="/",method=POST,produces=APPLICATION_JSON_VALUE) public ResponseEntity<AuthorDTO> create(@RequestBody AuthorDTO authorDTO) throws URISyntaxException {$  log.debug("Create AuthorDTO : {}",authorDTO);$  if (authorDTO.isIdSet()) {$    return ResponseEntity.badRequest().header("Failure","Cannot create Author with existing ID").body(null);$  }$  AuthorDTO result=authorDTOService.save(authorDTO);$  return ResponseEntity.created(new URI("/api/authors/" + result.id)).body(result);$}$
int observerCount(){$  return observers.get().length;$}$
private Map<String,List<Experiment.ID>> prepareResponseEntity(List<Experiment.ID> experimentIDs){$  Map<String,List<Experiment.ID>> responseEntity=new HashMap<>();$  responseEntity.put("experimentIDs",experimentIDs);$  return responseEntity;$}$
public void init$Children(){$  children=new ASTNode[2];$}$
private void onResume(){$  mSubscription=mSubscription.isUnsubscribed() ? new CompositeSubscription() : mSubscription;$  Map<Integer,Observable> observables=mCache.getObservables(mUUID);$  for (  Map.Entry<Integer,Observable> entry : observables.entrySet()) {$    if (!mDispatchedObservablesHistory.contains(entry.getKey())) {$      dispatchObservableToHost(entry.getKey(),entry.getValue());$    }$  }$}$
public void startNumber(){$}$
public static PreResponse buildErrorPreResponse(Throwable throwable){$  ResponseContext responseContext=new ResponseContext(new LinkedHashMap<>());$  if (throwable instanceof ResponseException) {$    ResponseException responseException=(ResponseException)throwable;$    responseContext.put(ResponseContextKeys.STATUS.getName(),responseException.getStatusCode());$    responseContext.put(ResponseContextKeys.ERROR_MESSAGE.getName(),responseException.getReason());$  }$ else {$    responseContext.put(ResponseContextKeys.STATUS.getName(),Response.Status.INTERNAL_SERVER_ERROR.getStatusCode());$    responseContext.put(ResponseContextKeys.ERROR_MESSAGE.getName(),throwable.getMessage());$  }$  return new PreResponse(new ResultSet(Collections.emptyList(),new Schema(AllGranularity.INSTANCE)),responseContext);$}$
private static boolean isNonLeft(int i0,int i1,int i2,int i3,double[] pts){$  double l1, l2, l4, l5, l6, angle1, angle2, angle;$  l1=Math.sqrt(Math.pow(pts[i2 + 1] - pts[i1 + 1],2) + Math.pow(pts[i2] - pts[i1],2));$  l2=Math.sqrt(Math.pow(pts[i3 + 1] - pts[i2 + 1],2) + Math.pow(pts[i3] - pts[i2],2));$  l4=Math.sqrt(Math.pow(pts[i3 + 1] - pts[i0 + 1],2) + Math.pow(pts[i3] - pts[i0],2));$  l5=Math.sqrt(Math.pow(pts[i1 + 1] - pts[i0 + 1],2) + Math.pow(pts[i1] - pts[i0],2));$  l6=Math.sqrt(Math.pow(pts[i2 + 1] - pts[i0 + 1],2) + Math.pow(pts[i2] - pts[i0],2));$  angle1=Math.acos(((l2 * l2) + (l6 * l6) - (l4 * l4)) / (2 * l2 * l6));$  angle2=Math.acos(((l6 * l6) + (l1 * l1) - (l5 * l5)) / (2 * l6 * l1));$  angle=(Math.PI - angle1) - angle2;$  if (angle <= 0.0) {$    return (true);$  }$ else {$    return (false);$  }$}$
ParamPart(String name,InputStream in,String boundary,String encoding) throws IOException {$  super(name);$  this.encoding=encoding;$  PartInputStream pis=new PartInputStream(in,boundary);$  ByteArrayOutputStream baos=new ByteArrayOutputStream(512);$  byte[] buf=new byte[128];$  int read;$  while ((read=pis.read(buf)) != -1) {$    baos.write(buf,0,read);$  }$  pis.close();$  baos.close();$  value=baos.toByteArray();$}$
public DistributedLogConfiguration(){$  super();$  addConfiguration(new SystemConfiguration());$}$
public CommitRecord(BasicLogRecord rec){$  txNum=(Long)rec.nextVal(BIGINT).asJavaVal();$  lsn=rec.getLSN();$}$
private synchronized void removeChildNode(DefaultMutableTreeNode child){$  DefaultTreeModel model=(DefaultTreeModel)getModel();$  model.removeNodeFromParent(child);$}$
public static void init(Context context,boolean is_top){$  cameraManager=new CameraManager(context,is_top);$}$
public static List<ScreenWiggleLocusInfo> tdfRangeToScreen(String ibfFile,String chrom,int startLocation,int endLocation,List<Double> genomeToScreenMapping){$  List<ScreenWiggleLocusInfo> screenWiggleLocusInfoList=new ArrayList<ScreenWiggleLocusInfo>();$  for (int i=0; i < genomeToScreenMapping.size(); i++) {$    screenWiggleLocusInfoList.add(new ScreenWiggleLocusInfo());$  }$  TDFReader reader=TDFReader.getReader(ibfFile);$  for (  String dsName : reader.getDatasetNames()) {$    String[] tokens=dsName.split("/");$    String chrName=tokens[1];$    if (!chrName.equals(chrom) || !dsName.contains("raw")) {$      continue;$    }$    TDFDataset ds=reader.getDataset(dsName);$    int tileWidth=ds.tileWidth;$    int startTile=startLocation / tileWidth;$    int endTile=endLocation / tileWidth;$    for (int tileNumber=startTile; tileNumber <= endTile; tileNumber++) {$      TDFTile tile=reader.readTile(ds,tileNumber);$      if (tile == null) {$      }$ else {$        int nTracks=reader.getTrackNames().length;$        if (nTracks > 1) {$          throw new RuntimeException("More than one track found in tdf file " + ibfFile);$        }$        int nBins=tile.getSize();$        if (nBins > 0) {$          for (int b=0; b < nBins; b++) {$            int start=tile.getStartPosition(b);$            int end=tile.getEndPosition(b);$            if (start > endLocation) {$              break;$            }$            if (end >= startLocation) {$              int tileStartPos=tile.getStartPosition(b);$              float tileValue=tile.getValue(0,b);$              int idx=Utils.getIndexOfclosestValue(tileStartPos + 1,genomeToScreenMapping);$              screenWiggleLocusInfoList.get(idx).increment(tileValue);$            }$          }$        }$      }$    }$  }$  reader.close();$  return screenWiggleLocusInfoList;$}$
private void initWritingAttributes(ImmutableEndpoint endpoint){$  Properties params=endpoint.getEndpointURI().getParams();$  if (params != null) {$    try {$      String writeLeaseStr=(String)params.get(ENDPOINT_PARAM_WRITE_LEASE);$      if (writeLeaseStr != null) {$        writeLease=Long.valueOf(writeLeaseStr);$      }$      String updateOrWriteStr=(String)params.get(ENDPOINT_PARAM_UPDATE_OR_WRITE);$      if (updateOrWriteStr != null) {$        updateOrWrite=Boolean.valueOf(updateOrWriteStr);$      }$      String updateTimeoutStr=(String)params.get(ENDPOINT_PARAM_UPDATE_TIMEOUT);$      if (updateTimeoutStr != null) {$        updateTimeout=Long.valueOf(updateTimeoutStr);$      }$    }$ catch (    NumberFormatException e) {$      throw new MuleRuntimeException(CoreMessages.failedToCreateConnectorFromUri(endpoint.getEndpointURI()),e);$    }$  }$}$
public Set<String> keySet(){$  return this.map.keySet();$}$
public void finishModification() throws IOException {$  getFileFooter().setClassificationsFooter(io.getPosition());$  getClassificationsFooter().write(io);$  getFileFooter().setAuxStart(io.getPosition());$  getFileFooter().setAuxFooter(io.getPosition());$  getAuxBlocksFooter().write(io);$  getFileFooter().setFileFooter(io.getPosition());$  getFileFooter().write(io);$  close();$}$
@Override public void createRaster(Symbolizer symbolizer){$}$
public void addNewVariable(){$  EnvVar envVar=this.envMgr.addNewEnvVar("NewEnvVar",String.class,null);$  if (envVar != null) {$    dataList.add(envVar);$    this.fireTableDataChanged();$  }$}$
public void intersectRanges(QueryTemplatePacket template){$  for (  Map.Entry<String,Range> entry : template.getRanges().entrySet()) {$    String fieldName=entry.getKey();$    Range newRange=entry.getValue();$    Range prevRange=_ranges.get(fieldName);$    if (prevRange == null) {$      _ranges.put(fieldName,newRange);$    }$ else {$      Range intersection=prevRange.intersection(newRange);$      _ranges.put(fieldName,intersection);$      if (intersection instanceof EmptyRange) {$        setAlwaysEmpty(true);$        return;$      }$    }$  }$}$
public static synchronized boolean isBodyColorRandom(){$  return bodyColorRandom;$}$
public Set<Triplet<R,C,V>> cellSet(){$  Set<Triplet<R,C,V>> set=new HashSet<>();$  for (  R rowKey : dataMap.keySet()) {$    Map<C,V> row=dataMap.get(rowKey);$    for (    C columnKey : row.keySet()) {$      set.add(new Triplet<>(rowKey,columnKey,row.get(columnKey)));$    }$  }$  return set;$}$
public boolean checkRace(Race playerRace){$  ItemTemplate template=DataManager.ITEM_DATA.getItemTemplate(id);$  return template.getRace() == Race.PC_ALL && (race == null || race == playerRace) || template.getRace() != Race.PC_ALL && template.getRace() == playerRace;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ProcATK_Instant_Ratio_ME_TO_B(int num0,String skilltarget,String skillname){$  return new SM_SYSTEM_MESSAGE(1200544,num0,skilltarget,skillname);$}$
public static void line(double x0,double y0,double x1,double y1){$  offscreen.draw(new Line2D.Double(scaleX(x0),scaleY(y0),scaleX(x1),scaleY(y1)));$  draw();$}$
public static int growSize(int currentSize){$  return currentSize <= 4 ? 8 : currentSize + (currentSize >> 1);$}$
public void watchMonitoredDataCache(PreferenceChangeListener pcl){$  addListener(INT_KEY_MONDATA_CACHE,pcl);$}$
private double correlationOfFeature(String dataFile,String[] features,int indVarColNumber,int[] X,int x,int rowIni,int rowEnd){$  double corXminusx;$  Regression reg=new Regression();$  int j=0;$  int[] Xminusx=new int[X.length - 1];$  for (int i=0; i < X.length; i++)   if (X[i] != x)   Xminusx[j++]=X[i];$  reg.multipleLinearRegression(dataFile,indVarColNumber,Xminusx,features,interceptTerm,rowIni,rowEnd);$  corXminusx=reg.getCorrelation();$  return corXminusx;$}$
protected void filterColumns(){$  if (m_parent == null)   return;$  for (int i=0; i < m_pnames.size(); ++i) {$    String name=(String)m_pnames.get(i);$    Column col=m_parent.getColumn(name);$    boolean contained=m_names.contains(name);$    boolean removedFromParent=(col == null);$    if (removedFromParent || !m_colFilter.include(col,name) || contained) {$      m_pnames.remove(i--);$      if (!contained) {$        ((ColumnEntry)m_entries.get(name)).dispose();$        m_entries.remove(name);$      }$      fireTableEvent(m_rows.getMinimumRow(),m_rows.getMaximumRow(),i,EventConstants.DELETE);$    }$  }$  m_pnames.clear();$  Iterator pcols=m_parent.getColumnNames();$  for (int i=0, j=m_columns.size(); pcols.hasNext(); ++i) {$    String name=(String)pcols.next();$    Column col=m_parent.getColumn(i);$    if (m_colFilter.include(col,name) && !m_names.contains(name)) {$      m_pnames.add(name);$      ColumnEntry entry=(ColumnEntry)m_entries.get(name);$      if (entry == null) {$        entry=new ColumnEntry(j++,col,new ColumnMetadata(this,name));$        m_entries.put(name,entry);$        fireTableEvent(m_rows.getMinimumRow(),m_rows.getMaximumRow(),i,EventConstants.INSERT);$      }$ else {$        entry.colnum=j++;$      }$      m_lastCol=m_columns.size() - 1;$    }$  }$}$
public void deactivate(){$  if (myActive) {$    getRenderingQueue().cancelAllUpdates();$    ResourceNotificationManager manager=ResourceNotificationManager.getInstance(myFile.getProject());$    manager.removeListener(this,myFacet,myFile,myConfiguration);$    myConfigurationModificationCount=myConfiguration.getModificationCount();$    myConfiguration.removeListener(myConfigurationListener);$    myActive=false;$  }$}$
public PickRequest withAllowedMimeType(@Nullable final String pAllowedMimeType){$  this.mMimeType=pAllowedMimeType == null ? QiPick.MIME_TYPE_IMAGES_ALL : pAllowedMimeType;$  return this;$}$
public boolean init(StepMetaInterface smi,StepDataInterface sdi){$  meta=(MDKeyGenStepMeta)smi;$  data=(MDKeyGenStepData)sdi;$  return super.init(smi,sdi);$}$
public VideoGetCommentsQuery sort(VideoGetCommentsSort value){$  return unsafeParam("sort",value);$}$
public DistributedLogClientBuilder serverSet(ServerSet serverSet){$  DistributedLogClientBuilder newBuilder=newBuilder(this);$  newBuilder._routingServiceBuilder=RoutingUtils.buildRoutingService(serverSet);$  newBuilder._enableRegionStats=false;$  return newBuilder;$}$
public CM_L2AUTH_LOGIN_CHECK(int opcode,State state,State... restStates){$  super(opcode,state,restStates);$}$
private boolean canShowLoaderView(int deltaY){$  final int itemsCount=getCount();$  if (itemsCount < 0) {$    return false;$  }$  final int viewsCount=getChildCount();$  final int firstVisibleItem=getFirstVisiblePosition();$  final int lastVisibleItem=getLastVisiblePosition();$  if (lastVisibleItem - firstVisibleItem + 1 >= itemsCount)   return false;$  final int lastViewBottom=getChildAt(viewsCount - 1).getBottom();$  final int listBottom=getHeight() - getListPaddingBottom();$  return (lastVisibleItem >= itemsCount - 1 && lastViewBottom == listBottom && deltaY < 0);$}$
@GET @Path("{experimentID}/events") @Produces(TEXT_PLAIN) @ApiOperation(value="Export all event records for an experiment",notes="A wrapper for POST API with default parameters",response=StreamingOutput.class) @Timed public Response exportActions_get(@PathParam("experimentID") @ApiParam(value="Experiment ID") final Experiment.ID experimentID,@HeaderParam(AUTHORIZATION) @ApiParam(value=EXAMPLE_AUTHORIZATION_HEADER,required=true) final String authorizationHeader){$  if (authorizationHeader != null) {$    Username userName=authorization.getUser(authorizationHeader);$    Experiment experiment=experiments.getExperiment(experimentID);$    if (experiment == null) {$      throw new ExperimentNotFoundException(experimentID);$    }$    authorization.checkUserPermissions(userName,experiment.getApplicationName(),READ);$  }$  return exportActions(experimentID,new Parameters(),authorizationHeader);$}$
protected int generateInteger(String value,String parameterName) throws BadApiRequestException {$  try {$    return value == null ? 0 : Integer.parseInt(value);$  }$ catch (  NumberFormatException nfe) {$    LOG.debug(INTEGER_INVALID.logFormat(value,parameterName),nfe);$    throw new BadApiRequestException(INTEGER_INVALID.logFormat(value,parameterName),nfe);$  }$}$
public void associateAsyncPrettyPrinterWithId(String requestId,AsyncPrettyPrinter asyncPrettyPrinter){$  if (mRequestIdMap.put(requestId,asyncPrettyPrinter) != null) {$    throw new IllegalArgumentException("cannot associate different " + "pretty printers with the same request id: " + requestId);$  }$}$
@Override public void dataChanged(FieldIdEnum changedField){$  updateSymbol();$}$
public void zoomIn(){$  MPPointF center=mViewPortHandler.getContentCenter();$  mViewPortHandler.zoomIn(center.x,-center.y,mZoomInMatrixBuffer);$  mViewPortHandler.refresh(mZoomInMatrixBuffer,this,false);$  MPPointF.recycleInstance(center);$  calculateOffsets();$  postInvalidate();$}$
public Builder reorderColumns(String... newOrder){$  return transform(new ReorderColumnsTransform(newOrder));$}$
@Override public XMLInputSource resolveEntity(XMLResourceIdentifier resourceIdentifier) throws XNIException, IOException {$  if (fEntityResolver != null) {$    LSInput inputSource=resourceIdentifier == null ? fEntityResolver.resolveResource(null,null,null,null,null) : fEntityResolver.resolveResource(getType(resourceIdentifier),resourceIdentifier.getNamespace(),resourceIdentifier.getPublicId(),resourceIdentifier.getLiteralSystemId(),resourceIdentifier.getBaseSystemId());$    if (inputSource != null) {$      String publicId=inputSource.getPublicId();$      String systemId=inputSource.getSystemId();$      String baseSystemId=inputSource.getBaseURI();$      InputStream byteStream=inputSource.getByteStream();$      Reader charStream=inputSource.getCharacterStream();$      String encoding=inputSource.getEncoding();$      String data=inputSource.getStringData();$      XMLInputSource xmlInputSource=new XMLInputSource(publicId,systemId,baseSystemId);$      if (charStream != null) {$        xmlInputSource.setCharacterStream(charStream);$      }$ else       if (byteStream != null) {$        xmlInputSource.setByteStream(byteStream);$      }$ else       if (data != null && data.length() != 0) {$        xmlInputSource.setCharacterStream(new StringReader(data));$      }$      xmlInputSource.setEncoding(encoding);$      return xmlInputSource;$    }$  }$  return null;$}$
@Override protected Class<?> resolveClass(ObjectStreamClass objectStreamClass) throws IOException, ClassNotFoundException {$  Class<?> clazz=Class.forName(objectStreamClass.getName(),false,classLoader);$  if (clazz != null) {$    return clazz;$  }$ else {$    return super.resolveClass(objectStreamClass);$  }$}$
public static void translucentStatusBar(Activity activity,boolean hideStatusBarBackground){$  Window window=activity.getWindow();$  ViewGroup mContentView=(ViewGroup)activity.findViewById(Window.ID_ANDROID_CONTENT);$  View mChildView=mContentView.getChildAt(0);$  if (mChildView != null) {$    ViewCompat.setFitsSystemWindows(mChildView,false);$  }$  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {$    int statusBarHeight=getStatusBarHeight(activity);$    window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);$    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {$      window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);$      if (hideStatusBarBackground) {$        window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);$        window.setStatusBarColor(COLOR_TRANSLUCENT);$      }$ else {$        window.setStatusBarColor(calculateStatusBarColor(COLOR_TRANSLUCENT,DEFAULT_COLOR_ALPHA));$      }$      if (mChildView != null) {$        ViewCompat.requestApplyInsets(mChildView);$      }$    }$ else {$      ViewGroup mDecorView=(ViewGroup)window.getDecorView();$      if (mDecorView.getTag() != null && mDecorView.getTag() instanceof Boolean && (Boolean)mDecorView.getTag()) {$        mChildView=mDecorView.getChildAt(0);$        mContentView.removeView(mChildView);$        mChildView=mContentView.getChildAt(0);$        if (mChildView != null) {$          FrameLayout.LayoutParams lp=(FrameLayout.LayoutParams)mChildView.getLayoutParams();$          if (lp != null && lp.topMargin >= statusBarHeight) {$            lp.topMargin-=statusBarHeight;$            mChildView.setLayoutParams(lp);$          }$        }$        mDecorView.setTag(false);$      }$    }$  }$}$
public GroupsSearchQuery market(Boolean value){$  return unsafeParam("market",value);$}$
@Override public Element createElementNS(String namespaceURI,String qualifiedName,String localpart) throws DOMException {$  return new PSVIElementNSImpl(this,namespaceURI,qualifiedName,localpart);$}$
protected Session(HttpServletRequest request){$  super(GigaSessionManager.this,request);$  _data=new SessionData(getClusterId());$  _data.setMaxIdleMs(TimeUnit.SECONDS.toMillis(_dftMaxIdleSecs));$  _data.setExpiryTime(getMaxInactiveInterval() < 0 ? Long.MAX_VALUE : (System.currentTimeMillis() + TimeUnit.SECONDS.toMillis(getMaxInactiveInterval())));$  _data.setCookieSet(0);$  Enumeration<String> attributeNames=getAttributeNames();$  HashMap<String,Object> attributes=new HashMap<String,Object>();$  while (attributeNames.hasMoreElements()) {$    String nextAttribute=attributeNames.nextElement();$    attributes.put(nextAttribute,request.getAttribute(nextAttribute));$  }$  _data.setAttributeMap(attributes);$  if (Log.getLog().isDebugEnabled())   Log.getLog().debug("New Session from request, " + _data.toStringExtended());$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase("find read=");$  String regularExpression=np.getWordRespectCase();$  np.matchIgnoreCase(";");$  Pattern pattern=Pattern.compile(regularExpression);$  AlignmentViewer viewer=(AlignmentViewer)getViewer();$  for (int row=0; row < viewer.getAlignment().getNumberOfSequences(); row++) {$    Lane lane=viewer.getAlignment().getLane(row);$    Matcher matcher=pattern.matcher(lane.getName());$    if (matcher.find()) {$      final Alignment alignment=viewer.getAlignment();$      int firstJump=alignment.getGapColumnContractor().getTotalJumpBeforeLayoutColumn(lane.getFirstNonGapPosition());$      int firstCol=lane.getFirstNonGapPosition() - firstJump;$      int lastCol=lane.getLastNonGapPosition() - firstJump - 1;$      row=alignment.getRowCompressor().getRow(row);$      viewer.getSelectedBlock().select(row,firstCol,row,lastCol,alignment.isTranslate());$      System.err.println("Found: " + lane.getName());$      executeImmediately("zoom axis=both what=selection;");$      return;$    }$  }$  System.err.println("No match");$}$
public BigReal(char[] in,int offset,int len,MathContext mc){$  d=new BigDecimal(in,offset,len,mc);$}$
public static DhisHttpResponse httpGET(String requestURL,boolean authorize,String username,String password,Map<String,String> headers,int timeout,boolean processResponse) throws Exception {$  DefaultHttpClient httpclient=null;$  DhisHttpResponse dhisHttpResponse=null;$  HttpParams params=new BasicHttpParams();$  try {$    HttpConnectionParams.setConnectionTimeout(params,timeout);$    HttpConnectionParams.setSoTimeout(params,timeout);$    httpclient=new DefaultHttpClient(params);$    HttpGet httpGet=new HttpGet(requestURL);$    if (headers instanceof Map) {$      for (      Map.Entry<String,String> e : headers.entrySet()) {$        httpGet.addHeader(e.getKey(),e.getValue());$      }$    }$    if (authorize) {$      httpGet.setHeader("Authorization",CodecUtils.getBasicAuthString(username,password));$    }$    HttpResponse response=httpclient.execute(httpGet);$    if (processResponse) {$      dhisHttpResponse=processResponse(requestURL,username,response);$    }$ else {$      dhisHttpResponse=new DhisHttpResponse(response,null,response.getStatusLine().getStatusCode());$    }$  }$ catch (  Exception e) {$    log.error("Exception occurred in the httpGET call with username " + username,e);$    throw e;$  }$ finally {$    if (httpclient != null) {$      httpclient.getConnectionManager().shutdown();$    }$  }$  return dhisHttpResponse;$}$
public JSONArray put(int index,Collection value) throws JSONException {$  put(index,new JSONArray(value));$  return this;$}$
public Boolean shouldAllowBridgeAccess(String url){$  return shouldAllowNavigation(url);$}$
@Override public void addDataTag(final SourceDataTag sourceDataTag){$  dataTagTable.put(sourceDataTag.getId(),sourceDataTag);$}$
public AddAndroidActivityPath(@Nullable VirtualFile targetFolder,@Nullable File template,Map<String,Object> predefinedParameterValues,Disposable parentDisposable){$  myTemplate=template;$  myPredefinedParameterValues=predefinedParameterValues;$  myParentDisposable=parentDisposable;$  myIsNewModule=false;$  myTargetFolder=targetFolder != null && !targetFolder.isDirectory() ? targetFolder.getParent() : targetFolder;$}$
protected void resetDateObj(DateTimeData data){$  data.year=0;$  data.month=0;$  data.day=0;$  data.hour=0;$  data.minute=0;$  data.second=0;$  data.utc=0;$  data.timezoneHr=0;$  data.timezoneMin=0;$}$
public static int stringMod(String string,int mod){$  int hashCode=0;$  if (string != null) {$    hashCode=string.hashCode();$    if (hashCode < 0) {$      hashCode=Math.abs(hashCode);$      hashCode=hashCode < 0 ? 0 : hashCode;$    }$  }$  return hashCode % (mod > 0 ? mod : 1);$}$
public boolean with_arrayref(){$  return soot.PhaseOptions.getBoolean(options,"with-arrayref");$}$
public void closeThriftReader(){$  thriftReader.close();$}$
public AxisLabelLayout(String group,AxisLayout layout,Rectangle2D bounds,double spacing){$  super(group);$  if (bounds != null)   setLayoutBounds(bounds);$  m_layout=layout;$  m_model=layout.getRangeModel();$  m_axis=layout.getAxis();$  m_scale=layout.getScale();$  m_spacing=spacing;$}$
public static void updateAllForFacade(DataStore dataStore,Iterator<Update> updateIter,Set<String> tags){$  Iterator<List<Update>> batchIter=new TimePartitioningIterator<>(updateIter,50,1,2500,Duration.millis(500L));$  while (batchIter.hasNext()) {$    dataStore.updateAllForFacade(batchIter.next(),tags);$  }$}$
public boolean end(){$  outputList.add(new ByteArrayInputStream(outputData));$  totBytes+=outputData.length;$  return true;$}$
public GroupsGetRequestsQuery count(Integer value){$  return unsafeParam("count",value);$}$
public boolean equals(Object obj){$  return (obj instanceof ConstraintAlternatives && Constraint.equal(constraints,((ConstraintAlternatives)obj).constraints));$}$
@Nullable private static String validateTemplate(TemplateMetadata metadata,int currentMinSdk,int buildApi){$  if (!metadata.isSupported()) {$    return "This template requires a more recent version of Android Studio. Please update.";$  }$  int templateMinSdk=metadata.getMinSdk();$  if (templateMinSdk > currentMinSdk && currentMinSdk >= 1) {$    return String.format("This template requires a minimum SDK version of at least %1$d, and the current min version is %2$d",templateMinSdk,currentMinSdk);$  }$  int templateMinBuildApi=metadata.getMinBuildApi();$  if (templateMinBuildApi > buildApi && buildApi >= 1) {$    return String.format("This template requires a build target API version of at least %1$d, and the current version is %2$d",templateMinBuildApi,buildApi);$  }$  return null;$}$
public MessagesSearchQuery search(Actor actor){$  return new MessagesSearchQuery(getClient(),actor);$}$
public List<CustomerReview> loadCustomerReviews(List<Product> products){$  EntityManager em=emf.createEntityManager();$  TypedQuery<CustomerReview> queryReviews;$  List<CustomerReview> resReview=null;$  try {$    em.getTransaction().begin();$    queryReviews=em.createQuery("SELECT p FROM CustomerReview p",CustomerReview.class);$    resReview=queryReviews.getResultList();$    if (resReview.size() > 5) {$      logger.info(resReview.size() + " Customer Reviews already available in the db");$    }$ else {$      new XMLParser().readCustomerReview(em,"com/sap/espm/model/data/CustomerReviews.xml",products);$      em.getTransaction().commit();$      queryReviews=em.createQuery("SELECT p FROM CustomerReview p",CustomerReview.class);$      resReview=queryReviews.getResultList();$      logger.info(resReview.size() + " Products loaded into the db");$    }$  }$ catch (  Exception e) {$    logger.error("Exception occured",e);$  }$ finally {$    em.close();$  }$  return resReview;$}$
public static UByte valueOf(String value) throws NumberFormatException {$  return valueOfUnchecked(rangeCheck(Short.parseShort(value)));$}$
public static void o(Zmat A,int w,int d){$  int nr=A.nrow;$  int nc=A.ncol;$  A.getProperties();$  boolean real=true;$  real:   for (int i=A.bx; i <= A.rx; i++) {$    for (int j=A.bx; j <= A.cx; j++) {$      if (A.im[i - A.bx][j - A.bx] != 0.) {$        real=false;$        break real;$      }$    }$  }$  if (!real) {$    String temp=Integer.toString(nr + A.bx - 1);$    int rfw=temp.length() + 1;$    int ww=w + d + 10;$    int ncp=(Parameters.PageWidth - rfw) / ww;$    int jl=0;$    while (jl < nc) {$      int ju=Math.min(nc,jl + ncp);$      System.out.print("\n");$      String head="";$      while (head.length() < rfw)       head=head + " ";$      System.out.print(head);$      for (int j=jl; j < ju; j++) {$        head=Integer.toString(j + A.bx);$        while (head.length() < ww)         head=" " + head;$        System.out.print(head);$      }$      System.out.print("\n");$      for (int i=0; i < nr; i++) {$        String row=Integer.toString(i + A.bx);$        while (row.length() < rfw)         row=" " + row;$        System.out.print(row);$        for (int j=jl; j < ju; j++) {$          String snum=DoubletoEstring(A.re[i][j],w,d);$          if (A.im[i][j] < 0)           snum=snum + " - " + DoubletoEstring(-A.im[i][j],d + 6,d)+ "i";$ else           snum=snum + " + " + DoubletoEstring(A.im[i][j],d + 6,d)+ "i";$          System.out.print(snum);$        }$        System.out.print("\n");$      }$      jl=jl + ncp;$    }$  }$ else {$    String temp=Integer.toString(A.rx);$    int rfw=temp.length() + 1;$    int ncp=(Parameters.PageWidth - rfw) / w;$    int jl=A.bx;$    while (jl <= A.cx) {$      int ju=Math.min(A.cx,jl + ncp - 1);$      System.out.print("\n");$      String head="";$      while (head.length() < rfw)       head=head + " ";$      System.out.print(head);$      for (int j=jl; j <= ju; j++) {$        head=Integer.toString(j);$        while (head.length() < w)         head=" " + head;$        System.out.print(head);$      }$      System.out.print("\n");$      for (int i=A.bx; i <= A.rx; i++) {$        String row=Integer.toString(i);$        while (row.length() < rfw)         row=" " + row;$        System.out.print(row);$        for (int j=jl; j <= ju; j++)         System.out.print(DoubletoEstring(A.re[i - A.bx][j - A.bx],w,d));$        System.out.print("\n");$      }$      jl=jl + ncp;$    }$  }$}$
public IteratorBuilder leaseDuration(long leaseDuration){$  this.iteratorConfig.setLeaseDuration(leaseDuration);$  return this;$}$
protected AdamsFieldStateInterpolator<T> create(boolean newForward,FieldODEStateAndDerivative<T> newGlobalPreviousState,FieldODEStateAndDerivative<T> newGlobalCurrentState,FieldODEStateAndDerivative<T> newSoftPreviousState,FieldODEStateAndDerivative<T> newSoftCurrentState,FieldEquationsMapper<T> newMapper){$  return new AdamsFieldStateInterpolator<T>(scalingH,reference,scaled,nordsieck,newForward,newGlobalPreviousState,newGlobalCurrentState,newSoftPreviousState,newSoftCurrentState,newMapper);$}$
public boolean isHttps(){$  Attribute<Boolean> isHttpsAttr=ctx.attr(AttributeKey.<Boolean>valueOf(IS_HTTPS_ATTRIBUTE_NAME));$  Boolean isHttps=isHttpsAttr.get();$  if (isHttps == null) {$    return false;$  }$ else {$    return isHttps;$  }$}$
private void handleTagSubscription(Set<Long> subscriptionList,Set<Long> newTagIds,final BaseListener listener,boolean sendInitialUpdateSeperately){$  final Map<Long,Tag> initialUpdates=new HashMap<>(subscriptionList.size());$  ClientDataTagImpl cdt=null;$  for (  Long tagId : subscriptionList) {$    cdt=controller.getActiveCache().get(tagId);$    if (sendInitialUpdateSeperately) {$      initialUpdates.put(tagId,cdt.clone());$    }$  }$  if (sendInitialUpdateSeperately && listener instanceof DataTagListener) {$    if (log.isDebugEnabled()) {$      log.debug("handleTagSubscription() - Sending initial values to DataTagListener");$    }$    Collection<ClientDataTagValue> oldFormat=new ArrayList<>(initialUpdates.size());$    for (    Tag value : initialUpdates.values()) {$      oldFormat.add((ClientDataTagValue)value);$    }$    ((DataTagListener)listener).onInitialUpdate(oldFormat);$  }$ else   if (sendInitialUpdateSeperately && listener instanceof TagListener) {$    if (log.isDebugEnabled()) {$      log.debug("handleTagSubscription() - Sending initial values to DataTagListener");$    }$    Collection<Tag> values=initialUpdates.values();$    ((TagListener)listener).onInitialUpdate(values);$  }$  for (  Long tagId : subscriptionList) {$    cdt=controller.getActiveCache().get(tagId);$    cdt.addUpdateListener(listener,initialUpdates.get(tagId));$  }$  if (!newTagIds.isEmpty()) {$    cacheSynchronizer.subscribeTags(newTagIds);$    fireOnNewTagSubscriptionsEvent(newTagIds);$  }$}$
public void startTransition(){$  if (mViewToShow != null) {$    ViewParent parent=mViewToShow.getParent();$    ((ViewGroup)parent).removeView(mViewToShow);$    addChildView(mViewToShow);$    if (mViewToHide != null)     mViewToShow.setAlpha(0.0f);$  }$}$
public Optional<Double> avg(){$  if (isEmpty())   return Optional.empty();$  return Optional.of(sum() / getEventCount());$}$
public boolean isCritical(){$  return false;$}$
public final synchronized void clear(){$  fCatalog=null;$}$
public static SM_SYSTEM_MESSAGE STR_MSG_CANT_INSTANCE_TOO_MANY_MEMBERS(int num0,String worldname1){$  return new SM_SYSTEM_MESSAGE(1400180,num0,worldname1);$}$
@Deprecated public Potion(PotionType type,int level,boolean splash,boolean extended){$  this(type,level,splash);$  this.extended=extended;$}$
@Override public Set<String> locateSimilarDocuments(DocumentNGramGraph dngCur){$  String sClusterLabel=null;$  double dSim=0.0;$  double dPrvSim=0.0;$  Vertex vBestCandidate=null;$  Vertex vCur=getRootHierarchyNode(Hierarchy);$  LinkedList<String> lPath=new LinkedList<String>();$  lPath.add(vCur.getLabel());$  do {$    dPrvSim=dSim;$    Iterator iChildren=utils.getAdjacentIncomingVertices(Hierarchy,vCur).iterator();$    vBestCandidate=vCur;$    if (iChildren.hasNext()) {$      while (iChildren.hasNext()) {$        Vertex vCandidate=(Vertex)iChildren.next();$        double dCurSim=Double.NEGATIVE_INFINITY;$        try {$          initComparator();$          dCurSim=Comparator.getSimilarityBetween(dngCur,getRepresentationFromCluster(vCandidate.getLabel())).getOverallSimilarity();$        }$ catch (        InvalidClassException ex) {$          System.err.println("Invalid document type. Ignoring...");$          ex.printStackTrace(System.err);$        }$        if (dCurSim > dSim) {$          vBestCandidate=vCandidate;$          dSim=dCurSim;$        }$      }$    }$    vCur=vBestCandidate;$    sClusterLabel=vBestCandidate.getLabel();$    lPath.add(sClusterLabel);$  }$ while (dPrvSim < dSim);$  System.err.println(utils.printIterable(lPath,"->\n"));$  return getDocumentIDsFromCluster(sClusterLabel);$}$
public MulticastTimeToLive(int ttl){$  if (ttl < 0 || ttl > MAX_TIME_TO_LIVE) {$    throw new IllegalArgumentException("invalid time to live");$  }$  this.ttl=ttl;$}$
public void atan(final double[] operand,final int operandOffset,final double[] result,final int resultOffset){$  double[] function=new double[1 + order];$  final double x=operand[operandOffset];$  function[0]=FastMath.atan(x);$  if (order > 0) {$    final double[] q=new double[order];$    q[0]=1;$    final double x2=x * x;$    final double f=1.0 / (1 + x2);$    double coeff=f;$    function[1]=coeff * q[0];$    for (int n=2; n <= order; ++n) {$      double v=0;$      q[n - 1]=-n * q[n - 2];$      for (int k=n - 1; k >= 0; k-=2) {$        v=v * x2 + q[k];$        if (k > 2) {$          q[k - 2]=(k - 1) * q[k - 1] + (k - 1 - 2 * n) * q[k - 3];$        }$ else         if (k == 2) {$          q[0]=q[1];$        }$      }$      if ((n & 0x1) == 0) {$        v*=x;$      }$      coeff*=f;$      function[n]=coeff * v;$    }$  }$  compose(operand,operandOffset,function,result,resultOffset);$}$
public final void testFallBackList(){$  try {$    fFileManager.fallback(data);$  }$ catch (  DataFallbackException e) {$    fail("Data could not be written to the log file " + e.getMessage());$  }$  boolean empty=fFileManager.isFallbackFileEmpty();$  assertFalse(empty);$}$
public void dumpBinary(ByteBuffer bb) throws IOException {$  bb.putInt(frameData.length);$  for (int i=0; i < frameData.length; i++) {$    bb.putShort(frameData[i]);$  }$  bb.putInt(residualData.length);$  bb.put(residualData);$}$
public List<RecognitionResult> recognize(RecognitionRequest request) throws ClarifaiException {$  return Arrays.asList(new ClarifaiRequester<RecognitionResult[]>(connectionFactory,credentialManager,POST,"/multiop",RecognitionResult[].class,maxAttempts).execute(request));$}$
public static void copyPropertiesInclude(Object from,Object to,String[] includsArray) throws Exception {$  List<String> includesList=null;$  if (includsArray != null && includsArray.length > 0) {$    includesList=Arrays.asList(includsArray);$  }$ else {$    return;$  }$  Method[] fromMethods=from.getClass().getDeclaredMethods();$  Method[] toMethods=to.getClass().getDeclaredMethods();$  Method fromMethod=null, toMethod=null;$  String fromMethodName=null, toMethodName=null;$  for (int i=0; i < fromMethods.length; i++) {$    fromMethod=fromMethods[i];$    fromMethodName=fromMethod.getName();$    if (!fromMethodName.contains("get")) {$      if (!fromMethodName.startsWith("is")) {$        continue;$      }$    }$    String str=fromMethodName.substring(fromMethodName.startsWith("is") ? 2 : 3);$    if (!includesList.contains(str.substring(0,1).toLowerCase() + str.substring(1))) {$      continue;$    }$    toMethodName="set" + fromMethodName.substring(fromMethodName.startsWith("is") ? 2 : 3);$    toMethod=findMethodByName(toMethods,toMethodName);$    if (toMethod == null) {$      continue;$    }$    Object value=fromMethod.invoke(from,new Object[0]);$    if (value == null) {$      continue;$    }$    if (value instanceof Collection) {$      @SuppressWarnings("rawtypes") Collection newValue=(Collection)value;$      if (newValue.size() <= 0) {$        continue;$      }$    }$    toMethod.invoke(to,new Object[]{value});$  }$}$
public JRakLibClient(Logger logger,String serverIP,int serverPort){$  if (serverPort < 1 || serverPort > 65536) {$    throw new IllegalArgumentException("Invalid port range.");$  }$  this.logger=logger;$  this.serverEndpoint=new InetSocketAddress(serverIP,serverPort);$  externalQueue=new LinkedList<>();$  internalQueue=new LinkedList<>();$  start();$}$
@Override public String toString(){$  StringBuilder sb=new StringBuilder();$  sb.append(getClass().getSimpleName());$  sb.append(" [");$  sb.append("Hash = ").append(hashCode());$  sb.append(", userId=").append(userId);$  sb.append(", provider=").append(provider);$  sb.append(", openId=").append(openId);$  sb.append("]");$  return sb.toString();$}$
public static void main(String args[]){$  if (args.length < 2) {$    System.out.println("Error: Must have 2 parameters, one is config filename, " + "the other is the local filename to upload");$    return;$  }$  System.out.println("java.version=" + System.getProperty("java.version"));$  String conf_filename=args[0];$  String local_filename=args[1];$  try {$    ClientGlobal.init(conf_filename);$    System.out.println("network_timeout=" + ClientGlobal.g_network_timeout + "ms");$    System.out.println("charset=" + ClientGlobal.g_charset);$    TrackerClient tracker=new TrackerClient();$    TrackerServer trackerServer=tracker.getConnection();$    StorageServer storageServer=null;$    StorageClient1 client=new StorageClient1(trackerServer,storageServer);$    NameValuePair[] metaList=new NameValuePair[1];$    metaList[0]=new NameValuePair("fileName",local_filename);$    String fileId=client.upload_file1(local_filename,null,metaList);$    System.out.println("upload success. file id is: " + fileId);$    int i=0;$    while (i++ < 10) {$      byte[] result=client.download_file1(fileId);$      System.out.println(i + ", download result is: " + result.length);$    }$    trackerServer.close();$  }$ catch (  Exception ex) {$    ex.printStackTrace();$  }$}$
private void validateHostAddress(RegistryState state,SslTrustCertificateState sslTrust){$  String hostname=UriUtilsExtended.extractHost(state.address);$  X509Certificate certificate=null;$  try {$    certificate=KeyUtil.decodeCertificate(sslTrust.certificate);$  }$ catch (  CertificateException e1) {$    throw new IllegalArgumentException(String.format("Invalid certificate provided from host: %s",hostname));$  }$  try {$    new DefaultHostnameVerifier().verify(hostname,certificate);$  }$ catch (  SSLException e) {$    String errorMessage=String.format("Registry hostname (%s) does not match certificates CN (%s).",hostname,sslTrust.commonName);$    throw new IllegalArgumentException(errorMessage);$  }$}$
public NelderMeadSimplex(final double[] steps){$  this(steps,DEFAULT_RHO,DEFAULT_KHI,DEFAULT_GAMMA,DEFAULT_SIGMA);$}$
@Override public Filter createFilter(){$  return new IsBetweenExtended();$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Dispel_ME_TO_SELF(String skillname){$  return new SM_SYSTEM_MESSAGE(1200353,skillname);$}$
@Override public boolean contains(S2Cell cell){$  return contains(cell.id());$}$
@RequestMapping(value="/{id}/download/extractBinary",method=GET) @ResponseBody public ResponseEntity<byte[]> extractBinaryFileDownload(@PathVariable Integer id){$  Book book=bookRepository.findOne(id);$  log.debug("File Download: {}",book.getExtractFileName());$  return ResponseEntity.ok().header(HttpHeaders.CONTENT_TYPE,book.getExtractContentType()).header(HttpHeaders.CONTENT_DISPOSITION,"attachment; filename=\"" + book.getExtractFileName() + "\"").contentLength(book.getExtractSize()).body(book.getExtractBinary());$}$
public static long parseDateAsEpoch(String dateStr){$  try {$    return DateUtils.parseDate(dateStr).getTime();$  }$ catch (  DateParseException e) {$    return 0;$  }$}$
private void blackmanHarris3sMin(int size){$  int start=(windowFunction.length - size) / 2;$  int stop=(windowFunction.length + size) / 2;$  double scale=1.0 / (double)size / 0.42;$  for (int i=0; start < stop; start++, i++)   windowFunction[i]=scale * (0.42323 - 0.49755 * Math.cos(twoPI * i / size) + 0.07922 * Math.cos(2 * twoPI * i / size));$}$
public StsdBox(RandomAccessFile fis,long pos){$  this.fis=fis;$  this.pos=pos;$  findBoxAvcc();$  findSPSandPPS();$}$
public void evalNotifications(DispatchContext dctx,Map<String,? extends Object> context,Map<String,Object> result){$  for (  ModelNotification notify : this.notifications) {$    notify.callNotify(dctx,this,context,result);$  }$}$
public static Map<String,Object> testServiceLockWaitTimeoutRetryCantRecover(DispatchContext dctx,Map<String,? extends Object> context){$  Delegator delegator=dctx.getDelegator();$  LocalDispatcher dispatcher=dctx.getDispatcher();$  Locale locale=(Locale)context.get("locale");$  try {$    GenericValue testingType=EntityQuery.use(delegator).from("TestingType").where("testingTypeId","SVCLWTRTCR").queryOne();$    testingType.set("description","New description for SVCLWTRTCR from Lock Wait Timeout Lock GRABBER, this should be replaced by the one in the Waiter service.");$    testingType.store();$    Debug.logInfo("In testServiceLockWaitTimeoutRetryCantRecover (grabber) just updated SVCLWTRTCR, running sub-service in own transaction",module);$    Map<String,Object> waiterResult=dispatcher.runSync("testServiceLockWaitTimeoutRetryCantRecoverWaiter",null,5,true);$    if (ServiceUtil.isError(waiterResult)) {$      return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestLockWaitTimeoutRetryCantRecoverWaiter",locale),null,null,waiterResult);$    }$    Debug.logInfo("In testServiceLockWaitTimeoutRetryCantRecover (grabber) successfully finished running sub-service in own transaction",module);$  }$ catch (  GenericServiceException e) {$    String errMsg="Error running deadlock test services: " + e.toString();$    Debug.logError(e,errMsg,module);$  }$catch (  GenericEntityException e) {$    Debug.logError(e,"Entity Engine Exception running lock wait timeout test main/Grabber thread: " + e.toString(),module);$    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"ServiceTestLockInterruptedExceptionRetryGrabber",UtilMisc.toMap("errorString",e.toString()),locale));$  }$  return ServiceUtil.returnSuccess();$}$
public static void pickImage(Activity activity){$  pickImage(activity,REQUEST_PICK);$}$
public static float min(final float a,final float b){$  if (a > b) {$    return b;$  }$  if (a < b) {$    return a;$  }$  if (a != b) {$    return Float.NaN;$  }$  int bits=Float.floatToRawIntBits(a);$  if (bits == 0x80000000) {$    return a;$  }$  return b;$}$
@Override public WebDriver frame(int index){$  frameSwitcher.putFramePathOnStack(index);$  return targetLocator.frame(index);$}$
@SuppressWarnings("unchecked") public static <R>JoinObservable<R> when(Plan<R> p1,Plan<R> p2,Plan<R> p3,Plan<R> p4){$  return from(JoinPatterns.when(p1,p2,p3,p4));$}$
private void registerDeviceStateReceiver(){$  IntentFilter filter=new IntentFilter();$  filter.addAction(Intent.ACTION_POWER_DISCONNECTED);$  filter.addAction(ConnectivityManager.CONNECTIVITY_ACTION);$  registerReceiver(mDeviceStateReceiver,filter);$}$
public void checkDayTimeChange(){$  DayTime oldDayTime=this.dayTime;$  calculateDayTime();$  onHourChange();$  if (oldDayTime != this.dayTime) {$    onDayTimeChange();$  }$}$
public void testMatricesValues1(){$  SingularValueDecomposition svd=new SingularValueDecomposition(MatrixUtils.createRealMatrix(testSquare));$  RealMatrix uRef=MatrixUtils.createRealMatrix(new double[][]{{3.0 / 5.0,-4.0 / 5.0},{4.0 / 5.0,3.0 / 5.0}});$  RealMatrix sRef=MatrixUtils.createRealMatrix(new double[][]{{3.0,0.0},{0.0,1.0}});$  RealMatrix vRef=MatrixUtils.createRealMatrix(new double[][]{{4.0 / 5.0,3.0 / 5.0},{3.0 / 5.0,-4.0 / 5.0}});$  RealMatrix u=svd.getU();$  Assert.assertEquals(0,u.subtract(uRef).getNorm(),normTolerance);$  RealMatrix s=svd.getS();$  Assert.assertEquals(0,s.subtract(sRef).getNorm(),normTolerance);$  RealMatrix v=svd.getV();$  Assert.assertEquals(0,v.subtract(vRef).getNorm(),normTolerance);$  Assert.assertTrue(u == svd.getU());$  Assert.assertTrue(s == svd.getS());$  Assert.assertTrue(v == svd.getV());$}$
public boolean isSet(_Fields field){$  if (field == null) {$    throw new IllegalArgumentException();$  }$switch (field) {$case SERVICE_NAME:$    return isSetServiceName();$case SEQUENCE_ID:$  return isSetSequenceId();$case CALL_TYPE:$return isSetCallType();$case TIMEOUT:$return isSetTimeout();$}$throw new IllegalStateException();$}$
public String createManufacturingOrders(String facilityId,Date date,String workEffortName,String description,String routingId,String orderId,String orderItemSeqId,String shipGroupSeqId,String shipmentId,GenericValue userLogin) throws GenericEntityException {$  String workEffortId=null;$  if (root != null) {$    if (UtilValidate.isEmpty(facilityId)) {$      if (orderId != null) {$        GenericValue order=EntityQuery.use(delegator).from("OrderHeader").where("orderId",orderId).queryOne();$        String productStoreId=order.getString("productStoreId");$        if (productStoreId != null) {$          GenericValue productStore=ProductStoreWorker.getProductStore(productStoreId,delegator);$          if (productStore != null) {$            facilityId=productStore.getString("inventoryFacilityId");$          }$        }$      }$      if (facilityId == null && shipmentId != null) {$        GenericValue shipment=EntityQuery.use(delegator).from("Shipment").where("shipmentId",shipmentId).queryOne();$        facilityId=shipment.getString("originFacilityId");$      }$    }$    Map<String,Object> tmpMap=root.createManufacturingOrder(facilityId,date,workEffortName,description,routingId,orderId,orderItemSeqId,shipGroupSeqId,shipmentId,true,true);$    workEffortId=(String)tmpMap.get("productionRunId");$  }$  return workEffortId;$}$
public static String buildLinkHostPartAndEncode(HttpServletRequest request,HttpServletResponse response,String url,Boolean fullPath,Boolean secure,Boolean encode) throws WebAppConfigurationException, IOException {$  boolean didFullStandard=false;$  boolean didFullSecure=false;$  StringBuilder newURL=new StringBuilder();$  Boolean secureFullPathFlag=checkFullSecureOrStandard(request,response,false,fullPath,secure);$  if (secureFullPathFlag != null) {$    if (secureFullPathFlag) {$      didFullSecure=true;$    }$ else {$      didFullStandard=true;$    }$    OfbizUrlBuilder builder;$    try {$      builder=OfbizUrlBuilder.from(request);$    }$ catch (    GenericEntityException e) {$      throw new IOException(e);$    }$    builder.buildHostPart(newURL,url,secureFullPathFlag);$  }$  newURL.append(url);$  String res;$  if (!Boolean.FALSE.equals(encode)) {$    RequestHandler rh=RequestHandler.getRequestHandler(request.getServletContext());$    res=rh.doLinkURLEncode(request,response,newURL,false,didFullStandard,didFullSecure);$  }$ else {$    res=newURL.toString();$  }$  return res;$}$
@SuppressWarnings({"unchecked"}) public void loadPlugins() throws Exception {$  Path pluginsDir=stateDir.resolve("plugins");$  if (Files.exists(pluginsDir)) {$    if (Files.isDirectory(pluginsDir) == false) {$      throw new IllegalStateException("\"" + pluginsDir.toAbsolutePath() + "\" is not a directory");$    }$    List<Path> files=new ArrayList<>();$    try (DirectoryStream<Path> stream=Files.newDirectoryStream(pluginsDir)){$      for (      Path sub : stream) {$        files.add(sub);$      }$    }$     for (    Path pluginDir : files) {$      if (Files.isDirectory(pluginDir)) {$        if (pluginDir.getFileName().toString().startsWith("extra")) {$          continue;$        }$        List<Path> pluginFiles=new ArrayList<>();$        try (DirectoryStream<Path> stream=Files.newDirectoryStream(pluginDir)){$          for (          Path sub : stream) {$            pluginFiles.add(sub);$          }$        }$         Path propFile=pluginDir.resolve(PLUGIN_PROPERTIES_FILE);$        if (Files.exists(propFile) == false) {$          throw new IllegalStateException("plugin \"" + pluginDir + "\" is missing the "+ PLUGIN_PROPERTIES_FILE+ " file");$        }$        System.out.println("Start plugin " + pluginDir.toAbsolutePath());$        Properties pluginProps=new Properties();$        try (InputStream is=Files.newInputStream(propFile)){$          pluginProps.load(is);$        }$         String pluginClassName=pluginProps.getProperty("class");$        if (pluginClassName == null) {$          throw new IllegalStateException("property file \"" + pluginDir + "\" does not have the \"class\" property");$        }$        List<URL> urls=new ArrayList<>();$        for (        Path pluginFile : pluginFiles) {$          if (pluginFile.toString().endsWith(".jar") || pluginFile.toString().endsWith(".zip")) {$            urls.add(pluginFile.toUri().toURL());$          }$        }$        Path pluginLibDir=pluginDir.resolve("lib");$        if (Files.exists(pluginLibDir)) {$          List<Path> pluginLibFiles=new ArrayList<>();$          try (DirectoryStream<Path> stream=Files.newDirectoryStream(pluginLibDir)){$            for (            Path sub : stream) {$              pluginLibFiles.add(sub);$            }$          }$           for (          Path pluginFile : pluginLibFiles) {$            if (pluginFile.toString().endsWith(".jar")) {$              urls.add(pluginFile.toUri().toURL());$            }$          }$        }$        ClassLoader loader=URLClassLoader.newInstance(urls.toArray(new URL[0]));$        Class<? extends Plugin> pluginClass=(Class<? extends Plugin>)loader.loadClass(pluginClassName);$        Constructor<? extends Plugin> ctor;$        try {$          ctor=pluginClass.getConstructor(GlobalState.class);$        }$ catch (        NoSuchMethodException e1) {$          throw new IllegalStateException("class \"" + pluginClassName + "\" for plugin \""+ pluginDir+ "\" does not have constructor that takes GlobalState");$        }$        Plugin plugin;$        try {$          plugin=ctor.newInstance(this);$        }$ catch (        Exception e) {$          throw new IllegalStateException("failed to instantiate class \"" + pluginClassName + "\" for plugin \""+ pluginDir,e);$        }$        if (plugins.containsKey(plugin.getName())) {$          throw new IllegalStateException("plugin \"" + plugin.getName() + "\" appears more than once");$        }$        plugins.put(plugin.getName(),plugin);$      }$    }$  }$}$
public void mouseReleased(){$  mShowDecorations=true;$  mSnapCandidates.clear();$  mSimilarMargins.clear();$}$
@VisibleForTesting EnumSet<FailureReason> failureReasons(Context context){$  EnumSet<FailureReason> reasons=EnumSet.noneOf(FailureReason.class);$  reasons.addAll(mPrecacheLauncher.failureReasons());$  if (!mDeviceState.isPowerConnected(context))   reasons.add(FailureReason.NO_POWER);$  if (!mDeviceState.isWifiAvailable(context))   reasons.add(FailureReason.NO_WIFI);$  if (timeSinceLastPrecacheMs(context) < WAIT_UNTIL_NEXT_PRECACHE_MS) {$    reasons.add(FailureReason.NOT_ENOUGH_TIME_SINCE_LAST_PRECACHE);$  }$  if (PrecacheService.isPrecaching())   reasons.add(FailureReason.CURRENTLY_PRECACHING);$  return reasons;$}$
public boolean isFileMarker(){$  return type == Type.FILE_MARKER;$}$
public String eatId(){$  if (!matchId())   throw new BadSyntaxException();$  String s=tok.sval;$  nextToken();$  return s;$}$
public void updateInventories(GetInventoryResponse response){$  for (  InventoryItemOuterClass.InventoryItem inventoryItem : response.getInventoryDelta().getInventoryItemsList()) {$    InventoryItemDataOuterClass.InventoryItemData itemData=inventoryItem.getInventoryItemData();$    if (itemData.getPokemonData().getPokemonId() == PokemonId.MISSINGNO && itemData.getPokemonData().getIsEgg()) {$      hatchery.addEgg(new EggPokemon(itemData.getPokemonData()));$    }$    if (itemData.getPokemonData().getPokemonId() != PokemonId.MISSINGNO) {$      pokebank.addPokemon(new Pokemon(api,inventoryItem.getInventoryItemData().getPokemonData()));$    }$    if (itemData.getItem().getItemId() != ItemId.UNRECOGNIZED && itemData.getItem().getItemId() != ItemId.ITEM_UNKNOWN) {$      ItemData item=itemData.getItem();$      itemBag.addItem(new Item(item));$    }$    if (itemData.getCandy().getFamilyId() != PokemonFamilyIdOuterClass.PokemonFamilyId.UNRECOGNIZED && itemData.getCandy().getFamilyId() != PokemonFamilyIdOuterClass.PokemonFamilyId.FAMILY_UNSET) {$      candyjar.setCandy(itemData.getCandy().getFamilyId(),itemData.getCandy().getCandy());$    }$    if (itemData.hasPlayerStats()) {$      api.getPlayerProfile().setStats(new Stats(itemData.getPlayerStats()));$    }$    if (itemData.hasPokedexEntry()) {$      pokedex.add(itemData.getPokedexEntry());$    }$    if (itemData.hasEggIncubators()) {$      for (      EggIncubatorOuterClass.EggIncubator incubator : itemData.getEggIncubators().getEggIncubatorList()) {$        incubators.add(new EggIncubator(api,incubator));$      }$    }$    lastInventoryUpdate=api.currentTimeMillis();$  }$}$
public void addListener(@NotNull ConfigurationListener listener){$  if (myListeners == null) {$    myListeners=new ArrayList<>();$  }$  myListeners.add(listener);$}$
public static void restartApplicationWithIntent(Activity activity,Intent intent){$  intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);$  activity.finish();$  activity.startActivity(intent);$  killCurrentProcess();$}$
public void registerShield(int worldId,SiegeShield shield){$  List<SiegeShield> mapShields=registeredShields.get(worldId);$  if (mapShields == null) {$    mapShields=new ArrayList<SiegeShield>();$    registeredShields.put(worldId,mapShields);$  }$  mapShields.add(shield);$}$
private void saveAllHTMLToFolder(File destinationFolder){$  if (!destinationFolder.exists()) {$    destinationFolder.mkdirs();$  }$  String filename=INDEX_HTML;$  Color backgroundColour=PrefManager.getInstance().getPrefData().getBackgroundColour();$  ExportHTML.save(destinationFolder,filename,sldDataList,backgroundColour);$}$
@Override public synchronized void reset() throws IOException {$  try {$    in.reset();$  }$ catch (  IOException e) {$    handleIOException(e);$  }$}$
public int batchSet(ObjectInfo objInfo,Map keyValues,Map failKeys,int expires) throws MyException {$  ServerInfo server;$  ProtoCommon.PkgHeader header;$  byte[] bsPackage;$  int offset;$  Iterator it;$  Map.Entry entry;$  String key;$  String value;$  byte[] bsKey;$  byte[] bsValue;$  header=new ProtoCommon.PkgHeader();$  header.key_hash_code=objInfo.getHashCode();$  server=this.serverGroup.getServer(header.key_hash_code);$  if (server == null) {$    this.status=2;$    return -1 * this.status;$  }$  try {$    header.body_len=objInfo.getPackLength() + 4;$    header.cmd=ProtoCommon.FDHT_PROTO_CMD_BATCH_SET;$    header.keep_alive=(byte)(this.serverGroup.keep_alive ? 1 : 0);$    header.timestamp=(int)(System.currentTimeMillis() / 1000);$    header.expires=expires;$    it=keyValues.entrySet().iterator();$    while (it.hasNext()) {$      entry=(Map.Entry)it.next();$      key=(String)entry.getKey();$      value=(String)entry.getValue();$      header.body_len+=8 + key.getBytes(ClientGlobal.g_charset).length + value.getBytes(ClientGlobal.g_charset).length;$    }$    bsPackage=new byte[ProtoCommon.FDHT_PROTO_PKG_HEADER_SIZE + header.body_len];$    ProtoCommon.packHeader(header,bsPackage);$    offset=objInfo.pack(bsPackage,ProtoCommon.FDHT_PROTO_PKG_HEADER_SIZE);$    ProtoCommon.int2buff(keyValues.size(),bsPackage,offset);$    offset+=4;$    it=keyValues.entrySet().iterator();$    while (it.hasNext()) {$      entry=(Map.Entry)it.next();$      key=(String)entry.getKey();$      value=(String)entry.getValue();$      bsKey=key.getBytes(ClientGlobal.g_charset);$      bsValue=value.getBytes(ClientGlobal.g_charset);$      ProtoCommon.int2buff(bsKey.length,bsPackage,offset);$      offset+=4;$      System.arraycopy(bsKey,0,bsPackage,offset,bsKey.length);$      offset+=bsKey.length;$      ProtoCommon.int2buff(bsValue.length,bsPackage,offset);$      offset+=4;$      System.arraycopy(bsValue,0,bsPackage,offset,bsValue.length);$      offset+=bsValue.length;$    }$    OutputStream out=server.sock.getOutputStream();$    out.write(bsPackage);$    ProtoCommon.PkgInfo pkgInfo=ProtoCommon.recvPackage(server.sock.getInputStream(),ProtoCommon.FDHT_PROTO_CMD_RESP,-1);$    return this.parseBatchUpdate(keyValues.size(),server,pkgInfo,failKeys);$  }$ catch (  IOException ex) {$    System.err.println("server " + server.address.getAddress().getHostAddress() + ":"+ server.address.getPort()+ " IOException, error msg: "+ ex.getMessage());$    this.serverGroup.forceClose(server);$    this.status=5;$    return -1 * this.status;$  }$ finally {$    this.serverGroup.closeServer(server);$  }$}$
protected GroupsSetCallbackSettingsQuery groupId(int value){$  return unsafeParam("group_id",value);$}$
@Override public void onHandleIntent(Intent intent){$  assert Looper.myLooper() != Looper.getMainLooper();$  if (!sEnableCommunication) {$    Log.v(TAG,"Disabled.  Ignoring intent.");$    return;$  }$  if (!mStateHasBeenRestored) {$    restoreState();$  }$  if (ACTION_INITIALIZE.equals(intent.getAction())) {$    handleInitialize();$  }$ else   if (ACTION_REGISTER_REQUEST.equals(intent.getAction())) {$    handleRegisterRequest(intent);$  }$ else   if (ACTION_POST_REQUEST.equals(intent.getAction())) {$    handlePostRequestIntent(intent);$  }$ else {$    Log.e(TAG,"Got unknown action from intent: " + intent.getAction());$  }$}$
public WhereOperator(QueryOperator source,String columnName,QueryPlan.PredicateOperator operator,DataType value) throws QueryPlanException {$  super(OperatorType.WHERE,source);$  this.operator=operator;$  this.value=value;$  columnName=this.checkSchemaForColumn(source.getOutputSchema(),columnName);$  this.columnIndex=this.getOutputSchema().getFieldNames().indexOf(columnName);$}$
public Entry(float val,int xIndex){$  mVal=val;$  mXIndex=xIndex;$}$
HessenbergTransformer(final RealMatrix matrix){$  if (!matrix.isSquare()) {$    throw new MathIllegalArgumentException(LocalizedCoreFormats.NON_SQUARE_MATRIX,matrix.getRowDimension(),matrix.getColumnDimension());$  }$  final int m=matrix.getRowDimension();$  householderVectors=matrix.getData();$  ort=new double[m];$  cachedP=null;$  cachedPt=null;$  cachedH=null;$  transform();$}$
public boolean removeUser(User user){$  if (!isSelfAdmin()) {$    return false;$  }$  Iterator<Pair<User,Role>> it=users.iterator();$  while (it.hasNext()) {$    Pair<User,Role> pair=it.next();$    if (user.equals(pair.getFirst())) {$      it.remove();$      skype.removeUserFromGroup(user,this);$      return true;$    }$  }$  return true;$}$
public WallGetQuery(VkApiClient client){$  super(client,"wall.get",GetResponse.class);$}$
public boolean enabled(){$  return soot.PhaseOptions.getBoolean(options,"enabled");$}$
void sLock(Object obj,long txNum){$  Object anchor=getAnchor(obj);$  txWaitMap.put(txNum,anchor);$synchronized (anchor) {$    Lockers lks=prepareLockers(obj);$    if (hasSLock(lks,txNum))     return;$    try {$      long timestamp=System.currentTimeMillis();$      while (!sLockable(lks,txNum) && !waitingTooLong(timestamp)) {$        avoidDeadlock(lks,txNum,S_LOCK);$        lks.requestSet.add(txNum);$        anchor.wait(MAX_TIME);$        lks.requestSet.remove(txNum);$      }$      if (!sLockable(lks,txNum))       throw new LockAbortException();$      lks.sLockers.add(txNum);$      getObjectSet(txNum).add(obj);$    }$ catch (    InterruptedException e) {$      throw new LockAbortException("abort tx." + txNum + " by interrupted");$    }$  }$  txWaitMap.remove(txNum);$}$
public JobManagerException(String msg,Throwable nested){$  super(msg,nested);$}$
public static void triggerForResourcePool(Service sender,String resourcePoolLink){$  EpzComputeEnumerationTaskState task=new EpzComputeEnumerationTaskState();$  task.resourcePoolLink=resourcePoolLink;$  task.documentSelfLink=extractRpId(task);$  Operation.createPost(sender.getHost(),EpzComputeEnumerationTaskService.FACTORY_LINK).addPragmaDirective(Operation.PRAGMA_DIRECTIVE_FORCE_INDEX_UPDATE).setBody(task).setCompletion(null).sendWith(sender);$}$
@Override public boolean hasExpired(final Long aliveTimerId){$  aliveTimerCache.acquireReadLockOnKey(aliveTimerId);$  try {$    AliveTimer aliveTimer=aliveTimerCache.get(aliveTimerId);$    return (System.currentTimeMillis() - aliveTimer.getLastUpdate() > aliveTimer.getAliveInterval() + aliveTimer.getAliveInterval() / 3);$  }$  finally {$    aliveTimerCache.releaseReadLockOnKey(aliveTimerId);$  }$}$
public static void close(){$  out.close();$}$
@SuppressWarnings({"unchecked","cast"}) public GenericClassDeclSubstituted fullCopy(){$  GenericClassDeclSubstituted tree=(GenericClassDeclSubstituted)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$switch (i) {$case 6:$        tree.children[i]=new List();$      continue;$  }$  ASTNode child=(ASTNode)children[i];$  if (child != null) {$    child=child.fullCopy();$    tree.setChild(child,i);$  }$}$}$return tree;$}$
public Message receive() throws JMSException {$  return receive(Message.DEFAULT_TIME_TO_LIVE);$}$
public EncodingException(Throwable cause){$  super(cause);$}$
public Object jjtAccept(MithraQLVisitor visitor,Object data){$  return visitor.visit(this,data);$}$
@Override public void startElement(String namespaceURI,String localName,String qName,Attributes atts) throws SAXException {$  boolean inExtension=inExtensionNamespace();$  super.startElement(namespaceURI,localName,qName,atts);$  int entryType=-1;$  Vector entryArgs=new Vector();$  if (namespaceURI != null && extendedNamespaceName.equals(namespaceURI) && !inExtension) {$    if (atts.getValue("xml:base") != null) {$      String baseURI=atts.getValue("xml:base");$      entryType=Catalog.BASE;$      entryArgs.add(baseURI);$      baseURIStack.push(baseURI);$      debug.message(4,"xml:base",baseURI);$      try {$        CatalogEntry ce=new CatalogEntry(entryType,entryArgs);$        catalog.addEntry(ce);$      }$ catch (      CatalogException cex) {$        if (cex.getExceptionType() == CatalogException.INVALID_ENTRY_TYPE) {$          debug.message(1,"Invalid catalog entry type",localName);$        }$ else         if (cex.getExceptionType() == CatalogException.INVALID_ENTRY) {$          debug.message(1,"Invalid catalog entry (base)",localName);$        }$      }$      entryType=-1;$      entryArgs=new Vector();$    }$ else {$      baseURIStack.push(baseURIStack.peek());$    }$    if (localName.equals("uriSuffix")) {$      if (checkAttributes(atts,"suffix","uri")) {$        entryType=Resolver.URISUFFIX;$        entryArgs.add(atts.getValue("suffix"));$        entryArgs.add(atts.getValue("uri"));$        debug.message(4,"uriSuffix",atts.getValue("suffix"),atts.getValue("uri"));$      }$    }$ else     if (localName.equals("systemSuffix")) {$      if (checkAttributes(atts,"suffix","uri")) {$        entryType=Resolver.SYSTEMSUFFIX;$        entryArgs.add(atts.getValue("suffix"));$        entryArgs.add(atts.getValue("uri"));$        debug.message(4,"systemSuffix",atts.getValue("suffix"),atts.getValue("uri"));$      }$    }$ else {$      debug.message(1,"Invalid catalog entry type",localName);$    }$    if (entryType >= 0) {$      try {$        CatalogEntry ce=new CatalogEntry(entryType,entryArgs);$        catalog.addEntry(ce);$      }$ catch (      CatalogException cex) {$        if (cex.getExceptionType() == CatalogException.INVALID_ENTRY_TYPE) {$          debug.message(1,"Invalid catalog entry type",localName);$        }$ else         if (cex.getExceptionType() == CatalogException.INVALID_ENTRY) {$          debug.message(1,"Invalid catalog entry",localName);$        }$      }$    }$  }$}$
public JSearchPanel createSearchPanel(boolean monitorKeystrokes){$  JSearchPanel jsp=new JSearchPanel(m_set,m_field,monitorKeystrokes);$  if (m_lock != null) {$    jsp.setLock(m_lock);$  }$  return jsp;$}$
public TrustSource add(File trustedCAPemFile){$  if (trustedCAPemFile == null) {$    throw new IllegalArgumentException("Trusted CA file cannot be null");$  }$  String pemFileContents;$  try {$    pemFileContents=Files.toString(trustedCAPemFile,Charset.forName("UTF-8"));$  }$ catch (  IOException e) {$    throw new UncheckedIOException("Unable to read file containing PEM-encoded trusted CAs: " + trustedCAPemFile.getAbsolutePath(),e);$  }$  return add(pemFileContents);$}$
public boolean canContainKey(Object key){$  return (key instanceof RegistrarLease && registrarID.equals(((RegistrarLease)key).getRegistrarID()));$}$
public AccountSaveProfileInfoQuery(VkApiClient client,UserActor actor){$  super(client,"account.saveProfileInfo",SaveProfileInfoResponse.class);$  accessToken(actor.getAccessToken());$}$
public void addBodyDecl(BodyDecl node){$  List<BodyDecl> list=(parent == null || state == null) ? getBodyDeclListNoTransform() : getBodyDeclList();$  list.addChild(node);$}$
public void addAttribute(String uri,String localName,String qName,String type,String value){$  ensureCapacity(length + 1);$  data[length * 5]=uri;$  data[length * 5 + 1]=localName;$  data[length * 5 + 2]=qName;$  data[length * 5 + 3]=type;$  data[length * 5 + 4]=value;$  length++;$}$
private boolean useIsSameNode(Node node){$  if (node instanceof NodeImpl) {$    return false;$  }$  Document doc=node.getNodeType() == Node.DOCUMENT_NODE ? (Document)node : node.getOwnerDocument();$  return (doc != null && doc.getImplementation().hasFeature("Core","3.0"));$}$
public void addTargetLocation(String name){$  if (name != null) {$    this.targetLocationSet.add(name);$  }$}$
protected void drawYAxis(Graphics2D gc,Dimension size){$  SelectionGraphics<String[]> sgc=(gc instanceof SelectionGraphics ? (SelectionGraphics<String[]>)gc : null);$  gc.setFont(getFont(ChartViewer.FontKeys.XAxisFont.toString()));$  boolean doDraw=(size == null);$  Rectangle bbox=null;$  int x0=leftMargin;$  int x1=getWidth() - rightMargin;$  int y0=getHeight() - bottomMargin;$  int y1=topMargin;$  if (isTranspose()) {$    if (scalingType == ChartViewer.ScalingType.ZSCORE && viewer.getClassesList().isDoClustering())     y1+=topTreeSpace;$    if (x0 >= x1)     return;$    final int numberOfSeries=(seriesNames == null ? 0 : seriesNames.length);$    if (numberOfSeries > 0) {$      int longest=0;$      for (      String series : seriesNames) {$        String label=seriesLabelGetter.getLabel(series);$        longest=Math.max(longest,Basic.getStringSize(gc,label,gc.getFont()).getSize().width);$      }$      int right=Math.max(leftMargin,longest + 5);$      if (doDraw)       gc.setColor(getFontColor(ChartViewer.FontKeys.YAxisFont.toString(),Color.BLACK));$      int numberOfDataSets=getChartData().getNumberOfSeries();$      double yStep=(y0 - y1) / (numberOfDataSets);$      int d=numberOfSeries - 1;$      for (      String series : seriesNames) {$        String label=seriesLabelGetter.getLabel(series);$        Dimension labelSize=Basic.getStringSize(gc,label,gc.getFont()).getSize();$        int x=right - labelSize.width - 4;$        int y=(int)Math.round(y0 - (d + 0.5) * yStep);$        if (doDraw) {$          if (getChartData().getChartSelection().isSelectedSeries(series)) {$            gc.setColor(ProgramProperties.SELECTION_COLOR);$            fillAndDrawRect(gc,x,y,labelSize.width,labelSize.height,0,ProgramProperties.SELECTION_COLOR,ProgramProperties.SELECTION_COLOR_DARKER);$          }$          gc.setColor(getFontColor(ChartViewer.FontKeys.XAxisFont.toString(),Color.DARK_GRAY));$          gc.drawString(label,x,y);$        }$ else {$          Rectangle rect=new Rectangle(x,y,labelSize.width,labelSize.height);$          if (bbox == null)           bbox=rect;$ else           bbox.add(rect);$        }$        if (sgc != null) {$          sgc.setCurrentItem(new String[]{series,null});$          drawRect(gc,x,y,labelSize.width,labelSize.height,0);$          sgc.clearCurrentItem();$        }$        d--;$      }$    }$  }$ else {$    if (scalingType == ChartViewer.ScalingType.ZSCORE && viewer.getSeriesList().isDoClustering())     y1+=topTreeSpace;$    final int numberOfClasses=(classNames == null ? 0 : classNames.length);$    if (numberOfClasses > 0) {$      int longest=0;$      for (      String className : classNames) {$        longest=Math.max(longest,Basic.getStringSize(gc,className,gc.getFont()).getSize().width);$      }$      int right=Math.max(leftMargin,longest + 5);$      if (doDraw)       gc.setColor(getFontColor(ChartViewer.FontKeys.YAxisFont.toString(),Color.BLACK));$      double yStep=(y0 - y1) / (double)numberOfClasses;$      int c=numberOfClasses - 1;$      for (      String className : classNames) {$        Dimension labelSize=Basic.getStringSize(gc,className,gc.getFont()).getSize();$        int x=right - labelSize.width - 4;$        int y=(int)Math.round(y0 - (c + 0.5) * yStep);$        if (doDraw) {$          if (getChartData().getChartSelection().isSelectedClass(className)) {$            gc.setColor(ProgramProperties.SELECTION_COLOR);$            fillAndDrawRect(gc,x,y,labelSize.width,labelSize.height,0,ProgramProperties.SELECTION_COLOR,ProgramProperties.SELECTION_COLOR_DARKER);$          }$          gc.setColor(getFontColor(ChartViewer.FontKeys.XAxisFont.toString(),Color.DARK_GRAY));$          gc.drawString(className,x,y);$        }$ else {$          Rectangle rect=new Rectangle(x,y,labelSize.width,labelSize.height);$          if (bbox == null)           bbox=rect;$ else           bbox.add(rect);$        }$        c--;$        if (sgc != null) {$          sgc.setCurrentItem(new String[]{null,className});$          drawRect(gc,x,y,labelSize.width,labelSize.height,0);$          sgc.clearCurrentItem();$        }$      }$    }$  }$  if (size != null && bbox != null) {$    size.setSize(bbox.width + 3,bbox.height);$  }$}$
public JSONArray optJSONArray(int index){$  Object o=opt(index);$  return o instanceof JSONArray ? (JSONArray)o : null;$}$
public AudioInputStream(TargetDataLine line){$  TargetDataLineInputStream tstream=new TargetDataLineInputStream(line);$  format=line.getFormat();$  frameLength=AudioSystem.NOT_SPECIFIED;$  frameSize=format.getFrameSize();$  if (frameSize == AudioSystem.NOT_SPECIFIED || frameSize <= 0) {$    frameSize=1;$  }$  this.stream=tstream;$  framePos=0;$  markpos=0;$}$
@Override protected boolean readIntoBuffer(int minLength){$  if (bufferSpaceLeft() < minLength) {$    increaseBufferSize(minLength + currentlyInBuffer());$  }$ else   if (buf.length - writePos < minLength) {$    compact();$  }$  int readSum=0;$  while (readSum < minLength && hasMoreData()) {$    prepareBlock();$    int blockSize=getBlockSize();$    if (buf.length < writePos + blockSize) {$      increaseBufferSize(writePos + blockSize);$    }$    int read=readBlock(buf,writePos);$    if (read == 0) {$      break;$    }$    writePos+=read;$    readSum+=read;$  }$  if (dataProcessor != null) {$    dataProcessor.applyInline(buf,writePos - readSum,readSum);$  }$  return readSum >= minLength;$}$
public final void unloadAll(){$  objects.invalidateAll();$}$
public JSONArray put(int index,boolean value) throws JSONException {$  put(index,value ? Boolean.TRUE : Boolean.FALSE);$  return this;$}$
private static float interpolate(float a,float b,float t){$  return a + (b - a) * t;$}$
@Override public synchronized Throwable initCause(Throwable throwable){$  if (fException != this) {$    throw new IllegalStateException();$  }$  if (throwable == this) {$    throw new IllegalArgumentException();$  }$  fException=(Exception)throwable;$  return this;$}$
public BooleanColumn(int nrows){$  this(nrows,nrows,false);$}$
@deprecated public Object quoteLiteral(String string){$  return this.tokenizer.quoteLiteral(string);$}$
TestException(){$  super();$}$
private JTree buildJTree(HelpNode root){$  if (root == null)   return new JTree();$  MutableTreeNode rn=new DefaultMutableTreeNode(root);$  DefaultTreeModel model=new DefaultTreeModel(rn);$  JTree tree=new JTree(model);$  for (int i=0; i < root.nodes.size(); i++) {$    addHelpNodesToTree(root.nodes.get(i),model,rn);$  }$  this.expandAllNodes(tree);$  return tree;$}$
private static float spacing(MotionEvent event){$  float x=event.getX(0) - event.getX(1);$  float y=event.getY(0) - event.getY(1);$  return (float)Math.sqrt(x * x + y * y);$}$
public static int hash(double[] value){$  return Arrays.hashCode(value);$}$
public void skipNode(Object node){$  if (!super.containsNode(node))   return;$  Object[] preds=getPredsOf(node).toArray();$  Object[] succs=getSuccsOf(node).toArray();$  for (  Object element : preds) {$    for (    Object element0 : succs) {$      if (element != element0)       super.addEdge(element,element0);$    }$  }$  for (  Object element : preds) {$    super.removeEdge(element,node);$  }$  for (  Object element : succs) {$    super.removeEdge(node,element);$  }$  super.removeNode(node);$}$
@Override public void unparsedEntityDecl(String name,XMLResourceIdentifier identifier,String notation,Augmentations augmentations) throws XNIException {$}$
@RequestMapping(value="/metrics",method=RequestMethod.PUT,produces=MediaType.APPLICATION_JSON_VALUE) @Timed public ResponseEntity<Metric> updateMetric(@RequestBody Metric metric) throws URISyntaxException {$  log.debug("REST request to update Metric : {}",metric);$  if (metric.getMetricId() == null) {$    return createMetric(metric);$  }$  Metric result=metricRepository.save(metric);$  return ResponseEntity.ok().headers(HeaderUtil.createEntityUpdateAlert("metric",metric.getMetricId().toString())).body(result);$}$
protected boolean checkAttributes(Element currentRulePart,Element token){$  NamedNodeMap attNodes=currentRulePart.getAttributes();$  if (token == null)   return false;$  for (int z=0; z < attNodes.getLength(); z++) {$    Node el=attNodes.item(z);$    String currentAtt=el.getNodeName();$    String currentVal=el.getNodeValue();$    if (!token.hasAttribute(currentAtt)) {$      if (currentVal.equals("!")) {$        return true;$      }$      return false;$    }$    if (currentVal.equals("!")) {$      return false;$    }$    if (currentVal.equals("")) {$      return true;$    }$    if (!currentVal.startsWith("INLIST") && !currentVal.startsWith("INFSTLIST") && !currentVal.startsWith("!INLIST")&& !currentVal.startsWith("!INFSTLIST")) {$      if (!currentVal.startsWith("!")) {$        if (!token.getAttribute(currentAtt).equals(currentVal)) {$          return false;$        }$      }$ else {$        currentVal=currentVal.substring(1,currentVal.length());$        if (token.getAttribute(currentAtt).equals(currentVal)) {$          return false;$        }$      }$    }$ else {$      return checkList(currentVal,token.getAttribute(currentAtt));$    }$  }$  return true;$}$
public SimpleFileFilter(String ext,String desc){$  addExtension(ext);$  this.desc=desc;$}$
public void schedule(String serviceName,Map<String,? extends Object> context,long startTime,int frequency,int interval,long endTime) throws JobManagerException {$  schedule(serviceName,context,startTime,frequency,interval,-1,endTime);$}$
public final static byte[] decode(String str){$  int sLen=str != null ? str.length() : 0;$  if (sLen == 0)   return new byte[0];$  int sepCnt=0;$  for (int i=0; i < sLen; i++)   if (IA[str.charAt(i)] < 0)   sepCnt++;$  if ((sLen - sepCnt) % 4 != 0)   return null;$  int pad=0;$  for (int i=sLen; i > 1 && IA[str.charAt(--i)] <= 0; )   if (str.charAt(i) == '=')   pad++;$  int len=((sLen - sepCnt) * 6 >> 3) - pad;$  byte[] dArr=new byte[len];$  for (int s=0, d=0; d < len; ) {$    int i=0;$    for (int j=0; j < 4; j++) {$      int c=IA[str.charAt(s++)];$      if (c >= 0)       i|=c << (18 - j * 6);$ else       j--;$    }$    dArr[d++]=(byte)(i >> 16);$    if (d < len) {$      dArr[d++]=(byte)(i >> 8);$      if (d < len)       dArr[d++]=(byte)i;$    }$  }$  return dArr;$}$
public SecureCheckTokenQuery(VkApiClient client,ServiceActor actor){$  super(client,"secure.checkToken",TokenChecked.class);$  accessToken(actor.getAccessToken());$  clientSecret(actor.getClientSecret());$}$
public boolean isSelected(){$  ClusterViewer viewer=getViewer();$  return viewer.isShowLabels();$}$
public void push(E e){$  checkNotNull(e);$  Node<E> node=new Node<E>(e);$  for (; ; ) {$    node.next=top.get();$    if ((top.get() == node.next) && top.compareAndSet(node.next,node)) {$      return;$    }$    if (tryTransfer(e)) {$      return;$    }$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_SummonServant_A_TO_ME(String skillcaster,String value0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200731,skillcaster,value0,skillname);$}$
public String print(String format,Object... args){$  return String.format(format,args);$}$
public void addServiceItems(ServiceMatches matches){$  if (matches == null || matches.items == null) {$    return;$  }$  for (  ServiceItem item : matches.items) {$    serviceItems.put(item.serviceID,item);$  }$}$
public boolean taxApplies(){$  boolean taxApplies=false;$  for (  ShoppingCartItem item : this) {$    if (item.taxApplies()) {$      taxApplies=true;$      break;$    }$  }$  return taxApplies;$}$
public Channel intercept(Channel channel){$  return ClientInterceptors.intercept(channel,this);$}$
public void addAndRemoveEventListenerTypedNullType() throws Exception {$  TestActivitiEventListener newListener=new TestActivitiEventListener();$  dispatcher.addEventListener(newListener,(ActivitiEventType)null);$  ActivitiEntityEventImpl event1=new ActivitiEntityEventImpl(processEngineConfiguration.getTaskEntityManager().create(),ActivitiEventType.ENTITY_CREATED);$  ActivitiEntityEventImpl event2=new ActivitiEntityEventImpl(processEngineConfiguration.getTaskEntityManager().create(),ActivitiEventType.ENTITY_DELETED);$  dispatcher.dispatchEvent(event1);$  dispatcher.dispatchEvent(event2);$  assertTrue(newListener.getEventsReceived().isEmpty());$}$
@deprecated protected RbnfLenientScanner createScanner(ULocale locale,String extras){$  RuleBasedCollator collator=null;$  try {$    collator=(RuleBasedCollator)Collator.getInstance(locale.toLocale());$    if (extras != null) {$      String rules=collator.getRules() + extras;$      collator=new RuleBasedCollator(rules);$    }$    collator.setDecomposition(17);$  }$ catch (  Exception e) {$    e.printStackTrace();$    System.out.println("++++");$    collator=null;$  }$  return new RbnfLenientScannerImpl(collator,null);$}$
public final int yystate(){$  return zzLexicalState;$}$
public int length(){$  return Histogram.length() + Graph.length();$}$
public static float scaleToFitTargetSize(int[] dimensions,int targetWidth,int targetHeight){$  if (dimensions.length < 2 || dimensions[0] <= 0 || dimensions[1] <= 0) {$    throw new IllegalArgumentException("Expected dimensions to have length >= 2 && dimensions[0] > 0 && " + "dimensions[1] > 0");$  }$  float scale=Math.max((float)targetWidth / dimensions[0],(float)targetHeight / dimensions[1]);$  dimensions[0]*=scale;$  dimensions[1]*=scale;$  return scale;$}$
public void init(ForceSimulator fsim){$  clear();$  float x1=Float.MAX_VALUE, y1=Float.MAX_VALUE;$  float x2=Float.MIN_VALUE, y2=Float.MIN_VALUE;$  Iterator itemIter=fsim.getItems();$  while (itemIter.hasNext()) {$    ForceItem item=(ForceItem)itemIter.next();$    float x=item.location[0];$    float y=item.location[1];$    if (x < x1)     x1=x;$    if (y < y1)     y1=y;$    if (x > x2)     x2=x;$    if (y > y2)     y2=y;$  }$  float dx=x2 - x1, dy=y2 - y1;$  if (dx > dy) {$    y2=y1 + dx;$  }$ else {$    x2=x1 + dy;$  }$  setBounds(x1,y1,x2,y2);$  itemIter=fsim.getItems();$  while (itemIter.hasNext()) {$    ForceItem item=(ForceItem)itemIter.next();$    insert(item);$  }$  calcMass(root);$}$
public ImageFactory(int maxImageWidth,int maxImageHeight){$  setMaxImageDimensions(maxImageWidth,maxImageHeight);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_SEAL_START_CANCEL(String value0){$  return new SM_SYSTEM_MESSAGE(1400798,value0);$}$
public MersenneTwister(int[] seed){$  mt=new int[N];$  setSeed(seed);$}$
public void show(PeekViewActivity activity,MotionEvent motionEvent){$  PeekView peek;$  if (layout == null) {$    peek=new PeekView(activity,options,layoutRes,callbacks);$  }$ else {$    peek=new PeekView(activity,options,layout,callbacks);$  }$  peek.setOffsetByMotionEvent(motionEvent);$  activity.showPeek(peek);$}$
@SuppressWarnings("WeakerAccess") public boolean isFooter(int position){$  return footer != null && position == getFooterPosition();$}$
protected String filterDataString(String sStr,NamedDocumentNGramGraph cCat){$  return sStr;$}$
public static final void reportDOMError(DOMErrorHandler errorHandler,DOMErrorImpl error,DOMLocatorImpl locator,String message,short severity,String type){$  if (errorHandler != null) {$    error.reset();$    error.fMessage=message;$    error.fSeverity=severity;$    error.fLocator=locator;$    error.fType=type;$    error.fRelatedData=locator.fRelatedNode;$    if (!errorHandler.handleError(error))     throw abort;$  }$  if (severity == DOMError.SEVERITY_FATAL_ERROR)   throw abort;$}$
@Override protected void normalizeWhitespace(XMLString value){$  int end=value.offset + value.length;$  for (int i=value.offset; i < end; ++i) {$    int c=value.ch[i];$    if (XMLChar.isSpace(c)) {$      value.ch[i]=' ';$    }$  }$}$
public TypeVariableBV typeVariable(Type type){$  return typeVariable(hierarchy.typeNode(type));$}$
@Override public Filter createFilter(List<Expression> parameterList){$  TOverlapsImpl filter=null;$  if ((parameterList == null) || (parameterList.size() != 2)) {$    filter=new TOverlapsExtended();$  }$ else {$    filter=new TOverlapsExtended(parameterList.get(0),parameterList.get(1));$  }$  return filter;$}$
public PageLabel(String label,int s,int n,int seq,boolean iscur){$  this.label=label;$  this.s=s;$  this.n=n;$  this.curr=iscur;$  this.seq=seq;$}$
private boolean isArcStart(final BSPTree<Sphere1D> node){$  if ((Boolean)leafBefore(node).getAttribute()) {$    return false;$  }$  if (!(Boolean)leafAfter(node).getAttribute()) {$    return false;$  }$  return true;$}$
public static Object find(String[] urls) throws FinderException {$  return spaceFinder.findService(urls);$}$
public void onStart(){$  if (mInitializationComplete) {$    startNowAndProcessPendingItems();$  }$ else {$    mOnStartPending=true;$  }$}$
@Override @Timed public Assignment assignUser(Assignment assignment,Experiment experiment,Date date){$  Assignment new_assignment=null;$  if (assignUserToOld) {$    new_assignment=assignUserToOld(assignment,date);$  }$  if (assignUserToNew) {$    new_assignment=assignUserToLookUp(assignment,date);$  }$  boolean countUp=true;$  assignmentsCountExecutor.execute(new AssignmentCountEnvelope(assignmentsRepository,experimentRepository,dbRepository,experiment,assignment,countUp,eventLog,date,assignUserToExport,assignBucketCount));$  indexUserToExperiment(assignment);$  indexUserToBucket(assignment);$  indexExperimentsToUser(assignment);$  return new_assignment;$}$
public void init$Children(){$  children=new ASTNode[1];$}$
public static void skipMethods(@Nonnull DexReader reader,int count){$  for (int i=0; i < count; i++) {$    reader.skipUleb128();$    reader.skipUleb128();$    reader.skipUleb128();$  }$}$
@Override public void onPaint(ViewTransform transform,Graphics2D g){$  int x=transform.getSwingX(mAnchor.getDrawX());$  int y=transform.getSwingY(mAnchor.getDrawY());$  double progress=getProgress();$  int alpha=255 - getPulsatingAlpha(progress);$  int anchorSize=(int)SceneDraw.getAnchorSize(transform.getScale());$  int radius=anchorSize + 4;$  int strokeWidth=4;$  boolean isNewConnection=mAnchor.getAnchor().getTarget() != null && mOriginalTarget != mAnchor.getAnchor().getTarget();$  Color frame=new Color(mFrame.getRed(),mFrame.getGreen(),mFrame.getBlue(),alpha);$  Color highlight=new Color(mColor.getRed(),mColor.getGreen(),mColor.getBlue(),alpha);$  ConstraintWidget widget=mAnchor.getOwner();$  int l=transform.getSwingX(widget.getDrawX());$  int t=transform.getSwingY(widget.getDrawY());$  int w=transform.getSwingDimension(widget.getDrawWidth());$  if (mIsBaseline) {$    int extra=radius - 3;$    g.setColor(highlight);$    g.setStroke(new BasicStroke(strokeWidth - 1));$    int handleWidth=mAnchor.getBaselineHandleWidth(transform);$    int padding=(w - handleWidth) / 2;$    g.drawRoundRect(l + padding,t + transform.getSwingDimension(widget.getBaselineDistance()) - extra / 2,handleWidth + 1,extra,radius,radius);$  }$ else {$    if (isNewConnection) {$      radius=anchorSize + 3;$      strokeWidth=3;$    }$    Ellipse2D.Float circle=new Ellipse2D.Float(x - radius,y - radius,radius * 2,radius * 2);$    g.setColor(frame);$    g.setStroke(new BasicStroke(strokeWidth));$    g.draw(circle);$    if (isNewConnection) {$      g.setColor(mColorSet.getBackground());$      g.fill(circle);$      g.setColor(mColorSet.getAnchorConnectionCircle());$      radius-=4;$      Ellipse2D.Float innerCircle=new Ellipse2D.Float(x - radius,y - radius,radius * 2,radius * 2);$      g.fill(innerCircle);$      g.draw(innerCircle);$    }$ else {$      circle=new Ellipse2D.Float(x - radius,y - radius,radius * 2,radius * 2);$      g.setColor(highlight);$    }$    g.setStroke(new BasicStroke(strokeWidth - 1));$    g.draw(circle);$  }$  if (!mColorSet.useTooltips()) {$    return;$  }$  boolean showTooltip=mShowTooltip;$  boolean newConnection=mAnchor.getAnchor().getTarget() != mTargetAnchor;$  showTooltip|=newConnection;$  if (showTooltip && (System.currentTimeMillis() - mStartTime > WidgetDraw.TOOLTIP_DELAY)) {$    WidgetDraw.drawTooltip(g,mColorSet,getText(),x,y,true);$  }$}$
private static int nonEmptyLists(List<?>... lists){$  int nonEmpty=0;$  for (  List<?> list : lists) {$    if (list != null && list.size() > 0) {$      ++nonEmpty;$    }$  }$  return nonEmpty;$}$
public long generateNewPingId(){$  PreferenceStore prefs=getPreferenceStore();$  Random rnd=new Random();$  long id=rnd.nextLong();$synchronized (DdmsPreferenceStore.class) {$    prefs.setValue(PING_ID,id);$    try {$      prefs.save();$    }$ catch (    IOException e) {$    }$  }$  return id;$}$
public static DexlibAbstractInstruction fromOpcode(Opcode op,Instruction instruction,int codeAddress){$switch (op) {$case SPARSE_SWITCH_PAYLOAD:$case PACKED_SWITCH_PAYLOAD:$case ARRAY_PAYLOAD:$case NOP:$    return new NopInstruction(instruction,codeAddress);$case MOVE:$case MOVE_FROM16:$case MOVE_16:$case MOVE_OBJECT:$case MOVE_OBJECT_FROM16:$case MOVE_OBJECT_16:$case MOVE_WIDE:$case MOVE_WIDE_FROM16:$case MOVE_WIDE_16:$  return new MoveInstruction(instruction,codeAddress);$case MOVE_RESULT:$case MOVE_RESULT_OBJECT:$case MOVE_RESULT_WIDE:$return new MoveResultInstruction(instruction,codeAddress);$case MOVE_EXCEPTION:$return new MoveExceptionInstruction(instruction,codeAddress);$case RETURN_VOID:$return new ReturnVoidInstruction(instruction,codeAddress);$case RETURN:$case RETURN_OBJECT:$case RETURN_WIDE:$return new ReturnInstruction(instruction,codeAddress);$case CONST:$case CONST_4:$case CONST_16:$case CONST_HIGH16:$case CONST_WIDE:$case CONST_WIDE_16:$case CONST_WIDE_32:$case CONST_WIDE_HIGH16:$return new ConstInstruction(instruction,codeAddress);$case CONST_STRING:$case CONST_STRING_JUMBO:$return new ConstStringInstruction(instruction,codeAddress);$case CONST_CLASS:$return new ConstClassInstruction(instruction,codeAddress);$case MONITOR_ENTER:$return new MonitorEnterInstruction(instruction,codeAddress);$case MONITOR_EXIT:$return new MonitorExitInstruction(instruction,codeAddress);$case CHECK_CAST:$return new CheckCastInstruction(instruction,codeAddress);$case INSTANCE_OF:$return new InstanceOfInstruction(instruction,codeAddress);$case ARRAY_LENGTH:$return new ArrayLengthInstruction(instruction,codeAddress);$case NEW_INSTANCE:$return new NewInstanceInstruction(instruction,codeAddress);$case NEW_ARRAY:$return new NewArrayInstruction(instruction,codeAddress);$case FILLED_NEW_ARRAY:$return new FilledNewArrayInstruction(instruction,codeAddress);$case FILLED_NEW_ARRAY_RANGE:$return new FilledNewArrayRangeInstruction(instruction,codeAddress);$case FILL_ARRAY_DATA:$return new FillArrayDataInstruction(instruction,codeAddress);$case THROW:$return new ThrowInstruction(instruction,codeAddress);$case GOTO:$case GOTO_16:$case GOTO_32:$return new GotoInstruction(instruction,codeAddress);$case PACKED_SWITCH:$return new PackedSwitchInstruction(instruction,codeAddress);$case SPARSE_SWITCH:$return new SparseSwitchInstruction(instruction,codeAddress);$case CMPL_FLOAT:$case CMPG_FLOAT:$case CMPL_DOUBLE:$case CMPG_DOUBLE:$case CMP_LONG:$return new CmpInstruction(instruction,codeAddress);$case IF_EQ:$case IF_NE:$case IF_LT:$case IF_GE:$case IF_GT:$case IF_LE:$return new IfTestInstruction(instruction,codeAddress);$case IF_EQZ:$case IF_NEZ:$case IF_LTZ:$case IF_GEZ:$case IF_GTZ:$case IF_LEZ:$return new IfTestzInstruction(instruction,codeAddress);$case AGET:$case AGET_OBJECT:$case AGET_BOOLEAN:$case AGET_BYTE:$case AGET_CHAR:$case AGET_SHORT:$case AGET_WIDE:$return new AgetInstruction(instruction,codeAddress);$case APUT:$case APUT_OBJECT:$case APUT_BOOLEAN:$case APUT_BYTE:$case APUT_CHAR:$case APUT_SHORT:$case APUT_WIDE:$return new AputInstruction(instruction,codeAddress);$case IGET:$case IGET_OBJECT:$case IGET_BOOLEAN:$case IGET_BYTE:$case IGET_CHAR:$case IGET_SHORT:$case IGET_WIDE:$return new IgetInstruction(instruction,codeAddress);$case IPUT:$case IPUT_OBJECT:$case IPUT_BOOLEAN:$case IPUT_BYTE:$case IPUT_CHAR:$case IPUT_SHORT:$case IPUT_WIDE:$return new IputInstruction(instruction,codeAddress);$case SGET:$case SGET_OBJECT:$case SGET_BOOLEAN:$case SGET_BYTE:$case SGET_CHAR:$case SGET_SHORT:$case SGET_WIDE:$return new SgetInstruction(instruction,codeAddress);$case SPUT:$case SPUT_OBJECT:$case SPUT_BOOLEAN:$case SPUT_BYTE:$case SPUT_CHAR:$case SPUT_SHORT:$case SPUT_WIDE:$return new SputInstruction(instruction,codeAddress);$case INVOKE_VIRTUAL:$case INVOKE_VIRTUAL_RANGE:$return new InvokeVirtualInstruction(instruction,codeAddress);$case INVOKE_INTERFACE:$case INVOKE_INTERFACE_RANGE:$return new InvokeInterfaceInstruction(instruction,codeAddress);$case INVOKE_DIRECT:$case INVOKE_DIRECT_RANGE:$case INVOKE_SUPER:$case INVOKE_SUPER_RANGE:$return new InvokeSpecialInstruction(instruction,codeAddress);$case INVOKE_STATIC:$case INVOKE_STATIC_RANGE:$return new InvokeStaticInstruction(instruction,codeAddress);$case EXECUTE_INLINE:$case EXECUTE_INLINE_RANGE:$return new ExecuteInlineInstruction(instruction,codeAddress);$case NEG_INT:$case NOT_INT:$case NEG_FLOAT:$case NEG_LONG:$case NOT_LONG:$case NEG_DOUBLE:$return new UnopInstruction(instruction,codeAddress);$case INT_TO_LONG:$case INT_TO_DOUBLE:$case FLOAT_TO_LONG:$case FLOAT_TO_DOUBLE:$case LONG_TO_INT:$case LONG_TO_FLOAT:$case DOUBLE_TO_INT:$case DOUBLE_TO_FLOAT:$case LONG_TO_DOUBLE:$case DOUBLE_TO_LONG:$case INT_TO_FLOAT:$case FLOAT_TO_INT:$case INT_TO_BYTE:$case INT_TO_CHAR:$case INT_TO_SHORT:$return new CastInstruction(instruction,codeAddress);$case ADD_INT:$case SUB_INT:$case MUL_INT:$case DIV_INT:$case REM_INT:$case AND_INT:$case OR_INT:$case XOR_INT:$case SHL_INT:$case SHR_INT:$case USHR_INT:$case ADD_FLOAT:$case SUB_FLOAT:$case MUL_FLOAT:$case DIV_FLOAT:$case REM_FLOAT:$case ADD_LONG:$case SUB_LONG:$case MUL_LONG:$case DIV_LONG:$case REM_LONG:$case AND_LONG:$case OR_LONG:$case XOR_LONG:$case SHL_LONG:$case SHR_LONG:$case USHR_LONG:$case ADD_DOUBLE:$case SUB_DOUBLE:$case MUL_DOUBLE:$case DIV_DOUBLE:$case REM_DOUBLE:$return new BinopInstruction(instruction,codeAddress);$case ADD_INT_2ADDR:$case SUB_INT_2ADDR:$case MUL_INT_2ADDR:$case DIV_INT_2ADDR:$case REM_INT_2ADDR:$case AND_INT_2ADDR:$case OR_INT_2ADDR:$case XOR_INT_2ADDR:$case SHL_INT_2ADDR:$case SHR_INT_2ADDR:$case USHR_INT_2ADDR:$case ADD_FLOAT_2ADDR:$case SUB_FLOAT_2ADDR:$case MUL_FLOAT_2ADDR:$case DIV_FLOAT_2ADDR:$case REM_FLOAT_2ADDR:$case ADD_LONG_2ADDR:$case SUB_LONG_2ADDR:$case MUL_LONG_2ADDR:$case DIV_LONG_2ADDR:$case REM_LONG_2ADDR:$case AND_LONG_2ADDR:$case OR_LONG_2ADDR:$case XOR_LONG_2ADDR:$case SHL_LONG_2ADDR:$case SHR_LONG_2ADDR:$case USHR_LONG_2ADDR:$case ADD_DOUBLE_2ADDR:$case SUB_DOUBLE_2ADDR:$case MUL_DOUBLE_2ADDR:$case DIV_DOUBLE_2ADDR:$case REM_DOUBLE_2ADDR:$return new Binop2addrInstruction(instruction,codeAddress);$case ADD_INT_LIT16:$case RSUB_INT:$case MUL_INT_LIT16:$case DIV_INT_LIT16:$case REM_INT_LIT16:$case AND_INT_LIT16:$case OR_INT_LIT16:$case XOR_INT_LIT16:$case ADD_INT_LIT8:$case RSUB_INT_LIT8:$case MUL_INT_LIT8:$case DIV_INT_LIT8:$case REM_INT_LIT8:$case AND_INT_LIT8:$case OR_INT_LIT8:$case XOR_INT_LIT8:$case SHL_INT_LIT8:$case SHR_INT_LIT8:$case USHR_INT_LIT8:$return new BinopLitInstruction(instruction,codeAddress);$default :$throw new IllegalArgumentException("Opcode: " + op + " @ 0x"+ Integer.toHexString(codeAddress));$}$}$
final public void enable_tracing(){$}$
public void smoothOpenRightMenu(int position,int duration){$  smoothOpenMenu(position,RIGHT_DIRECTION,duration);$}$
public void findHighestTiles(){$  if (!highestTilesFound) {$    for (int x=0; x < CHUNK_SIZE; x++) {$      findHighestTile(x);$    }$    highestTilesFound=true;$  }$}$
@Override public List<Period> generatePeriods(DateTimeUnit dateTimeUnit){$  Calendar calendar=getCalendar();$  List<Period> periods=Lists.newArrayList();$  dateTimeUnit=calendar.minusDays(dateTimeUnit,calendar.weekday(dateTimeUnit) - 1);$  for (int i=0; i < calendar.weeksInYear(dateTimeUnit.getYear()); i++) {$    DateInterval interval=calendar.toInterval(dateTimeUnit,DateIntervalType.ISO8601_WEEK);$    periods.add(new Period(this,interval.getFrom().toJdkDate(),interval.getTo().toJdkDate()));$    dateTimeUnit=calendar.plusWeeks(dateTimeUnit,1);$  }$  return periods;$}$
public void showMetrics(){$  timer.show("NullAudioPlayer");$}$
@Override public void close(){$  try {$    reader.close();$  }$ catch (  IOException e) {$    Basic.caught(e);$  }$}$
@VisibleForTesting public boolean doesContainAWord(String selection){$  return mContainsWordPattern.matcher(selection).find();$}$
public UpgradePatchRetry(Context context){$  this.context=context;$  retryInfoFile=new File(SharePatchFileUtil.getPatchDirectory(context),RETRY_INFO_NAME);$  tempPatchFile=new File(SharePatchFileUtil.getPatchDirectory(context),TEMP_PATCH_NAME);$}$
protected AdsGetDemographicsQuery dateFrom(String value){$  return unsafeParam("date_from",value);$}$
public double expectedWeightedValue(){$  return this.weightedVar;$}$
public static int decodeUnicodeNotation(String unicodeString){$  String string=unicodeString.substring(UNICODE_PREFIX.length());$  int result=(int)Long.parseLong(string,16);$  return (result);$}$
public void changeAccount(String account) throws IllegalStateException, IOException, FTPIllegalReplyException, FTPException {$synchronized (lock) {$    if (!connected) {$      throw new IllegalStateException("Client not connected");$    }$    if (!authenticated) {$      throw new IllegalStateException("Client not authenticated");$    }$    communication.sendFTPCommand("ACCT " + account);$    FTPReply r=communication.readFTPReply();$    touchAutoNoopTimer();$    if (!r.isSuccessCode()) {$      throw new FTPException(r);$    }$  }$}$
public static List<String> readLines(File file) throws IOException {$  return readLines(file,Charset.defaultCharset());$}$
public UsersSearchQuery country(Integer value){$  return unsafeParam("country",value);$}$
public void addRecognizedFeatures(String[] featureIds){$  int featureIdsCount=featureIds != null ? featureIds.length : 0;$  for (int i=0; i < featureIdsCount; i++) {$    String featureId=featureIds[i];$    if (!fRecognizedFeatures.contains(featureId)) {$      fRecognizedFeatures.add(featureId);$    }$  }$}$
void markActivityUsed(int activityIndex,String webappId){$  int elementIndex=findActivityElement(activityIndex);$  if (elementIndex == -1) {$    Log.e(TAG,"Failed to find WebappActivity entry: " + activityIndex + ", "+ webappId);$    return;$  }$  ActivityEntry updatedEntry=new ActivityEntry(activityIndex,webappId);$  mActivityList.remove(elementIndex);$  mActivityList.add(updatedEntry);$  storeActivityList();$}$
public void elect() throws InterruptedException, ActiveElectionException {$  boolean isException=false;$  if (getState() != State.PENDING)   return;$  try {$    while (!isTerminate()) {$      try {$        if (findActive() != null) {$          return;$        }$ else         if (pollStateUntilAvailable(State.PREPARE) != null) {$          return;$        }$        if (findActive() != null) {$          return;$        }$ else         if (!isAdvanceToStateAllowed(State.PENDING,State.PREPARE)) {$          continue;$        }$ else         if (!doChangeState(State.PENDING,State.PREPARE)) {$          return;$        }$        if (findActive() != null) {$          return;$        }$ else         if (!isAdvanceToStateAllowed(State.PREPARE,State.ACTIVE)) {$          continue;$        }$ else         if (!doChangeState(State.PREPARE,State.ACTIVE)) {$          return;$        }$        notifyListenerOnActive(new ServiceItem(_electTemplate.getServiceID(),_electTemplate.getService(),null));$        return;$      }$ catch (      DirectPersistencyRecoveryException ex) {$        try {$          if (_logger.isLoggable(Level.WARNING)) {$            if (ex instanceof DirectPersistencyAttributeStoreException) {$              _logger.log(Level.WARNING,"Failed to set or get last primary state using AttributeStore, will try to reelect...",ex);$            }$ else {$              _logger.log(Level.WARNING,"Failed to elect as primary",ex);$            }$          }$          isException=true;$          changeState(getState(),State.PENDING,true);$        }$ catch (        RemoteException e) {$          isException=true;$          String exMsg="Failed to communicate with [" + _namingService.getName() + "] naming service while changing state from "+ getState()+ " to PENDING. ";$          throw new ActiveElectionException(exMsg,ex);$        }$      }$catch (      RemoteException ex) {$        isException=true;$        String exMsg="Failed to communicate with [" + _namingService.getName() + "] naming service. ";$        throw new ActiveElectionException(exMsg,ex);$      }$    }$  }$  finally {$    if (!isException) {$      try {$        if (getState() == State.PREPARE) {$          changeState(State.PREPARE,State.PENDING,true);$        }$      }$ catch (      RemoteException ex) {$        throw new ActiveElectionException("Force change state failed.",ex);$      }$      try {$        startSplitBrainController();$      }$ catch (      Exception ex) {$        throw new ActiveElectionException("Failed to start SplitBrainController.",ex);$      }$    }$  }$}$
public static String valueToString(Object value) throws JSONException {$  if (value == null || value.equals(null)) {$    return "null";$  }$  if (value instanceof JSONString) {$    Object object;$    try {$      object=((JSONString)value).toJSONString();$    }$ catch (    Exception e) {$      throw new JSONException(e);$    }$    if (object instanceof String) {$      return (String)object;$    }$    throw new JSONException("Bad value from toJSONString: " + object);$  }$  if (value instanceof Number) {$    return numberToString((Number)value);$  }$  if (value instanceof Boolean || value instanceof JSONObject || value instanceof JSONArray) {$    return value.toString();$  }$  if (value instanceof Map) {$    return new JSONObject((Map<String,Object>)value).toString();$  }$  if (value instanceof Collection) {$    return new JSONArray((Collection<Object>)value).toString();$  }$  if (value.getClass().isArray()) {$    return new JSONArray(value).toString();$  }$  return quote(value.toString());$}$
public static Map<String,Object> checkPermission(DispatchContext ctx,Map<String,?> context){$  boolean hasPermission=false;$  String mainAction=(String)context.get("mainAction");$  if ("VIEW".equals(mainAction)) {$    if (DEFAULT_UID.equals(context.get(LOGINID_PARAMETER_NAME))) {$      hasPermission=true;$    }$ else {$      hasPermission=isValidGetId(ctx,context);$    }$  }$ else   if ("CREATE~UPDATE~DELETE".contains(mainAction)) {$    hasPermission=isValidSetId(ctx,context);$  }$ else {$    hasPermission=false;$  }$  Map<String,Object> result=ServiceUtil.returnSuccess();$  result.put("hasPermission",hasPermission);$  return result;$}$
private static Bitmap decodeImage(ContentResolver resolver,Uri uri,BitmapFactory.Options options) throws FileNotFoundException {$  do {$    InputStream stream=null;$    try {$      stream=resolver.openInputStream(uri);$      return BitmapFactory.decodeStream(stream,EMPTY_RECT,options);$    }$ catch (    OutOfMemoryError e) {$      options.inSampleSize*=2;$    }$ finally {$      closeSafe(stream);$    }$  }$ while (options.inSampleSize <= 512);$  throw new RuntimeException("Failed to decode image: " + uri);$}$
public static void syncCollapsedFromSummary2Viewer(final DataTable table,final ClassificationViewer classificationViewer){$  final String classificationName=classificationViewer.getClassName();$  if (table.getCollapsed(classificationName) != null && table.getCollapsed(classificationName).size() > 0) {$    classificationViewer.getCollapsedIds().clear();$    classificationViewer.getCollapsedIds().addAll(table.getCollapsed(classificationName));$  }$}$
public boolean isEntryMethod(SootMethod method){$  return !tgtToEdge.containsKey(method);$}$
public void startTimer(double durationInMilliseconds){$  startTime=System.nanoTime();$  timeout=startTime + (long)(durationInMilliseconds * 1000000);$}$
public static boolean isPowerOfTwo(long n){$  return (n > 0) && ((n & (n - 1)) == 0);$}$
public boolean isNull(int index){$  return JSONObject.NULL.equals(this.opt(index));$}$
@TargetApi(Build.VERSION_CODES.LOLLIPOP) public static int launchDocumentInstance(Activity activity,boolean incognito,AsyncTabCreationParams asyncParams){$  assert asyncParams != null;$  final int launchMode=asyncParams.getDocumentLaunchMode();$  final int intentSource=asyncParams.getDocumentStartedBy();$  final LoadUrlParams loadUrlParams=asyncParams.getLoadUrlParams();$  if (loadUrlParams.getUrl() == null && asyncParams.getWebContents() != null) {$    loadUrlParams.setUrl(asyncParams.getWebContents().getUrl());$  }$  if (launchMode == LAUNCH_MODE_RETARGET) {$    assert asyncParams.getWebContents() == null;$    assert loadUrlParams.getPostData() == null;$    int relaunchedId=relaunchTask(incognito,loadUrlParams.getUrl());$    if (relaunchedId != Tab.INVALID_TAB_ID)     return relaunchedId;$  }$  int parentId=activity != null && (launchMode == LAUNCH_MODE_AFFILIATED || intentSource == DocumentMetricIds.STARTED_BY_WINDOW_OPEN || intentSource == DocumentMetricIds.STARTED_BY_CONTEXTUAL_SEARCH) ? ActivityDelegate.getTabIdFromIntent(activity.getIntent()) : Tab.INVALID_TAB_ID;$  Context context=ApplicationStatus.getApplicationContext();$  Intent intent=createLaunchIntent(context,null,loadUrlParams.getUrl(),incognito,parentId);$  setRecentsFlagsOnIntent(intent,Intent.FLAG_ACTIVITY_NEW_DOCUMENT,incognito);$  intent.putExtra(IntentHandler.EXTRA_OPEN_NEW_INCOGNITO_TAB,incognito);$  intent.putExtra(IntentHandler.EXTRA_PAGE_TRANSITION_TYPE,loadUrlParams.getTransitionType());$  intent.putExtra(IntentHandler.EXTRA_STARTED_BY,intentSource);$  if (activity != null && activity.getIntent() != null) {$    intent.putExtra(IntentHandler.EXTRA_PARENT_INTENT,activity.getIntent());$  }$  intent.putExtra(EXTRA_LAUNCH_MODE,launchMode);$  IntentHandler.addTrustedIntentExtras(intent,context);$  boolean succeeded=false;$  boolean affiliated=launchMode == LAUNCH_MODE_AFFILIATED;$  if (activity == null) {$    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);$    succeeded=fireDocumentIntent(context,intent,incognito,affiliated,asyncParams);$  }$ else {$    succeeded=fireDocumentIntent(activity,intent,incognito,affiliated,asyncParams);$  }$  return succeeded ? ActivityDelegate.getTabIdFromIntent(intent) : Tab.INVALID_TAB_ID;$}$
public boolean isCritical(){$  return false;$}$
public static SM_SYSTEM_MESSAGE STR_CHANGE_ITEM_SKIN_SUCCEED(DescriptionId descriptionId){$  return new SM_SYSTEM_MESSAGE(1300483,descriptionId);$}$
private static void expandBelow13DigitNumber(String numberString,WordRelation wordRelation,Item tokenItem){$  expandLargeNumber(numberString,"billion",9,wordRelation,tokenItem);$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase("rename sample=");$  final String sampleName=np.getWordRespectCase();$  np.matchIgnoreCase("newName=");$  String newName=np.getWordRespectCase();$  np.matchIgnoreCase(";");$  final SamplesViewer viewer=(SamplesViewer)getDir().getViewerByClass(SamplesViewer.class);$  viewer.getSamplesTable().renameSample(sampleName,newName);$}$
@Override public boolean markSupported(){$  return false;$}$
@Override public void accept(IQueryExecutor executor,ISpaceProxy space,Transaction txn,int readModifier,int max) throws SQLException {$  executor.execute(this,space,txn,readModifier,max);$}$
public CreateTableData(String tblName,Schema schema){$  this.tblName=tblName;$  this.schema=schema;$}$
public static double nextUp(double d){$  if (d == Double.POSITIVE_INFINITY)   return d;$ else {$    d+=0.0d;$    return Double.longBitsToDouble(Double.doubleToRawLongBits(d) + ((d >= 0.0d) ? +1L : -1L));$  }$}$
public boolean isRepeated(){$  return card == Cardinality.REPEATED;$}$
public Dfp newDfp(final byte x){$  return new Dfp(this,x);$}$
@Override public void addFragment(Activity a,int code){$  Fragment f=buildFragmentByCode(code);$  model.addFragmentToList(f);$  ((MainActivity)a).getSupportFragmentManager().beginTransaction().add(R.id.activity_main_fragment,f).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).addToBackStack(null).commit();$}$
public static void overScrollBy(final PullToRefreshBase<?> view,final int deltaX,final int scrollX,final int deltaY,final int scrollY,final boolean isTouchEvent){$  overScrollBy(view,deltaX,scrollX,deltaY,scrollY,0,isTouchEvent);$}$
public static byte[] decode(char[] in){$  return decode(in,0,in.length);$}$
public static StyledLayerDescriptor createNewRaster(){$  StyledLayerDescriptor sld=styleFactory.createStyledLayerDescriptor();$  NamedLayer namedLayer=styleFactory.createNamedLayer();$  sld.addStyledLayer(namedLayer);$  Style style=styleFactory.createStyle();$  namedLayer.addStyle(style);$  List<FeatureTypeStyle> ftsList=style.featureTypeStyles();$  FeatureTypeStyle fts=styleFactory.createFeatureTypeStyle();$  ftsList.add(fts);$  Rule rule=styleFactory.createRule();$  fts.rules().add(rule);$  RasterSymbolizer raster=createDefaultRasterSymbolizer();$  rule.symbolizers().add(raster);$  return sld;$}$
public static SM_SYSTEM_MESSAGE STR_FIND_POS_NPC_FOUND(String value0){$  return new SM_SYSTEM_MESSAGE(1300750,value0);$}$
static <T>void buildError(Subscriber<T> subscriber,Exception exception){$  subscriber.onError(exception);$}$
@RequestMapping(value="/{namespace}/{key}",method=RequestMethod.POST,produces="application/json",consumes="application/json") public void addUserKeyJsonValue(@PathVariable String namespace,@PathVariable String key,@RequestBody String body,@RequestParam(defaultValue="false") boolean encrypt,HttpServletResponse response) throws IOException, WebMessageException {$  if (userKeyJsonValueService.getUserKeyJsonValue(currentUserService.getCurrentUser(),namespace,key) != null) {$    throw new WebMessageException(WebMessageUtils.conflict("The key '" + key + "' already exists in the namespace '"+ namespace+ "'."));$  }$  if (!renderService.isValidJson(body)) {$    throw new WebMessageException(WebMessageUtils.badRequest("The data is not valid JSON."));$  }$  UserKeyJsonValue userKeyJsonValue=new UserKeyJsonValue();$  userKeyJsonValue.setKey(key);$  userKeyJsonValue.setUser(currentUserService.getCurrentUser());$  userKeyJsonValue.setNamespace(namespace);$  userKeyJsonValue.setValue(body);$  userKeyJsonValue.setEncrypted(encrypt);$  userKeyJsonValueService.addUserKeyJsonValue(userKeyJsonValue);$  response.setStatus(HttpServletResponse.SC_CREATED);$  messageService.sendJson(WebMessageUtils.created("Key '" + key + "' in namespace '"+ namespace+ "' created."),response);$}$
public void delete(RecordId nextDeletedSlot){$  Constant flag=EMPTY_CONST;$  setVal(currentPos(),flag);$  setNextDeletedSlotId(nextDeletedSlot);$}$
public ScriptIO(final Script script,final Executor executor){$  this.script=script;$  this.executor=executor;$  if (script != null) {$    scriptName=script.getName();$  }$}$
public void onFailure(String responseBody,Throwable error){$}$
public HttpPost createInstallRequest(String path){$  return new HttpPost(String.format(REQUEST_STRING_WITH_PATH,authorIp,path,Commands.INSTALL.getCommand()));$}$
public DatabaseGetCountriesByIdQuery countryIds(Integer... value){$  return unsafeParam("country_ids",value);$}$
protected NotesDeleteCommentQuery commentId(int value){$  return unsafeParam("comment_id",value);$}$
public QRDecomposition qr(){$  return new QRDecomposition(this);$}$
public BrowserInfoEntry(Capabilities capabilities){$  super();$  this.caps=capabilities;$}$
public void registerProvider(EnvironmentProvider provider){$  JmxConnectionSupportImpl.registerProviderImpl(provider);$}$
private void showModuleSelectionDialog(@NotNull List<ModuleSearchResult> searchResults,@NotNull DataNode<ProjectData> projectInfo,@NotNull List<DataNode<ModuleData>> selection,@NotNull File file){$  List<DataNode<ModuleData>> finalSelection=Lists.newArrayList(selection);$  List<DataNode<ModuleData>> modulesToDisplayInDialog=Lists.newArrayList();$  Map<String,ModuleSearchResult> resultsByModuleName=Maps.newHashMap();$  for (  ModuleSearchResult result : searchResults) {$    DataNode<ModuleData> module=result.moduleNode;$    modulesToDisplayInDialog.add(module);$    if (result.selected) {$      finalSelection.remove(module);$    }$    String moduleName=getNameOf(module);$    resultsByModuleName.put(moduleName,result);$  }$  invokeLaterIfNeeded(null);$}$
@Override public void fileDeleted(Path f){$  if (f != null) {$    Path path=f.getFileName();$    if (path != null) {$      String filename=path.toString();$      for (int childIndex=0; childIndex < this.getChildCount(); childIndex++) {$        FileTreeNode childNode=(FileTreeNode)this.getChildAt(childIndex);$        if (childNode.name.compareTo(filename) == 0) {$          this.remove(childIndex);$          break;$        }$      }$      FileSystemNodeManager.refreshNode(this);$    }$  }$}$
public static Date parseDate(String dateValue) throws DateParseException {$  return parseDate(dateValue,null,null);$}$
public KeyManager(GameSettings settings,ArrayList<InternalKey> additionalKeys){$  this.additionalKeys=additionalKeys;$  if (additionalKeys != null) {$    fixAdditionalKeyBindings(settings);$    FMLCommonHandler.instance().bus().register(this);$  }$}$
private boolean validFile(String filename){$  String fileExtension=ExternalFilenames.getFileExtension(filename);$  if (fileHandlerMap != null) {$    return (fileHandlerMap.keySet().contains(fileExtension));$  }$  return false;$}$
private void embedTree(Node root){$  removeAllInternalPoints();$  node2BoundingBox.clear();$  for (Node v=getTree().getFirstNode(); v != null; v=v.getNext()) {$    setLocation(v,null);$    getNV(v).setFixedSize(true);$  }$  taxonLevel=0;$  if (getDrawerType() == DiagramType.RectangularPhylogram || getDrawerType() == DiagramType.RoundedPhylogram) {$    embedPhylogramRec(root,null,0);$    if (getDrawerType() == DiagramType.RoundedPhylogram) {$      for (Edge e=getTree().getFirstEdge(); e != null; e=getTree().getNextEdge(e))       getEV(e).setShape(EdgeView.ROUNDED_EDGE);$    }$  }$ else {$    embedCladogramRec(root,null);$    if (getDrawerType() == DiagramType.RoundedCladogram) {$      for (Edge e=getTree().getFirstEdge(); e != null; e=getTree().getNextEdge(e))       getEV(e).setShape(EdgeView.ROUNDED_EDGE);$    }$  }$  trans.setCoordinateRect(getBBox());$  if (!isShowIntermediateLabels())   showLabels(getDegree2Nodes(),false);$}$
@Override public void onWebsocketPing(WebSocket conn,Framedata f){$  FramedataImpl1 resp=new FramedataImpl1(f);$  resp.setOptcode(Opcode.PONG);$  conn.sendFrame(resp);$}$
private void stopRequestingSensorEventData(){$  if (!isRequestingSensorEventData()) {$    return;$  }$  try {$    Log.v(TAG,"Stopping to request sensor event data");$    for (    Map.Entry<String,SensorDataRequest> sensorDataRequestEntry : sensorDataRequests.entrySet()) {$      sensorDataRequestEntry.getValue().setEndTimestamp(System.currentTimeMillis());$    }$    sendSensorEventDataRequests();$  }$ catch (  Exception ex) {$    ex.printStackTrace();$  }$}$
public int remove(int offset){$  int old=get(offset);$  remove(offset,1);$  return old;$}$
public static String generateStackInfo(boolean keepInnerClass,int stackOffset){$  StackTraceElement[] currentStack=getCurrentStack();$  StackTraceElement element=currentStack[stackOffset];$  String className=element.getClassName();$  String pkgPath[]=className.split("\\.");$  if (pkgPath.length > 0) {$    className=pkgPath[pkgPath.length - 1];$  }$  int innerclassSymbolIndex=className.indexOf("$");$  String innerClassName=null;$  if (innerclassSymbolIndex != -1) {$    innerClassName=className.substring(innerclassSymbolIndex + 1);$    className=className.substring(0,innerclassSymbolIndex);$  }$  String methodName=element.getMethodName();$  int lineNum=element.getLineNumber();$  if (keepInnerClass && (!TextUtils.isEmpty(innerClassName))) {$    methodName=String.format("$%s#%s()",innerClassName,methodName);$  }$ else {$    methodName=String.format("#%s()",methodName);$  }$  return String.format("[(%s.java:%s)%s]",className,lineNum,methodName);$}$
public Object childrenAccept(MithraQLVisitor visitor,Object data){$  visitor.visit(this,data);$  if (this.children != null) {$    for (int i=0; i < this.children.length; ++i) {$      this.children[i].jjtAccept(visitor,data);$      ((SimpleNode)this.children[i]).childrenAccept(visitor,data);$    }$  }$  return data;$}$
public static CipherTextIvMac encrypt(String plaintext,SecretKeys secretKeys,String encoding) throws UnsupportedEncodingException, GeneralSecurityException {$  return encrypt(plaintext.getBytes(encoding),secretKeys);$}$
@Override public boolean isDataPresent(){$  return true;$}$
public void showTextBubble(String text,View anchorView,int maxWidth,int maxHeight){$  mTooltipText.setText(text);$  mTooltipText.measure(MeasureSpec.makeMeasureSpec(maxWidth,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(maxHeight,MeasureSpec.AT_MOST));$  mAnchorView=anchorView;$  calculateNewPosition();$  showAtCalculatedPosition();$}$
@SuppressWarnings("unchecked") public boolean remove(Object obj){$  boolean res=false;$  if (contains(obj)) {$    Unit successor=getSuccOf((E)obj);$    if (successor == null)     successor=getPredOf((E)obj);$    res=innerChain.remove(obj);$    ((E)obj).redirectJumpsToThisTo(successor);$  }$  return res;$}$
private void put122(final int b,final int s1,final int s2){$  pool.put12(b,s1).putShort(s2);$}$
public static RecipeFragment newInstance(Recipe recipe,int sectionNumber){$  RecipeFragment fragment=new RecipeFragment();$  fragment.recipe=recipe;$  Bundle args=new Bundle();$  args.putInt(ARG_SECTION_NUMBER,sectionNumber);$  fragment.setArguments(args);$  return fragment;$}$
public void addBodyDecl(BodyDecl node){$  List<BodyDecl> list=(parent == null || state == null) ? getBodyDeclListNoTransform() : getBodyDeclList();$  list.addChild(node);$}$
@Override public void apply(NexusStreamParser np) throws Exception {$}$
public static void dropAllTables(SQLiteDatabase db,boolean ifExists){$  WeekForeCastDao.dropTable(db,ifExists);$  RealWeatherDao.dropTable(db,ifExists);$  HourForeCastDao.dropTable(db,ifExists);$  AqiDao.dropTable(db,ifExists);$  ZhishuDao.dropTable(db,ifExists);$  UseAreaDao.dropTable(db,ifExists);$  AlarmsDao.dropTable(db,ifExists);$}$
public AppTest(String testName){$  super(testName);$}$
public static String arrayToString(String[] strs){$  if (strs.length == 0) {$    return "";$  }$  StringBuilder sbuf=new StringBuilder();$  sbuf.append(strs[0]);$  for (int idx=1; idx < strs.length; idx++) {$    sbuf.append(",");$    sbuf.append(strs[idx]);$  }$  return sbuf.toString();$}$
public XPathMatcher(XPath xpath){$  fLocationPaths=xpath.getLocationPaths();$  fStepIndexes=new IntStack[fLocationPaths.length];$  for (int i=0; i < fStepIndexes.length; i++)   fStepIndexes[i]=new IntStack();$  fCurrentStep=new int[fLocationPaths.length];$  fNoMatchDepth=new int[fLocationPaths.length];$  fMatched=new int[fLocationPaths.length];$}$
public void deleteAllDimensionRows(){$  try {$    String dimRowIndexes=keyValueStore.get(DimensionStoreKeyUtils.getAllValuesKey());$    if (dimRowIndexes == null) {$      LOG.debug("Null value for dimension {} while deleting: ",apiName);$      return;$    }$    String[] keys=objectMapper.readValue(dimRowIndexes,String[].class);$    LinkedHashSet<String> dimRowKeys=new LinkedHashSet<>(Arrays.asList(keys));$    for (    String dimRowKey : dimRowKeys) {$      keyValueStore.remove(dimRowKey);$    }$    searchProvider.setKeyValueStore(keyValueStore);$    keyValueStore.put(DimensionStoreKeyUtils.getCardinalityKey(),"0");$    String allValuesKey=DimensionStoreKeyUtils.getAllValuesKey();$    keyValueStore.put(allValuesKey,"[]");$  }$ catch (  IOException e) {$    LOG.error("Exception while reading dimension rows {}",e);$    throw new RuntimeException(e);$  }$}$
private void init(final AttributeSet attrs){$  Typeface typeface;$  if (!isInEditMode() && (typeface=CustomFontUtils.getTypeFace(this,attrs)) != null) {$    super.setTypeface(typeface,typeface.getStyle());$  }$}$
public static ExpressionFactory newExpressionFactory(){$  return new ExpressionFactoryImpl(new TreeStore(new ExtendedBuilder(),new Cache(1000)));$}$
protected MarketAddQuery ownerId(int value){$  return unsafeParam("owner_id",value);$}$
public void onStop(){$}$
public static void decodeFileToFile(String infile,String outfile) throws java.io.IOException {$  byte[] decoded=Base64.decodeFromFile(infile);$  java.io.OutputStream out=null;$  try {$    out=new java.io.BufferedOutputStream(new java.io.FileOutputStream(outfile));$    out.write(decoded);$  }$ catch (  java.io.IOException e) {$    throw e;$  }$ finally {$    try {$      out.close();$    }$ catch (    Exception ex) {$    }$  }$}$
public Builder perExecutorStatsLogger(StatsLogger perExecutorStatsLogger){$  this.perExecutorStatsLogger=perExecutorStatsLogger;$  return this;$}$
public static Map<String,Object> clearAllEntityCaches(DispatchContext dctx,Map<String,? extends Object> context){$  Delegator delegator=dctx.getDelegator();$  Boolean distributeBool=(Boolean)context.get("distribute");$  boolean distribute=false;$  if (distributeBool != null)   distribute=distributeBool.booleanValue();$  delegator.clearAllCaches(distribute);$  return ServiceUtil.returnSuccess();$}$
static int dp(Context context,int val){$  return (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,val,context.getResources().getDisplayMetrics());$}$
public static int unsignedLeb128Size(int value){$  int remaining=value >>> 7;$  int count=0;$  while (remaining != 0) {$    remaining>>>=7;$    count++;$  }$  return count + 1;$}$
public CallableDistributedTaskAdapter(){$}$
public void updateDistances() throws Exception {$  taxa=new Taxa();$  java.util.List<String> pids=doc.getSampleNames();$  for (  String name : pids) {$    taxa.add(name);$  }$  if (taxa.size() < 4)   throw new IOException("Too few samples: " + taxa.size());$  distances=new Distances(taxa.size());$  if (ecologicalIndex.equalsIgnoreCase(UniFrac.TOPOLOGICAL_UNIFRAC))   numberOfNodesUsed=UniFrac.apply(getParentViewer(),UniFrac.TOPOLOGICAL_UNIFRAC,1,distances);$ else   if (ecologicalIndex.equalsIgnoreCase(JensenShannonDivergence.SqrtJensenShannonDivergence))   numberOfNodesUsed=JensenShannonDivergence.apply(getParentViewer(),JensenShannonDivergence.SqrtJensenShannonDivergence,distances);$ else   if (ecologicalIndex.equalsIgnoreCase(PearsonDistance.PEARSON_DISTANCE))   numberOfNodesUsed=PearsonDistance.apply(doc,getParentViewer(),ecologicalIndex,distances);$ else   numberOfNodesUsed=CalculateEcologicalIndices.apply(doc,getParentViewer(),ecologicalIndex,distances,!getEcologicalIndex().contains("Goodall"));$  if (distances.replaceNaNByZero()) {$    NotificationsInSwing.showWarning(getFrame(),"Undefined distances detected, replaced by 0");$  }$  getPcoaTab().clear();$  getUpgmaTab().clear();$  getNnetTab().clear();$  getNJTab().clear();$  matrixTab.setData(taxa,distances);$}$
private void refreshStateTag(final Supervised supervised,final Timestamp refreshTime){$  try {$    Long stateTagId;$    String message;$    SupervisionStatus status;$    stateTagId=supervised.getStateTagId();$    message=supervised.getStatusDescription();$    status=supervised.getSupervisionStatus();$    controlTagFacade.updateAndValidate(stateTagId,status.toString(),message,refreshTime);$  }$ catch (  Exception e) {$    LOGGER.error("Error while refreshing state tag for " + supervised.getSupervisionEntity() + " "+ supervised.getId()+ " - unable to refresh this tag.",e);$  }$}$
public void remove(LegionMemberEx legionMember){$  legionMemberById.remove(legionMember.getObjectId());$  legionMemberExById.remove(legionMember.getObjectId());$  legionMemberExByName.remove(legionMember.getName());$}$
public void collapse(NodeBase v){$  if (v != null) {$    for (Enumeration descendants=v.depthFirstEnumeration(); descendants.hasMoreElements(); ) {$      v=(NodeBase)descendants.nextElement();$      dataTree.collapsePath(new TreePath(v.getPath()));$    }$  }$}$
public void java_lang_Class_getFields0(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  helper.assignObjectTo(returnVar,Environment.v().getLeastArrayObject());$}$
public boolean isBelow(Vector2 p,Vector2 q){$  double diff=p.y - q.y;$  if (diff == 0.0) {$    if (p.x > q.x) {$      return true;$    }$ else {$      return false;$    }$  }$ else {$    if (diff < 0.0) {$      return true;$    }$ else {$      return false;$    }$  }$}$
public boolean runAfter(List list,int max){$  return false;$}$
private void updateButtonState(boolean dataChanged){$  btnApply.setEnabled(dataChanged);$  btnRevert.setEnabled(dataChanged);$}$
public boolean equivTo(Object c){$  return equals(c);$}$
public boolean hasSuperclass(){$  checkLevel(HIERARCHY);$  return superClass != null;$}$
@Override public synchronized void initialize(){$  if (!mRootDirectory.exists()) {$    if (!mRootDirectory.mkdirs()) {$      VolleyLog.e("Unable to create cache dir %s",mRootDirectory.getAbsolutePath());$    }$    return;$  }$  File[] files=mRootDirectory.listFiles();$  if (files == null) {$    return;$  }$  for (  File file : files) {$    BufferedInputStream fis=null;$    try {$      fis=new BufferedInputStream(new FileInputStream(file));$      CacheHeader entry=CacheHeader.readHeader(fis);$      entry.size=file.length();$      putEntry(entry.key,entry);$    }$ catch (    IOException e) {$      if (file != null) {$        file.delete();$      }$    }$ finally {$      try {$        if (fis != null) {$          fis.close();$        }$      }$ catch (      IOException ignored) {$      }$    }$  }$}$
public void centerViewTo(float xValue,float yValue,AxisDependency axis){$  float yInView=getAxisRange(axis) / mViewPortHandler.getScaleY();$  float xInView=getXAxis().mAxisRange / mViewPortHandler.getScaleX();$  Runnable job=MoveViewJob.getInstance(mViewPortHandler,xValue - xInView / 2f,yValue + yInView / 2f,getTransformer(axis),this);$  addViewportJob(job);$}$
public void process() throws Exception {$  logger.debug("Processing " + sourceFile + " files into "+ destFile);$  if (!sourceFile.exists()) {$    throw new FileNotFoundException("Source file " + sourceFile.getPath() + " not found.");$  }$  boolean needUpdate=false;$  if (!destFile.exists()) {$    logger.debug("Dest file not found - creating new file");$    needUpdate=true;$  }$ else   if (!metaDataFile.exists()) {$    logger.debug("Meta file not found - creating new file");$    needUpdate=true;$  }$ else {$    logger.debug("Dest file found - checking file modifications");$    needUpdate=checkFileModifications();$  }$  if (needUpdate) {$    logger.debug("Modifications found. Updating...");$    try {$      doUpdate();$    }$ catch (    Exception e) {$      FileUtils.deleteQuietly(destFile);$      FileUtils.deleteQuietly(metaDataFile);$      throw e;$    }$  }$ else {$    logger.debug("Files are up-to-date");$  }$}$
public PostLexicalAnalyzer(){$}$
public Math_Vector sub(double x,double y){$  this.x-=x;$  this.y-=y;$  return this;$}$
public VideoRestoreCommentQuery(VkApiClient client,UserActor actor,int commentId){$  super(client,"video.restoreComment",BoolInt.class);$  accessToken(actor.getAccessToken());$  commentId(commentId);$}$
public Object directLocalReadById(Object id,String typeName,QueryResultTypeInternal queryResultType){$  if (!_isLocalCache)   throw new EngineInternalSpaceException("Supported only in local cache");$  final IServerTypeDesc serverTypeDesc=_typeManager.getServerTypeDesc(typeName);$  if (serverTypeDesc == null)   return null;$  Object res=null;$  boolean noUid=true;$  if (serverTypeDesc.isActive()) {$    if (serverTypeDesc.getTypeDesc().getIdPropertyName() == null)     return null;$    if (serverTypeDesc.getTypeDesc().isAutoGenerateId())     noUid=false;$    IEntryHolder entryHolder=noUid ? _cacheManager.getEntryByIdFromPureCache(id,serverTypeDesc) : directLocalReadByUidForClass((String)id,typeName);$    res=getUserObjectFromEntryHolder(entryHolder,queryResultType);$  }$  if (res != null || !noUid)   return res;$  IServerTypeDesc[] subTypes=serverTypeDesc.getAssignableTypes();$  for (int i=1; i < subTypes.length; i++) {$    IServerTypeDesc subType=_typeManager.getServerTypeDesc(subTypes[i].getTypeName());$    if (subType == null || subType.isInactive())     continue;$    if (subType.getTypeDesc().getIdPropertyName() == null)     return null;$    IEntryHolder entryHolder=_cacheManager.getEntryByIdFromPureCache(id,subType);$    res=getUserObjectFromEntryHolder(entryHolder,queryResultType);$    if (res != null)     return res;$  }$  return null;$}$
public void loadNecessaryClasses(){$  loadBasicClasses();$  for (  String name : Options.v().classes()) {$    loadNecessaryClass(name);$  }$  loadDynamicClasses();$  if (Options.v().oaat()) {$    if (Options.v().process_dir().isEmpty()) {$      throw new IllegalArgumentException("If switch -oaat is used, then also -process-dir must be given.");$    }$  }$ else {$    for (    final String path : Options.v().process_dir()) {$      for (      String cl : SourceLocator.v().getClassesUnder(path)) {$        SootClass theClass=loadClassAndSupport(cl);$        theClass.setApplicationClass();$      }$    }$  }$  prepareClasses();$  setDoneResolving();$}$
public static SM_SYSTEM_MESSAGE STR_CANCEL_PETITION_OK2(int num1){$  return new SM_SYSTEM_MESSAGE(1300553,num1);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_ConvertHeal_A_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200955,skilltarget,skillcaster,skillname);$}$
private void sendCrashToServer(Throwable ex){$  LogUtil.d("sendCrashToServer");$  if (config.isReportToServer()) {$    if (null != config) {$      config.getReporter().report(ex);$    }$  }$}$
public void init$Children(){$  children=new ASTNode[1];$}$
public void updateSymbol(PolygonSymbolizer polygonSymbolizer){$  for (  VendorOptionInterface extension : vendorOptionList) {$    boolean displayVendorOption=VendorOptionManager.getInstance().isAllowed(vendorOptionVersionList,extension.getVendorOption());$    if (displayVendorOption) {$      extension.updateSymbol(polygonSymbolizer);$    }$  }$}$
public ClarifaiClient(String appId,String appSecret){$  this(CLARIFAI_API_ROOT,appId,appSecret,InMemoryCredentialCache.getInstance());$}$
public boolean isEmpty(){$  if (getRbacClass() == null && getRbacDevice() == null && getRbacProperty() == null)   return true;$  return false;$}$
@Override public WebElement findElementById(String id){$  return ((FindsById)super.getWrappedDriver()).findElementById(id);$}$
public DIPHardwareAddressImpl(final String pItemName,final int pFieldIndex) throws ConfigurationException {$  this(pItemName,null,pFieldIndex);$}$
public static String composeConnectionName(final String clientId,final String serverURIs){$  return clientId + "@" + serverURIs;$}$
public static Z1 uz1(int n) throws JampackException {$  Z1 zone=new Z1(n);$  for (int i=0; i < n; i++) {$    zone.re[i]=R.nextDouble();$    zone.im[i]=R.nextDouble();$  }$  return zone;$}$
public void goToNextColor(){$  mColorIndex=(mColorIndex + 1) % (mColors.length);$}$
public void denyAll(PermissionFlag flag){$  denyAll(flag,defaultMessage);$}$
public HintsExample(){$  oredCriteria=new ArrayList<Criteria>();$}$
public void addPokestops(Collection<FortData> pokestops){$  if (pokestops == null || pokestops.isEmpty()) {$    return;$  }$  complete=true;$  for (  FortData pokestop : pokestops) {$    this.pokestops.add(new Pokestop(api,pokestop));$  }$}$
@Override public boolean isShowLabel(){$  return showLabel;$}$
@Override public void endGeneralEntity(String name,Augmentations augs) throws XNIException {$  try {$    if (augs == null || !Boolean.TRUE.equals(augs.getItem(Constants.ENTITY_SKIPPED))) {$      if (fLexicalHandler != null) {$        fLexicalHandler.endEntity(name);$      }$    }$  }$ catch (  SAXException e) {$    throw new XNIException(e);$  }$}$
private void prepareFramebuffer(int width,int height){$  GlUtil.checkGlError("start");$  int[] values=new int[1];$  GLES20.glGenTextures(1,values,0);$  GlUtil.checkGlError("glGenTextures");$  mOffscreenTexture=values[0];$  Log.i(TAG,"prepareFramebuffer mOffscreenTexture:" + mOffscreenTexture);$  GLES20.glBindTexture(GLES20.GL_TEXTURE_2D,mOffscreenTexture);$  GlUtil.checkGlError("glBindTexture");$  GLES20.glTexImage2D(GLES20.GL_TEXTURE_2D,0,GLES20.GL_RGBA,width,height,0,GLES20.GL_RGBA,GLES20.GL_UNSIGNED_BYTE,null);$  GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,GLES20.GL_TEXTURE_MAG_FILTER,GLES20.GL_LINEAR);$  GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,GLES20.GL_TEXTURE_MIN_FILTER,GLES20.GL_LINEAR);$  GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,GLES20.GL_TEXTURE_WRAP_S,GLES20.GL_CLAMP_TO_EDGE);$  GLES20.glTexParameterf(GLES20.GL_TEXTURE_2D,GLES20.GL_TEXTURE_WRAP_T,GLES20.GL_CLAMP_TO_EDGE);$  GlUtil.checkGlError("glTexParameter");$  GLES20.glGenFramebuffers(1,values,0);$  GlUtil.checkGlError("glGenFramebuffers");$  mFramebuffer=values[0];$  GLES20.glBindFramebuffer(GLES20.GL_FRAMEBUFFER,mFramebuffer);$  GlUtil.checkGlError("glBindFramebuffer " + mFramebuffer);$  GLES20.glFramebufferTexture2D(GLES20.GL_FRAMEBUFFER,GLES20.GL_COLOR_ATTACHMENT0,GLES20.GL_TEXTURE_2D,mOffscreenTexture,0);$  int status=GLES20.glCheckFramebufferStatus(GLES20.GL_FRAMEBUFFER);$  if (status != GLES20.GL_FRAMEBUFFER_COMPLETE) {$    throw new RuntimeException("Framebuffer not complete, status=" + status);$  }$  GLES20.glBindTexture(GLES20.GL_TEXTURE_2D,0);$  GLES20.glBindFramebuffer(GLES20.GL_FRAMEBUFFER,0);$  GlUtil.checkGlError("glBindFramebuffer");$}$
public static void updateDouble(VisualItem item,String field,double val){$  item.setDouble(getStartField(field),item.getDouble(field));$  item.setDouble(field,val);$  item.setDouble(getEndField(field),val);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_NoFly_A_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200922,skilltarget,skillcaster,skillname);$}$
public void appendTier(PraatTier tier){$  this.tiers.add(tier);$}$
@Override public void unparsedEntityDecl(String name,XMLResourceIdentifier identifier,String notation,Augmentations augs) throws XNIException {$}$
private static boolean isBracketsBalanced(String metricString){$  Map<Character,Character> brackets=new HashMap<>();$  brackets.put('[',']');$  brackets.put('(',')');$  Stack<Character> stack=new Stack<>();$  for (int i=0; i < metricString.length(); i++) {$    char currentChar=metricString.charAt(i);$    if (brackets.containsKey(currentChar)) {$      stack.push(currentChar);$    }$ else     if (brackets.values().contains(currentChar) && (currentChar != brackets.get(stack.pop()))) {$      return false;$    }$  }$  return stack.empty();$}$
private void removeTokenPostpunctuation(){$  if (token != null) {$    String tokenWord=token.getWord();$    int tokenLength=tokenWord.length();$    int position=tokenLength - 1;$    while (position > 0 && postpunctuationSymbols.indexOf((int)tokenWord.charAt(position)) != -1) {$      position--;$    }$    if (tokenLength - 1 != position) {$      token.setPostpunctuation(tokenWord.substring(position + 1));$      token.setWord(tokenWord.substring(0,position + 1));$    }$ else {$      token.setPostpunctuation("");$    }$  }$}$
public void destroy(){$  destroyOverlayPanelContent();$}$
public EigenValueDecomposition(Matrix Arg){$  double[][] A=Arg.getArray();$  n=Arg.getColumnDimension();$  V=new double[n][n];$  d=new double[n];$  e=new double[n];$  issymmetric=true;$  for (int j=0; (j < n) & issymmetric; j++) {$    for (int i=0; (i < n) & issymmetric; i++) {$      issymmetric=(A[i][j] == A[j][i]);$    }$  }$  if (issymmetric) {$    for (int i=0; i < n; i++) {$      for (int j=0; j < n; j++) {$        V[i][j]=A[i][j];$      }$    }$    tred2();$    tql2();$  }$ else {$    H=new double[n][n];$    ort=new double[n];$    for (int j=0; j < n; j++) {$      for (int i=0; i < n; i++) {$        H[i][j]=A[i][j];$      }$    }$    orthes();$    hqr2();$  }$}$
public void removePadding(){$  if (padding != null) {$    box.remove(padding);$  }$}$
public static TableMetadata readTableMetadata(String fileName) throws IOException {$  byte[] encoded=Files.readAllBytes(Paths.get(fileName));$  return TableMetadata.fromJson(new String(encoded,StandardCharsets.UTF_8));$}$
public static SM_SYSTEM_MESSAGE STR_MSG_CANT_USE_DUPLICATED_ITEM(String value0){$  return new SM_SYSTEM_MESSAGE(1400177,value0);$}$
public Entry toCacheEntry(byte[] data){$  Entry e=new Entry();$  e.data=data;$  e.etag=etag;$  e.serverDate=serverDate;$  e.lastModified=lastModified;$  e.ttl=ttl;$  e.softTtl=softTtl;$  e.responseHeaders=responseHeaders;$  return e;$}$
public ElementType parent(){$  return theType.parent();$}$
private static void applyLightDown(ChunkManager manager,int currentX,int currentY,float lightValue){$  if (currentX < 0 || currentX >= (ChunkManager.CHUNKS_X * Chunk.CHUNK_SIZE) || currentY < 0 || currentY >= (ChunkManager.CHUNKS_Y * Chunk.CHUNK_SIZE)) {$    return;$  }$  Chunk posChunk=manager.getChunkFromTilePos(currentX,currentY);$  int posChunkX=currentX - (posChunk.getStartX() * Chunk.CHUNK_SIZE);$  int posChunkY=currentY - (posChunk.getStartY() * Chunk.CHUNK_SIZE);$  lightValue-=BlockManager.getBlock(posChunk.getBlock(posChunkX,posChunkY)).getLightBlockingAmount();$  float totalLight=lightValue;$  if (totalLight <= posChunk.getLightValue(posChunkX,posChunkY))   return;$  posChunk.setLightValue(totalLight,posChunkX,posChunkY);$  if (lightValue <= LightUtils.MIN_LIGHT_VALUE)   return;$  applyLightDown(manager,currentX,currentY - 1,lightValue);$}$
public static DataFile makeDataFile(URL definitionUrl,String dataFileName) throws DataFileException {$  ModelDataFileReader reader=ModelDataFileReader.getModelDataFileReader(definitionUrl);$  if (reader == null) {$    throw new DataFileException("Could not load definition file located at \"" + definitionUrl + "\"");$  }$  ModelDataFile modelDataFile=reader.getModelDataFile(dataFileName);$  if (modelDataFile == null) {$    throw new DataFileException("Could not find file definition for data file named \"" + dataFileName + "\"");$  }$  DataFile dataFile=new DataFile(modelDataFile);$  return dataFile;$}$
@Override public void write(int b) throws IOException {$  out.write(b);$  md5.Update((byte)b);$}$
public GroupsEditQuery obsceneWords(List<String> value){$  return unsafeParam("obscene_words",value);$}$
public OutputStream put(String key) throws FileNotFoundException {$  return new xFileOutputStream(mCache.newFile(key));$}$
@Override public Object validate(Object content,ValidationContext context,ValidatedInfo validatedInfo) throws InvalidDatatypeValueException {$  if (context == null)   context=fEmptyContext;$  if (validatedInfo == null)   validatedInfo=new ValidatedInfo();$ else   validatedInfo.memberType=null;$  boolean needNormalize=context == null || context.needToNormalize();$  Object ob=getActualValue(content,context,validatedInfo,needNormalize);$  validate(context,validatedInfo);$  return ob;$}$
public Vector add(Vector vec){$  x+=vec.x;$  y+=vec.y;$  z+=vec.z;$  return this;$}$
public static int exportTaxon2ReadIds(String format,Director dir,File file,char separator,ProgressListener progressListener) throws IOException {$  int totalLines=0;$  try {$    final MainViewer viewer=dir.getMainViewer();$    try (BufferedWriter w=new BufferedWriter(new FileWriter(file))){$      final IConnector connector=viewer.getDir().getDocument().getConnector();$      final IClassificationBlock classificationBlock=connector.getClassificationBlock(viewer.getClassName());$      final java.util.Collection<Integer> taxonIds=viewer.getSelectedIds();$      progressListener.setSubtask("Taxa to read Ids");$      progressListener.setMaximum(taxonIds.size());$      progressListener.setProgress(0);$      for (      int taxonId : taxonIds) {$        Set<Integer> allBelow;$        Node v=viewer.getTaxId2Node(taxonId);$        if (v.getOutDegree() == 0)         allBelow=TaxonomyData.getTree().getAllDescendants(taxonId);$ else {$          allBelow=new HashSet<>();$          allBelow.add(taxonId);$        }$        final String name=getTaxonLabelSource(dir,format,taxonId);$        if (name != null) {$          w.write(name);$          for (          int id : allBelow) {$            if (classificationBlock.getSum(id) > 0) {$              try (IReadBlockIterator it=connector.getReadsIterator(viewer.getClassName(),id,0,10000,true,false)){$                while (it.hasNext()) {$                  String readId=it.next().getReadName();$                  w.write(separator + "" + readId);$                }$              }$               w.write("\n");$              totalLines++;$              progressListener.checkForCancel();$            }$          }$        }$        progressListener.incrementProgress();$      }$    }$   }$ catch (  CanceledException canceled) {$    System.err.println("USER CANCELED");$  }$  return totalLines;$}$
private void tinkerPreVerifiedCrashHandler(Throwable ex){$  if (Utils.isXposedExists(ex)) {$    ApplicationLike applicationLike=TinkerManager.getTinkerApplicationLike();$    if (applicationLike == null || applicationLike.getApplication() == null) {$      return;$    }$    if (!TinkerApplicationHelper.isTinkerLoadSuccess(applicationLike)) {$      return;$    }$    boolean isCausedByXposed=false;$    if (ShareTinkerInternals.isVmArt()) {$      isCausedByXposed=true;$    }$ else     if (ex instanceof IllegalAccessError && ex.getMessage().contains(DALVIK_XPOSED_CRASH)) {$      isCausedByXposed=true;$    }$    if (isCausedByXposed) {$      SampleTinkerReport.onXposedCrash();$      TinkerLog.e(TAG,"have xposed: just clean tinker");$      ShareTinkerInternals.killAllOtherProcess(applicationLike.getApplication());$      TinkerApplicationHelper.cleanPatch(applicationLike);$      ShareTinkerInternals.setTinkerDisableWithSharedPreferences(applicationLike.getApplication());$      Toast.makeText(applicationLike.getApplication(),"please uninstall Xposed, illegal modify the app",Toast.LENGTH_LONG).show();$    }$  }$}$
@PostConstruct public void loadRuleParentIds(){$  LOGGER.trace("Entering loadRuleParentIds()...");$  LOGGER.trace("Trying to get cache lock for " + RuleTagCache.cacheInitializedKey);$  clusterCache.acquireWriteLockOnKey(RuleTagCache.cacheInitializedKey);$  try {$    Boolean isRuleCachePostProcessed=Boolean.FALSE;$    if (clusterCache.hasKey(ruleCachePostProcessedKey)) {$      isRuleCachePostProcessed=(Boolean)clusterCache.getCopy(ruleCachePostProcessedKey);$    }$    if (!isRuleCachePostProcessed.booleanValue()) {$      LOGGER.info("Setting parent ids for rules...");$      ThreadPoolExecutor threadPoolExecutor=new ThreadPoolExecutor(threadPoolMin,threadPoolMax,5,TimeUnit.SECONDS,new ArrayBlockingQueue<Runnable>(1000));$      LoaderTask task=new LoaderTask();$      int counter=0;$      for (      Long key : ruleTagCache.getKeys()) {$        task.addKey(key);$        counter++;$        if (counter == 500) {$          threadPoolExecutor.execute(task);$          task=new LoaderTask();$          counter=0;$        }$      }$      threadPoolExecutor.execute(task);$      threadPoolExecutor.shutdown();$      try {$        threadPoolExecutor.awaitTermination(1200,TimeUnit.SECONDS);$      }$ catch (      InterruptedException e) {$        LOGGER.warn("Exception caught while waiting for rule parent id loading threads to complete (waited longer then timeout?): ",e);$      }$      LOGGER.info("... rule parent ids set.");$      clusterCache.put(ruleCachePostProcessedKey,Boolean.TRUE);$    }$ else {$      LOGGER.info("Cache " + RuleTagCache.cacheInitializedKey + " was already initialized. No need for action..");$    }$  }$  finally {$    clusterCache.releaseWriteLockOnKey(RuleTagCache.cacheInitializedKey);$    LOGGER.trace("Released cache lock .. for " + RuleTagCache.cacheInitializedKey);$  }$  LOGGER.trace("Leaving loadRuleParentIds()");$}$
public static SM_SYSTEM_MESSAGE STR_MSG_REMAIN_CHANGE_CHANNEL_COOLTIME(String durationtime0,String durationtime1){$  return new SM_SYSTEM_MESSAGE(1400068,durationtime0,durationtime1);$}$
public void updateKey(byte[] newKey){$  this.key=newKey;$}$
private static int lastIndexOf(Object o,Object[] elements,int index){$  if (o == null) {$    for (int i=index; i >= 0; i--)     if (elements[i] == null)     return i;$  }$ else {$    for (int i=index; i >= 0; i--)     if (o.equals(elements[i]))     return i;$  }$  return -1;$}$
public synchronized void noteUnsettledTxn(Object tid){$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.entering(TxnManagerImpl.class.getName(),"noteUnsettledTxn",new Object[]{tid});$  }$  unsettledtxns.add(tid);$  notifyAll();$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.exiting(TxnManagerImpl.class.getName(),"noteUnsettledTxn");$  }$}$
private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {$  in.defaultReadObject();$  if (policy == null) {$    throw new InvalidObjectException("null policy");$  }$  if (classpath == null) {$    throw new InvalidObjectException("null class path");$  }$  if (log == null) {$    throw new InvalidObjectException("null log");$  }$  if (serverOptions == null) {$    throw new InvalidObjectException("null server options");$  }$  if (serverProperties == null) {$    throw new InvalidObjectException("null server properties");$  }$  if (host == null) {$    throw new InvalidObjectException("null activation host name");$  }$  if (port <= 0) {$    throw new InvalidObjectException("invalid activation port: " + port);$  }$}$
public PhotosPutTagQuery y(Float value){$  return unsafeParam("y",value);$}$
public V remove(Object key){$  return backedMap.remove(key);$}$
public static String checkNull(String string1,String string2,String string3){$  if (string1 != null)   return string1;$ else   if (string2 != null)   return string2;$ else   if (string3 != null)   return string3;$ else   return "";$}$
public FactoryConfigurationError(java.lang.String msg,java.lang.Exception e){$  super(msg);$  nested=e;$}$
@Override public void undo(Transaction tx){$}$
private void createVendorOptionPanel(){$  vendorOptionFillFactory=new VendorOptionFillFactory(getPanelId(),getFunctionManager());$  List<VendorOptionInterface> voList=vendorOptionFillFactory.getVendorOptionList();$  if (voList != null) {$    for (    VendorOptionInterface vendorOption : voList) {$      vendorOption.setParentPanel(this);$    }$  }$}$
@Override public void readAttributes(DataSourceAttributeListInterface attributeData){$  if (attributeData == null) {$    return;$  }$  List<DataSourceAttributeData> valueMap=new ArrayList<DataSourceAttributeData>();$  SimpleFeatureCollection featureCollection=dataSourceInfo.getFeatureCollection();$  if (featureCollection != null) {$    SimpleFeatureIterator iterator=featureCollection.features();$    Map<Integer,Name> fieldNameMap=dataSourceInfo.getFieldNameMap();$    Map<Integer,Class<?>> fieldTypeMap=dataSourceInfo.getFieldTypeMap();$    if (iterator.hasNext()) {$      SimpleFeature feature=iterator.next();$      List<Object> attributes=feature.getAttributes();$      for (int i=0; i < attributes.size(); i++) {$        Name fieldName=fieldNameMap.get(i);$        Class<?> type=fieldTypeMap.get(i);$        if (type == Geometry.class) {$          Object value=feature.getAttribute(fieldName);$          type=value.getClass();$        }$        DataSourceAttributeData data=new DataSourceAttributeData(fieldName,type,attributes.get(i));$        valueMap.add(data);$      }$    }$  }$  attributeData.setData(valueMap);$}$
public boolean isDistinct(){$  return distinct;$}$
public void addObserver(final FileAlterationObserver observer){$  if (observer != null) {$    observers.add(observer);$  }$}$
protected void createImageDescriptor(String id,URL baseURL){$  URL url=null;$  try {$    url=new URL(baseURL,IRevisionGraphConstants.ICON_PATH + id);$  }$ catch (  MalformedURLException e) {$  }$  ImageDescriptor desc=ImageDescriptor.createFromURL(url);$  imageDescriptors.put(id,desc);$}$
public static final String name(SimpleGroupPath group,MetricName metric){$  return name(Stream.concat(group.getPath().stream(),metric.getPath().stream()).collect(Collectors.joining(".")));$}$
@Override public void actionPerformed(ActionEvent ev){$  getViewer().selectComponent(getViewer().getUpgmaTab());$}$
public static void removeAllServices() throws RpcException {$  try {$    ServicePublisher.removeAllServices();$  }$ catch (  RegistryException e) {$    throw new RpcException("error while removing all services",e);$  }$}$
public static boolean isBlazeProject(Project project){$  return BlazeImportSettingsManager.getInstance(project).getImportSettings() != null;$}$
public static boolean hasExtension(String extension){$  if (extension == null || extension.isEmpty()) {$    return false;$  }$  return extensionToMimeTypeMap.containsKey(extension);$}$
@Override public int run(){$  this.model=setupModel();$  return super.run();$}$
public boolean hasNavigationBar(){$  return mHasNavigationBar;$}$
public Object clone(){$  byte[] newData=new byte[length];$  System.arraycopy(data,0,newData,0,newData.length);$  MetaMessage event=new MetaMessage(newData);$  return event;$}$
public AlreadySpawnedException(){$  super();$}$
protected UtilsResolveScreenNameQuery screenName(String value){$  return unsafeParam("screen_name",value);$}$
public static ToolbarTapTarget forToolbarOverflow(android.widget.Toolbar toolbar,CharSequence title){$  return forToolbarOverflow(toolbar,title,null);$}$
public double dot(Vector other){$  return x * other.x + y * other.y + z * other.z;$}$
public static Map<String,Object> copyPartyContactMechs(DispatchContext dctx,Map<String,? extends Object> context){$  Delegator delegator=dctx.getDelegator();$  LocalDispatcher dispatcher=dctx.getDispatcher();$  GenericValue userLogin=(GenericValue)context.get("userLogin");$  String partyIdFrom=(String)context.get("partyIdFrom");$  String partyIdTo=(String)context.get("partyIdTo");$  Locale locale=(Locale)context.get("locale");$  try {$    List<Map<String,Object>> valueMaps=ContactMechWorker.getPartyContactMechValueMaps(delegator,partyIdFrom,false);$    for (    Map<String,Object> thisMap : valueMaps) {$      GenericValue contactMech=(GenericValue)thisMap.get("contactMech");$      GenericValue partyContactMech=(GenericValue)thisMap.get("partyContactMech");$      List<GenericValue> partyContactMechPurposes=UtilGenerics.checkList(thisMap.get("partyContactMechPurposes"));$      String contactMechId=contactMech.getString("contactMechId");$      Map<String,Object> serviceResults=dispatcher.runSync("createPartyContactMech",UtilMisc.<String,Object>toMap("partyId",partyIdTo,"userLogin",userLogin,"contactMechId",contactMechId,"fromDate",UtilDateTime.nowTimestamp(),"allowSolicitation",partyContactMech.getString("allowSolicitation"),"extension",partyContactMech.getString("extension")));$      if (ServiceUtil.isError(serviceResults)) {$        return serviceResults;$      }$      for (      GenericValue purpose : partyContactMechPurposes) {$        Map<String,Object> input=UtilMisc.toMap("partyId",partyIdTo,"contactMechId",contactMechId,"userLogin",userLogin);$        input.put("contactMechPurposeTypeId",purpose.getString("contactMechPurposeTypeId"));$        serviceResults=dispatcher.runSync("createPartyContactMechPurpose",input);$        if (ServiceUtil.isError(serviceResults)) {$          return serviceResults;$        }$      }$    }$  }$ catch (  GenericServiceException e) {$    Debug.logError(e,e.getMessage(),module);$    return ServiceUtil.returnError(UtilProperties.getMessage(resource,"PartyCannotCopyPartyContactMech",UtilMisc.toMap("errorString",e.getMessage()),locale));$  }$  return ServiceUtil.returnSuccess();$}$
public void addNewRule(Rule rule){$  if (this.symbolData.getFeatureTypeStyle() == null) {$    ConsoleManager.getInstance().error(this,"featureTypeStyle == null");$  }$ else {$    List<Rule> ruleList=(List<Rule>)this.symbolData.getFeatureTypeStyle().rules();$    ruleList.add(rule);$  }$}$
protected static void checkValue(Object value){$  if (!(value instanceof Long))   throw new IllegalArgumentException("value is not a Long");$}$
public static String keepCartUpdated(HttpServletRequest request,HttpServletResponse response){$  LocalDispatcher dispatcher=(LocalDispatcher)request.getAttribute("dispatcher");$  HttpSession session=request.getSession();$  ShoppingCart cart=getCartObject(request);$  if (cart.getUserLogin() == null) {$    GenericValue userLogin=(GenericValue)session.getAttribute("userLogin");$    if (userLogin != null) {$      try {$        cart.setUserLogin(userLogin,dispatcher);$      }$ catch (      CartItemModifyException e) {$        Debug.logWarning(e,module);$      }$    }$  }$  if (cart.getAutoUserLogin() == null) {$    GenericValue autoUserLogin=(GenericValue)session.getAttribute("autoUserLogin");$    if (autoUserLogin != null) {$      if (cart.getUserLogin() == null) {$        try {$          cart.setAutoUserLogin(autoUserLogin,dispatcher);$        }$ catch (        CartItemModifyException e) {$          Debug.logWarning(e,module);$        }$      }$ else {$        cart.setAutoUserLogin(autoUserLogin);$      }$    }$  }$  Locale locale=UtilHttp.getLocale(request);$  if (cart.getLocale() == null || !locale.equals(cart.getLocale())) {$    cart.setLocale(locale);$  }$  return "success";$}$
private void copyIn(Object[] toCopyIn,int first,int n){$  int limit=first + n;$  if (limit > toCopyIn.length)   throw new IndexOutOfBoundsException();$  Object[] newElements=copyOfRange(toCopyIn,first,limit,Object[].class);$synchronized (this) {$    setArray(newElements);$  }$}$
public void loadIdentity(){$  m01=m02=m10=m12=m20=m21=0;$  m00=m11=m22=1;$}$
private void deletePassword(Intent data){$  if (data != null && data.hasExtra(PASSWORD_LIST_DELETED_ID)) {$    int deletedId=data.getIntExtra(PASSWORD_LIST_DELETED_ID,-1);$    boolean isException=data.getBooleanExtra(DELETED_ITEM_IS_EXCEPTION,false);$    if (isException) {$      mPasswordManagerHandler.removeSavedPasswordException(deletedId);$    }$ else {$      mPasswordManagerHandler.removeSavedPasswordEntry(deletedId);$    }$  }$}$
@Override public BigFraction divide(final BigFraction fraction){$  MathUtils.checkNotNull(fraction,LocalizedCoreFormats.FRACTION);$  if (fraction.numerator.signum() == 0) {$    throw new MathRuntimeException(LocalizedCoreFormats.ZERO_DENOMINATOR);$  }$  if (numerator.signum() == 0) {$    return ZERO;$  }$  return multiply(fraction.reciprocal());$}$
public double readDouble() throws JMSException {$  initializeReading();$  try {$    if (this.dataIn.available() == 0) {$      throw new MessageEOFException("reached end of data");$    }$    this.dataIn.mark(65);$    int type=this.dataIn.read();$    if (type == _DOUBLE) {$      return this.dataIn.readDouble();$    }$    if (type == _FLOAT) {$      return this.dataIn.readFloat();$    }$    if (type == _STRING) {$      return Double.valueOf(this.dataIn.readUTF()).doubleValue();$    }$    if (type == _NULL) {$      this.dataIn.reset();$      throw new NullPointerException("Cannot convert _NULL value to double.");$    }$ else {$      this.dataIn.reset();$      throw new MessageFormatException(" not a double type");$    }$  }$ catch (  NumberFormatException mfe) {$    try {$      this.dataIn.reset();$    }$ catch (    IOException ioe) {$      JMSException jmsEx=new JMSException("reset failed");$      jmsEx.setLinkedException(ioe);$    }$    throw mfe;$  }$catch (  EOFException e) {$    JMSException jmsEx=new MessageEOFException(e.toString());$    jmsEx.setLinkedException(e);$    throw jmsEx;$  }$catch (  IOException e) {$    JMSException jmsEx=new MessageFormatException(e.toString());$    jmsEx.setLinkedException(e);$    throw jmsEx;$  }$}$
public XIncludeParserConfiguration(SymbolTable symbolTable,XMLGrammarPool grammarPool,XMLComponentManager parentSettings){$  super(symbolTable,grammarPool,parentSettings);$  fXIncludeHandler=new XIncludeHandler();$  addCommonComponent(fXIncludeHandler);$  final String[] recognizedFeatures={ALLOW_UE_AND_NOTATION_EVENTS,XINCLUDE_FIXUP_BASE_URIS,XINCLUDE_FIXUP_LANGUAGE};$  addRecognizedFeatures(recognizedFeatures);$  final String[] recognizedProperties={XINCLUDE_HANDLER,NAMESPACE_CONTEXT};$  addRecognizedProperties(recognizedProperties);$  setFeature(ALLOW_UE_AND_NOTATION_EVENTS,true);$  setFeature(XINCLUDE_FIXUP_BASE_URIS,true);$  setFeature(XINCLUDE_FIXUP_LANGUAGE,true);$  setProperty(XINCLUDE_HANDLER,fXIncludeHandler);$  setProperty(NAMESPACE_CONTEXT,new XIncludeNamespaceSupport());$}$
public boolean equals(Object obj){$  return (obj instanceof ClientMaxPrincipalType && Constraint.equal(classes,((ClientMaxPrincipalType)obj).classes));$}$
public void action(){$  Location[] lLocations;$  NGramDocumentComparatorAgent aAgent=((NGramDocumentComparatorAgent)myAgent);$  if ((lLocations=aAgent.getActiveContainerList()) == null)   return;$  boolean bMigrate=Math.random() < aAgent.MigrationProbability;$  bMigrate=bMigrate && (lLocations.length > 1);$  if (bMigrate) {$    int iServerIdx=(int)Math.floor(Math.random() * (double)lLocations.length);$    int iCnt=0;$    while (lLocations[iServerIdx].getID().equals(myAgent.here().getID())) {$      ++iServerIdx;$      iServerIdx%=lLocations.length;$      if (++iCnt == 3)       break;$    }$    if (lLocations[iServerIdx].getID().equals(myAgent.here().getID())) {$      myAgent.addBehaviour(new InformForCompleteMoveBehaviour());$      if (!aAgent.Silent) {$synchronized (System.err) {$          System.err.println("Local execution...");$        }$      }$      return;$    }$ else     if (!aAgent.Silent)     System.err.println("Migrating to " + lLocations[iServerIdx].getName());$    myAgent.doMove(lLocations[iServerIdx]);$  }$ else {$    myAgent.addBehaviour(new InformForCompleteMoveBehaviour());$    if (!aAgent.Silent) {$synchronized (System.err) {$        System.err.println("Local execution...");$      }$    }$    return;$  }$}$
public boolean isApplicable(){$  ChartViewer viewer=(ChartViewer)getViewer();$  return viewer.getChartData().getNumberOfSeries() > 0 && viewer.getChartSelection().getSelectedSeries().size() < viewer.getChartData().getNumberOfSeries();$}$
@SuppressWarnings({"unchecked","cast"}) public TypeDecl type(){$  if (type_computed) {$    return type_value;$  }$  ASTNode$State state=state();$  int num=state.boundariesCrossed;$  boolean isFinal=this.is$Final();$  type_value=type_compute();$  if (isFinal && num == state().boundariesCrossed)   type_computed=true;$  return type_value;$}$
public void addImportDecl(ImportDecl node){$  List<ImportDecl> list=(parent == null || state == null) ? getImportDeclListNoTransform() : getImportDeclList();$  list.addChild(node);$}$
@Override public int read(byte[] b,int off,int len) throws IOException {$  int sampleSizeInBytes=frameSize / inputChannels;$  int outputFrameSize=sampleSizeInBytes * 2;$  int nFrames=len / outputFrameSize;$  byte[] inputBytes=new byte[nFrames * frameSize];$  int nInputBytes=super.read(inputBytes,0,inputBytes.length);$  if (nInputBytes <= 0)   return nInputBytes;$  if (inputChannels == 1) {$    if (outputMode == AudioPlayer.STEREO) {$      for (int i=0, j=off; i < nInputBytes; i+=frameSize, j+=outputFrameSize) {$        for (int k=0; k < sampleSizeInBytes; k++) {$          b[j + k]=b[j + sampleSizeInBytes + k]=inputBytes[i + k];$        }$      }$    }$ else     if (outputMode == AudioPlayer.LEFT_ONLY) {$      if (!getFormat().getEncoding().equals(Encoding.PCM_SIGNED)) {$        throw new IllegalArgumentException("Channel muting supported only for PCM_SIGNED encoding, got " + getFormat().getEncoding());$      }$      for (int i=0, j=off; i < nInputBytes; i+=frameSize, j+=outputFrameSize) {$        for (int k=0; k < sampleSizeInBytes; k++) {$          b[j + k]=inputBytes[i + k];$          b[j + sampleSizeInBytes + k]=0;$        }$      }$    }$ else {$      assert outputMode == AudioPlayer.RIGHT_ONLY : "Unexpected output mode: " + outputMode;$      if (!getFormat().getEncoding().equals(Encoding.PCM_SIGNED)) {$        throw new IllegalArgumentException("Channel muting supported only for PCM_SIGNED encoding, got " + getFormat().getEncoding());$      }$      for (int i=0, j=off; i < nInputBytes; i+=frameSize, j+=outputFrameSize) {$        for (int k=0; k < sampleSizeInBytes; k++) {$          b[j + k]=0;$          b[j + sampleSizeInBytes + k]=inputBytes[i + k];$        }$      }$    }$  }$ else {$    if (outputMode == AudioPlayer.STEREO) {$      for (int i=0, j=off; i < nInputBytes; i+=frameSize, j+=outputFrameSize) {$        System.arraycopy(inputBytes,i,b,j,outputFrameSize);$      }$    }$ else     if (outputMode == AudioPlayer.LEFT_ONLY) {$      if (!getFormat().getEncoding().equals(Encoding.PCM_SIGNED)) {$        throw new IllegalArgumentException("Channel muting supported only for PCM_SIGNED encoding, got " + getFormat().getEncoding());$      }$      for (int i=0, j=off; i < nInputBytes; i+=frameSize, j+=outputFrameSize) {$        for (int k=0; k < sampleSizeInBytes; k++) {$          b[j + k]=inputBytes[i + k];$          b[j + sampleSizeInBytes + k]=0;$        }$      }$    }$ else {$      assert outputMode == AudioPlayer.RIGHT_ONLY : "Unexpected output mode: " + outputMode;$      if (!getFormat().getEncoding().equals(Encoding.PCM_SIGNED)) {$        throw new IllegalArgumentException("Channel muting supported only for PCM_SIGNED encoding, got " + getFormat().getEncoding());$      }$      for (int i=0, j=off; i < nInputBytes; i+=frameSize, j+=outputFrameSize) {$        for (int k=0; k < sampleSizeInBytes; k++) {$          b[j + k]=0;$          b[j + sampleSizeInBytes + k]=inputBytes[i + sampleSizeInBytes + k];$        }$      }$    }$  }$  return 2 * nInputBytes / inputChannels;$}$
public CatalogException(Exception e){$  super();$  this.exceptionType=WRAPPER;$  this.exception=e;$}$
public BeyondExtended(Expression expression1,Expression expression2){$  super(expression1,expression2);$}$
public void logoutUser(){$  this.firebaseAuth.signOut();$}$
public static ArrayList<String> splitString(String text){$  return splitString(text,MAX_SIZE);$}$
private String uploadImage(String name,byte[] bytes) throws IOException {$  FileResource fileResource=new FileResource(name,MimeTypeUtils.IMAGE_PNG.toString(),bytes.length,ByteSource.wrap(bytes).hash(Hashing.md5()).toString(),FileResourceDomain.PUSH_ANALYSIS);$  fileResourceService.saveFileResource(fileResource,bytes);$  ExternalFileResource externalFileResource=new ExternalFileResource();$  externalFileResource.setFileResource(fileResource);$  externalFileResource.setExpires(null);$  String accessToken=externalFileResourceService.saveExternalFileResource(externalFileResource);$  return systemSettingManager.getInstanceBaseUrl() + "/api/externalFileResources/" + accessToken;$}$
boolean isRecovering(){$  return recoverMessages.size() > 0;$}$
final void addHalfEdges(DoubleEdgeListVertex v1,DoubleEdgeListVertex v2){$  DoubleEdgeListFace face=new DoubleEdgeListFace();$  DoubleEdgeListHalfEdge left=new DoubleEdgeListHalfEdge();$  DoubleEdgeListHalfEdge right=new DoubleEdgeListHalfEdge();$  DoubleEdgeListFace referenceDoubleEdgeListFace=this.getReferenceFace(v1,v2);$  DoubleEdgeListHalfEdge prev1=this.getPreviousEdge(v1,referenceDoubleEdgeListFace);$  DoubleEdgeListHalfEdge prev2=this.getPreviousEdge(v2,referenceDoubleEdgeListFace);$  face.edge=left;$  referenceDoubleEdgeListFace.edge=right;$  left.face=face;$  left.next=prev2.next;$  left.origin=v1;$  left.twin=right;$  right.face=referenceDoubleEdgeListFace;$  right.next=prev1.next;$  right.origin=v2;$  right.twin=left;$  prev1.next=left;$  prev2.next=right;$  DoubleEdgeListHalfEdge curr=left.next;$  while (curr != left) {$    curr.face=face;$    curr=curr.next;$  }$  this.edges.add(left);$  this.edges.add(right);$  this.faces.add(face);$}$
private void updateUrlViewportBounds(Rect out,VisualState visualState,boolean ignoreTranslationY){$  int leftViewPosition=getViewBoundsLeftOfLocationBar(visualState);$  int rightViewPosition=getViewBoundsRightOfLocationBar(visualState);$  leftViewPosition-=mUrlBackgroundPadding.left;$  if (mUrlExpansionPercent != 0f) {$    leftViewPosition*=(1f - mUrlExpansionPercent);$    leftViewPosition-=mUrlBackgroundPadding.left * mUrlExpansionPercent;$  }$  rightViewPosition+=mUrlBackgroundPadding.right;$  if (mUrlExpansionPercent != 0f) {$    rightViewPosition+=((getWidth() - rightViewPosition) * mUrlExpansionPercent);$    rightViewPosition+=mUrlBackgroundPadding.right * mUrlExpansionPercent;$  }$  out.set(leftViewPosition,0,rightViewPosition,(int)(mPhoneLocationBar.getMeasuredHeight() + (getHeight() - mPhoneLocationBar.getMeasuredHeight() + mUrlBackgroundPadding.bottom + mUrlBackgroundPadding.top) * mUrlExpansionPercent));$  float yOffset=ignoreTranslationY ? mPhoneLocationBar.getTop() : mPhoneLocationBar.getY();$  out.offset(0,(int)(yOffset - (mUrlBackgroundPadding.top * mUrlExpansionPercent)));$}$
public static SM_SYSTEM_MESSAGE STR_MSG_GAME_TIME(String value0,String value1){$  return new SM_SYSTEM_MESSAGE(1390146,value0,value1);$}$
public static Pose matrixToPose(Matrix4 m){$  Vector3 p=m.getTranslation();$  Quaternion q=new Quaternion();$  q.fromMatrix(m);$  q.conjugate();$  return new Pose(p,q);$}$
public static Long[] transformLongArray(long[] source){$  Long[] destin=new Long[source.length];$  for (int i=0; i < source.length; i++) {$    destin[i]=source[i];$  }$  return destin;$}$
public void build(NotLikeNode node) throws SQLException {$  if (node.isJoined())   throwIllegalJoinExpressionException(node);$  ColumnNode col=(ColumnNode)node.getLeftChild();$  QueryTableData tableData=col.getColumnData().getColumnTableData();$  Object value=((LiteralNode)node.getRightChild()).getConvertedObject(tableData.getTypeDesc(),col.getColumnPath());$  String regex=((String)value).replaceAll("%",".*").replaceAll("_",".");$  NotRegexRange range=new NotRegexRange(col.getColumnPath(),col.getFunctionCallDescription(),regex);$  node.setTemplate(new QueryTemplatePacket(tableData,query.getQueryResultType(),col.getColumnPath(),range));$}$
public static Histogram groupByHistogram(Histogram hist,Set<String> groupFlds,Set<AggregationFn> aggFns){$  if (Double.compare(hist.recordsOutput(),1.0) < 0)   return new Histogram(hist.fields());$  double dvProd=1.0;$  for (  String fld : groupFlds) {$    double dv=0.0;$    for (    Bucket bkt : hist.buckets(fld))     dv+=bkt.distinctValues();$    dvProd*=dv;$  }$  double numGroups=Math.min(dvProd,hist.recordsOutput());$  double gbReduction=numGroups / hist.recordsOutput();$  Histogram gbHist=new Histogram(groupFlds);$  for (  String fld : groupFlds) {$    for (    Bucket bkt : hist.buckets(fld)) {$      double newFreq=bkt.frequency() * gbReduction;$      if (Double.compare(newFreq,1.0) < 0)       continue;$      gbHist.addBucket(fld,new Bucket(bkt.valueRange(),newFreq,bkt.distinctValues(),bkt.valuePercentiles()));$    }$  }$  if (aggFns != null) {$    for (    AggregationFn aggFn : aggFns) {$      String argFld=aggFn.argumentFieldName();$      String fld=aggFn.fieldName();$      if (aggFn.getClass().equals(SumFn.class))       gbHist.addBucket(fld,sumBucket(hist.buckets(argFld),numGroups));$ else       if (aggFn.getClass().equals(AvgFn.class))       gbHist.addBucket(fld,avgBucket(hist.buckets(argFld),numGroups));$ else       if (aggFn.getClass().equals(CountFn.class))       gbHist.addBucket(fld,countBucket(hist.buckets(argFld),numGroups));$ else       if (aggFn.getClass().equals(DistinctCountFn.class))       gbHist.addBucket(fld,distinctCountBucket(hist.buckets(argFld),numGroups));$ else       if (aggFn.getClass().equals(MinFn.class))       gbHist.addBucket(fld,minBucket(hist.buckets(argFld),numGroups));$ else       if (aggFn.getClass().equals(MaxFn.class))       gbHist.addBucket(fld,maxBucket(hist.buckets(argFld),numGroups));$ else       throw new UnsupportedOperationException();$    }$  }$  return syncHistogram(gbHist);$}$
public static ToolbarTapTarget forToolbarOverflow(Toolbar toolbar,CharSequence title,@Nullable CharSequence description){$  return new ToolbarTapTarget(toolbar,false,title,description);$}$
@Override public boolean accept(File file){$  String name=file.getName();$  for (  String wildcard : wildcards) {$    if (FilenameUtils.wildcardMatch(name,wildcard,caseSensitivity)) {$      return true;$    }$  }$  return false;$}$
public SourceCommandTag(final Long id,final String name,final int sourceTimeout,final int sourceRetries,final HardwareAddress hwAddress){$  this.id=id;$  this.name=name;$  this.sourceTimeout=sourceTimeout;$  this.sourceRetries=sourceRetries;$  this.hardwareAddress=hwAddress;$}$
private static SnapCandidate createSnapCandidate(ConstraintWidget widget,ConstraintAnchor.Type type,int x,int y){$  SnapCandidate candidate=new SnapCandidate();$  candidate.source=widget.getAnchor(type);$  ConstraintWidget owner=widget.getParent();$  ConstraintAnchor anchor=new ConstraintAnchor(owner,type);$  candidate.x=x;$  candidate.y=y;$  candidate.target=anchor;$  return candidate;$}$
public WallEditQuery placeId(Integer value){$  return unsafeParam("place_id",value);$}$
public Builder bufferSize(int bufferSize){$  this._bufferSize=bufferSize;$  return this;$}$
private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException {$  in.defaultReadObject();$  _identityExportObjTable=new HashMap<WeakKey,WeakReference<Remote>>();$}$
public boolean findNext(String regularExpression){$  return findFirst(regularExpression);$}$
public Attr createAttributeNS(String namespaceURI,String qualifiedName,String localpart) throws DOMException {$  return new AttrNSImpl(this,namespaceURI,qualifiedName,localpart);$}$
public boolean first() throws GenericEntityException {$  try {$    return resultSet.first();$  }$ catch (  SQLException e) {$    if (!closed) {$      this.close();$      Debug.logWarning("Warning: auto-closed EntityListIterator because of exception: " + e.toString(),module);$    }$    throw new GenericEntityException("Error setting the cursor to first",e);$  }$}$
public void addRule(String ruleExpression,T resultIfMatched){$  mRuleMap.add(new MimeMatcherRule(ruleExpression,resultIfMatched));$}$
@SuppressLint("NewApi") public static void postInvalidateOnAnimation(View view){$  if (Build.VERSION.SDK_INT >= 16)   view.postInvalidateOnAnimation();$ else   view.postInvalidateDelayed(10);$}$
public static String separatorsToWindows(String path){$  if (path == null || path.indexOf(UNIX_SEPARATOR) == -1) {$    return path;$  }$  return path.replace(UNIX_SEPARATOR,WINDOWS_SEPARATOR);$}$
public HeaderIterator iterator(){$  return new SaveListHeaderIterator(this.headers,null);$}$
private boolean isDerivedByRestriction(String ancestorNS,String ancestorName,XSTypeDefinition type){$  XSTypeDefinition oldType=null;$  while (type != null && type != oldType) {$    if ((ancestorName.equals(type.getName())) && ((ancestorNS != null && ancestorNS.equals(type.getNamespace())) || (type.getNamespace() == null && ancestorNS == null))) {$      return true;$    }$    oldType=type;$    type=type.getBaseType();$  }$  return false;$}$
@deprecated public static final boolean equals(CharSequence other,int codepoint){$  return equals(codepoint,other);$}$
public DartRandom(){$  super((EmptyConstructorMarker)null,thisType);$  rnd=new SecureRandom();$}$
private Response<Bitmap> doParse(NetworkResponse response){$  byte[] data=response.data;$  BitmapFactory.Options decodeOptions=new BitmapFactory.Options();$  Bitmap bitmap=null;$  if (mMaxWidth == 0 && mMaxHeight == 0) {$    decodeOptions.inPreferredConfig=mDecodeConfig;$    bitmap=BitmapFactory.decodeByteArray(data,0,data.length,decodeOptions);$  }$ else {$    decodeOptions.inJustDecodeBounds=true;$    BitmapFactory.decodeByteArray(data,0,data.length,decodeOptions);$    int actualWidth=decodeOptions.outWidth;$    int actualHeight=decodeOptions.outHeight;$    int desiredWidth=getResizedDimension(mMaxWidth,mMaxHeight,actualWidth,actualHeight,mScaleType);$    int desiredHeight=getResizedDimension(mMaxHeight,mMaxWidth,actualHeight,actualWidth,mScaleType);$    decodeOptions.inJustDecodeBounds=false;$    decodeOptions.inSampleSize=findBestSampleSize(actualWidth,actualHeight,desiredWidth,desiredHeight);$    Bitmap tempBitmap=BitmapFactory.decodeByteArray(data,0,data.length,decodeOptions);$    if (tempBitmap != null && (tempBitmap.getWidth() > desiredWidth || tempBitmap.getHeight() > desiredHeight)) {$      bitmap=Bitmap.createScaledBitmap(tempBitmap,desiredWidth,desiredHeight,true);$      tempBitmap.recycle();$    }$ else {$      bitmap=tempBitmap;$    }$  }$  if (bitmap == null) {$    return Response.error(new ParseError(response));$  }$ else {$    return Response.success(bitmap,HttpHeaderParser.parseCacheHeaders(response));$  }$}$
public static InputStream toInputStream(String input,Charset encoding){$  return new ByteArrayInputStream(StringCodingUtils.getBytes(input,Charsets.toCharset(encoding)));$}$
public static int round(double value){$  return value > 0 ? (int)(value + 0.5) : -(int)(Math.abs(value) + 0.5);$}$
@Override public Change updateConfig(Equipment equipment,Properties properties) throws IllegalAccessException {$  if ((properties.getProperty("processId")) != null) {$    throw new ConfigurationException(ConfigurationException.INVALID_PARAMETER_VALUE,"Reconfiguration of " + "Equipment does not currently allow it to be reassigned to a different Process!");$  }$  return super.updateConfig(equipment,properties);$}$
public final void finalize(){$  if (LOG.isDebugEnabled()) {$    LOG.debug("finalize() - Removing the reference to the TimPersistenManager");$  }$  persistenceManager=null;$}$
public static String stringToHex(final String data){$  return new String(Hex.encodeHex(ConversionUtils.stringToArray(data)));$}$
public static double min(double[] data){$  double min=Double.NaN;$  for (int i=0; i < data.length; i++) {$    if (Double.isNaN(data[i]))     continue;$    if (Double.isNaN(min) || data[i] < min)     min=data[i];$  }$  return min;$}$
public UsersIsAppUserQuery(VkApiClient client,UserActor actor){$  super(client,"users.isAppUser",BoolInt.class);$  accessToken(actor.getAccessToken());$}$
protected void expandPanel(StateChangeReason reason){$  animatePanelToState(PanelState.EXPANDED,reason);$}$
public Matrix4f adjoint(Matrix4f store){$  if (store == null) {$    store=new Matrix4f();$  }$  float fA0=m00 * m11 - m01 * m10;$  float fA1=m00 * m12 - m02 * m10;$  float fA2=m00 * m13 - m03 * m10;$  float fA3=m01 * m12 - m02 * m11;$  float fA4=m01 * m13 - m03 * m11;$  float fA5=m02 * m13 - m03 * m12;$  float fB0=m20 * m31 - m21 * m30;$  float fB1=m20 * m32 - m22 * m30;$  float fB2=m20 * m33 - m23 * m30;$  float fB3=m21 * m32 - m22 * m31;$  float fB4=m21 * m33 - m23 * m31;$  float fB5=m22 * m33 - m23 * m32;$  store.m00=+m11 * fB5 - m12 * fB4 + m13 * fB3;$  store.m10=-m10 * fB5 + m12 * fB2 - m13 * fB1;$  store.m20=+m10 * fB4 - m11 * fB2 + m13 * fB0;$  store.m30=-m10 * fB3 + m11 * fB1 - m12 * fB0;$  store.m01=-m01 * fB5 + m02 * fB4 - m03 * fB3;$  store.m11=+m00 * fB5 - m02 * fB2 + m03 * fB1;$  store.m21=-m00 * fB4 + m01 * fB2 - m03 * fB0;$  store.m31=+m00 * fB3 - m01 * fB1 + m02 * fB0;$  store.m02=+m31 * fA5 - m32 * fA4 + m33 * fA3;$  store.m12=-m30 * fA5 + m32 * fA2 - m33 * fA1;$  store.m22=+m30 * fA4 - m31 * fA2 + m33 * fA0;$  store.m32=-m30 * fA3 + m31 * fA1 - m32 * fA0;$  store.m03=-m21 * fA5 + m22 * fA4 - m23 * fA3;$  store.m13=+m20 * fA5 - m22 * fA2 + m23 * fA1;$  store.m23=-m20 * fA4 + m21 * fA2 - m23 * fA0;$  store.m33=+m20 * fA3 - m21 * fA1 + m22 * fA0;$  return store;$}$
private void sendMail(){$  String emailAddress;$  try {$    Class<?> stringClass=R.string.class;$    Field mailLoggerField=stringClass.getField("mail_logger");$    int emailAddressId=(Integer)mailLoggerField.get(null);$    emailAddress=getString(emailAddressId);$  }$ catch (  Exception e) {$    emailAddress="";$  }$  ArrayList<Uri> uris=new ArrayList<Uri>();$  for (  String file : Log_OC.getLogFileNames()) {$    File logFile=new File(mLogPath,file);$    if (logFile.exists()) {$      uris.add(Uri.fromFile(logFile));$    }$  }$  Intent intent=new Intent(Intent.ACTION_SEND_MULTIPLE);$  intent.putExtra(Intent.EXTRA_EMAIL,emailAddress);$  String subject=String.format(getString(R.string.log_send_mail_subject),getString(R.string.app_name));$  intent.putExtra(Intent.EXTRA_SUBJECT,subject);$  intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);$  intent.setType(MAIL_ATTACHMENT_TYPE);$  intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM,uris);$  try {$    startActivity(intent);$  }$ catch (  ActivityNotFoundException e) {$    Toast.makeText(this,getString(R.string.log_send_no_mail_app),Toast.LENGTH_LONG).show();$    Log_OC.i(TAG,"Could not find app for sending log history.");$  }$}$
public void addColumnListener(ColumnListener listener){$  return;$}$
public static Intent createWhatsAppShareIntent(String body){$  Intent intent=new Intent();$  intent.setAction(Intent.ACTION_SEND);$  intent.putExtra(Intent.EXTRA_TEXT,body);$  intent.setType("text/plain");$  intent.setPackage("com.whatsapp");$  return intent;$}$
QueryChanges limit(int limit){$  Preconditions.checkArgument(limit > 0);$  this.limit=limit;$  return this;$}$
public Code39Reader(){$  this(false);$}$
public void removeDiscoveryListener(DiscoveryListener listener){$  listeners.remove(listener);$}$
public static int extractReads(final ProgressListener progressListener,final String classificationName,final Collection<Integer> classIds,final Map<Integer,String> classId2Name,Map<Integer,Collection<Integer>> classId2Descendants,final String outDirectory,final String outFileName,final Document doc,final boolean summarized) throws IOException, CanceledException {$  progressListener.setSubtask("Searching through classification by " + classificationName);$  final IConnector connector=doc.getConnector();$  int numberOfReads=0;$  final IClassificationBlock classificationBlock=connector.getClassificationBlock(classificationName);$  if (classificationBlock == null)   return 0;$  BufferedWriter w=null;$  try {$    progressListener.setMaximum(10 * classIds.size());$    final boolean useMultipleFileNames=outFileName.contains("%t");$    for (    Integer classId : classIds) {$      Set<Integer> all=new HashSet<>();$      all.add(classId);$      if (summarized && classId2Descendants.get(classId) != null)       all.addAll(classId2Descendants.get(classId));$      final String outFileFinalName;$      if (useMultipleFileNames)       outFileFinalName=outFileName.replaceAll("%t",Basic.toCleanName(classId2Name.get(classId)));$ else       outFileFinalName=outFileName;$      File outFile=new File(outDirectory,outFileFinalName);$      for (      Integer id : all) {$        if (classificationBlock.getSum(id) > 0) {$          try (IReadBlockIterator it=connector.getReadsIterator(classificationName,id,0,10000,true,false)){$            while (it.hasNext()) {$              if (w == null)               w=new BufferedWriter(new FileWriter(outFile));$              IReadBlock readBlock=it.next();$              String readHeader=readBlock.getReadHeader();$              if (!readHeader.startsWith(">"))               w.write(">");$              w.write(readHeader);$              if (!readHeader.endsWith("\n"))               w.write("\n");$              String readData=readBlock.getReadSequence();$              if (readData != null) {$                w.write(readData);$                if (!readData.endsWith("\n"))                 w.write("\n");$              }$              numberOfReads++;$              progressListener.checkForCancel();$            }$          }$           progressListener.checkForCancel();$        }$      }$      progressListener.incrementProgress();$      if (useMultipleFileNames && w != null) {$        w.close();$        w=null;$      }$    }$  }$ catch (  CanceledException ex) {$    System.err.println("USER CANCELED");$  }$ finally {$    if (w != null)     w.close();$  }$  return numberOfReads;$}$
public PassthroughRule(String label){$  this.label=label;$}$
private static Comparable castToComparable(Object obj){$  try {$    return (Comparable)obj;$  }$ catch (  ClassCastException cce) {$    throw new IllegalArgumentException("Type " + obj.getClass() + " doesn't implement Comparable, Serialization mode might be different than "+ StorageType.OBJECT+ ".",cce);$  }$}$
protected static ImageIcon createImageIcon(String path){$  java.net.URL imgURL=ImageFileExtensionUtils.class.getResource(path);$  if (imgURL != null) {$    return new ImageIcon(imgURL);$  }$ else {$    ConsoleManager.getInstance().error(ImageFileExtensionUtils.class,"Couldn't find file: " + path);$    return null;$  }$}$
public AdsAddOfficeUsersQuery addOfficeUsers(UserActor actor,int accountId,String data){$  return new AdsAddOfficeUsersQuery(getClient(),actor,accountId,data);$}$
public static void startMe(Context _context){$  Intent intent=new Intent(_context,LaunchScreen.class);$  _context.startActivity(intent);$}$
public static boolean equal(Entry[] attrSet1,Entry[] attrSet2){$  return contains(attrSet1,attrSet2) && contains(attrSet2,attrSet1);$}$
public static RestMethod create(Method method,RestKind kind,String collectionName,String customMethodName){$  return new RestMethod(method,kind,collectionName,customMethodName);$}$
@ManagedOperation(description="Refreshes all state tags (new timestamp).") public void refreshStateTags(){$  LOGGER.info("Recovery task: refreshing state tags.");$  supervisionFacade.refreshStateTags();$  LOGGER.info("Recovery task: finished refreshing state tags.");$}$
protected GroupsGetMembersQueryWithFields fields(UserField... value){$  return unsafeParam("fields",value);$}$
private void addNewModelForAssociatedModel(Collection<DataSupport> associatedModelCollection,DataSupport baseObj){$  if (!associatedModelCollection.contains(baseObj)) {$    associatedModelCollection.add(baseObj);$  }$}$
public static Map<String,Integer> offsetMap(Schema sch){$  int pos=0;$  Map<String,Integer> offsetMap=new HashMap<String,Integer>();$  for (  String fldname : sch.fields()) {$    offsetMap.put(fldname,pos);$    pos+=Page.maxSize(sch.type(fldname));$  }$  return offsetMap;$}$
@Override public void startCDATA(){$  theNextState=S_CDATA;$}$
public TypeRef makeRepeated(){$  return interner.intern(new TypeRef(kind,Cardinality.REPEATED,messageType,enumType));$}$
public void bind(@NonNull RecyclerView recyclerView){$  unbind();$  this.recyclerViewWeakReference=new WeakReference<>(recyclerView);$  recyclerView.getAdapter().registerAdapterDataObserver(this);$}$
final public void addCallTarget(MethodPAG srcmpag,MethodPAG tgtmpag,Stmt s,Context srcContext,Context tgtContext,Edge e){$  MethodNodeFactory srcnf=srcmpag.nodeFactory();$  MethodNodeFactory tgtnf=tgtmpag.nodeFactory();$  InvokeExpr ie=s.getInvokeExpr();$  boolean virtualCall=callAssigns.containsKey(ie);$  int numArgs=ie.getArgCount();$  for (int i=0; i < numArgs; i++) {$    Value arg=ie.getArg(i);$    if (!(arg.getType() instanceof RefLikeType))     continue;$    if (arg instanceof NullConstant)     continue;$    Node argNode=srcnf.getNode(arg);$    argNode=srcmpag.parameterize(argNode,srcContext);$    argNode=argNode.getReplacement();$    Node parm=tgtnf.caseParm(i);$    parm=tgtmpag.parameterize(parm,tgtContext);$    parm=parm.getReplacement();$    addEdge(argNode,parm);$    Pair<Node,Node> pval=addInterproceduralAssignment(argNode,parm,e);$    callAssigns.put(ie,pval);$    callToMethod.put(ie,srcmpag.getMethod());$  }$  if (ie instanceof InstanceInvokeExpr) {$    InstanceInvokeExpr iie=(InstanceInvokeExpr)ie;$    Node baseNode=srcnf.getNode(iie.getBase());$    baseNode=srcmpag.parameterize(baseNode,srcContext);$    baseNode=baseNode.getReplacement();$    Node thisRef=tgtnf.caseThis();$    thisRef=tgtmpag.parameterize(thisRef,tgtContext);$    thisRef=thisRef.getReplacement();$    addEdge(baseNode,thisRef);$    Pair<Node,Node> pval=addInterproceduralAssignment(baseNode,thisRef,e);$    callAssigns.put(ie,pval);$    callToMethod.put(ie,srcmpag.getMethod());$    if (virtualCall && !virtualCallsToReceivers.containsKey(ie)) {$      virtualCallsToReceivers.put(ie,baseNode);$    }$  }$  if (s instanceof AssignStmt) {$    Value dest=((AssignStmt)s).getLeftOp();$    if (dest.getType() instanceof RefLikeType && !(dest instanceof NullConstant)) {$      Node destNode=srcnf.getNode(dest);$      destNode=srcmpag.parameterize(destNode,srcContext);$      destNode=destNode.getReplacement();$      Node retNode=tgtnf.caseRet();$      retNode=tgtmpag.parameterize(retNode,tgtContext);$      retNode=retNode.getReplacement();$      addEdge(retNode,destNode);$      Pair<Node,Node> pval=addInterproceduralAssignment(retNode,destNode,e);$      callAssigns.put(ie,pval);$      callToMethod.put(ie,srcmpag.getMethod());$    }$  }$}$
public boolean want(Edge e){$  return e.isExplicit();$}$
public void calculateCenter(){$  if (center == null) {$    center=new Vector3f(pointa);$  }$ else {$    center.set(pointa);$  }$  center.addLocal(pointb).addLocal(pointc).multLocal(FastMath.ONE_THIRD);$}$
protected MarketAddAlbumQuery title(String value){$  return unsafeParam("title",value);$}$
public IdsQuery(String typeName,Object[] ids,QueryResultType queryResultType){$  this(typeName,ids,null,null,queryResultType);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Paralyze_END_A_TO_B(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200905,skilltarget);$}$
public void readLoop(ReadCallback readCallback) throws IOException {$  Frame frame=new Frame();$  do {$    frame.readFrom(mBufferedInput);$    mCurrentPayload.write(frame.payloadData,0,(int)frame.payloadLen);$    if (frame.fin) {$      byte[] completePayload=mCurrentPayload.toByteArray();$      readCallback.onCompleteFrame(frame.opcode,completePayload,completePayload.length);$      mCurrentPayload.reset();$    }$  }$ while (frame.opcode != Frame.OPCODE_CONNECTION_CLOSE);$}$
public static SM_SYSTEM_MESSAGE STR_MSG_SKIN_CHANGE_TIME_EXPIRED(String value0){$  return new SM_SYSTEM_MESSAGE(1400291,value0);$}$
public void outputData(){$  out.println("The res:");$  for (int i=0; i < allNum; i++) {$    out.println(check_data[i]);$  }$}$
public List<String> tokenize(URL url,PrintWriter writer){$  try {$    System.out.println("Extracting the text content of the URL...");$    String text=ArticleExtractor.INSTANCE.getText(new InputStreamReader(url.openStream(),"UTF-8"));$    if (verbose) {$      System.out.println("URL text content:");$      System.out.println(text);$    }$    System.out.println("Tokenizing the content...");$    JavaRDD<String> input=jsc.parallelize(Arrays.asList(text.split("\\n+")));$    JavaRDD<String> output=tokenize(input.map(normalizationFunction));$    List<String> lines=output.collect();$    for (    String line : lines) {$      writer.write(line);$      writer.write('\n');$    }$    writer.flush();$    return lines;$  }$ catch (  BoilerpipeProcessingException e) {$    e.printStackTrace();$  }$catch (  UnsupportedEncodingException e) {$    e.printStackTrace();$  }$catch (  IOException e) {$    e.printStackTrace();$  }$  return null;$}$
private Base64(){$}$
public LinkedList<Patch> patch_make(LinkedList<Diff> diffs){$  if (diffs == null) {$    throw new IllegalArgumentException("Null inputs. (patch_make)");$  }$  String text1=diff_text1(diffs);$  return patch_make(text1,diffs);$}$
public GumbelDistribution(double mu,double beta) throws MathIllegalArgumentException {$  if (beta <= 0) {$    throw new MathIllegalArgumentException(LocalizedCoreFormats.SCALE,beta);$  }$  this.beta=beta;$  this.mu=mu;$}$
public Bundler putIntArray(String key,int[] value){$  bundle.putIntArray(key,value);$  return this;$}$
public boolean pre_jimplify(){$  return soot.PhaseOptions.getBoolean(options,"pre-jimplify");$}$
public static ExpectedCondition<Boolean> clickButton(final WebElement button){$  return null;$}$
public void entity(String name,int value){$  theEntities.put(name,value);$}$
public static StorableActivityFence starting(@ActivityType int... activityTypes){$  return new StorableActivityFence(activityTypes,START_TYPE);$}$
private void updateRingColor(float interpolatedTime,Ring ring){$  if (interpolatedTime > COLOR_START_DELAY_OFFSET) {$    ring.setColor(evaluateColorChange((interpolatedTime - COLOR_START_DELAY_OFFSET) / (1.0f - COLOR_START_DELAY_OFFSET),ring.getStartingColor(),ring.getNextColor()));$  }$}$
public boolean shouldInitializeClassesRelationStatus(){$  return getConfiguration().getMetaDataRepositoryInstance().getMetaDatas().length != _processedClasses.size();$}$
public static <E>Stream<Map.Entry<E,E>> crossProductOrdered(Stream<E> stream,Comparator<E> comparator){$  Objects.requireNonNull(stream);$  Objects.requireNonNull(comparator);$  CrossProductOrderedSpliterator<E> spliterator=CrossProductOrderedSpliterator.ordered(stream.spliterator(),comparator);$  return StreamSupport.stream(spliterator,stream.isParallel()).onClose(null);$}$
public Activity runAfter(String beforeKey,String afterKey){$  Activity before=get(beforeKey);$  Activity after=get(afterKey);$  if (before != null && after != null)   ActivityManager.scheduleAfter(before,after);$  return after;$}$
public PhotosImplementor(PhotosModel model,PhotosView view){$  this.model=model;$  this.view=view;$}$
protected DateTimeData parse(String str) throws SchemaDateTimeException {$  DateTimeData date=new DateTimeData(str,this);$  int len=str.length();$  if (str.charAt(0) != '-' || str.charAt(1) != '-' || str.charAt(2) != '-') {$    throw new SchemaDateTimeException("Error in day parsing");$  }$  date.year=YEAR;$  date.month=MONTH;$  date.day=parseInt(str,3,5);$  if (DAY_SIZE < len) {$    if (!isNextCharUTCSign(str,DAY_SIZE,len)) {$      throw new SchemaDateTimeException("Error in day parsing");$    }$ else {$      getTimeZone(str,date,DAY_SIZE,len);$    }$  }$  validateDateTime(date);$  saveUnnormalized(date);$  if (date.utc != 0 && date.utc != 'Z') {$    normalize(date);$  }$  date.position=2;$  return date;$}$
private Builder(@Nonnull final Builder builder){$  Check.notNull(builder,"builder");$  icon=builder.icon;$  id=builder.id;$  infoUrl=builder.infoUrl;$  name=builder.name;$}$
public void init$Children(){$  children=new ASTNode[4];$  setChild(new List(),1);$  setChild(new Opt(),2);$  setChild(new List(),3);$}$
public void ReInit(SimpleCharStream stream,int lexState){$  ReInit(stream);$  SwitchTo(lexState);$}$
public static byte[] toUtf8(String s){$  try {$    ByteArrayOutputStream bs=new ByteArrayOutputStream(s.length());$    DataOutputStream d=new DataOutputStream(bs);$    d.writeUTF(s);$    return bs.toByteArray();$  }$ catch (  IOException e) {$    G.v().out.println("Some sort of IO exception in toUtf8 with " + s);$  }$  return null;$}$
private void parseLet(int indent,boolean firstContent,String header,Layout layout,List<Elem> elems){$  TokenStream tokens=new TokenStream(header);$  Elem let=parseLetBindingsThenBody(indent,firstContent,tokens,layout);$  if (let != null) {$    elems.add(Block.create(!firstContent,let));$  }$}$
private static String processResult(Map<String,Object> result,HttpServletRequest request){$  StringBuilder errMsg=new StringBuilder();$  if (result.containsKey(ModelService.ERROR_MESSAGE_LIST)) {$    List<String> errorMsgs=UtilGenerics.checkList(result.get(ModelService.ERROR_MESSAGE_LIST));$    Iterator<String> iterator=errorMsgs.iterator();$    errMsg.append("<ul>");$    while (iterator.hasNext()) {$      errMsg.append("<li>");$      errMsg.append(iterator.next());$      errMsg.append("</li>");$    }$    errMsg.append("</ul>");$  }$ else   if (result.containsKey(ModelService.ERROR_MESSAGE)) {$    errMsg.append(result.get(ModelService.ERROR_MESSAGE));$    request.setAttribute("_ERROR_MESSAGE_",errMsg.toString());$  }$  if (errMsg.length() > 0) {$    request.setAttribute("_ERROR_MESSAGE_",errMsg.toString());$    if (result.get(ModelService.RESPONSE_MESSAGE).equals(ModelService.RESPOND_SUCCESS)) {$      return NON_CRITICAL_ERROR;$    }$ else {$      return ERROR;$    }$  }$ else {$    return NO_ERROR;$  }$}$
public Iterator<E> iterator(){$  return new PatchingIterator(innerChain);$}$
public void clearAccumulatedTorque(){$  this.torques.clear();$}$
public Notifier(){$  super("event notifier");$  setDaemon(true);$}$
public static Object executeScript(String filePath,String functionName,Map<String,Object> context){$  return executeScript(filePath,functionName,context,new Object[]{context});$}$
public static Z1 genc(Zmat A,int r1,int r2,int c) throws JampackException {$  int i, ru;$  double norm;$  double s;$  Z scale;$  Z t=new Z();$  Z t1=new Z();$  c=c - A.basex;$  r1=r1 - A.basex;$  r2=r2 - A.basex;$  ru=r2 - r1 + 1;$  Z1 u=new Z1(r2 - r1 + 1);$  for (i=r1; i <= r2; i++) {$    u.put(i - r1,A.re[i][c],A.im[i][c]);$    A.re[i][c]=0.0;$    A.im[i][c]=0.0;$  }$  norm=Norm.fro(u);$  if (r1 == r2 || norm == 0) {$    A.re[r1][c]=-u.re[0];$    A.im[r1][c]=-u.im[0];$    u.put(0,Math.sqrt(2),0);$    return u;$  }$  scale=new Z(1 / norm,0);$  if (u.re[0] != 0 || u.im[0] != 0) {$    t=u.get(0);$    scale.Times(scale,t.Div(t1.Conj(t),Z.abs(t)));$  }$  A.put(r1 + A.basex,c + A.basex,t.Minus(t.Div(Z.ONE,scale)));$  for (i=0; i < ru; i++) {$    u.Times(i,scale);$  }$  u.re[0]=u.re[0] + 1;$  u.im[0]=0;$  s=Math.sqrt(1 / u.re[0]);$  for (i=0; i < ru; i++) {$    u.re[i]=s * u.re[i];$    u.im[i]=s * u.im[i];$  }$  return u;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SLOT_FULL(String value0){$  return new SM_SYSTEM_MESSAGE(1300070,value0);$}$
public void notifyEventListeners(ZWaveEvent event){$  logger.debug("Notifying event listeners: {}",event.getClass().getSimpleName());$  ArrayList<ZWaveEventListener> copy=new ArrayList<ZWaveEventListener>(zwaveEventListeners);$  for (  ZWaveEventListener listener : copy) {$    listener.ZWaveIncomingEvent(event);$  }$  if (event instanceof ZWaveInclusionEvent) {$    ZWaveInclusionEvent incEvent=(ZWaveInclusionEvent)event;$switch (incEvent.getEvent()) {$case IncludeSlaveFound:$      requestAddNodesStop();$    logger.debug("NODE {}: Including node.",incEvent.getNodeId());$  if (getNode(incEvent.getNodeId()) != null) {$    logger.debug("NODE {}: Newly included node already exists - not initialising.",incEvent.getNodeId());$    break;$  }$lastIncludeSlaveFoundEvent=incEvent;$ZWaveNode newNode=new ZWaveNode(homeId,incEvent.getNodeId(),this);$ZWaveDeviceClass deviceClass=newNode.getDeviceClass();$deviceClass.setBasicDeviceClass(incEvent.getBasic());$deviceClass.setGenericDeviceClass(incEvent.getGeneric());$deviceClass.setSpecificDeviceClass(incEvent.getSpecific());$for (CommandClass commandClass : incEvent.getCommandClasses()) {$ZWaveCommandClass zwaveCommandClass=ZWaveCommandClass.getInstance(commandClass.getKey(),newNode,this);$if (zwaveCommandClass != null) {$logger.debug("NODE {}: Inclusion is adding command class {}.",incEvent.getNodeId(),commandClass);$if (commandClass == CommandClass.SECURITY) {$}$newNode.addCommandClass(zwaveCommandClass);$}$}$zwaveNodes.putIfAbsent(incEvent.getNodeId(),newNode);$break;$case IncludeDone:$if (incEvent.getNodeId() == 0) {$break;$}$ZWaveNode node=getNode(incEvent.getNodeId());$if (node == null) {$logger.debug("NODE {}: Newly included node doesn't exist - initialising from start.",incEvent.getNodeId());$addNode(incEvent.getNodeId());$break;$}$if (node.getNodeInitStage() != ZWaveNodeInitStage.EMPTYNODE) {$logger.debug("NODE {}: Newly included node already initialising at {}",incEvent.getNodeId(),node.getNodeInitStage());$break;$}$if (node.getDeviceClass().getBasicDeviceClass() != Basic.NOT_KNOWN) {$node.initialiseNode(ZWaveNodeInitStage.INCLUSION_START);$}$ else {$node.initialiseNode(ZWaveNodeInitStage.EMPTYNODE);$}$break;$case ExcludeDone:$if (incEvent.getNodeId() == 0) {$break;$}$logger.debug("NODE {}: Excluding node.",incEvent.getNodeId());$if (getNode(incEvent.getNodeId()) == null) {$logger.debug("NODE {}: Excluding node that doesn't exist.",incEvent.getNodeId());$break;$}$zwaveNodes.remove(incEvent.getNodeId());$ZWaveNodeSerializer nodeSerializer=new ZWaveNodeSerializer();$nodeSerializer.DeleteNode(event.getNodeId());$break;$default :$break;$}$}$ else if (event instanceof ZWaveNetworkEvent) {$ZWaveNetworkEvent networkEvent=(ZWaveNetworkEvent)event;$switch (networkEvent.getEvent()) {$case DeleteNode:$if (getNode(networkEvent.getNodeId()) == null) {$logger.debug("NODE {}: Deleting a node that doesn't exist.",networkEvent.getNodeId());$break;$}$this.zwaveNodes.remove(networkEvent.getNodeId());$ZWaveNodeSerializer nodeSerializer=new ZWaveNodeSerializer();$nodeSerializer.DeleteNode(event.getNodeId());$break;$default :$break;$}$}$ else if (event instanceof ZWaveNodeStatusEvent) {$ZWaveNodeStatusEvent statusEvent=(ZWaveNodeStatusEvent)event;$logger.debug("NODE {}: Node Status event - Node is {}",statusEvent.getNodeId(),statusEvent.getState());$ZWaveNode node=getNode(event.getNodeId());$if (node == null) {$logger.error("NODE {}: Node is unknown!",statusEvent.getNodeId());$return;$}$switch (statusEvent.getState()) {$case DEAD:$break;$case FAILED:$break;$case ALIVE:$break;$}$}$}$
protected Criteria createCriteriaInternal(){$  Criteria criteria=new Criteria();$  return criteria;$}$
public Legion(int legionId,String legionName){$  this();$  this.legionId=legionId;$  this.legionName=legionName;$}$
public static boolean PM(int packedTime){$  return packedTime >= NOON;$}$
@Override public void onTaskError(long id){$  int position=mTaskAdapter.getPositionById(id);$  if (position != -1) {$    Task task=mTaskAdapter.getItem(position);$    if (task.getState() != Task.STATE_PAUSE) {$      mTaskAdapter.getItem(position).setState(Task.STATE_ERROR);$      notifyItemChanged(position);$    }$  }$}$
public boolean validateRequest(String publicKey,String hmac,String query){$  ApiResult apiResult=this.api.getApiByPublicKey(publicKey);$  if (apiResult == null) {$    return false;$  }$  String myHmac=HmacUtils.hmacSha1Hex(apiResult.getPrivateKey(),query);$  return myHmac.equals(hmac);$}$
@Override public void emptyElement(QName element,XMLAttributes attributes,Augmentations augs) throws XNIException {$  startElement(element,attributes,augs);$  endElement(element,augs);$}$
public PayloadBuilder withScheme(String scheme){$  _scheme=checkNotNull(scheme,"scheme");$  return this;$}$
public static boolean contentEqualsIgnoreEOL(File file1,File file2,String charsetName) throws IOException {$  boolean file1Exists=file1.exists();$  if (file1Exists != file2.exists()) {$    return false;$  }$  if (!file1Exists) {$    return true;$  }$  if (file1.isDirectory() || file2.isDirectory()) {$    throw new IOException("Can't compare directories, only files");$  }$  if (file1.getCanonicalFile().equals(file2.getCanonicalFile())) {$    return true;$  }$  Reader input1=null;$  Reader input2=null;$  try {$    if (charsetName == null) {$      input1=new InputStreamReader(new FileInputStream(file1));$      input2=new InputStreamReader(new FileInputStream(file2));$    }$ else {$      input1=new InputStreamReader(new FileInputStream(file1),charsetName);$      input2=new InputStreamReader(new FileInputStream(file2),charsetName);$    }$    return IOUtils.contentEqualsIgnoreEOL(input1,input2);$  }$  finally {$    IOUtils.closeQuietly(input1);$    IOUtils.closeQuietly(input2);$  }$}$
public Vector divide(Vector vec){$  x/=vec.x;$  y/=vec.y;$  z/=vec.z;$  return this;$}$
public boolean isApplicable(){$  try {$    return getViewer().isPCoATab() && getViewer().getPcoaTab().getPCoA().getEigenValues() != null;$  }$ catch (  Exception ex) {$    return false;$  }$}$
public String geom_dump_verbose(){$  return soot.PhaseOptions.getString(options,"geom-dump-verbose");$}$
@NonNull protected static Bitmap ensureBitmapIsUsable(@Nullable Bitmap target,int viewWidth,int viewHeight){$  if (target != null) {$    if (target.getWidth() > viewWidth && target.getHeight() > viewHeight) {$      target=Bitmap.createBitmap(target,0,0,viewWidth,viewHeight);$    }$ else     if (target.getWidth() != viewWidth || target.getHeight() != viewHeight) {$      target.recycle();$      target=null;$    }$  }$  if (target == null) {$    target=Bitmap.createBitmap(viewWidth,viewHeight,Bitmap.Config.ARGB_8888);$  }$  return target;$}$
public OpenMapRealVector append(OpenMapRealVector v){$  OpenMapRealVector res=new OpenMapRealVector(this,v.getDimension());$  Iterator iter=v.entries.iterator();$  while (iter.hasNext()) {$    iter.advance();$    res.setEntry(iter.key() + virtualSize,iter.value());$  }$  return res;$}$
public static int apply(Director dir,String cName,File file,boolean allTaxonomicLevels,ProgressListener progressListener) throws IOException, CanceledException {$  final ViewerBase viewer=(ViewerBase)dir.getViewerByClassName(cName);$  if (viewer == null)   throw new IOException(cName + " Viewer not open");$  final NodeSet selectedNodes=viewer.getSelectedNodes();$  if (selectedNodes.size() == 0) {$    throw new IOException("No nodes selected");$  }$  System.err.println("Writing file: " + file);$  progressListener.setSubtask("Processing " + cName + " nodes");$  progressListener.setMaximum(selectedNodes.size());$  progressListener.setProgress(0);$  int maxRankIndex=0;$  if (allTaxonomicLevels) {$    maxRankIndex=determineMaxTaxonomicRankIndex(selectedNodes);$    System.err.println("Exporting " + (maxRankIndex + 1) + " taxonomic levels down to rank of '"+ ranks[maxRankIndex]+ "'");$  }$  final int numberOfLevels=maxRankIndex + 1;$  int numberOfRows=0;$  int nodesSkipped=0;$  final int numberOfColumns=dir.getDocument().getNumberOfSamples();$  try (BufferedWriter w=new BufferedWriter(new FileWriter(file))){$    for (int i=0; i < numberOfLevels; i++)     w.write("Level_" + (i + 1) + "\t");$    w.write("Observation Ids");$    for (    String sample : dir.getDocument().getSampleNames()) {$      w.write("\t" + sample);$    }$    w.write("\n");$    for (    Node v : selectedNodes) {$      final String name=viewer.getLabel(v);$      final Integer taxonId=(Integer)v.getInfo();$      if (maxRankIndex > 1) {$        final String path=makePath(v,maxRankIndex);$        if (path != null)         w.write(String.format("%s\tID%d",path,taxonId));$ else {$          if (nodesSkipped < 5)           System.err.println("Skipping node: " + name);$ else           if (nodesSkipped == 5)           System.err.println("Skipping more nodes...");$          nodesSkipped++;$          continue;$        }$      }$ else       w.write(String.format("%s\tID%d",name,taxonId));$      NodeData data=viewer.getNodeData(v);$      if (v.getOutDegree() == 0) {$        for (int i=0; i < numberOfColumns; i++)         w.write("\t" + data.getSummarized(i));$      }$ else {$        for (int i=0; i < numberOfColumns; i++)         w.write("\t" + data.getAssigned(i));$      }$      w.write("\n");$      numberOfRows++;$    }$  }$   System.err.println("Nodes skipped: " + nodesSkipped);$  return numberOfRows;$}$
public void animateX(int durationMillis,Easing.EasingOption easing){$  if (android.os.Build.VERSION.SDK_INT < 11)   return;$  ObjectAnimator animatorX=ObjectAnimator.ofFloat(this,"phaseX",0f,1f);$  animatorX.setInterpolator(Easing.getEasingFunctionFromOption(easing));$  animatorX.setDuration(durationMillis);$  animatorX.addUpdateListener(mListener);$  animatorX.start();$}$
public void init$Children(){$  children=new ASTNode[1];$  setChild(new List(),0);$}$
public IntColumn(int nrows,int capacity,int defaultValue){$  super(int.class,new Integer(defaultValue));$  if (capacity < nrows) {$    throw new IllegalArgumentException("Capacity value can not be less than the row count.");$  }$  m_values=new int[capacity];$  Arrays.fill(m_values,defaultValue);$  m_size=nrows;$}$
public grammaticalityEstimator(String sCorpusDir,int iMinChar,int iMaxChar,int iMinWord,int iMaxWord,int iNeighbourhoodWindow,boolean bFlatDir){$  iMinCharNGram=iMinChar;$  iMaxCharNGram=iMaxChar;$  iMinWordNGram=iMinWord;$  iMaxWordNGram=iMaxWord;$  DistroDocs=new TreeMap<Integer,DistributionDocument>();$  DistroWordDocs=new TreeMap<Integer,DistributionWordDocument>();$  StringBuffer sb=new StringBuffer();$  DocumentSet ds=new DocumentSet(sCorpusDir,1.0);$  ds.createSets(bFlatDir);$  Iterator iTexts=ds.getTrainingSet().iterator();$  while (iTexts.hasNext()) {$    CategorizedFileEntry cfeCur=(CategorizedFileEntry)iTexts.next();$    try {$      BufferedReader bf=new BufferedReader(new FileReader(cfeCur.getFileName()));$      String sTmp;$      while ((sTmp=bf.readLine()) != null)       sb.append(sTmp);$      bf.close();$    }$ catch (    FileNotFoundException ex) {$      ex.printStackTrace(System.err);$    }$catch (    IOException ex) {$      ex.printStackTrace(System.err);$    }$    sb.append((char)0);$  }$  FullTextDataString=sb.toString();$  for (int iCnt=iMinCharNGram; iCnt <= iMaxCharNGram; iCnt++) {$    DistroDocs.put(iCnt,new DistributionDocument(iNeighbourhoodWindow,iCnt));$  }$  for (int iCnt=iMinWordNGram; iCnt <= iMaxWordNGram; iCnt++) {$    DistroWordDocs.put(iCnt,new DistributionWordDocument(iNeighbourhoodWindow,iCnt));$  }$}$
@RequestMapping(value="/{namespace}/{key}",method=RequestMethod.PUT,produces="application/json",consumes="application/json") public void updateKeyJsonValue(@PathVariable String namespace,@PathVariable String key,@RequestBody String body,HttpServletRequest request,HttpServletResponse response) throws WebMessageException, IOException {$  if (!hasAccess(namespace)) {$    throw new WebMessageException(WebMessageUtils.forbidden("The namespace '" + namespace + "' is protected, and you don't have the right authority to access it."));$  }$  KeyJsonValue keyJsonValue=keyJsonValueService.getKeyJsonValue(namespace,key);$  if (keyJsonValue == null) {$    throw new WebMessageException(WebMessageUtils.notFound("The key '" + key + "' was not found in the namespace '"+ namespace+ "'."));$  }$  if (!renderService.isValidJson(body)) {$    throw new WebMessageException(WebMessageUtils.badRequest("The data is not valid JSON."));$  }$  keyJsonValue.setValue(body);$  keyJsonValueService.updateKeyJsonValue(keyJsonValue);$  response.setStatus(HttpServletResponse.SC_OK);$  messageService.sendJson(WebMessageUtils.ok("Key '" + key + "' updated."),response);$}$
@Override protected int readBlock(double[] target,int targetPos){$  int blockSize=getBlockSize();$  int validSamplesInFrame=frameProvider.validSamplesInFrame();$  int frameLength=frameProvider.getFrameLengthSamples();$  if (validSamplesInFrame < frameLength) {$    assert !frameProvider.hasMoreData();$    int nCopied;$    if (blockSize < (frameLength - validSamplesInFrame)) {$      nCopied=blockSize;$    }$ else {$      nCopied=blockSize - (frameLength - validSamplesInFrame);$    }$    assert nCopied > 0;$    System.arraycopy(memory,0,target,targetPos,nCopied);$    return nCopied;$  }$ else {$    System.arraycopy(memory,0,target,targetPos,blockSize);$    System.arraycopy(memory,blockSize,memory,0,memory.length - blockSize);$    Arrays.fill(memory,memory.length - blockSize,memory.length,0);$    return blockSize;$  }$}$
public JToggleGroup createCheckboxGroup(){$  return createToggleGroup(JToggleGroup.CHECKBOX);$}$
public void addBodyDecl(BodyDecl node){$  List<BodyDecl> list=(parent == null || state == null) ? getBodyDeclListNoTransform() : getBodyDeclList();$  list.addChild(node);$}$
public WildcardFilter(String[] wildcards){$  if (wildcards == null) {$    throw new IllegalArgumentException("The wildcard array must not be null");$  }$  this.wildcards=new String[wildcards.length];$  System.arraycopy(wildcards,0,this.wildcards,0,wildcards.length);$}$
Object decompressObject(MarshObject objToDecompress) throws IOException, ClassNotFoundException {$  CompressedMarshObjectConvertor cv=null;$  Object obj=null;$  try {$    cv=_compressedConvertorPool.getResource();$    obj=cv.getObject(objToDecompress);$  }$  finally {$    if (cv != null)     _compressedConvertorPool.freeResource(cv);$  }$  return obj;$}$
protected boolean isInitialMethod(SootMethod sm){$  for (  Unit u : this.initialSeeds.keySet())   if (interproceduralCFG().getMethodOf(u) == sm)   return true;$  return false;$}$
public int addFile(File file){$  return getFileId(file);$}$
public void start(Context context,Fragment fragment){$  start(context,fragment,REQUEST_CROP);$}$
public NewsfeedSearchQueryWithExtended fields(EnumParam... value){$  return unsafeParam("fields",value);$}$
void restoreRotationState(@NonNull ContentResolver contentResolver){$  Settings.System.putInt(contentResolver,Settings.System.ACCELEROMETER_ROTATION,originalAccelerometer);$  Settings.System.putInt(contentResolver,Settings.System.USER_ROTATION,originalUserRotation);$}$
public static void addAllJARsInAssets(final Context cxt){$  try {$    if (debug) {$      Log.d(TAG,"addAllJARsInAssets on " + Thread.currentThread());$    }$    String[] arrJars=createSubDexList(cxt);$    copyJarsFromAssets(cxt,arrJars);$  }$ catch (  IOException e) {$    throw new RuntimeException(e);$  }$}$
private static Set<Label> labelsWithConfigs(Project project){$  List<RunConfiguration> configurations=RunManager.getInstance(project).getAllConfigurationsList();$  Set<Label> labelsWithConfigs=Sets.newHashSet();$  for (  RunConfiguration configuration : configurations) {$    if (configuration instanceof BlazeRunConfiguration) {$      BlazeRunConfiguration blazeRunConfiguration=(BlazeRunConfiguration)configuration;$      TargetExpression target=blazeRunConfiguration.getTarget();$      if (target instanceof Label) {$        labelsWithConfigs.add((Label)target);$      }$    }$  }$  return labelsWithConfigs;$}$
public void computeOverlapGraph(int minOverlap,final Alignment alignment,ProgressListener progress) throws IOException, CanceledException {$  this.alignment=alignment;$  OverlapGraphBuilder overlapGraphBuilder=new OverlapGraphBuilder(minOverlap);$  overlapGraphBuilder.apply(alignment,progress);$  overlapGraph=overlapGraphBuilder.getOverlapGraph();$  node2readName=overlapGraphBuilder.getNode2ReadNameMap();$  readId2ContainedReads=overlapGraphBuilder.getReadId2ContainedReads();$}$
public VersionCellEditor(VendorOptionTableModel model){$  this.model=model;$}$
private void addWindowsPath(int id,String path){$  if (path == null || path.equals("")) {$    return;$  }$  _sb.append(id);$  _sb.append(" RCDATA BEGIN \"");$  _sb.append(path.replaceAll("\\\\","\\\\\\\\").replaceAll("/","\\\\\\\\"));$  _sb.append("\\0\" END\n");$}$
public static Integer parseInt(String string){$  if (string == null || string.trim().isEmpty()) {$    return null;$  }$  try {$    return Integer.parseInt(string);$  }$ catch (  NumberFormatException ex) {$    return null;$  }$}$
public static final void drawPulleyJoint(GL2 gl,PulleyJoint joint){$  gl.glColor4f(0.0f,0.0f,0.0f,0.3f);$  Vector2 p1=joint.getAnchor1();$  Vector2 p2=joint.getPulleyAnchor1();$  Vector2 p3=joint.getPulleyAnchor2();$  Vector2 p4=joint.getAnchor2();$  gl.glBegin(GL.GL_LINE_STRIP);$  gl.glVertex2d(p1.x,p1.y);$  gl.glVertex2d(p2.x,p2.y);$  gl.glVertex2d(p3.x,p3.y);$  gl.glVertex2d(p4.x,p4.y);$  gl.glEnd();$}$
private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {$  in.defaultReadObject();$  if (codebase == null) {$    throw new InvalidObjectException("null export codebase");$  }$  if (policy == null) {$    throw new InvalidObjectException("null policy");$  }$  if (classpath == null) {$    throw new InvalidObjectException("null import codebase");$  }$  if (implClassName == null) {$    throw new InvalidObjectException("null implementation class name");$  }$  lifeCycle=NoOpLifeCycle;$  servicePreparer=null;$  descCreated=false;$  descCreatedLock=new Object();$}$
public BoardUnfixTopicQuery unfixTopic(UserActor actor,int groupId,int topicId){$  return new BoardUnfixTopicQuery(getClient(),actor,groupId,topicId);$}$
public synchronized int size(){$  return count;$}$
public void simulateMethod(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  String subSignature=method.getSubSignature();${$    defaultMethod(method,thisVar,returnVar,params);$    return;$  }$}$
public JsonArray add(JsonValue value){$  if (value == null) {$    throw new NullPointerException("value is null");$  }$  values.add(value);$  return this;$}$
public ListQueryBinding(TupleSet ts,String field){$  this(ts,field,true);$}$
public void hide(){$  LayoutParams lp=(LayoutParams)mContentView.getLayoutParams();$  lp.height=0;$  mContentView.setLayoutParams(lp);$}$
private Animation applySlideLeftAnimationTo(View view){$  Animation animation=new TranslateAnimation(Animation.RELATIVE_TO_PARENT,0.0f,Animation.RELATIVE_TO_PARENT,-1.0f,Animation.RELATIVE_TO_PARENT,0.0f,Animation.RELATIVE_TO_PARENT,0.0f);$  animation.setDuration(200);$  animation.setInterpolator(new AccelerateInterpolator());$  view.startAnimation(animation);$  return animation;$}$
public ZWaveEnergyProductionCommandClass(ZWaveNode node,ZWaveController controller,ZWaveEndpoint endpoint){$  super(node,controller,endpoint);$}$
@Override public ImageWritable transform(ImageWritable image,Random random){$  if (image == null) {$    return null;$  }$  Mat mat=(Mat)converter.convert(image.getFrame());$  Mat result=new Mat();$  try {$    cvtColor(mat,result,conversionCode);$  }$ catch (  Exception e) {$    throw new RuntimeException(e);$  }$  return new ImageWritable(converter.convert(result));$}$
public static int exportTaxon2Counts(String format,Director dir,File file,char separator,boolean reportSummarized,ProgressListener progressListener) throws IOException {$  int totalLines=0;$  try {$    final MainViewer viewer=dir.getMainViewer();$    try (BufferedWriter w=new BufferedWriter(new FileWriter(file))){$      final List<String> names=viewer.getDir().getDocument().getSampleNames();$      if (names.size() > 1) {$        w.write("#Datasets");$        for (        String name : names) {$          if (name == null)           System.err.println("Internal error, sample name is null");$ else {$            if (separator == ',')             name=name.replaceAll(",","_");$          }$          w.write(separator + name);$        }$        w.write("\n");$      }$      final NodeSet selected=viewer.getSelectedNodes();$      progressListener.setSubtask("Taxa to counts");$      progressListener.setMaximum(selected.size());$      progressListener.setProgress(0);$      for (Node v=selected.getFirstElement(); v != null; v=selected.getNextElement(v)) {$        Integer taxonId=(Integer)v.getInfo();$        if (taxonId != null) {$          final NodeData data=viewer.getNodeData(v);$          final int[] counts=(reportSummarized || v.getOutDegree() == 0 ? data.getSummarized() : data.getAssigned());$          final String name=getTaxonLabelSource(dir,format,taxonId);$          if (name != null) {$            if (counts.length == names.size()) {$              w.write(name);$              for (              int num : counts)               w.write(separator + "" + num);$              w.write("\n");$              totalLines++;$            }$ else             System.err.println("Skipped " + name + ", number of values: "+ counts.length);$          }$        }$        progressListener.incrementProgress();$      }$    }$   }$ catch (  CanceledException canceled) {$    System.err.println("USER CANCELED");$  }$  return totalLines;$}$
public Builder trustSource(TrustSource trustSource){$  this.trustSource=trustSource;$  return this;$}$
public void checkWarnings(){$  super.checkWarnings();$  if (!suppressWarnings("unchecked") && !hasAnnotationSafeVarargs() && isVariableArity()&& !getParameter(getNumParameter() - 1).type().isReifiable())   warning("possible heap pollution for " + "variable arity parameter");$}$
public static double product(final double... values) throws MathIllegalArgumentException {$  return PRODUCT.evaluate(values);$}$
public static String formatMessage(Locale locale,String key,Object[] arguments) throws MissingResourceException {$  if (locale == null) {$    locale=Locale.getDefault();$  }$  final ResourceBundle resourceBundle=ResourceBundle.getBundle("mf.org.apache.xerces.impl.msg.JAXPValidationMessages",locale);$  String msg;$  try {$    msg=resourceBundle.getString(key);$    if (arguments != null) {$      try {$        msg=java.text.MessageFormat.format(msg,arguments);$      }$ catch (      Exception e) {$        msg=resourceBundle.getString("FormatFailed");$        msg+=" " + resourceBundle.getString(key);$      }$    }$  }$ catch (  MissingResourceException e) {$    msg=resourceBundle.getString("BadMessageKey");$    throw new MissingResourceException(key,msg,key);$  }$  if (msg == null) {$    msg=key;$    if (arguments.length > 0) {$      StringBuffer str=new StringBuffer(msg);$      str.append('?');$      for (int i=0; i < arguments.length; i++) {$        if (i > 0) {$          str.append('&');$        }$        str.append(String.valueOf(arguments[i]));$      }$    }$  }$  return msg;$}$
private boolean release(String id){$  AudioPlayer audio=players.remove(id);$  if (audio == null) {$    return false;$  }$  if (players.isEmpty()) {$    onLastPlayerReleased();$  }$  audio.destroy();$  return true;$}$
public static String toTypeDesc(SootMethodRef m){$  StringBuilder sb=new StringBuilder();$  sb.append('(');$  for (  Type t : m.parameterTypes()) {$    sb.append(toTypeDesc(t));$  }$  sb.append(')');$  sb.append(toTypeDesc(m.returnType()));$  return sb.toString();$}$
protected Pair<Long,DLSN> readLastTxIdInLedger(LogSegmentMetadata l) throws IOException {$  LogRecordWithDLSN record=recoverLastRecordInLedger(l,false,false,true);$  if (null == record) {$    return Pair.of(DistributedLogConstants.EMPTY_LOGSEGMENT_TX_ID,DLSN.InvalidDLSN);$  }$ else {$    return Pair.of(record.getTransactionId(),record.getDlsn());$  }$}$
private ServiceRegistrar[] buildServiceRegistrar(){$  int k=0;$  ServiceRegistrar[] proxys=new ServiceRegistrar[discoveredLocators.size()];$  Iterator iter=discoveredLocators.iterator();$  while (iter.hasNext()) {$    LocatorReg reg=(LocatorReg)iter.next();$    proxys[k++]=reg.proxy;$  }$  return proxys;$}$
public static Account createAccount(String name,String password){$  String passwordHash=AccountUtils.encodePassword(password);$  Account account=new Account();$  account.setName(name);$  account.setPasswordHash(passwordHash);$  account.setAccessLevel((byte)0);$  account.setMembership((byte)0);$  account.setActivated((byte)1);$  if (getAccountDAO().insertAccount(account)) {$    return account;$  }$  return null;$}$
@Override public Loader<Cursor> onCreateLoader(int i,Bundle bundle){$  return new CursorLoader(getActivity(),FeedContract.Entry.CONTENT_URI,PROJECTION,null,null,FeedContract.Entry.COLUMN_NAME_PUBLISHED + " desc");$}$
private void visit(NodeItem n,NodeItem c,int doi,int ldist){$  PrefuseLib.updateVisible(n,true);$  double localDOI=-ldist / Math.min(1000.0,m_divisor);$  n.setDOI(doi + localDOI);$  if (c != null) {$    EdgeItem e=(EdgeItem)c.getParentEdge();$    e.setDOI(c.getDOI());$    PrefuseLib.updateVisible(e,true);$  }$}$
private DefaultMutableTreeNode createDnNode(Dn dn,Token token,XMBean xmbean){$  DefaultMutableTreeNode node=new ComparableDefaultMutableTreeNode();$  Object data=createNodeValue(xmbean,token);$  String label=data.toString();$  XNodeInfo userObject=new XNodeInfo(Type.MBEAN,data,label,xmbean.getObjectName().toString());$  node.setUserObject(userObject);$  return node;$}$
public Constraint(int row,int col){$  this(row,col,1);$}$
private void enter_Enemy(){$  if (--delay >= 0)   return;$  velocity.x=(int)(sx * 180);$  velocity.y=(int)(sy * 180);$  int dr=rnd.nextInt(5) + 6;$  if (len % 500 == 0)   shoot_Missile(dr);$  len--;$  if (len >= 0)   return;$  col++;$  if (col < sPath.get_Directions().length) {$    GetDir(col);$  }$ else {$    status=BEGINPOS;$  }$}$
public static void d(String tag,String s,Throwable e){$  if (LOG.DEBUG >= LOGLEVEL)   Log.d(tag,s,e);$}$
public static SM_SYSTEM_MESSAGE STR_INGAME_BLOCK_IN_NO_CHAT(String value0){$  return new SM_SYSTEM_MESSAGE(1300814,value0);$}$
public void saveRep(Repository rep,ObjectId idTransformation,ObjectId idStep) throws KettleException {$  try {$    rep.saveStepAttribute(idTransformation,idStep,"TableName",this.tabelName);$    rep.saveStepAttribute(idTransformation,idStep,"factDimLensString",factDimLensString);$    rep.saveStepAttribute(idTransformation,idStep,"outputRowSize",this.outputRowSize);$    rep.saveStepAttribute(idTransformation,idStep,"tableName",this.tableName);$    rep.saveStepAttribute(idTransformation,idStep,"databaseName",this.databaseName);$    rep.saveStepAttribute(idTransformation,idStep,"dimensionCount",this.dimensionCount);$    rep.saveStepAttribute(idTransformation,idStep,"noDictionaryDims",this.noDictionaryDims);$    rep.saveStepAttribute(idTransformation,idStep,"noDictionaryDimsMapping",this.noDictionaryDimsMapping);$    rep.saveStepAttribute(idTransformation,idStep,"complexDimensionCount",this.complexDimensionCount);$    rep.saveStepAttribute(idTransformation,idStep,"measureCount",this.measureCount);$    rep.saveStepAttribute(idTransformation,idStep,"isUpdateMemberRequest",this.updateMemberRequest);$    rep.saveStepAttribute(idTransformation,idStep,"measureDataType",measureDataType);$    rep.saveStepAttribute(idTransformation,idStep,"partitionID",partitionID);$    rep.saveStepAttribute(idTransformation,idStep,"segmentId",segmentId);$    rep.saveStepAttribute(idTransformation,idStep,"taskNo",taskNo);$  }$ catch (  Exception e) {$    throw new KettleException(BaseMessages.getString(PKG,"TemplateStep.Exception.UnableToSaveStepInfoToRepository",new String[0]) + idStep,e);$  }$}$
@JavascriptInterface public void showToast(String toast){$  Toast.makeText(mContext,toast,Toast.LENGTH_SHORT).show();$}$
static public int[] addIndex(int[] X,int x){$  int newX[]=new int[X.length + 1];$  for (int i=0; i < X.length; i++)   newX[i]=X[i];$  newX[X.length]=x;$  return newX;$}$
public static Configuration createEquipmentDataTag(Long parentId){$  Configuration configuration=new Configuration();$  DataTag dataTag=DataTag.create("DATA_INI_TEST",Integer.class,new DataTagAddress()).equipmentId(parentId).id(1000L).build();$  configuration.addEntity(dataTag);$  return configuration;$}$
protected SecureSendSMSNotificationQuery userId(int value){$  return unsafeParam("user_id",value);$}$
public void prepareMatrixOffset(boolean inverted){$  mMatrixOffset.reset();$  if (!inverted) {$    mMatrixOffset.postTranslate(mViewPortHandler.offsetLeft(),mViewPortHandler.getChartHeight() - mViewPortHandler.offsetBottom());$  }$ else {$    mMatrixOffset.setTranslate(mViewPortHandler.offsetLeft(),-mViewPortHandler.offsetTop());$    mMatrixOffset.postScale(1.0f,-1.0f);$  }$}$
public static TemplateParser create(){$  return new TemplateParser();$}$
public static void json(String tag,Object source){$  if (isEnable()) {$    Object o=getJsonObjFromStr(source);$    if (o != null) {$      try {$        if (o instanceof JSONObject) {$          format(tag,((JSONObject)o).toString(2));$        }$ else         if (o instanceof JSONArray) {$          format(tag,((JSONArray)o).toString(2));$        }$ else {$          format(tag,source);$        }$      }$ catch (      JSONException e) {$        format(tag,source);$      }$    }$ else {$      format(tag,source);$    }$  }$}$
@Override public boolean isShown(){$  return isShown;$}$
protected synchronized void afterSpaceModeChange(SpaceMode newMode){$  if (_logger.isLoggable(Level.FINER))   _logger.finer("Invoking afterSpaceModeChange event, new mode is " + newMode);$  Queue<ISpaceModeListener> remoteListeners=new LinkedList<ISpaceModeListener>();$  for (Iterator<ISpaceModeListener> iter=_primarySpaceModeListeners.iterator(); iter.hasNext(); ) {$    ISpaceModeListener listener=iter.next();$    try {$      if (LRMIUtilities.isRemoteProxy(listener)) {$        if (_logger.isLoggable(Level.FINEST))         _logger.finest("located remote listener for afterSpaceModeChange, adding to asynchronous dispatch queue [" + listener.toString() + "]");$        remoteListeners.add(listener);$        continue;$      }$      listener.afterSpaceModeChange(newMode);$    }$ catch (    Exception rex) {$      if (_logger.isLoggable(Level.FINE)) {$        _logger.log(Level.FINE,"Failed to invoke remote method ISpaceModeListener.afterSpaceModeChange(...) implemented by listener [" + listener + "]. Action Taken: Unregistered listener",rex);$      }$      _primarySpaceModeListeners.removeListener(listener);$    }$  }$  if (remoteListeners.size() > 0)   dispatchAfterEventToRemoteListeners(remoteListeners,newMode);$  if (_logger.isLoggable(Level.FINEST))   _logger.finest("completed invoking synchronous afterSpaceModeChange event with mode " + newMode);$}$
@NotNull private ImageOverlayBuilder outlineOCRRegion(@NotNull OCRResult.Region region){$  region.lines.forEach(null);$  return this;$}$
public void sum(String column) throws QueryPlanException {$  this.sumColumnName=column;$}$
public void removeDecoration(int pieceIndex,int decorationIndex,boolean updateSkills){$  if (decorations[pieceIndex][decorationIndex] != dummyDecoration && decorations[pieceIndex][decorationIndex] != null) {$    decorations[pieceIndex][decorationIndex]=null;$    int i=0;$    Decoration[] newDecorations=new Decoration[3];$    for (    Decoration d : decorations[pieceIndex]) {$      if (d != null && d != dummyDecoration) {$        newDecorations[i++]=d;$      }$    }$    while (i < newDecorations.length) {$      newDecorations[i++]=null;$    }$    decorations[pieceIndex]=newDecorations;$    if (updateSkills) {$      updateSkillTreePointsSets();$    }$  }$}$
@Override public void allocate(){$  Log.d(Mary.LOG,"dUMMYfree START alllocate");$  if (isLoaded()) {$    return;$  }$  BulkTimer.LOAD.start();$  Lexicon lexicon=getLexicon();$  Log.d(Mary.LOG,"lexicon = " + lexicon);$  if (lexicon != null && !lexicon.isLoaded()) {$    Log.d(Mary.LOG,"lexicon insead= " + lexicon.toString());$    try {$      lexicon.load();$    }$ catch (    IOException ioe) {$      throw new Error("Can't load voice",ioe);$    }$  }$  Log.d(Mary.LOG,"start lexicon loader ");$  loader();$  Log.d(Mary.LOG,"end lexicon loader ");$  BulkTimer.LOAD.stop();$  if (isMetrics()) {$    BulkTimer.LOAD.show("loading " + toString() + " for "+ getRunTitle());$  }$  setLoaded(true);$}$
@Override public void json(String json){$  if (TextUtils.isEmpty(json)) {$    d("Empty/Null json content");$    return;$  }$  try {$    if (json.startsWith("{")) {$      JSONObject jsonObject=new JSONObject(json);$      String message=jsonObject.toString(JSON_INDENT);$      d(message);$      return;$    }$    if (json.startsWith("[")) {$      JSONArray jsonArray=new JSONArray(json);$      String message=jsonArray.toString(JSON_INDENT);$      d(message);$    }$  }$ catch (  JSONException e) {$    e(e.getCause().getMessage() + "\n" + json);$  }$}$
public PhotosReportCommentQuery(VkApiClient client,UserActor actor,int ownerId,int commentId){$  super(client,"photos.reportComment",OkResponse.class);$  accessToken(actor.getAccessToken());$  ownerId(ownerId);$  commentId(commentId);$}$
public static boolean showDefaultConfigurationFileMissingChoice(final String title,final Scene scene){$  final DialogAction createWithSample=new DialogAction("Create " + BaseConfigurationManager.APPLICATION_NAME + " configuration file with sample content",System.getProperty("line.separator") + "This creates a configuration file " + "in \""+ BaseConfigurationManager.getDefaultHomeDirectory()+ "\""+ " called \""+ BaseConfigurationManager.getDefaultConfigurationFileName()+ "\""+ ", which will include sample connections to localhost and iot.eclipse.org.");$  final DialogAction createEmpty=new DialogAction("Create empty " + BaseConfigurationManager.APPLICATION_NAME + " configuration file",System.getProperty("line.separator") + "This creates a configuration file " + "in \""+ BaseConfigurationManager.getDefaultHomeDirectory()+ "\""+ " called \""+ BaseConfigurationManager.getDefaultConfigurationFileName()+ "\" with no sample connections.");$  final DialogAction copyExisting=new DialogAction("Copy existing " + BaseConfigurationManager.APPLICATION_NAME + " configuration file",System.getProperty("line.separator") + "This copies an existing configuration file (selected in the next step) " + "to \""+ BaseConfigurationManager.getDefaultHomeDirectory()+ "\""+ " and renames it to \""+ BaseConfigurationManager.getDefaultConfigurationFileName()+ "\".");$  final DialogAction dontDoAnything=new DialogAction("Don't do anything",System.getProperty("line.separator") + "You can still point " + BaseConfigurationManager.APPLICATION_NAME+ " at your chosen configuration file "+ "by using the \"--configuration=my_custom_path\""+ " command line parameter or open a configuration file from the main menu.");$  final List<DialogAction> links=Arrays.asList(createWithSample,createEmpty,copyExisting,dontDoAnything);$  Optional<DialogAction> response=CommandLinksDialog.showCommandLinks(title,"Please select one of the following options with regards to the " + BaseConfigurationManager.APPLICATION_NAME + " configuration file:",links.get(0),links,550,650,30,110,scene.getStylesheets());$  boolean configurationFileCreated=false;$  if (!response.isPresent()) {$  }$ else   if (response.get().getHeading().toLowerCase().contains("sample")) {$    configurationFileCreated=BaseConfigurationManager.createDefaultConfigFromClassPath("sample");$  }$ else   if (response.get().getHeading().toLowerCase().contains("empty")) {$    configurationFileCreated=BaseConfigurationManager.createDefaultConfigFromClassPath("empty");$  }$ else   if (response.get().getHeading().toLowerCase().contains("copy")) {$    final FileChooser fileChooser=new FileChooser();$    fileChooser.setTitle("Select configuration file to copy");$    String extensions="xml";$    fileChooser.setSelectedExtensionFilter(new ExtensionFilter("XML file",extensions));$    final File selectedFile=fileChooser.showOpenDialog(scene.getWindow());$    if (selectedFile != null) {$      configurationFileCreated=BaseConfigurationManager.createDefaultConfigFromFile(selectedFile);$    }$  }$ else {$  }$  return configurationFileCreated;$}$
public AdsGetSuggestionsQueryWithRegions(VkApiClient client,UserActor actor,AdsGetSuggestionsSection section){$  super(client,"ads.getSuggestions",Utils.buildParametrizedType(List.class,TargSuggestionsRegions.class));$  accessToken(actor.getAccessToken());$  section(section);$}$
private static int snapLeft(Collection<ConstraintWidget> widgets,ConstraintWidget widget,int left,ArrayList<SnapCandidate> snapCandidates){$  return snapHorizontal(widgets,widget,widget.getAnchor(ConstraintAnchor.Type.LEFT),left,snapCandidates);$}$
@Override public SketchSetOperationPostAggregation withFields(List<PostAggregation> fields){$  return new SketchSetOperationPostAggregation(getName(),getFunc(),fields,getSize());$}$
public boolean isKeyguardSecure(){$  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {$    LogUtils.e("can not call isKeyguardSecure if SDK_INT < 16 ");$    return false;$  }$ else {$    return keyguardManager.isKeyguardSecure();$  }$}$
public static Patterns jars(String[] includes,String[] excludes){$  return new Patterns(includes,excludes);$}$
public void clear(){$  super.clear();$  location=null;$}$
public static VersionNumber parseLastVersionNumber(@Nonnull final String text){$  return VersionParser.parseLastVersionNumber(Check.notNull(text,"text"));$}$
public boolean addAll(PointsToSetInternal other,PointsToSetInternal exclude){$  if (exclude != null) {$    throw new RuntimeException("NYI");$  }$  return newSet.addAll(other,oldSet);$}$
public void addSwipeListener(SwipeListener listener){$  if (mListeners == null) {$    mListeners=new ArrayList<SwipeListener>();$  }$  mListeners.add(listener);$}$
protected boolean expect(TokenKind kind){$  return expect(kind,false);$}$
public tsfile_data data(TimeSeriesCollection ts_data){$  final dictionary_delta dict_delta=new dictionary_delta();$  dict_delta.gdd=new path_dictionary_delta[0];$  dict_delta.mdd=new path_dictionary_delta[0];$  dict_delta.sdd=new strval_dictionary_delta[0];$  dict_delta.tdd=new tag_dictionary_delta[0];$  final List<tsfile_record> records=new ArrayList<>();$  final Iterator<TimeSeriesValue> tsv_iter=ts_data.getTSValues().stream().iterator();$  while (tsv_iter.hasNext()) {$    final TimeSeriesValue tsv=tsv_iter.next();$    tsfile_record record=new tsfile_record();$    record.group_ref=simpleGroupPath_index(dict_delta,tsv.getGroup().getPath());$    record.tag_ref=tags_index(dict_delta,tsv.getGroup().getTags());$    record.metrics=tsv.getMetrics().entrySet().stream().map(null).toArray(null);$    records.add(record);$  }$  tsfile_data result=new tsfile_data();$  result.records=records.stream().toArray(null);$  result.ts=timestamp(ts_data.getTimestamp());$  if (dict_delta.gdd.length > 0 || dict_delta.mdd.length > 0 || dict_delta.sdd.length > 0 || dict_delta.tdd.length > 0)   result.dd=dict_delta;$  return result;$}$
@Override public void onUIRefreshPrepare(PtrFrameLayout frame){$}$
public void printDuration(String tag){$  LogUtils.i(tag + " :  " + duration());$}$
public static void main(String[] args){$  Key k=generate(512);$  System.out.println(k);$  String s="hello";$  String pub_key="MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANckZ1iK/1sOb7N1n2xuwiIoHZtJ3mgaV3s0PCcJKhdV5MsjQ/yzQ5N4lnQd9RyLjVfDH6M6KNDSmPc+rmRFRH0CAwEAAQ==";$  String pri_key="MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEA1yRnWIr/Ww5vs3WfbG7CIigdm0neaBpXezQ8JwkqF1XkyyND/LNDk3iWdB31HIuNV8Mfozoo0NKY9z6uZEVEfQIDAQABAkArmSv8TIa9DCrkwkRhc/yRcXG2g3y3ugbaZ9Z8zqWh/p2bU0ih2EdhqCl1M9QzOlmwdgL6dOZtupr93cvPwb2dAiEA/8plzQ4y0xGqbRjDai4KfEwgNQ57T0f74giFqErHzRsCIQDXUXzpRbnMqksB/SrT45BzPUH4eEIoYQ2ZBuEVuLJGRwIhANufHlU30a+kRV4ymuZ57YrXmfe0HW/u8HgctRXQT0jtAiBqPCNkOOm+KDtP5OhPmRS5Nv0oqbUClTgPS4ycmf8jmwIgfKUvHfL+DBr0mhee0kXE//RVOHUORv9jgyFL7TK1W6s=";$  byte[] ss=encode(s.getBytes(),pub_key);$  System.out.println(new String(Base64.encode(ss)));$  byte[] ss1=decode(ss,pri_key);$  System.out.println(new String(ss1));$}$
public static long calculateDifferentDay(Date startDate,Date endDate){$  return calculateDifference(startDate,endDate,DifferenceMode.Day);$}$
private void reset(){$  currentIndex=0;$  undoList.clear();$  updateMenuItems();$}$
public static JavaPairRDD<Integer,Iterable<Tuple2<Integer,BigInteger>>> computeExpTable(JavaSparkContext sc,FileSystem fs,BroadcastVars bVars,Query query,String queryInputFile,String outputDirExp,boolean useModExpJoin){$  JavaPairRDD<Integer,Iterable<Tuple2<Integer,BigInteger>>> expCalculations;$  logger.info("Creating expTable in hdfs for query identifier = " + query.getQueryInfo().getIdentifier());$  Path outPathExp=new Path(outputDirExp);$  try {$    if (fs.exists(outPathExp)) {$      fs.delete(outPathExp,true);$    }$  }$ catch (  IOException e) {$    e.printStackTrace();$  }$  Map<Integer,BigInteger> queryElements=query.getQueryElements();$  List<Integer> keys=new ArrayList<>(queryElements.keySet());$  int numSplits=SystemConfiguration.getIntProperty("pir.expCreationSplits",100);$  JavaRDD<Integer> queryHashes=sc.parallelize(keys,numSplits);$  int numExpLookupPartitions=SystemConfiguration.getIntProperty("pir.numExpLookupPartitions",100);$  expCalculations=queryHashes.flatMapToPair(new ExpTableGenerator(bVars)).groupByKey(numExpLookupPartitions);$  if (!useModExpJoin) {$    JavaPairRDD<Integer,String> hashToPartition=expCalculations.mapPartitionsToPair(new ExpKeyFilenameMap(bVars));$    Map<Integer,String> queryHashFileNameMap=hashToPartition.collectAsMap();$    query.setExpFileBasedLookup(new HashMap<>(queryHashFileNameMap));$    try {$      new HadoopFileSystemStore(fs).store(queryInputFile,query);$    }$ catch (    IOException e) {$      e.printStackTrace();$    }$    bVars.setQuery(query);$  }$  logger.info("Completed creation of expTable");$  return expCalculations;$}$
public ConfigurationNotFoundException(String s){$  super(s);$}$
public GroupsIsMemberQueryWithUserIds isMember(UserActor actor,String groupId,Integer... userIds){$  return new GroupsIsMemberQueryWithUserIds(getClient(),actor,groupId,userIds);$}$
public TicTacTocPoint(int x,int y){$  super();$  this.x=x;$  this.y=y;$}$
private void putForeignKeyValue(ContentValues values,DataSupport baseObj){$  Map<String,Long> associatedModelMap=baseObj.getAssociatedModelsMapWithoutFK();$  for (  String associatedTableName : associatedModelMap.keySet()) {$    values.put(getForeignKeyColumnName(associatedTableName),associatedModelMap.get(associatedTableName));$  }$}$
private void applyForceAtPointAction(){$  TreePath path=this.tree.getSelectionPath();$  if (path != null) {$    DefaultMutableTreeNode node=(DefaultMutableTreeNode)path.getLastPathComponent();$    if (node.getUserObject() instanceof SandboxBody) {$      SandboxBody body=(SandboxBody)node.getUserObject();$      Vector2[] forcePoint=ApplyForceAtPointDialog.show(ControlUtilities.getParentWindow(this));$      if (forcePoint != null) {$synchronized (Simulation.LOCK) {$          body.applyForce(forcePoint[0],forcePoint[1]);$        }$      }$    }$  }$}$
private void handleNotifyCoreSA(Context context,NotifyTemplateHolder template,boolean fromReplication,AnswerHolder answer){$  boolean shouldReplicate=false;$  if (_engine.isReplicated() && !_engine.getSpaceImpl().isBackup())   shouldReplicate=_engine.shouldReplicate(ReplicationOperationType.NOTIFY,true,!template.isReplicateNotify(),fromReplication);$  _cacheManager.insertTemplate(context,template,shouldReplicate);$  Uuid spaceUID=_engine.getSpaceImpl().getUuid();$  answer.setEventRegistration(new GSEventRegistration(template.getEventId(),null,context.getNotifyLease(),template.getSequenceNumber(),template.getUID(),spaceUID));$}$
public boolean isCritical(){$  return false;$}$
private void tryStartingKbMode(int keyCode){$  if ((keyCode == -1 || addKeyIfLegal(keyCode))) {$    mInKbMode=true;$    mDoneButton.setEnabled(false);$    updateDisplay(false);$  }$}$
public GaussianComponent(double componentWeight,Matrix mean,Matrix covariances) throws IllegalArgumentException {$  if (componentWeight < 0 || componentWeight > 1)   throw new IllegalArgumentException("the weight of the component must be in the intervall [0,1];");$  if (mean == null || covariances == null)   throw new IllegalArgumentException("mean and covariances must not be null values;");$  this.mean=mean;$  this.covariances=covariances;$  this.componentWeight=componentWeight;$  dimension=mean.getRowDimension();$  try {$    covariances.times(mean);$    actualizeOptimizationFields();$  }$ catch (  Exception e) {$    throw new IllegalArgumentException("mean and covariance matrix must have compatible shapes and the covarince matrix must not be singular;");$  }$}$
public FixedWidthTextTableSchema(){$}$
@Override public Filter createFilter(){$  return new BeyondExtended();$}$
protected void addCenter(NlComponent node,String id){$  Rectangle b=new Rectangle(node.x,node.y,node.w,node.h);$  myCenterHorizEdges.add(new Segment(centerY(b),b.x,x2(b),node,id,SegmentType.CENTER_HORIZONTAL,NO_MARGIN));$  myCenterVertEdges.add(new Segment(centerX(b),b.y,y2(b),node,id,SegmentType.CENTER_VERTICAL,NO_MARGIN));$}$
final public static long updateCollection(Object id,V v,Class<? extends Bean> t){$  return updateCollection(id,v,t,false);$}$
public PointFillDetails(FunctionNameInterface functionManager){$  super(PointFillDetails.class,configFile,functionManager);$}$
public static URL makeURL(String pathname) throws MalformedURLException {$  if (pathname.startsWith("/")) {$    return new URL("file://" + pathname);$  }$  String userdir=System.getProperty("user.dir");$  userdir=userdir.replace('\\','/');$  if (userdir.endsWith("/")) {$    return new URL("file:///" + userdir + pathname);$  }$ else {$    return new URL("file:///" + userdir + "/"+ pathname);$  }$}$
public DistributionDocumentEvaluator(Map<Integer,String> mIdxToWord,grammaticalityEstimator geEstimator){$  WordMap=mIdxToWord;$  Estimator=geEstimator;$}$
public TLongObjectHashMap(int initialCapacity,float loadFactor){$  super(initialCapacity,loadFactor);$}$
public void onFailure(int statusCode,Header[] headers,String responseBody,Throwable error){$  onFailure(responseBody,error);$}$
public static void writeLittleEndianInt(DataOutputStream dataStream,int val) throws IOException {$  int mask=0x000000ff;$  for (int shift=0; shift < 32; shift+=8) {$    dataStream.writeByte(mask & (val >> shift));$  }$}$
public ConnectionEndpointDetails(){$}$
public static GeneralPath stackSpline(GeneralPath p,float[] pts,float epsilon,float slack,boolean closed,float tx,float ty){$  int npoints=0;$  for (; npoints < pts.length; ++npoints)   if (Float.isNaN(pts[npoints]))   break;$  return stackSpline(p,pts,0,npoints / 2,epsilon,slack,closed,tx,ty);$}$
public static ManifestModInfo create(File modFile,Manifest manifest){$  Set<Object> attributeNames=manifest.getMainAttributes().keySet();$  if (!attributeNames.contains(new Attributes.Name("ID"))) {$    return null;$  }$  ManifestModInfo container=new ManifestModInfo();$  Attributes attributes=manifest.getMainAttributes();$  for (  Field field : ManifestModInfo.class.getDeclaredFields()) {$    if (field.isAnnotationPresent(SerializedName.class)) {$      String name=field.getAnnotation(SerializedName.class).value();$      if (attributeNames.contains(new Attributes.Name(name))) {$        try {$          field.set(container,attributes.getValue(name).split("\\s*<-->")[0]);$        }$ catch (        IllegalAccessException e) {$          OpenModLoader.getLogger().catching(e);$          return null;$        }$      }$    }$  }$  container.modFile=modFile;$  return container;$}$
public void paintSelection(Graphics g0){$  Graphics2D g=(Graphics2D)g0;$  SelectedBlock selectedBlock=getSelectedBlock();$  if (selectedBlock.isSelected()) {$    Rectangle2D rect=new Rectangle2D.Double(Math.max(0,getX(selectedBlock.getFirstCol())),0,0,0);$    rect.add(Math.min(getX(selectedBlock.getLastCol() + 1),getSize().getWidth()),getSize().height);$    g.setColor(highlightColorSemiTransparent);$    g.fill(rect);$  }$}$
public IdentityHashSet(Collection<E> original){$  delegate=new IdentityHashMap<E,E>();$  addAll(original);$}$
public void update(PhysicalTable table,DataSourceMetadata metadata){$  ConcurrentSkipListMap<DateTime,Map<String,SegmentInfo>> current=metadata.getSegments().stream().collect(Collectors.groupingBy(null,null,Collectors.mapping(null,COLLECTOR)));$  allSegments.computeIfAbsent(table,null).set(current);$}$
public boolean readClass(DataInputStream d){$  try {$    magic=d.readInt() & 0xFFFFFFFFL;$    if (magic != MAGIC) {$      G.v().out.println("Wrong magic number in " + fn + ": "+ magic);$      return false;$    }$    minor_version=d.readUnsignedShort();$    major_version=d.readUnsignedShort();$    constant_pool_count=d.readUnsignedShort();$    if (!readConstantPool(d))     return false;$    access_flags=d.readUnsignedShort();$    this_class=d.readUnsignedShort();$    super_class=d.readUnsignedShort();$    interfaces_count=d.readUnsignedShort();$    if (interfaces_count > 0) {$      interfaces=new int[interfaces_count];$      int j;$      for (j=0; j < interfaces_count; j++)       interfaces[j]=d.readUnsignedShort();$    }$    if (Options.v().time())     Timers.v().fieldTimer.start();$    fields_count=d.readUnsignedShort();$    readFields(d);$    if (Options.v().time())     Timers.v().fieldTimer.end();$    if (Options.v().time())     Timers.v().methodTimer.start();$    methods_count=d.readUnsignedShort();$    readMethods(d);$    if (Options.v().time())     Timers.v().methodTimer.end();$    if (Options.v().time())     Timers.v().attributeTimer.start();$    attributes_count=d.readUnsignedShort();$    if (attributes_count > 0) {$      attributes=new attribute_info[attributes_count];$      readAttributes(d,attributes_count,attributes);$    }$    if (Options.v().time())     Timers.v().attributeTimer.end();$  }$ catch (  IOException e) {$    throw new RuntimeException("IOException with " + fn + ": "+ e.getMessage(),e);$  }$  return true;$}$
public static boolean isImage(File file){$  Uri selectedUri=Uri.fromFile(file);$  String fileExtension=MimeTypeMap.getFileExtensionFromUrl(selectedUri.toString().toLowerCase());$  String mimeType=MimeTypeMap.getSingleton().getMimeTypeFromExtension(fileExtension);$  return (mimeType != null && mimeType.startsWith("image/"));$}$
private FileFinderResult find(FileType fileType) throws FileFinderException {$  FileFinderResult fileFinderResultByType=new FileFinderResult();$  List<FileMatch> sourceMatchCandidates=getSourceMatcheCandidates(fileType);$  List<FileMatch> targetMatcheCandidates=getTargetMatcheCandidates(fileType);$  targetMatcheCandidates=filterTargetMatchesWithoutSourceMatches(sourceMatchCandidates,targetMatcheCandidates);$  sourceMatchCandidates=filterSourceMatchesThatAreTargetMatches(sourceMatchCandidates,targetMatcheCandidates);$  fileFinderResultByType.getSources().addAll(sourceMatchCandidates);$  fileFinderResultByType.getTargets().addAll(targetMatcheCandidates);$  return fileFinderResultByType;$}$
void hideFooter(){$  state=FooterState.STATE_GONE;$  hideView();$}$
public static BufferedImage mergeImageAndText(URL imageFilePath,List<TextPosition> textList) throws IOException {$  BufferedImage im=ImageIO.read(imageFilePath);$  Graphics2D g2=im.createGraphics();$  Font font=AppSplashScreen.getFont();$  g2.setFont(font);$  g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);$  g2.setColor(Color.black);$  for (  TextPosition obj : textList) {$    g2.drawString(obj.textString,obj.position.x,obj.position.y);$  }$  ByteArrayOutputStream baos=new ByteArrayOutputStream();$  ImageIO.write(im,"png",baos);$  InputStream in=new ByteArrayInputStream(baos.toByteArray());$  BufferedImage bImageFromConvert=ImageIO.read(in);$  return bImageFromConvert;$}$
public static String formatUid(int uid){$  StringBuilder sb=new StringBuilder();$  formatUid(sb,uid);$  return sb.toString();$}$
public WasabiEmailException(ErrorCode errorCode,String message,Throwable cause){$  super(errorCode,message,cause);$}$
public static boolean checkBsDiffFileSize(File bsDiffFile,File newFile){$  if (!bsDiffFile.exists()) {$    throw new TinkerPatchException("can not find the bsDiff file:" + bsDiffFile.getAbsolutePath());$  }$  double ratio=bsDiffFile.length() / (double)newFile.length();$  if (ratio > TypedValue.BSDIFF_PATCH_MAX_RATIO) {$    Logger.e("bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024);$    return false;$  }$  return true;$}$
@Override public void cancel(){$  bobcatWait.withTimeout(Timeouts.BIG).until(WindowActions.clickButton(noButton));$}$
@SuppressWarnings({"unchecked","cast"}) public RShiftExpr fullCopy(){$  RShiftExpr tree=(RShiftExpr)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public static Map<String,Object> createContentAssoc(DispatchContext dctx,Map<String,? extends Object> rcontext){$  Map<String,Object> context=UtilMisc.makeMapWritable(rcontext);$  context.put("entityOperation","_CREATE");$  List<String> targetOperationList=ContentWorker.prepTargetOperationList(context,"_CREATE");$  List<String> contentPurposeList=ContentWorker.prepContentPurposeList(context);$  context.put("targetOperationList",targetOperationList);$  context.put("contentPurposeList",contentPurposeList);$  context.put("skipPermissionCheck",null);$  Map<String,Object> result=null;$  try {$    result=createContentAssocMethod(dctx,context);$  }$ catch (  GenericServiceException e) {$    return ServiceUtil.returnError(e.getMessage());$  }$catch (  GenericEntityException e2) {$    return ServiceUtil.returnError(e2.getMessage());$  }$catch (  Exception e3) {$    return ServiceUtil.returnError(e3.getMessage());$  }$  return result;$}$
public void remove(GenericEntity entity){$  UtilCache.clearCache(getCacheName(entity.getEntityName()));$  ModelEntity model=entity.getModelEntity();$  if (model != null) {$    Iterator<String> it=model.getViewConvertorsIterator();$    while (it.hasNext()) {$      String targetEntityName=it.next();$      UtilCache.clearCache(getCacheName(targetEntityName));$    }$  }$}$
private String formatString(final String s){$  if (s.equals(newLine)) {$    return s;$  }$  return String.format("[%s]: %s",timestamp(),s);$}$
void assignToNew(String fileName,PageFormatter fmtr){$  internalLock.writeLock().lock();$  try {$    flush();$    fmtr.format(this);$    blk=contents.append(fileName);$    pins=0;$    isNew=true;$    lastLsn=LogSeqNum.DEFAULT_VALUE;$  }$  finally {$    internalLock.writeLock().unlock();$  }$}$
public boolean isSetCallType(){$  return __isset_bit_vector.get(__CALLTYPE_ISSET_ID);$}$
protected void initEnvironment(Options options,MainArguments mainArgs,JCommander jcommander){$}$
protected void invalidateSchema(){$  super.invalidateSchema();$  this.filterColumns();$}$
public static SM_SYSTEM_MESSAGE STR_MSG_REJECTED_INVITE_FORCE(String value0){$  return new SM_SYSTEM_MESSAGE(1390117,value0);$}$
private static int try_failure(int count,String s,String e){$  print(">    " + s + "*** failure ***\n>      Message: "+ e+ "\n");$  return ++count;$}$
public boolean showCookiesSites(){$  return mContentSettingsType == ContentSettingsType.CONTENT_SETTINGS_TYPE_COOKIES;$}$
public int indexOf(T o){$  for (int i=0; i < size && elems[i] != null; i++) {$    if (elems[i].equals(o))     return i;$  }$  return -1;$}$
public ASCIIReader(InputStream inputStream,byte[] buffer,MessageFormatter messageFormatter,Locale locale){$  fInputStream=inputStream;$  fBuffer=buffer;$  fFormatter=messageFormatter;$  fLocale=locale;$}$
final public static int insertCollection(String collection,V v){$  MongoCollection<Document> c=getCollection(collection);$  if (c != null) {$    Document d=new Document();$    for (    String name : v.names()) {$      Object v1=v.value(name);$      d.append(name,v1);$    }$    try {$      c.insertOne(d);$      if (log.isDebugEnabled())       log.debug("inserted collection=" + collection + ", d="+ d);$      return 1;$    }$ catch (    Exception e) {$      if (log.isErrorEnabled())       log.error(e.getMessage(),e);$    }$  }$  return 0;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_Confuse_END_A_TO_B(String skilltarget){$  return new SM_SYSTEM_MESSAGE(1200902,skilltarget);$}$
public static void startMe(Context _context){$  Intent intent=new Intent(_context,RegisterActivity.class);$  intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);$  _context.startActivity(intent);$}$
public void decreaseDpi(){$  if (this.currentDpiPos > 0) {$    --this.currentDpiPos;$  }$}$
public IResource[] promptForMultiple() throws InterruptedException {$  List targetResources=new ArrayList();$  for (int i=0; i < resources.length; i++) {$    IResource resource=resources[i];$    if (condition.needsPrompt(resource) && confirmOverwrite) {$      if (confirmOverwrite(condition.promptMessage(resource))) {$        targetResources.add(resource);$      }$    }$ else {$      targetResources.add(resource);$    }$  }$  return (IResource[])targetResources.toArray(new IResource[targetResources.size()]);$}$
public int remove(T item){$  int index=indexOf(item);$  if (index >= 0)   super.remove(index);$  return index;$}$
@Override public int hashCode(){$  return (getClass().getName() + Name).hashCode();$}$
public static byte[] hexStringToByte(final String source){$  byte[] bytes=null;$  if (source != null) {$    bytes=new byte[source.length() / 2];$    int i=0;$    while (i < bytes.length) {$      bytes[i]=(byte)(Integer.parseInt(source.substring(i * 2,(i + 1) * 2),16));$      i++;$    }$  }$  return bytes;$}$
public void rollback(ServerTransaction xtn,boolean anyUpdates) throws SAException {$}$
public LocationAnimator(){$  super();$}$
public void add(UIElement element){$  elements.add(element);$}$
public static JavaPairRDD<Integer,Iterable<Tuple2<Integer,BigInteger>>> computeExpTable(JavaSparkContext sc,FileSystem fs,BroadcastVars bVars,Query query,String queryInputFile,String outputDirExp){$  return computeExpTable(sc,fs,bVars,query,queryInputFile,outputDirExp,false);$}$
public FruchtermanReingoldLayout(String graph){$  this(graph,700);$}$
@Override public int[] makeDensityTestPoints(){$  return new int[]{-1,0,1,2,3,4,5,6,7,8,9,10,11};$}$
public PhotosGetCommentsQuery fields(List<EnumParam> value){$  return unsafeParam("fields",value);$}$
public boolean insertTrivialPhiNodes(){$  update();$  boolean change=false;$  varToBlocks=new HashMultiMap<Local,Block>();$  Map<Local,List<Block>> localsToDefPoints=new HashMap<Local,List<Block>>();$  for (  Block block : cfg) {$    for (    Unit unit : block) {$      List<ValueBox> defBoxes=unit.getDefBoxes();$      for (      ValueBox vb : defBoxes) {$        Value def=vb.getValue();$        if (def instanceof Local) {$          Local local=(Local)def;$          List<Block> def_points=null;$          if (localsToDefPoints.containsKey(local)) {$            def_points=localsToDefPoints.get(local);$          }$ else {$            def_points=new ArrayList<Block>();$            localsToDefPoints.put(local,def_points);$          }$          def_points.add(block);$        }$      }$      if (Shimple.isPhiNode(unit))       varToBlocks.put(Shimple.getLhsLocal(unit),block);$    }$  }$  int[] workFlags=new int[cfg.size()];$  int iterCount=0;$  Stack<Block> workList=new Stack<Block>();$  Map<Integer,Integer> has_already=new HashMap<Integer,Integer>();$  for (Iterator<Block> blocksIt=cfg.iterator(); blocksIt.hasNext(); ) {$    Block block=blocksIt.next();$    has_already.put(block.getIndexInMethod(),0);$  }${$    for (    Local local : localsToDefPoints.keySet()) {$      iterCount++;${$        List<Block> def_points=localsToDefPoints.get(local);$        if (def_points.size() == 1) {$          continue;$        }$        for (        Block block : def_points) {$          workFlags[block.getIndexInMethod()]=iterCount;$          workList.push(block);$        }$      }$      while (!workList.empty()) {$        Block block=workList.pop();$        DominatorNode<Block> node=dt.getDode(block);$        Iterator<DominatorNode<Block>> frontierNodes=df.getDominanceFrontierOf(node).iterator();$        while (frontierNodes.hasNext()) {$          Block frontierBlock=frontierNodes.next().getGode();$          int fBIndex=frontierBlock.getIndexInMethod();$          Iterator<Unit> unitsIt=frontierBlock.iterator();$          if (!unitsIt.hasNext()) {$            continue;$          }$          if (has_already.get(frontierBlock.getIndexInMethod()) < iterCount) {$            has_already.put(frontierBlock.getIndexInMethod(),iterCount);$            prependTrivialPhiNode(local,frontierBlock);$            change=true;$            if (workFlags[fBIndex] < iterCount) {$              workFlags[fBIndex]=iterCount;$              workList.push(frontierBlock);$            }$          }$        }$      }$    }$  }$  return change;$}$
public static void remove(String name){$  Helper.delete(W.create("name",name),Jar.class);$}$
public static boolean canUseSkill(Player player,Skill skill){$  for (  Restrictions restrictions : RESTRICTIONS[RestrictionMode.canUseSkill.ordinal()]) {$    if (!restrictions.canUseSkill(player,skill)) {$      return false;$    }$  }$  return true;$}$
public static boolean attemptCrafting(EntityPlayerMP player,IRecipe recipe){$  if (player == null || recipe == null)   return false;$  ItemStack is=recipe.getRecipeOutput();$  if (is == null)   return false;$  List<ItemStack> ingredients=getIngredients(recipe);$  if (playerHasIngredients(player,ingredients)) {$    removeIngredientsFromPlayer(player,ingredients);$    ItemStack resultForInventory=is.copy();$    ItemStack resultForReward=is.copy();$    player.inventory.addItemStackToInventory(resultForInventory);$    RewardForCollectingItemImplementation.GainItemEvent event=new RewardForCollectingItemImplementation.GainItemEvent(resultForReward);$    MinecraftForge.EVENT_BUS.post(event);$    return true;$  }$  return false;$}$
@Override public Object apply(SqlFunctionExecutionContext context){$  assertNumberOfArguments(2,context);$  Object str=context.getArgument(0);$  Object subStr=context.getArgument(1);$  if (str != null && subStr != null && str instanceof String && subStr instanceof String) {$    return String.valueOf(str).indexOf(String.valueOf(subStr)) + 1;$  }$ else {$    throw new RuntimeException("InStr function - wrong arguments types. First argument:[" + str + "]. Second argument:[ "+ subStr+ "]");$  }$}$
public void createWindowSurface(Object surface){$  if (eGLSurface != EGL14.EGL_NO_SURFACE) {$    throw new IllegalStateException("surface already created");$  }$  eGLSurface=eglCore.createWindowSurface(surface);$}$
private void createDictionaryCacheForGivenType(CacheType cacheType,String carbonStorePath){$  Cache cacheObject=null;$  if (cacheType.equals(CacheType.REVERSE_DICTIONARY)) {$    cacheObject=new ReverseDictionaryCache<DictionaryColumnUniqueIdentifier,Dictionary>(carbonStorePath,cacheTypeToLRUCacheMap.get(cacheType));$  }$ else   if (cacheType.equals(CacheType.FORWARD_DICTIONARY)) {$    cacheObject=new ForwardDictionaryCache<DictionaryColumnUniqueIdentifier,Dictionary>(carbonStorePath,cacheTypeToLRUCacheMap.get(cacheType));$  }$  cacheTypeToCacheMap.put(cacheType,cacheObject);$}$
public boolean handleSVNDir(IContainer svnDir){$  if (!svnDir.isTeamPrivateMember()) {$    IFile entriesFile=svnDir.getFile(new Path(SVNConstants.SVN_ENTRIES));$    if (entriesFile.exists() && !svnDir.isTeamPrivateMember()) {$      try {$        svnDir.setTeamPrivateMember(true);$        if (Policy.DEBUG_METAFILE_CHANGES) {$          System.out.println("[svn] found a new SVN meta folder, marking as team-private: " + svnDir.getFullPath());$        }$      }$ catch (      CoreException e) {$        SVNProviderPlugin.log(SVNException.wrapException(svnDir,Policy.bind("SyncFileChangeListener.errorSettingTeamPrivateFlag"),e));$      }$    }$  }$  return svnDir.isTeamPrivateMember();$}$
public static Class forName(String name) throws ClassNotFoundException {$  return forName(name,getDefaultClassLoader());$}$
private static boolean isIntegral(JsonPrimitive primitive){$  if (primitive.value instanceof Number) {$    Number number=(Number)primitive.value;$    return number instanceof BigInteger || number instanceof Long || number instanceof Integer|| number instanceof Short|| number instanceof Byte;$  }$  return false;$}$
public void resetConstraintHandles(){$  mConstraintHandles.clear();$  for (  ConstraintAnchor anchor : mWidget.getAnchors()) {$switch (anchor.getType()) {$case LEFT:${$        mConstraintHandles.add(mLeftAnchor);$      }$    break;$case TOP:${$    mConstraintHandles.add(mTopAnchor);$  }$break;$case RIGHT:${$mConstraintHandles.add(mRightAnchor);$}$break;$case BOTTOM:${$mConstraintHandles.add(mBottomAnchor);$}$break;$case BASELINE:${$mConstraintHandles.add(mBaselineAnchor);$}$break;$case CENTER_X:${$mConstraintHandles.add(mCenterXAnchor);$}$break;$case CENTER_Y:${$mConstraintHandles.add(mCenterYAnchor);$}$break;$case CENTER:${$mConstraintHandles.add(mCenterAnchor);$}$break;$}$}$for (ConstraintHandle handle : mConstraintHandles) {$handle.updateAnchor();$}$}$
public static SM_SYSTEM_MESSAGE STR_MSG_ITEM_PAINT_SUCCEED(int objectNameId,int colorItemNameId){$  return new SM_SYSTEM_MESSAGE(1401436,calculateNameId(objectNameId),new DescriptionId(colorItemNameId));$}$
void draw(Canvas canvas,Paint textPaint){$  if (drawText(canvas,textPaint,characterList,bottomCharIndex,bottomDelta)) {$    if (bottomCharIndex >= 0) {$      currentChar=characterList[bottomCharIndex];$    }$ else     if (bottomCharIndex == UNKNOWN_END_INDEX) {$      currentChar=targetChar;$    }$    currentBottomDelta=bottomDelta;$  }$  drawText(canvas,textPaint,characterList,bottomCharIndex + 1,bottomDelta - charHeight);$  drawText(canvas,textPaint,characterList,bottomCharIndex - 1,bottomDelta + charHeight);$}$
public static String translateJavaVersion(int javaVersion){$  if (javaVersion == Options.java_version_default) {$    return "1.0";$  }$ else {$    return "1." + (javaVersion - 1);$  }$}$
public Created(Object impl,Object proxy){$  this.proxy=proxy;$  this.impl=impl;$}$
public boolean hasAdditionalText(){$  return mAdditionalText != null;$}$
public static byte[] bitmapToByte(Bitmap b){$  ByteArrayOutputStream o=new ByteArrayOutputStream();$  b.compress(Bitmap.CompressFormat.PNG,100,o);$  return o.toByteArray();$}$
protected void loader() throws IOException {$  setupFeatureSet();$  setupUtteranceProcessors();$  setupFeatureProcessors();$}$
public int model(){$  return theType.model();$}$
public void delete(){$  if (tx.isReadOnly() && !isTempTable())   throw new UnsupportedOperationException();$  if (fhp == null)   fhp=openHeaderForModification();$  RecordId deletedRid=currentRecordId();$  tx.recoveryMgr().logLogicalStart();$  rp.delete(fhp.getLastDeletedSlot());$  fhp.setLastDeletedSlot(currentRecordId());$  tx.recoveryMgr().logRecordFileDeletionEnd(ti.tableName(),deletedRid.block().number(),deletedRid.id());$  closeHeader();$}$
public void evalute(Element element){$switch (code) {$case PAGE_INSTRUCTION:$    element.putAttribute(PageAttribute.KEY,PageAttribute.create(arg));$  break;$case SUPPRESS_WARNING_INSTRUCTION:$element.getModel().addSupressionDirective(element,arg);$break;$case RESOURCE_INSTRUCTION:$if (!(element instanceof MessageType)) {$element.getModel().getDiagCollector().addDiag(Diag.error(element.getLocation(),"resource instruction must be associated with a message declaration, but '%s' " + "is not a message.",element.getFullName()));$}$ else {$element.addAttribute(ResourceAttribute.KEY,ResourceAttribute.create(arg));$}$break;$case DEPRECATION_DESCRIPTION:$element.putAttribute(DeprecationDescriptionAttribute.KEY,DeprecationDescriptionAttribute.create(arg));$break;$default :$element.getModel().getDiagCollector().addDiag(Diag.error(element.getLocation(),"documentation instruction '%s' unknown.",code));$}$}$
@Override public void startDocument() throws SAXException {$  super.startDocument();$}$
public static Map<String,Object> createTelecomNumber(DispatchContext ctx,Map<String,? extends Object> context){$  Map<String,Object> result=FastMap.newInstance();$  Delegator delegator=ctx.getDelegator();$  Security security=ctx.getSecurity();$  GenericValue userLogin=(GenericValue)context.get("userLogin");$  Locale locale=(Locale)context.get("locale");$  Timestamp now=UtilDateTime.nowTimestamp();$  List<GenericValue> toBeStored=FastList.newInstance();$  String partyId=ServiceUtil.getPartyIdCheckSecurity(userLogin,security,context,result,"PARTYMGR","_PCM_CREATE");$  if (result.size() > 0)   return result;$  String contactMechTypeId="TELECOM_NUMBER";$  String newCmId=null;$  try {$    newCmId=delegator.getNextSeqId("ContactMech");$  }$ catch (  IllegalArgumentException e) {$    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"contactmechservices.could_not_create_contact_info_id_generation_failure",locale));$  }$  GenericValue tempContactMech=delegator.makeValue("ContactMech",UtilMisc.toMap("contactMechId",newCmId,"contactMechTypeId",contactMechTypeId));$  toBeStored.add(tempContactMech);$  toBeStored.add(delegator.makeValue("PartyContactMech",UtilMisc.toMap("partyId",partyId,"contactMechId",newCmId,"fromDate",now,"roleTypeId",context.get("roleTypeId"),"allowSolicitation",context.get("allowSolicitation"),"extension",context.get("extension"))));$  toBeStored.add(delegator.makeValue("TelecomNumber",UtilMisc.toMap("contactMechId",newCmId,"countryCode",context.get("countryCode"),"areaCode",context.get("areaCode"),"contactNumber",context.get("contactNumber"))));$  try {$    delegator.storeAll(toBeStored);$  }$ catch (  GenericEntityException e) {$    Debug.logWarning(e.toString(),module);$    return ServiceUtil.returnError(UtilProperties.getMessage(resourceError,"contactmechservices.could_not_create_contact_info_write",UtilMisc.toMap("errMessage",e.getMessage()),locale));$  }$  result.put("contactMechId",newCmId);$  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);$  return result;$}$
public void add(FieldIdEnum fieldId,FieldConfigBase fieldConfig){$  Map<FieldIdEnum,FieldConfigBase> panelMap=fieldConfigMap.get(panelId);$  if (panelMap == null) {$    panelMap=new HashMap<FieldIdEnum,FieldConfigBase>();$  }$  panelMap.put(fieldId,fieldConfig);$}$
@Override protected void initComparator(){$  if (Comparator == null)   Comparator=new NGramCachedNonSymmGraphComparator();$}$
public void doMeasure(int widthMeasureSpec,int heightMeasureSpec){$  if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270) {$    int tempSpec=widthMeasureSpec;$    widthMeasureSpec=heightMeasureSpec;$    heightMeasureSpec=tempSpec;$  }$  int width=View.getDefaultSize(mVideoWidth,widthMeasureSpec);$  int height=View.getDefaultSize(mVideoHeight,heightMeasureSpec);$  if (mCurrentAspectRatio == IRenderView.AR_MATCH_PARENT) {$    width=widthMeasureSpec;$    height=heightMeasureSpec;$  }$ else   if (mVideoWidth > 0 && mVideoHeight > 0) {$    int widthSpecMode=View.MeasureSpec.getMode(widthMeasureSpec);$    int widthSpecSize=View.MeasureSpec.getSize(widthMeasureSpec);$    int heightSpecMode=View.MeasureSpec.getMode(heightMeasureSpec);$    int heightSpecSize=View.MeasureSpec.getSize(heightMeasureSpec);$    if (widthSpecMode == View.MeasureSpec.AT_MOST && heightSpecMode == View.MeasureSpec.AT_MOST) {$      float specAspectRatio=(float)widthSpecSize / (float)heightSpecSize;$      float displayAspectRatio;$switch (mCurrentAspectRatio) {$case IRenderView.AR_16_9_FIT_PARENT:$        displayAspectRatio=16.0f / 9.0f;$      if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270)       displayAspectRatio=1.0f / displayAspectRatio;$    break;$case IRenderView.AR_4_3_FIT_PARENT:$  displayAspectRatio=4.0f / 3.0f;$if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270) displayAspectRatio=1.0f / displayAspectRatio;$break;$case IRenderView.AR_ASPECT_FIT_PARENT:$case IRenderView.AR_ASPECT_FILL_PARENT:$case IRenderView.AR_ASPECT_WRAP_CONTENT:$default :$displayAspectRatio=(float)mVideoWidth / (float)mVideoHeight;$if (mVideoSarNum > 0 && mVideoSarDen > 0) displayAspectRatio=displayAspectRatio * mVideoSarNum / mVideoSarDen;$break;$}$boolean shouldBeWider=displayAspectRatio > specAspectRatio;$switch (mCurrentAspectRatio) {$case IRenderView.AR_ASPECT_FIT_PARENT:$case IRenderView.AR_16_9_FIT_PARENT:$case IRenderView.AR_4_3_FIT_PARENT:$if (shouldBeWider) {$width=widthSpecSize;$height=(int)(width / displayAspectRatio);$}$ else {$height=heightSpecSize;$width=(int)(height * displayAspectRatio);$}$break;$case IRenderView.AR_ASPECT_FILL_PARENT:$if (shouldBeWider) {$height=heightSpecSize;$width=(int)(height * displayAspectRatio);$}$ else {$width=widthSpecSize;$height=(int)(width / displayAspectRatio);$}$break;$case IRenderView.AR_ASPECT_WRAP_CONTENT:$default :$if (shouldBeWider) {$width=Math.min(mVideoWidth,widthSpecSize);$height=(int)(width / displayAspectRatio);$}$ else {$height=Math.min(mVideoHeight,heightSpecSize);$width=(int)(height * displayAspectRatio);$}$break;$}$}$ else if (widthSpecMode == View.MeasureSpec.EXACTLY && heightSpecMode == View.MeasureSpec.EXACTLY) {$width=widthSpecSize;$height=heightSpecSize;$if (mVideoWidth * height < width * mVideoHeight) {$width=height * mVideoWidth / mVideoHeight;$}$ else if (mVideoWidth * height > width * mVideoHeight) {$height=width * mVideoHeight / mVideoWidth;$}$}$ else if (widthSpecMode == View.MeasureSpec.EXACTLY) {$width=widthSpecSize;$height=width * mVideoHeight / mVideoWidth;$if (heightSpecMode == View.MeasureSpec.AT_MOST && height > heightSpecSize) {$height=heightSpecSize;$}$}$ else if (heightSpecMode == View.MeasureSpec.EXACTLY) {$height=heightSpecSize;$width=height * mVideoWidth / mVideoHeight;$if (widthSpecMode == View.MeasureSpec.AT_MOST && width > widthSpecSize) {$width=widthSpecSize;$}$}$ else {$width=mVideoWidth;$height=mVideoHeight;$if (heightSpecMode == View.MeasureSpec.AT_MOST && height > heightSpecSize) {$height=heightSpecSize;$width=height * mVideoWidth / mVideoHeight;$}$if (widthSpecMode == View.MeasureSpec.AT_MOST && width > widthSpecSize) {$width=widthSpecSize;$height=width * mVideoHeight / mVideoWidth;$}$}$}$ else {$}$mMeasuredWidth=width;$mMeasuredHeight=height;$}$
public static boolean isLifecycleClass(String className){$  return className.equals(ACTIVITYCLASS) || className.equals(SERVICECLASS) || className.equals(BROADCASTRECEIVERCLASS)|| className.equals(CONTENTPROVIDERCLASS)|| className.equals(APPLICATIONCLASS);$}$
static int findBestSampleSize(int actualWidth,int actualHeight,int desiredWidth,int desiredHeight){$  double wr=(double)actualWidth / desiredWidth;$  double hr=(double)actualHeight / desiredHeight;$  double ratio=Math.min(wr,hr);$  float n=1.0f;$  while ((n * 2) <= ratio) {$    n*=2;$  }$  return (int)n;$}$
public static KeyStore createRootCertificateKeyStore(String keyStoreType,X509Certificate certificate,String privateKeyAlias,PrivateKey privateKey,String privateKeyPassword,String provider){$  if (privateKeyPassword == null) {$    throw new IllegalArgumentException("Must specify a KeyStore password");$  }$  KeyStore newKeyStore=KeyStoreUtil.createEmptyKeyStore(keyStoreType,provider);$  try {$    newKeyStore.setKeyEntry(privateKeyAlias,privateKey,privateKeyPassword.toCharArray(),new Certificate[]{certificate});$  }$ catch (  KeyStoreException e) {$    throw new KeyStoreAccessException("Unable to store certificate and private key in KeyStore",e);$  }$  return newKeyStore;$}$
@SuppressWarnings({"unchecked","cast"}) public AbstractDot fullCopy(){$  AbstractDot tree=(AbstractDot)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public ResizeImageTransform(int newWidth,int newHeight){$  this(null,newWidth,newHeight);$}$
private void determinePhraseTopBaseConf(Element phrase){$  Voice voice=null;$  Element voiceElement=(Element)DomUtils.getAncestor(phrase,MaryXML.VOICE);$  if (voiceElement != null)   voice=Voice.getVoice(voiceElement);$  if (voice == null)   voice=defaultVoiceMap.get(phrase.getOwnerDocument());$  if (voice == null) {$    voice=Voice.getDefaultVoice(getLocale());$  }$  if (!(voice instanceof MbrolaVoice)) {$    throw new IllegalStateException("TobiContourGenerator can be used only for MBROLA voices, but voice " + voice.getName() + " is a "+ voice.getClass().toString());$  }$  MbrolaVoice mVoice=(MbrolaVoice)voice;$  int topStart=mVoice.topStart();$  int topEnd=mVoice.topEnd();$  int baseStart=mVoice.baseStart();$  int baseEnd=mVoice.baseEnd();$  TopBaseConfiguration tbConf=new TopBaseConfiguration(topStart,topEnd,baseStart,baseEnd);$  Element current=phrase;$  Stack<Element> prosodyElements=new Stack<Element>();$  while (DomUtils.hasAncestor(current,MaryXML.PROSODY)) {$    current=(Element)DomUtils.getAncestor(current,MaryXML.PROSODY);$    prosodyElements.push(current);$    if (voiceElement != null && !DomUtils.isAncestor(voiceElement,current)) {$      break;$    }$  }$  while (!prosodyElements.empty()) {$    Element prosody=prosodyElements.pop();$    tbConf=calculateTopBase(prosody,tbConf);$  }$  Element lastSegment=DomUtils.getLastElementByTagName(phrase,MaryXML.PHONE);$  if (lastSegment != null) {$    int endTime=getSegmentEndInMillis(lastSegment);$    if (endTime == -1) {$      Log.w(Mary.LOG,"Unexpected end time `" + lastSegment.getAttribute("end") + "'");$    }$    tbConf.setTimes(0,endTime);$  }$  topBaseConfMap.put(phrase,tbConf);$}$
private static boolean clientOverwriteable(SootMethod m){$  SootClass c=m.getDeclaringClass();$  if (!c.isFinal() && !m.isFinal() && visible(m)&& clientCanInstantiate(c))   return true;$  return false;$}$
public static Tuple min(TupleSet tuples,String field){$  return min(tuples,field,DefaultLiteralComparator.getInstance());$}$
public TraceInfo(TraceInfo other){$  __isset_bit_vector.clear();$  __isset_bit_vector.or(other.__isset_bit_vector);$  if (other.isSetClientAppkey()) {$    this.clientAppkey=other.clientAppkey;$  }$  if (other.isSetTraceId()) {$    this.traceId=other.traceId;$  }$  if (other.isSetSpanId()) {$    this.spanId=other.spanId;$  }$  if (other.isSetRootMessageId()) {$    this.rootMessageId=other.rootMessageId;$  }$  if (other.isSetCurrentMessageId()) {$    this.currentMessageId=other.currentMessageId;$  }$  if (other.isSetServerMessageId()) {$    this.serverMessageId=other.serverMessageId;$  }$  this.debug=other.debug;$  this.sample=other.sample;$  if (other.isSetClientIp()) {$    this.clientIp=other.clientIp;$  }$}$
public static <T>void removeAll(List<T> list,List<Integer> indexes){$  if (list == null || indexes == null) {$    return;$  }$  Collections.sort(indexes,Collections.reverseOrder());$  final int size=list.size();$  for (  Integer index : indexes) {$    if (index >= 0 && index < size) {$      list.remove((int)index);$    }$  }$}$
public int hashCode(){$  int hash=type;$  if (loader != null) {$    hash+=loader.hashCode();$  }$  for (int i=contextElements.length; --i >= 0; ) {$    hash+=contextElements[i].hashCode();$  }$  if (principals != null) {$    for (int i=principals.length; --i >= 0; ) {$      hash+=principals[i].hashCode();$    }$  }$  for (int i=permissions.length; --i >= 0; ) {$    hash+=permissions[i].hashCode();$  }$  return hash;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DelayedSpellATK_Instant_INTERVAL_ME_TO_SELF(int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200352,num0,skillname);$}$
private static String trimCommentIndentation(String description){$  if (description.startsWith(" ")) {$    description=description.substring(1);$  }$  return description.replace("\n ","\n").replace("\r ","\r");$}$
@ApiMethod(path="{type}/",verb=ApiVerb.POST,description="Write one or more entries to the space.",consumes={MediaType.APPLICATION_JSON_VALUE},produces={MediaType.APPLICATION_JSON_VALUE}) @RequestMapping(value="/{type}",method=RequestMethod.POST,consumes={MediaType.APPLICATION_JSON_VALUE},produces={MediaType.APPLICATION_JSON_VALUE}) public @ResponseBody Map<String,Object> post(@ApiPathParam(name="type",description=TYPE_DESCRIPTION) @PathVariable String type,@RequestBody(required=false) @ApiBodyObject(clazz=ErrorMessage.class) String requestBody) throws TypeNotFoundException {$  if (logger.isLoggable(Level.FINE))   logger.fine("performing post, type: " + type);$  if (requestBody == null) {$    throw new RestException("Request body cannot be empty");$  }$  GigaSpace gigaSpace=ControllerUtils.xapCache.get();$  createAndWriteDocuments(gigaSpace,type,requestBody,WriteModifiers.UPDATE_OR_WRITE);$  Map<String,Object> result=new HashMap<String,Object>();$  result.put("status","success");$  return result;$}$
public static Map<String,Object> updateBinaryFile(DispatchContext dctx,Map<String,? extends Object> context){$  Map<String,Object> result=null;$  try {$    result=updateBinaryFileMethod(dctx,context);$  }$ catch (  GenericServiceException e) {$    return ServiceUtil.returnError(e.getMessage());$  }$  return result;$}$
public TrustManagerBuilder add(TrustManager... mgrs){$  for (  TrustManager tm : mgrs) {$    if (tm instanceof X509TrustManager) {$      mgr.add((X509TrustManager)tm);$    }$  }$  return (this);$}$
public boolean isTransparent(){$  return transparent;$}$
public static SM_SYSTEM_MESSAGE STR_MSG_PAY_GIVEUP_OTHER(String value0){$  return new SM_SYSTEM_MESSAGE(1390229,value0);$}$
static void testValidity(Object o) throws JSONException {$  if (o != null) {$    if (o instanceof Double) {$      if (((Double)o).isInfinite() || ((Double)o).isNaN()) {$        throw new JSONException("JSON does not allow non-finite numbers.");$      }$    }$ else     if (o instanceof Float) {$      if (((Float)o).isInfinite() || ((Float)o).isNaN()) {$        throw new JSONException("JSON does not allow non-finite numbers.");$      }$    }$  }$}$
public void readJasmin(InputStream input,String name,boolean numberLines) throws IOException, Exception {$  errors=0;$  filename=name;$  source_name=name;$  auto_number=numberLines;$  class_env=new ClassEnv();$  scanner=new Scanner(input);$  parser parse_obj=new parser(this,scanner);$  if (false) {$  }$ else {$    parse_obj.parse();$  }$}$
public MaryData process(MaryData d,List<Target> targetFeaturesList,List<Element> segmentsAndBoundaries,List<Element> tokensAndBoundaries) throws Exception {$  Voice v=d.getDefaultVoice();$  assert v instanceof HMMVoice;$  HMMVoice hmmv=(HMMVoice)v;$  HTSUttModel um=processTargetList(targetFeaturesList,segmentsAndBoundaries,hmmv.getHMMData());$  HTSParameterGeneration pdf2par=new HTSParameterGeneration();$  pdf2par.htsMaximumLikelihoodParameterGeneration(um,hmmv.getHMMData());$  HTSVocoder par2speech=new HTSVocoder();$  AudioInputStream ais=par2speech.htsMLSAVocoder(pdf2par,hmmv.getHMMData());$  MaryData output=new MaryData(outputType(),d.getLocale());$  if (d.getAudioFileFormat() != null) {$    output.setAudioFileFormat(d.getAudioFileFormat());$    if (d.getAudio() != null) {$      assert d.getAudio() instanceof AppendableSequenceAudioInputStream;$      output.setAudio(d.getAudio());$    }$  }$  output.appendAudio(ais);$  if (tokensAndBoundaries != null)   setRealisedProsody(tokensAndBoundaries,um);$  return output;$}$
@deprecated public String toString(int start,int limit){$  StringBuilder result=new StringBuilder();$  for (int i=start; i < limit; i++) {$    Object item=this.items.get(i);$    if ((item instanceof String)) {$      String itemString=(String)item;$      result.append(this.tokenizer.quoteLiteral(itemString));$    }$ else {$      result.append(this.items.get(i).toString());$    }$  }$  return result.toString();$}$
@Nullable private String findLabel(TransformWork work,String label){$  String val=work.getLabel(label);$  if (val != null) {$    return val;$  }$  for (  Change<?> change : work.getChanges().getCurrent()) {$    val=change.getLabels().get(label);$    if (val != null) {$      return val;$    }$  }$  return null;$}$
private static short rangeCheck(short value) throws NumberFormatException {$  if (value < MIN_VALUE || value > MAX_VALUE) {$    throw new NumberFormatException("Value is out of range : " + value);$  }$  return value;$}$
public static InputStream openResourceFileAsStream(String resourceFileName){$  if (resourceFileName.equals("jtok/enen_b-abbrev.txt"))   resourceFileName="jtok/en/en_b-abbrev.txt";$  InputStream is=null;$  try {$    is=MaryLink.getContext().getAssets().open(resourceFileName);$    if (null == is) {$      is=MaryLink.getContext().getAssets().open("/" + resourceFileName);$      if (null == is) {$        is=MaryLink.getContext().getAssets().open(resourceFileName);$        if (null == is) {$          is=new FileInputStream(resourceFileName);$        }$      }$    }$  }$ catch (  Exception e) {$    Log.d(Mary.LOG,"openResourceFileAsStream, CANN'T open file=" + resourceFileName);$  }$  return is;$}$
private void updateAssociatedTableWithFK(DataSupport baseObj){$  Map<String,Set<Long>> associatedModelMap=baseObj.getAssociatedModelsMapWithFK();$  ContentValues values=new ContentValues();$  for (  String associatedTableName : associatedModelMap.keySet()) {$    values.clear();$    String fkName=getForeignKeyColumnName(baseObj.getTableName());$    values.put(fkName,baseObj.getBaseObjId());$    Set<Long> ids=associatedModelMap.get(associatedTableName);$    if (ids != null && !ids.isEmpty()) {$      mDatabase.update(associatedTableName,values,getWhereOfIdsWithOr(ids),null);$    }$  }$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MPHeal_INTERVAL_A_TO_SELF(String skillcaster,int num0,String skillname){$  return new SM_SYSTEM_MESSAGE(1200841,skillcaster,num0,skillname);$}$
public static int[] sortValues(Matrix m){$  double[] v=new double[m.getColumnDimension()];$  int[] index=new int[v.length];$  for (int i=0; i < v.length; i++) {$    v[i]=m.get(i,i);$    index[i]=i;$  }$  for (int i=0; i < v.length; i++) {$    for (int j=i + 1; j < v.length; j++) {$      if (Math.abs(v[i]) < Math.abs(v[j])) {$        double tmpValue=v[j];$        v[j]=v[i];$        v[i]=tmpValue;$        int tmpIndex=index[j];$        index[j]=index[i];$        index[i]=tmpIndex;$      }$    }$  }$  return index;$}$
public static double oneTailedFishersExact(int k,int n,int r,int m){$  if (k < 0 || k < (m + r) - n || k > r || k > m || r > n || m > n) {$    throw new IllegalArgumentException("Invalid Fisher's exact: " + "k=" + k + " n="+ n+ " r="+ r+ " m="+ m+ " k<0="+ (k < 0)+ " k<(m+r)-n="+ (k < (m + r) - n)+ " k>r="+ (k > r)+ " k>m="+ (k > m)+ " r>n="+ (r > n)+ "m>n="+ (m > n));$  }$  if (m > n / 2) {$    m=n - m;$    k=r - k;$  }$  if (r > n / 2) {$    r=n - r;$    k=m - k;$  }$  if (m > r) {$    int temp=m;$    m=r;$    r=temp;$  }$  double total=0.0;$  if (k > m / 2) {$    for (int k0=k; k0 <= m; k0++) {$      total+=SloppyMath.hypergeometric(k0,n,r,m);$    }$  }$ else {$    int min=Math.max(0,(m + r) - n);$    for (int k0=min; k0 < k; k0++) {$      total+=SloppyMath.hypergeometric(k0,n,r,m);$    }$    total=1.0 - total;$  }$  return total;$}$
public StreamSource(File f){$  setSystemId(f.toURI().toASCIIString());$}$
public static File[] convertFileCollectionToFileArray(Collection<File> files){$  return files.toArray(new File[files.size()]);$}$
private int updateMouseCursor(ResizeHandle handle){$  if (handle == null) {$    return Cursor.DEFAULT_CURSOR;$  }$switch (handle.getType()) {$case LEFT_BOTTOM:${$      return Cursor.SW_RESIZE_CURSOR;$    }$case LEFT_TOP:${$    return Cursor.NW_RESIZE_CURSOR;$  }$case RIGHT_BOTTOM:${$  return Cursor.SE_RESIZE_CURSOR;$}$case RIGHT_TOP:${$return Cursor.NE_RESIZE_CURSOR;$}$case LEFT_SIDE:${$return Cursor.W_RESIZE_CURSOR;$}$case RIGHT_SIDE:${$return Cursor.E_RESIZE_CURSOR;$}$case TOP_SIDE:${$return Cursor.N_RESIZE_CURSOR;$}$case BOTTOM_SIDE:${$return Cursor.S_RESIZE_CURSOR;$}$}$return Cursor.DEFAULT_CURSOR;$}$
public int findIndexOfValue(String value){$  if (value != null && mEntryValues != null) {$    for (int i=mEntryValues.length - 1; i >= 0; i--) {$      if (mEntryValues[i].equals(value)) {$        return i;$      }$    }$  }$  return -1;$}$
private void addReportingRates(DataQueryParams params,Grid grid){$  if (!params.getReportingRates().isEmpty() && !params.isSkipData()) {$    for (    ReportingRateMetric metric : ReportingRateMetric.values()) {$      DataQueryParams dataSourceParams=DataQueryParams.newBuilder(params).retainDataDimensionReportingRates(metric).withIncludeNumDen(false).ignoreDataApproval().withAggregationType(AggregationType.COUNT).withTimely((REPORTING_RATE_ON_TIME == metric || ACTUAL_REPORTS_ON_TIME == metric)).build();$      addReportingRates(dataSourceParams,grid,metric,params.isIncludeNumDen());$    }$  }$}$
public static String toPEMformat(X509Certificate[] certificateChain){$  StringWriter sw=new StringWriter();$  for (  X509Certificate certificate : certificateChain) {$    sw.append(toPEMformat(certificate));$  }$  return sw.toString();$}$
public static StyledLayerDescriptor createSLDFromString(SLDDataInterface sldData){$  if ((sldData == null) || (sldData.getSld() == null)) {$    return null;$  }$  StyleFactory styleFactory=CommonFactoryFinder.getStyleFactory();$  InputStream stream=new ByteArrayInputStream(sldData.getSld().getBytes());$  SLDParser styleReader=new SLDParser(styleFactory,stream);$  URL resourceLocator=getResourceLocator(sldData);$  sldData.setResourceLocator(resourceLocator);$  setResourcelocator(styleReader,resourceLocator);$  StyledLayerDescriptor sld=null;$  try {$    sld=styleReader.parseSLD();$  }$ catch (  RuntimeException e) {$    ConsoleManager.getInstance().error(SLDUtils.class,e.getMessage());$  }$  return sld;$}$
public T walkInDefaultOrder(final FieldVectorChangingVisitor<T> visitor,final int start,final int end) throws MathIllegalArgumentException {$  checkIndices(start,end);$  visitor.start(getDimension(),start,end);$  for (int i=start; i <= end; i++) {$    setEntry(i,visitor.visit(i,getEntry(i)));$  }$  return visitor.end();$}$
protected void searchUpdate(){$  String query=m_queryF.getText();$synchronized (m_lock) {$    m_searcher.search(query);$    if (m_searcher.getQuery().length() == 0)     m_resultL.setText(null);$ else {$      int r=m_searcher.getTupleCount();$      m_resultL.setText(r + " match" + (r == 1 ? "" : "es"));$    }$  }$}$
protected void okButtonPressed(){$  String selectedItem=(String)comboBoxNewSLD.getSelectedItem();$  if (selectedItem != null) {$    if (newSLDObjectMap != null) {$      selected=newSLDObjectMap.get(selectedItem);$    }$  }$  setVisible(false);$}$
private void putEntry(String key,CacheHeader entry){$  if (!mEntries.containsKey(key)) {$    mTotalSize+=entry.size;$  }$ else {$    CacheHeader oldEntry=mEntries.get(key);$    mTotalSize+=(entry.size - oldEntry.size);$  }$  mEntries.put(key,entry);$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_MagicCounterATK_A_TO_B(String skilltarget,String skillcaster,String skillname){$  return new SM_SYSTEM_MESSAGE(1200989,skilltarget,skillcaster,skillname);$}$
public LineUnavailableException(){$  super();$}$
public PercentageCellRenderer(){$  super();$  withRatingColors(0,1);$}$
public int read() throws IOException {$  if (totalRead >= totalExpected) {$    return -1;$  }$  int result=in.read();$  if (result != -1) {$    totalRead++;$  }$  return result;$}$
public FriendsGetAvailableForCallQuery nameCase(UsersNameCase value){$  return unsafeParam("name_case",value);$}$
public static String gmlPosToString(String pos,String precision) throws ParseException {$  int nDecimals=Integer.parseInt(precision);$  String[] c=pos.trim().split("\\s",2);$  if (c.length != 2) {$    return "";$  }$  String lat=parseCoordinate(c[0],nDecimals,NF), lon=parseCoordinate(c[1],nDecimals,NF);$  return "[" + lat + ","+ lon+ "]";$}$
public XMLInputSource(String publicId,String systemId,String baseSystemId){$  fPublicId=publicId;$  fSystemId=systemId;$  fBaseSystemId=baseSystemId;$}$
public static boolean hasEquipmentValueDeadbandChanged(final ISourceDataTag sourceDataTag,final ISourceDataTag oldSourceDataTag){$  return sourceDataTag.getValueDeadbandType() == DataTagDeadband.DEADBAND_EQUIPMENT_ABSOLUTE || sourceDataTag.getValueDeadbandType() == DataTagDeadband.DEADBAND_EQUIPMENT_RELATIVE && sourceDataTag.getValueDeadband() != oldSourceDataTag.getValueDeadband();$}$
private static String toPunycode(String ruleText){$  try {$    if (UrlUtils.isASCII(ruleText)) {$      return ruleText;$    }$    String[] startsWith=new String[]{"http://www.","https://www.","http://","https://","||"};$    String[] contains=new String[]{"/","^"};$    int startIndex=-1;$    for (    String start : startsWith) {$      if (ruleText.startsWith(start)) {$        startIndex=start.length();$        break;$      }$    }$    if (startIndex == -1) {$      return ruleText;$    }$    int symbolIndex=-1;$    for (    String contain : contains) {$      int index=ruleText.indexOf(contain,startIndex);$      if (index >= 0) {$        symbolIndex=index;$        break;$      }$    }$    String domain=symbolIndex == -1 ? ruleText.substring(startIndex) : ruleText.substring(startIndex,symbolIndex);$    ruleText=StringUtils.replace(ruleText,domain,UrlUtils.toPunycode(domain));$    return ruleText;$  }$ catch (  Exception ex) {$    LoggerFactory.getLogger(UrlFilterRule.class).warn("Error while getting ascii domain for rule " + ruleText,ex);$    return StringUtils.EMPTY;$  }$}$
public DateSelectionDialog(Shell parent,String dateString){$  super(parent);$  this.setShellStyle(SWT.CLOSE);$  this.date=parseDate(dateString);$}$
private void ensureTupleArray(int row){$  int nrows=Math.max(m_table.getRowCount(),row + 1);$  if (m_tuples == null) {$    m_tuples=new TableTuple[nrows];$  }$ else   if (m_tuples.length < nrows) {$    int capacity=Math.max((3 * m_tuples.length) / 2 + 1,nrows);$    TableTuple[] tuples=new TableTuple[capacity];$    System.arraycopy(m_tuples,0,tuples,0,m_tuples.length);$    m_tuples=tuples;$  }$}$
public static String truncateBeforeSecondOccurrence(String text,String word){$  int pos=text.indexOf(word);$  if (pos == -1)   return text;$  pos=text.indexOf(word,pos + 1);$  if (pos == -1)   return text;$ else   return text.substring(0,pos);$}$
private static String readFile(File file,Charset encoding) throws IOException {$  byte[] encoded=Files.readAllBytes(Paths.get(file.getAbsolutePath()));$  return new String(encoded,encoding);$}$
public int hashCode(){$  return (ClientMinPrincipal.class.hashCode() + Constraint.hash(principals));$}$
public static QueryParser create(QueryBuilder queryBuilder){$  return new QueryParser(queryBuilder);$}$
public static void main(String[] args){$  String ss="{a:'a',b:1}";$  JSON j=JSON.fromObject(ss);$  System.out.println(j);$  ss="{a:'a',b:1, c:{a:1, b:'a'}}";$  j=JSON.fromObject(ss);$  System.out.println(j);$  System.out.println(j.get("b").getClass());$  ss="[{a:'a',b:1}]";$  List<JSON> l1=JSON.fromObjects(ss);$  System.out.println(l1);$  System.out.println(l1.get(0).get("b").getClass());$}$
public PlacesGetCheckinsQuery timestamp(Integer value){$  return unsafeParam("timestamp",value);$}$
public void testOneSampleUniformUniform(){$  final KolmogorovSmirnovTest test=new KolmogorovSmirnovTest();$  final UniformRealDistribution unif=new UniformRealDistribution(-0.5,0.5);$  Assert.assertEquals(8.881784197001252E-16,test.kolmogorovSmirnovTest(unif,uniform,false),TOLERANCE);$  Assert.assertTrue(test.kolmogorovSmirnovTest(unif,uniform,0.05));$  Assert.assertEquals(0.5400666982352942,test.kolmogorovSmirnovStatistic(unif,uniform),TOLERANCE);$}$
public boolean contains(T obj){$  throw new RuntimeException("RwlSegmentedStoredList::contains not supported");$}$
@SuppressWarnings({"unchecked","cast"}) public AssignSimpleExpr fullCopy(){$  AssignSimpleExpr tree=(AssignSimpleExpr)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
protected LocationSettings(Context context){$  mContext=context;$}$
@NotNull public AddFaceToFaceListAction addFaceToFaceList(@NotNull String faceListId,@Nullable String userData,@Nullable String targetFace,@NotNull InputStream image){$  Validation.validate(faceListId,"^[a-z0-9_-]{1,64}$",new ParameterValidationException("faceListId","Valid character is letter in lower case or digit or '-' or '_', maximum length is 64."));$  Validation.validate(Utils.blankIfNull(userData),1,new ParameterValidationException("userData","The size limit is 1KB"));$  return new AddFaceToFaceListAction(cognitiveContext,faceListId,userData,targetFace,image);$}$
public ShortListImpl(short[] array,int length){$  fArray=array;$  fLength=length;$}$
public void fileSaved(){$  reset();$}$
public Lexicon removeLowCoverageWords(double coverage){$  int minDf=(int)(numDocs * coverage);$  return removeLowDfWords(minDf);$}$
public FieldConfigGeometry(FieldConfigCommonData commonData,String buttonText){$  super(commonData);$  this.buttonText=buttonText;$}$
public void drawLine(PointF p1,PointF p2,Canvas canvas,Paint paint){$  canvas.save();$  canvas.drawLine(p1.x,p1.y,p2.x,p2.y,paint);$  canvas.restore();$}$
@Override public Filter createFilter(List<Expression> parameterList){$  IsGreaterThanOrEqualToImpl filter=null;$  if ((parameterList == null) || (parameterList.size() != 3)) {$    filter=new IsGreaterThanOrEqualToExtended();$  }$ else {$    LiteralExpressionImpl matchCase=(LiteralExpressionImpl)parameterList.get(2);$    filter=new IsGreaterThanOrEqualToExtended(parameterList.get(0),parameterList.get(1),(Boolean)matchCase.getValue());$  }$  return filter;$}$
public String toString(){$  return "PartOfSpeechTagger";$}$
@Override public byte[] asBytes(int rowNumber){$  return ByteBuffer.allocate(4).putInt(getInt(rowNumber)).array();$}$
public static double[][] diag(double[] values){$  final int dim=values.length;$  final double[][] matrix=new double[dim][dim];$  for (int i=0; i < dim; i++) {$    matrix[i][i]=values[i];$  }$  return matrix;$}$
protected void doOptimizedEval(final Semaphore sSem,PrintStream pOverallResultsOutStream,int WordNGramSize_Min,int WordNGramSize_Max,int Word_Dmax,int CharacterNGramSize_Min,int CharacterNGramSize_Max,int Character_Dmax,boolean bDoCharNGrams,boolean bDoWordNGrams,String sSummaryDir,String sModelDir,int iThreads,boolean bSilent,boolean bProgress) throws Exception {$  if (pOverallResultsOutStream == null)   pOverallResultsOutStream=System.out;$  ThreadList tqRobin=new ThreadList(iThreads);$  DocumentSet dsSummarySet=new DocumentSet(sSummaryDir,1.0);$  final DocumentSet dsModelSet=new DocumentSet(sModelDir,1.0);$  dsSummarySet.createSets();$  dsModelSet.createSets();$  HashMap hmCategoryResults=new HashMap();$  if (dsSummarySet.getTrainingSet().size() * dsModelSet.getTrainingSet().size() == 0) {$    System.err.println("Empty document set...");$    throw new Exception("Empty document set...");$  }$  pOverallResultsOutStream.print("Theme\t");$  pOverallResultsOutStream.print("SystemID\t");$  if (bDoWordNGrams) {$    pOverallResultsOutStream.print("GraphCooccurence\t");$    pOverallResultsOutStream.print("GraphValue\t");$    pOverallResultsOutStream.print("GraphSize\t");$    pOverallResultsOutStream.print("HistoContainmentSimilarity\t");$    pOverallResultsOutStream.print("HistoValue\t");$    pOverallResultsOutStream.print("HistoSize\t");$    pOverallResultsOutStream.print("OverallSimil\t");$  }$  if (bDoCharNGrams) {$    pOverallResultsOutStream.print("CharGraphCooccurence\t");$    pOverallResultsOutStream.print("CharGraphValue\t");$    pOverallResultsOutStream.print("CharGraphSize\t");$    pOverallResultsOutStream.print("NHistoContainmentSimilarity\t");$    pOverallResultsOutStream.print("NHistoValue\t");$    pOverallResultsOutStream.print("NHistoSize\t");$    pOverallResultsOutStream.print("NOverallSimil\t");$  }$  pOverallResultsOutStream.println();$  int iTotal=dsSummarySet.getTrainingSet().size();$  int iCur=0;$  Iterator iCatIter=dsModelSet.getCategories().iterator();$  Date dStart=new Date();$  while (iCatIter.hasNext()) {$    String sCurCategory=(String)iCatIter.next();$    if (!bSilent)     System.err.println("Processing category:" + sCurCategory);$    hModelCache.clear();$    hNModelCache.clear();$    List lModelFiles=dsModelSet.getFilesFromCategory(sCurCategory);$    Iterator iIter=dsSummarySet.getFilesFromCategory(sCurCategory,dsSummarySet.FROM_TRAINING_SET).iterator();$    while (iIter.hasNext()) {$      final CategorizedFileEntry cfeCur=(CategorizedFileEntry)iIter.next();$      Runnable r=new CalcSimilRunner(WordNGramSize_Min,WordNGramSize_Max,Word_Dmax,CharacterNGramSize_Min,CharacterNGramSize_Max,Character_Dmax,cfeCur,lModelFiles,sSem,bDoCharNGrams,bDoWordNGrams,pOverallResultsOutStream,bSilent,this,WeightMethod,Progress);$      while (!tqRobin.addThreadFor(r))       Thread.yield();$      Date dCurTime=new Date();$      long lRemaining=(iTotal - iCur + 1) * (long)((double)(dCurTime.getTime() - dStart.getTime()) / iCur);$      if (!bSilent || (bProgress))       System.err.print("Completed " + String.format("%7.4f",(double)iCur++ / iTotal * 100) + "%"+ String.format(" - Remaining %50s\r",gr.demokritos.iit.jinsect.utils.millisToMinSecString(lRemaining)));$    }$  }$  try {$    tqRobin.waitUntilCompletion();$  }$ catch (  InterruptedException ex) {$    System.err.println("Could not complete execution of all tasks.");$    ex.printStackTrace(System.err);$  }$  System.err.println("Completed 100%. A total of " + iTotal + " comparisons were "+ "performed.");$}$
@Override public void onUIRefreshBegin(PtrFrameLayout frame){$  mDrawable.setAlpha(255);$  mDrawable.start();$}$
public static SM_SYSTEM_MESSAGE STR_ARTIFACT_FIRE(DescriptionId race,String value1,DescriptionId descriptionId){$  return new SM_SYSTEM_MESSAGE(1301036,race,value1,descriptionId);$}$
public static boolean isConnected(Context context){$  ConnectivityManager cm=(ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);$  NetworkInfo activeNetwork=cm.getActiveNetworkInfo();$  return activeNetwork != null && activeNetwork.isConnectedOrConnecting();$}$
@ObjectiveCName("add:action:name:event:timeoutListener:timeout:") void add(Topic topic,Actions action,String name,Event event,UtilTimeoutListener timeoutListener,int timeout){$  String uniqueName=this.getUniqueName(topic,action,name);$  this.clear(uniqueName);$  addToRegister(topic,action,name,event,timeoutListener,timeout);$}$
public static <K,V>MapContext<K,V> createMapContext(MapContext<K,V> source){$  MapContext<K,V> newValue=MapContext.getMapContext();$  newValue.stackList.addAll(source.stackList);$  return newValue;$}$
public boolean isCritical(){$  return true;$}$
@Timed protected Assignment assignUserToLookUp(Assignment assignment,Date date){$  final String CQL;$  Date paramDate=date;$  if (paramDate == null) {$    paramDate=new Date();$  }$  if (assignment.getBucketLabel() != null) {$    CQL="insert into user_assignment_look_up " + "(experiment_id, user_id, context, created, bucket_label) " + "values (?, ?, ?, ?, ?)";$  }$ else {$    CQL="insert into user_assignment_look_up " + "(experiment_id, user_id, context, created) " + "values (?, ?, ?, ?)";$  }$  try {$    PreparedCqlQuery<User.ID,String> query=driver.getKeyspace().prepareQuery(keyspace.userAssignmentLookUp()).withCql(CQL).asPreparedStatement().withByteBufferValue(assignment.getExperimentID(),ExperimentIDSerializer.get()).withByteBufferValue(assignment.getUserID(),UserIDSerializer.get()).withStringValue(assignment.getContext().getContext()).withByteBufferValue(paramDate,DateSerializer.get());$    if (assignment.getBucketLabel() != null) {$      query.withByteBufferValue(assignment.getBucketLabel(),BucketLabelSerializer.get());$    }$    query.execute();$    return (Assignment.newInstance(assignment.getExperimentID()).withBucketLabel(assignment.getBucketLabel()).withUserID(assignment.getUserID()).withContext(assignment.getContext()).withStatus(Assignment.Status.NEW_ASSIGNMENT).withCreated(paramDate).withCacheable(null).build());$  }$ catch (  ConnectionException e) {$    throw new RepositoryException("Could not save user assignment \"" + assignment + "\"",e);$  }$}$
public RingBuffer(int size){$  this.size=size;$  buffer=new byte[size];$  wp=rp=0;$}$
public static StyledLayerDescriptor createNewPolygon(){$  StyledLayerDescriptor sld=styleFactory.createStyledLayerDescriptor();$  NamedLayer namedLayer=styleFactory.createNamedLayer();$  sld.addStyledLayer(namedLayer);$  Style style=styleFactory.createStyle();$  namedLayer.addStyle(style);$  List<FeatureTypeStyle> ftsList=style.featureTypeStyles();$  FeatureTypeStyle fts=styleFactory.createFeatureTypeStyle();$  ftsList.add(fts);$  Rule rule=styleFactory.createRule();$  fts.rules().add(rule);$  PolygonSymbolizer polygon=createDefaultPolygonSymbolizer();$  rule.symbolizers().add(polygon);$  return sld;$}$
<T>T onMax(String tableName,String column,String[] conditions,Class<T> type){$  return mathQuery(tableName,new String[]{"max(" + column + ")"},conditions,type);$}$
public KeyHook(String description,int keyCode,String category){$  super(description,keyCode,category);$}$
public PhotosSaveQuery photosList(String value){$  return unsafeParam("photos_list",value);$}$
public int startNewBookie() throws Exception {$  ServerConfiguration conf=newServerConfiguration();$  startBookie(conf);$  return conf.getBookiePort();$}$
private Map<String,List<ChartObject>> transformToFilterStyle(CriteriaMap<?> criteriaMap,Map<String,List<ChartObject>> input,List<String> chartFields){$  Map<String,List<ChartObject>> result=new LinkedHashMap<>();$  for (  Map.Entry<String,List<ChartObject>> entry : input.entrySet()) {$    boolean isConverted=false;$    List<ChartObject> data=entry.getValue();$    for (    String field : chartFields) {$      QueryBuilder.ComplexSearchCriteria filterCriteria=QueryBuilder.filterSearchCriteriaPreProcessor(field);$      String queryCriteria=criteriaMap.getCriteriaHolder(filterCriteria.getGlobalSearchCriteria()).getQueryCriteria();$      if (queryCriteria.equals(entry.getKey())) {$        result.put(criteriaMap.getCriteriaHolder(queryCriteria).getFilterCriteria(),data);$        isConverted=true;$        break;$      }$    }$    if (!isConverted)     result.put(entry.getKey(),data);$  }$  return result;$}$
void rollbackLocalTransaction() throws RollbackFailedException {$  if (_tx == null) {$    return;$  }$  try {$    if (_logger.isLoggable(Level.FINEST)) {$      _logger.log(Level.FINEST,"Aborting local transaction: " + _tx);$    }$    _tx.abort();$  }$ catch (  Exception e) {$    if (_logger.isLoggable(Level.SEVERE)) {$      _logger.log(Level.SEVERE,"Internal error during local transaction abort: " + _tx,e);$    }$    throw new RollbackFailedException(e);$  }$}$
@Override public boolean add(Interval e){$  throw new IllegalAccessError("Do not use add in Simplified Interval List");$}$
public void showLoadingDialog(String message){$  dismissLoadingDialog();$  Fragment frag=getSupportFragmentManager().findFragmentByTag(DIALOG_WAIT_TAG);$  if (frag == null) {$    Log_OC.d(TAG,"show loading dialog");$    LoadingDialog loading=new LoadingDialog(message);$    FragmentManager fm=getSupportFragmentManager();$    FragmentTransaction ft=fm.beginTransaction();$    loading.show(ft,DIALOG_WAIT_TAG);$    fm.executePendingTransactions();$  }$}$
public JSONStringer endArray() throws JSONException {$  return close(Scope.EMPTY_ARRAY,Scope.NONEMPTY_ARRAY,"]");$}$
public static CommandResult execute(String command,File dir){$  SimpleCommand simpleCommand=new SimpleCommand(command);$  return execute(simpleCommand,dir);$}$
public int largestAbsComponent(){$  S2Point temp=fabs(this);$  if (temp.x > temp.y) {$    if (temp.x > temp.z) {$      return 0;$    }$ else {$      return 2;$    }$  }$ else {$    if (temp.y > temp.z) {$      return 1;$    }$ else {$      return 2;$    }$  }$}$
private List<DataSourceFieldInterface> processFields(String layerName,JsonElement fieldArrayElement){$  List<DataSourceFieldInterface> fieldList=new ArrayList<DataSourceFieldInterface>();$  if (fieldArrayElement != null) {$    JsonArray fieldArray=fieldArrayElement.getAsJsonArray();$    for (int index=0; index < fieldArray.size(); index++) {$      JsonObject fieldObject=null;$      try {$        fieldObject=fieldArray.get(index).getAsJsonObject();$      }$ catch (      IllegalStateException e) {$        ConsoleManager.getInstance().error(this,"Layer : " + layerName);$        ConsoleManager.getInstance().exception(this,e);$      }$      if (fieldObject != null) {$        Class<?> fieldType=convertFieldType(fieldObject.get("type").getAsString());$        DataSourceField esriField=new DataSourceField(fieldObject.get("field").getAsString(),fieldType);$        fieldList.add(esriField);$      }$    }$  }$  return fieldList;$}$
public static SM_SYSTEM_MESSAGE STR_MSG_DICE_PASSED(String value0){$  return new SM_SYSTEM_MESSAGE(1300782,value0);$}$
public static Rule createTransitiveRule(String ruleId,RelationType relType,String fromRoleId,String toRoleId,MindmapsGraph graph){$  final int arity=relType.hasRoles().size();$  if (arity != 2)   throw new IllegalArgumentException(ErrorMessage.RULE_CREATION_ARITY_ERROR.getMessage());$  VarAdmin startVar=Graql.var().isa(relType.getId()).rel(fromRoleId,"x").rel(toRoleId,"z").admin();$  VarAdmin endVar=Graql.var().isa(relType.getId()).rel(fromRoleId,"z").rel(toRoleId,"y").admin();$  VarAdmin headVar=Graql.var().isa(relType.getId()).rel(fromRoleId,"x").rel(toRoleId,"y").admin();$  String body=Patterns.conjunction(Sets.newHashSet(startVar,endVar)).toString() + ";";$  String head=headVar.toString() + ";";$  return graph.putRule(ruleId,body,head,graph.getMetaRuleInference());$}$
public ThisRef newThisRef(RefType t){$  return Jimple.v().newThisRef(t);$}$
public static List<Lock> loadByHost(long uid,long time,String host){$  Beans<Lock> bs=Helper.load(W.create("uid",uid).and("created",time,W.OP_GT).and("host",host).sort("created",1),0,Integer.MAX_VALUE,Lock.class);$  return bs == null ? null : bs.getList();$}$
public CauchyDistribution(){$  this(0,1);$}$
public static void handleSubscriptionNotifications(StatefulService service,Operation update,String notificationTaskLink,TaskState opTaskState,int expectedNotificationCount,Object returnState,Set<String> finishedTaskLinks,boolean deleteTask){$  int finishedTaskCount;$  update.complete();$  if ((update.getAction() != Action.PATCH && update.getAction() != Action.PUT)) {$    return;$  }$  if (TaskState.isCancelled(opTaskState) || TaskState.isFailed(opTaskState)) {$    SubscriptionUtils.sendFailureSelfPatch(service,new IllegalStateException("Operation failed:" + Utils.toJsonHtml(update)));$    if (deleteTask) {$      service.sendRequest(Operation.createDelete(service,notificationTaskLink).setBody(new ServiceDocument()));$    }$    return;$  }$  if (!TaskState.isFinished(opTaskState)) {$    return;$  }$synchronized (finishedTaskLinks) {$    if (!finishedTaskLinks.add(notificationTaskLink)) {$      return;$    }$    finishedTaskCount=finishedTaskLinks.size();$  }$  Operation deleteOp=Operation.createDelete(service,notificationTaskLink).setReferer(service.getUri()).setCompletion(null);$  service.getHost().stopSubscriptionService(deleteOp,UriUtils.buildPublicUri(service.getHost(),update.getUri().getPath()));$  if (deleteTask) {$    service.sendRequest(Operation.createDelete(service,notificationTaskLink).setBody(new ServiceDocument()));$  }$  if (finishedTaskCount == expectedNotificationCount) {$    SubscriptionUtils.sendPatch(service,returnState);$  }$}$
@Override public String toString(){$  return str;$}$
private void validateSortSize(){$  String sortSizeStr=carbonProperties.getProperty(CarbonCommonConstants.SORT_SIZE,CarbonCommonConstants.SORT_SIZE_DEFAULT_VAL);$  try {$    int sortSize=Integer.parseInt(sortSizeStr);$    if (sortSize < CarbonCommonConstants.SORT_SIZE_MIN_VAL) {$      LOGGER.info("The batch size value \"" + sortSizeStr + "\" is invalid. Using the default value \""+ CarbonCommonConstants.SORT_SIZE_DEFAULT_VAL);$      carbonProperties.setProperty(CarbonCommonConstants.SORT_SIZE,CarbonCommonConstants.SORT_SIZE_DEFAULT_VAL);$    }$  }$ catch (  NumberFormatException e) {$    LOGGER.info("The batch size value \"" + sortSizeStr + "\" is invalid. Using the default value \""+ CarbonCommonConstants.SORT_SIZE_DEFAULT_VAL);$    carbonProperties.setProperty(CarbonCommonConstants.SORT_SIZE,CarbonCommonConstants.SORT_SIZE_DEFAULT_VAL);$  }$}$
public void destroyView() throws CanceledException {$  JFrame saveLastActiveFrame=lastActiveFrame;$  lastActiveFrame=this.getFrame();$  try {$    askToSaveCurrent();$  }$ catch (  CanceledException ex) {$    ProjectManager.setQuitting(false);$    throw ex;$  }$  try {$    if (ProjectManager.isQuitting() && ProjectManager.getNumberOfProjects() == 1) {$      if (!confirmQuit()) {$        ProjectManager.setQuitting(false);$      }$    }$  }$ catch (  CanceledException ex) {$    ProjectManager.setQuitting(false);$    throw ex;$  }$  doc.closeConnector();$  if (lastActiveViewer == MainViewer.this)   lastActiveViewer=null;$  lastActiveFrame=saveLastActiveFrame;$  if (lastActiveFrame == getFrame())   lastActiveFrame=null;$  super.destroyView();$}$
public static void mainQuickTest2() throws IOException, UnsupportedAudioFileException {$  String emotion="angry";$  String method="F";$  String inputFolder="/project/mary/marcela/VoiceConversion/Neutral-Spike-Conversion/codebook/neutral/train_99";$  String outputBaseFolder="/project/mary/marcela/VoiceConversion/Neutral-Spike-Conversion/codebook/neutral2" + emotion + "/neutral2"+ emotion+ "Out_codebook"+ method+ "3";$  String baseFile="/project/mary/marcela/VoiceConversion/Neutral-Spike-Conversion/codebook/neutral2" + emotion + "/neutral"+ method+ "_X_"+ emotion+ method+ "_99";$  boolean isSourceVocalTractSpectrumFromModel=true;$  int numBestMatches=15;$  boolean isTemporalSmoothing=true;$  int smoothingNumNeighbours=1;$  boolean isContextBasedPreselection=true;$  int totalContextNeighbours=5;$  boolean isPitchFromTargetFile=true;$  int pitchFromTargetMethod=ProsodyTransformerParams.FULL_CONTOUR;$  boolean isDurationFromTargetFile=true;$  int durationFromTargetMethod=ProsodyTransformerParams.PHONEME_DURATIONS;$  boolean isEnergyFromTargetFile=false;$  boolean isLsfsFromTargetFile=false;$  int targetAlignmentFileType=BaselineTransformerParams.FESTIVAL_UTT;$  String outputFolderInfoString="isSrc" + String.valueOf(isSourceVocalTractSpectrumFromModel ? 1 : 0) + "_nBest"+ String.valueOf(numBestMatches)+ "_smooth"+ String.valueOf(isTemporalSmoothing ? 1 : 0)+ "_"+ String.valueOf(smoothingNumNeighbours)+ "_context"+ String.valueOf(isContextBasedPreselection ? 1 : 0)+ "_"+ String.valueOf(totalContextNeighbours)+ "_psUtt"+ String.valueOf(isPitchFromTargetFile ? 1 : 0)+ "_tsUtt"+ String.valueOf(isDurationFromTargetFile ? 1 : 0);$  mainParametric(inputFolder,outputBaseFolder,baseFile,outputFolderInfoString,isSourceVocalTractSpectrumFromModel,numBestMatches,isTemporalSmoothing,smoothingNumNeighbours,isContextBasedPreselection,totalContextNeighbours,isPitchFromTargetFile,pitchFromTargetMethod,isDurationFromTargetFile,durationFromTargetMethod,isEnergyFromTargetFile,isLsfsFromTargetFile,targetAlignmentFileType);$}$
public boolean safe_forname(){$  return soot.PhaseOptions.getBoolean(options,"safe-forname");$}$
public double readDouble(){$  return X.toDouble(readString(),0);$}$
public void saveScoreboard(Configuration config,Scoreboard scoreboard){$  ConfigurationSection teamsSection=config.createSection("teams");$  scoreboard.getTeams().forEach(null);$  ConfigurationSection objectivesSection=config.createSection("objectives");$  scoreboard.getObjectives().forEach(null);$  ConfigurationSection scoresSection=config.createSection("scores");$  scoreboard.getEntries().forEach(null);$}$
public static void resolveExpressionType(PsiElement objSubjectExpression,@Nullable Function objScope,PhpIndex objIndex,HashSet<String> objTypesSet){$  objSubjectExpression=ExpressionSemanticUtil.getExpressionTroughParenthesis(objSubjectExpression);$  if (objSubjectExpression instanceof ArrayCreationExpression) {$    objTypesSet.add(Types.strArray);$    checkCallables((ArrayCreationExpression)objSubjectExpression,objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof StringLiteralExpression) {$    objTypesSet.add(Types.strString);$    return;$  }$  if (objSubjectExpression instanceof ConstantReference) {$    resolveConstantReference((ConstantReference)objSubjectExpression,objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof TernaryExpression) {$    resolveTernaryOperator((TernaryExpression)objSubjectExpression,objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof UnaryExpression) {$    resolveUnaryExpression((UnaryExpression)objSubjectExpression,objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof BinaryExpression) {$    resolveBinaryExpression((BinaryExpression)objSubjectExpression,objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof SelfAssignmentExpression) {$    resolveSelfAssignmentExpression((SelfAssignmentExpression)objSubjectExpression,objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof Variable) {$    String strVariableName=((Variable)objSubjectExpression).getName();$    if (!StringUtil.isEmpty(strVariableName) && strVariableName.charAt(0) == '_') {$      if ("|_GET|_POST|_SESSION|_REQUEST|_FILES|_COOKIE|_ENV|_SERVER|".contains("|" + strVariableName + "|")) {$        storeAsTypeWithSignaturesImport(Types.strArray,objScope,objIndex,objTypesSet);$        return;$      }$    }$    storeAsTypeWithSignaturesImport(((Variable)objSubjectExpression).getSignature(),objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof ArrayAccessExpression) {$    PsiElement var=((ArrayAccessExpression)objSubjectExpression).getValue();$    if (var instanceof PsiReference) {$      var=((PsiReference)var).resolve();$    }$    if ((var instanceof PhpTypedElement) && ((PhpTypedElement)var).getType().equals(PhpType.STRING)) {$      objTypesSet.add(Types.strString);$    }$    storeAsTypeWithSignaturesImport(((ArrayAccessExpression)objSubjectExpression).getType().toString(),objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof NewExpression) {$    resolveNewExpression((NewExpression)objSubjectExpression,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof PsiReference) {$    PsiElement target=((PsiReference)objSubjectExpression).resolve();$    if (target instanceof PhpTypedElement) {$      storeAsTypeWithSignaturesImport(((PhpTypedElement)target).getType().toString(),objScope,objIndex,objTypesSet);$      return;$    }$  }$  if (objSubjectExpression instanceof ClassConstantReference) {$    storeAsTypeWithSignaturesImport(((ClassConstantReference)objSubjectExpression).getSignature(),objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof FieldReference) {$    storeAsTypeWithSignaturesImport(((FieldReference)objSubjectExpression).getSignature(),objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof MethodReference) {$    storeAsTypeWithSignaturesImport(((MethodReference)objSubjectExpression).getSignature(),objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof FunctionReference) {$    storeAsTypeWithSignaturesImport(((FunctionReference)objSubjectExpression).getSignature(),objScope,objIndex,objTypesSet);$    return;$  }$  if (objSubjectExpression instanceof FunctionImpl) {$    objTypesSet.add(Types.strCallable);$    return;$  }$  if (objSubjectExpression instanceof PhpExpression) {$    resolvePhpExpression((PhpExpression)objSubjectExpression,objScope,objIndex,objTypesSet);$  }$}$
public static SM_SYSTEM_MESSAGE STR_UI_COMBAT_NPC_RETURN_NOMOVE(String value0){$  return new SM_SYSTEM_MESSAGE(1300049,value0);$}$
public ObjectColumn(int nrows){$  this(Object.class,nrows,nrows,null);$}$
public static String formatTimestamp(@Nullable Date date){$  return (date != null) ? ISO8601Utils.format(date,true) : null;$}$
protected GroupsGetMembersQueryWithFields fields(List<UserField> value){$  return unsafeParam("fields",value);$}$
@Override @Transactional(value="cacheTransactionManager") public void doCreateRuleTag(ConfigurationElement element) throws IllegalAccessException {$  checkId(element.getEntityId());$  tagCache.acquireWriteLockOnKey(element.getEntityId());$  try {$    LOGGER.trace("Creating RuleTag with id " + element.getEntityId());$    RuleTag ruleTag=commonTagFacade.createCacheObject(element.getEntityId(),element.getElementProperties());$    Collection<Long> tagIds=ruleTag.getRuleInputTagIds();$    try {$      configurableDAO.insert(ruleTag);$    }$ catch (    Exception e) {$      LOGGER.error("Exception caught while inserting a new Rule into the DB - rolling back changes",e);$      throw new UnexpectedRollbackException("Unexpected exception while creating a Rule: rolling back the change",e);$    }$    try {$      for (      Long tagId : tagIds) {$        tagConfigGateway.addRuleToTag(tagId,ruleTag.getId());$      }$      tagCache.putQuiet(ruleTag);$    }$ catch (    RuntimeException e) {$      String errMessage="Exception caught while adding a RuleTag - rolling back DB transaction.";$      LOGGER.error(errMessage,e);$      tagCache.remove(ruleTag.getId());$      for (      Long tagId : tagIds) {$        try {$          tagConfigGateway.removeRuleFromTag(tagId,ruleTag.getId());$        }$ catch (        RuntimeException ex) {$          LOGGER.warn("Exception caught while attempting to role back rule creation in cache (removing references from input tags)",ex);$        }$      }$      throw new UnexpectedRollbackException(errMessage,e);$    }$  }$  finally {$    tagCache.releaseWriteLockOnKey(element.getEntityId());$  }$}$
@TargetApi(Build.VERSION_CODES.LOLLIPOP) private static boolean relaunchTask(int tabId){$  if (tabId == Tab.INVALID_TAB_ID)   return false;$  Context context=ApplicationStatus.getApplicationContext();$  ActivityManager manager=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);$  for (  AppTask task : manager.getAppTasks()) {$    RecentTaskInfo info=DocumentUtils.getTaskInfoFromTask(task);$    if (info == null)     continue;$    int id=ActivityDelegate.getTabIdFromIntent(info.baseIntent);$    if (id != tabId)     continue;$    DocumentTabModelSelector.setPrioritizedTabId(id);$    if (!moveToFront(task))     continue;$    return true;$  }$  return false;$}$
public void populateFilterResolvedInfo(DimColumnResolvedFilterInfo visitableObj,FilterResolverMetadata metadata) throws FilterUnsupportedException {$  DimColumnFilterInfo resolvedFilterObject=null;$  List<String> evaluateResultListFinal;$  try {$    evaluateResultListFinal=metadata.getExpression().evaluate(null).getListAsString();$    if (!metadata.isIncludeFilter() && !evaluateResultListFinal.contains(CarbonCommonConstants.MEMBER_DEFAULT_VAL)) {$      evaluateResultListFinal.add(CarbonCommonConstants.MEMBER_DEFAULT_VAL);$    }$  }$ catch (  FilterIllegalMemberException e) {$    throw new FilterUnsupportedException(e);$  }$  resolvedFilterObject=FilterUtil.getNoDictionaryValKeyMemberForFilter(metadata.getTableIdentifier(),metadata.getColumnExpression(),evaluateResultListFinal,metadata.isIncludeFilter());$  visitableObj.setFilterValues(resolvedFilterObject);$}$
public static <T extends RealFieldElement<T>>FieldRotation<T> applyInverseTo(final Rotation rOuter,final FieldRotation<T> rInner){$  return new FieldRotation<T>(rInner.q0.multiply(rOuter.getQ0()).add(rInner.q1.multiply(rOuter.getQ1()).add(rInner.q2.multiply(rOuter.getQ2())).add(rInner.q3.multiply(rOuter.getQ3()))).negate(),rInner.q0.multiply(rOuter.getQ1()).add(rInner.q2.multiply(rOuter.getQ3()).subtract(rInner.q3.multiply(rOuter.getQ2()))).subtract(rInner.q1.multiply(rOuter.getQ0())),rInner.q0.multiply(rOuter.getQ2()).add(rInner.q3.multiply(rOuter.getQ1()).subtract(rInner.q1.multiply(rOuter.getQ3()))).subtract(rInner.q2.multiply(rOuter.getQ0())),rInner.q0.multiply(rOuter.getQ3()).add(rInner.q1.multiply(rOuter.getQ2()).subtract(rInner.q2.multiply(rOuter.getQ1()))).subtract(rInner.q3.multiply(rOuter.getQ0())),false);$}$
private Bitmap compress(String imagePath,int width,int height){$  BitmapFactory.Options options=new BitmapFactory.Options();$  options.inJustDecodeBounds=true;$  BitmapFactory.decodeFile(imagePath,options);$  int outH=options.outHeight;$  int outW=options.outWidth;$  int inSampleSize=1;$  if (outH > height || outW > width) {$    int halfH=outH / 2;$    int halfW=outW / 2;$    while ((halfH / inSampleSize) > height && (halfW / inSampleSize) > width) {$      inSampleSize*=2;$    }$  }$  options.inSampleSize=inSampleSize;$  options.inJustDecodeBounds=false;$  int heightRatio=(int)Math.ceil(options.outHeight / (float)height);$  int widthRatio=(int)Math.ceil(options.outWidth / (float)width);$  if (heightRatio > 1 || widthRatio > 1) {$    if (heightRatio > widthRatio) {$      options.inSampleSize=heightRatio;$    }$ else {$      options.inSampleSize=widthRatio;$    }$  }$  options.inJustDecodeBounds=false;$  return BitmapFactory.decodeFile(imagePath,options);$}$
public static void writeLayout(String folder){$  if (selectedLayout != null) {$    selectedLayout.writeLayout(folder);$  }$}$
static VersionNumber identifyIOSVersion(final String userAgent){$  VersionNumber version=VersionNumber.UNKNOWN;$  final List<Pattern> patterns=new ArrayList<Pattern>();$  patterns.add(Pattern.compile("iPhone OS\\s?((\\d+)((\\_\\d+)+)?) like Mac OS X"));$  patterns.add(Pattern.compile("CPU OS\\s?((\\d+)((\\_\\d+)+)?) like Mac OS X"));$  patterns.add(Pattern.compile("iPhone OS\\s?((\\d+)((\\.\\d+)+)?);"));$  for (  final Pattern pattern : patterns) {$    final Matcher m=pattern.matcher(userAgent);$    if (m.find()) {$      version=parseFirstVersionNumber(m.group(MAJOR_INDEX).replaceAll("_","."));$      break;$    }$  }$  return version;$}$
private ColorsUtil(){$  throw new Error("Do not need instantiate!");$}$
public static void clickButtonRewiConnect(){$  RewiMod.getInstance().connectToServer("Rewinside.TV","mc.rewinside.tv",25565,false);$}$
public static void initCatalogMgr(boolean isNew,Transaction tx){$  catalogMgr=new CatalogMgr(isNew,tx);$}$
public Element generateSimpleElement(final Document document,final Object pojo,final String... attributes) throws ParserConfigurationException, IllegalAccessException, InstantiationException {$  return generateSimpleElement(document,pojo,Arrays.asList(attributes));$}$
public Mushroom(Material shroom,BlockFace capFace){$  this(shroom,MushroomBlockTexture.getCapByFace(capFace));$}$
public JSONArray names(){$  JSONArray ja=new JSONArray();$  Iterator keys=keys();$  while (keys.hasNext()) {$    ja.put(keys.next());$  }$  return ja.length() == 0 ? null : ja;$}$
public AemDialog clickTab(final String label){$  bobcatWait.withTimeout(Timeouts.BIG).until((ExpectedCondition<Object>)null,5);$  return this;$}$
public static SM_SYSTEM_MESSAGE STR_GATHER_START_2_GATHER(String value0){$  return new SM_SYSTEM_MESSAGE(1330012,value0);$}$
public MathRuntimeException(final Throwable rootCause){$  super(rootCause);$  this.pattern=getMessage();$  this.arguments=new Object[0];$}$
public void testLatestUpdatePersistedToDB(){$  DataTagCacheObject floatTag=new DataTagCacheObject();$  floatTag.setId(new Long(1000100));$  floatTag.setName("Test float tag");$  floatTag.setMode(DataTagConstants.MODE_TEST);$  floatTag.setDataType("Float");$  floatTag.setValue(new Float(10));$  floatTag.setCacheTimestamp(new Timestamp(System.currentTimeMillis() - 10));$  dataTagMapper.insertDataTag(floatTag);$  assertNotNull(dataTagMapper.getItem(floatTag.getId()));$  dataTagCache.put(floatTag.getId(),floatTag);$  DataTagCacheObject cacheObject=(DataTagCacheObject)dataTagCache.get(floatTag.getId());$  cacheObject.setValue(new Float(20));$  cacheObject.setCacheTimestamp(new Timestamp(System.currentTimeMillis() - 1));$  dataTagCache.notifyListenersOfUpdate(cacheObject);$  cacheObject.setValue(new Float(30));$  cacheObject.setCacheTimestamp(new Timestamp(System.currentTimeMillis()));$  dataTagCache.notifyListenersOfUpdate(cacheObject);$  assertEquals(new Float(30),cacheObject.getValue());$  try {$    Thread.sleep(30000);$  }$ catch (  InterruptedException e) {$    e.printStackTrace();$  }$  DataTag objectInDB=dataTagMapper.getItem(floatTag.getId());$  assertNotNull(objectInDB);$  assertEquals(new Float(30),objectInDB.getValue());$  dataTagCache.remove(floatTag.getId());$}$
public OversecAsciiArmoredOutputStream(OutputStream out,Hashtable headers){$  this(out);$  Enumeration e=headers.keys();$  while (e.hasMoreElements()) {$    Object key=e.nextElement();$    this.headers.put(key,headers.get(key));$  }$}$
public static boolean isDocumentActivity(String className){$  return TextUtils.equals(className,IncognitoDocumentActivity.class.getName()) || TextUtils.equals(className,DocumentActivity.class.getName()) || TextUtils.equals(className,LEGACY_CLASS_NAME)|| TextUtils.equals(className,LEGACY_INCOGNITO_CLASS_NAME);$}$
public static void publishAllServices() throws RpcException {$  try {$    ServicePublisher.publishAllServices();$  }$ catch (  RegistryException e) {$    throw new RpcException("error while publishing all services",e);$  }$}$
public BannedIpsExample(){$  oredCriteria=new ArrayList<Criteria>();$}$
public static void logPreferenceChange(boolean enabled){$  RecordHistogram.recordEnumeratedHistogram("Search.ContextualSearchPreferenceStateChange",enabled ? PREFERENCE_ENABLED : PREFERENCE_DISABLED,PREFERENCE_HISTOGRAM_BOUNDARY);$}$
public String showAndGetCommand(){$  setVisible(true);$  return result;$}$
public DistributionDocumentEvaluator(Map<Integer,String> mIdxToWord,grammaticalityEstimator geEstimator){$  WordMap=mIdxToWord;$  Estimator=geEstimator;$}$
public static final void emoteStopWalking(Npc owner){$  owner.unsetState(CreatureState.WALKING);$}$
private boolean permissionOnInAndroid(String permission,Context context){$  if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M)   return true;$  return PackageManager.PERMISSION_GRANTED == context.getPackageManager().checkPermission(permission,context.getPackageName());$}$
public void update(double deltaTime){$  if (is_Un_Dead) {$    Un_Dead_Cult--;$    if (Un_Dead_Cult < 0) {$      is_Un_Dead=false;$    }$  }$  if (getnDirection() == RIGHT)   velocity.set(8,0);$ else   if (getnDirection() == LEFT)   velocity.set(-8,0);$ else   if (getnDirection() == UP)   velocity.set(0,0);$  position.add(velocity.x * deltaTime,velocity.y * deltaTime);$}$
private void initResourcesIfNecessary(){$  if (centerDrawable == null) {$    centerDrawable=getContext().getResources().getDrawable(wheelForeground);$  }$  if (topShadow == null) {$    topShadow=new GradientDrawable(Orientation.TOP_BOTTOM,SHADOWS_COLORS);$  }$  if (bottomShadow == null) {$    bottomShadow=new GradientDrawable(Orientation.BOTTOM_TOP,SHADOWS_COLORS);$  }$  setBackgroundResource(wheelBackground);$}$
public static Map<String,Object> alwaysDeclineProcessor(DispatchContext dctx,Map<String,? extends Object> context){$  Locale locale=(Locale)context.get("locale");$  Map<String,Object> result=ServiceUtil.returnSuccess();$  BigDecimal processAmount=(BigDecimal)context.get("processAmount");$  Debug.logInfo("Test Processor Declining Credit Card",module);$  String refNum=UtilDateTime.nowAsString();$  result.put("authResult",Boolean.FALSE);$  result.put("processAmount",processAmount);$  result.put("authRefNum",refNum);$  result.put("authAltRefNum",refNum);$  result.put("authFlag","D");$  result.put("authMessage",UtilProperties.getMessage(resource,"AccountingPaymentTestProcessorDeclined",locale));$  return result;$}$
public IJSpace createSpace(String spaceName,final JSpaceAttributes spaceAttr) throws CreateException, RemoteException {$  if (spaceName == null)   throw new IllegalArgumentException("The spaceName parameter can not be null.");$  spaceName=spaceName.trim();$  try {$    ValidationUtils.checkServiceNameForValidation(spaceName,"Space name");$  }$ catch (  InvalidServiceNameException exc) {$    throw new CreateException("Invalid space name.",new InvalidServiceNameException(exc.getMessage()));$  }$  final String fullSpaceName=JSpaceUtilities.createFullSpaceName(_containerName,spaceName);$  System.setProperty(SystemProperties.DB_CONTAINER_NAME,_containerName);$  System.setProperty(SystemProperties.DB_SPACE_NAME,spaceName);$  SpaceImpl spaceImpl;$synchronized (_lock) {$    if (!spaceName.equalsIgnoreCase(_containerName) && _containerEntry == null && _spaceName.equals(spaceName)) {$      boolean isSpaceFileAreadyWasExists=new File(m_configDirectory + File.separator + spaceName+ ".xml").exists();$      try {$        String schemaName=spaceAttr.getSchemaName();$        if (schemaName != null) {$          String schemaFilePath=Constants.Container.CONTAINER_CONFIG_DIRECTORY + "/" + Constants.Schemas.SCHEMAS_FOLDER+ "/"+ schemaName+ Constants.Schemas.SPACE_SCHEMA_FILE_SUFFIX;$          InputStream schemaInputStream=ResourceLoader.getResourceStream(schemaFilePath);$          if (schemaInputStream == null) {$            String schemasFolderPath=Environment.createSchemasFolderIfNotExists();$            String schemaFileFullPath=schemasFolderPath + File.separator + schemaName+ Constants.Schemas.SPACE_SCHEMA_FILE_SUFFIX;$            spaceAttr.setProperty(Constants.SPACE_CONFIG_PREFIX + SCHEMA_ELEMENT,schemaName);$            File schemaFile=new File(schemaFileFullPath);$            SpaceConfigFactory.performSaveAs(schemaFile,spaceName,_containerName,spaceAttr);$          }$        }$        createSpaceXML(spaceName,spaceAttr);$        Properties spaceProperties=JProperties.getSpaceProperties(fullSpaceName);$        if (spaceAttr.getClusterConfigURL() != null && !spaceAttr.getClusterConfigURL().equals(CLUSTER_CONFIG_URL_DEFAULT)) {$          ClusterPolicy clusterPolicy=createClusterPolicy(spaceName,spaceAttr.getClusterConfigURL());$          spaceAttr.setClustered(true);$          spaceAttr.setClusterPolicy(clusterPolicy);$          spaceProperties.put(fullSpaceName + "." + Constants.SPACE_CONFIG_PREFIX+ IS_CLUSTER_SPACE_PROP,String.valueOf(spaceAttr.isClustered()));$          spaceProperties.put(fullSpaceName + "." + Constants.SPACE_CONFIG_PREFIX+ CLUSTER_CONFIG_URL_PROP,spaceAttr.getClusterConfigURL());$          JProperties.setSpaceProperties(fullSpaceName,spaceProperties);$        }$        JSpaceAttributes attr=(JSpaceAttributes)spaceAttr.clone();$        spaceImpl=createSpaceImpl(spaceName,attr);$        _containerEntry=new ContainerEntry(spaceImpl,spaceAttr);$        if (!Boolean.valueOf(spaceAttr.isPrivate()).booleanValue())         m_LookupMng.register(_containerEntry.getClusteredSpaceProxy(),_containerName);$        try {$          updateContainerXML();$        }$ catch (        Exception ex) {$          if (_logger.isLoggable(Level.WARNING))           _logger.log(Level.WARNING,"Fail to update " + _containerName + " container XML",ex);$        }$        if (isJMXEnabled())         com.j_spaces.jmx.JMXProvider.registerSpaceMBean(spaceName,spaceImpl);$        if (spaceImpl.getClusterPolicy() != null)         return this.getClusteredSpace(spaceName);$        return this.getSpace(spaceName);$      }$ catch (      Exception ex) {$        JProperties.removeSpaceProperties(fullSpaceName);$        if (!isSpaceFileAreadyWasExists) {$          File sf=new File(m_configDirectory + File.separator + spaceName+ ".xml");$          sf.delete();$        }$        if (_logger.isLoggable(Level.SEVERE))         _logger.log(Level.SEVERE,"Failed to create <" + spaceName + "> space",ex);$        throw new CreateException("Failed to create <" + spaceName + "> space",ex);$      }$    }$ else {$      if (spaceName.equalsIgnoreCase(_containerName))       throw new CreateException("Could not create space <" + spaceName + "> since its name is the same name as container.");$      throw new CreateException("Space <" + spaceName + "> already exists in <"+ _containerName+ "> container.");$    }$  }$}$
public void write(short[] data){$  for (  short unit : data) {$    write(unit);$  }$}$
@SuppressWarnings({"unchecked","cast"}) public ParMethodDecl fullCopy(){$  ParMethodDecl tree=(ParMethodDecl)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
public Response<?> response(){$  return response;$}$
public ACQUAINT2DocumentSet(String sTACXMLFile){$  DocumentBuilderFactory docBuilderFactory=DocumentBuilderFactory.newInstance();$  XMLDoc=null;$  Categories=null;$  hsDocs=null;$  hmDocsToCategories=null;$  try {$    DocumentBuilder docBuilder=docBuilderFactory.newDocumentBuilder();$    XMLDoc=docBuilder.parse(new File(sTACXMLFile));$  }$ catch (  ParserConfigurationException ex) {$    System.err.println("Invalid XML file. Details:");$    ex.printStackTrace(System.err);$  }$catch (  SAXException ex) {$    System.err.println("Invalid XML file. Details:");$    ex.printStackTrace(System.err);$  }$catch (  IOException ex) {$    System.err.println("Could not read XML file. Cause:");$    ex.printStackTrace(System.err);$  }$  if (XMLDoc == null)   return;$  hmDocsToCategories=new HashMap<String,String>();$  XMLDoc.getDocumentElement().normalize();$}$
final int measureHeightOfChildren(int widthMeasureSpec,int startPosition,int endPosition,final int maxHeight,int disallowPartialChildPosition){$  final ListAdapter adapter=mAdapter;$  if (adapter == null) {$    return mListPadding.top + mListPadding.bottom;$  }$  int returnedHeight=mListPadding.top + mListPadding.bottom;$  final int dividerHeight=((mDividerHeight > 0) && mDivider != null) ? mDividerHeight : 0;$  int prevHeightWithoutPartialChild=0;$  int i;$  View child;$  endPosition=(endPosition == NO_POSITION) ? adapter.getCount() - 1 : endPosition;$  final PLA_AbsListView.RecycleBin recycleBin=mRecycler;$  final boolean recyle=recycleOnMeasure();$  final boolean[] isScrap=mIsScrap;$  for (i=startPosition; i <= endPosition; ++i) {$    child=obtainView(i,isScrap);$    measureScrapChild(child,i,widthMeasureSpec);$    if (i > 0) {$      returnedHeight+=dividerHeight;$    }$    if (recyle && recycleBin.shouldRecycleViewType(((LayoutParams)child.getLayoutParams()).viewType)) {$      recycleBin.addScrapView(child);$    }$    returnedHeight+=child.getMeasuredHeight();$    if (returnedHeight >= maxHeight) {$      return (disallowPartialChildPosition >= 0) && (i > disallowPartialChildPosition) && (prevHeightWithoutPartialChild > 0)&& (returnedHeight != maxHeight) ? prevHeightWithoutPartialChild : maxHeight;$    }$    if ((disallowPartialChildPosition >= 0) && (i >= disallowPartialChildPosition)) {$      prevHeightWithoutPartialChild=returnedHeight;$    }$  }$  return returnedHeight;$}$
public void addSoundEvent(State event,int resId){$  mSoundMap.put(event,resId);$}$
public boolean hasBuildFile(@NotNull String moduleGradlePath){$  Module module=GradleUtil.findModuleByGradlePath(myProject,moduleGradlePath);$  if (module == null) {$    return false;$  }$  VirtualFile gradleBuildFile=GradleUtil.getGradleBuildFile(module);$  return gradleBuildFile != null && gradleBuildFile.exists();$}$
public void startScroll(int startX,int startY,int dx,int dy){$  startScroll(startX,startY,dx,dy,DEFAULT_DURATION);$}$
public void addLocations(Collection<PBLocation> locations){$  l_locations.addAll(locations);$}$
public boolean isKnownRepository(String location,boolean requireExactMatch){$  Set<String> keys=repositories.keySet();$  for (  String checkLocation : keys) {$    if (!requireExactMatch && location.indexOf(checkLocation) != -1) {$      return true;$    }$    if (location.equals(checkLocation))     return true;$  }$  return false;$}$
@Override public void deleteItem(Long id){$  alarmMapper.deleteAlarm(id);$}$
public static boolean isEqual(Double d1,Double d2){$  if (d1 == null || d2 == null) {$    return false;$  }$  return Math.abs(d1 - d2) < TOLERANCE;$}$
public long timeSinceLast(){$  long currentTime=System.currentTimeMillis();$  return currentTime - lastMessageTime;$}$
protected void updateDegrees(int e,int incr){$  if (!getEdgeTable().isValidRow(e))   return;$  int s=getSourceNode(e);$  int t=getTargetNode(e);$  if (s < 0 || t < 0)   return;$  updateDegrees(e,s,t,incr);$  if (incr < 0) {$    m_edgeTuples.invalidate(e);$  }$}$
protected AdsGetFloodStatsQuery accountId(int value){$  return unsafeParam("account_id",value);$}$
private void initializeValues(){$  IDialogSettings settings=getDialogSettings();$  if (settings != null) {$    String[] hostNames=settings.getArray(STORE_URL_ID);$    if (hostNames != null) {$      for (int i=0; i < hostNames.length; i++) {$        urlCombo.add(hostNames[i]);$      }$    }$    if (showCredentials) {$      String[] userNames=settings.getArray(STORE_USERNAME_ID);$      if (userNames != null) {$        for (int i=0; i < userNames.length; i++) {$          userCombo.add(userNames[i]);$        }$      }$    }$  }$  if (properties != null) {$    if (showCredentials) {$      String user=properties.getProperty("user");$      if (user != null) {$        userCombo.setText(user);$      }$      String password=properties.getProperty("password");$      if (password != null) {$        passwordText.setText(password);$      }$    }$    String host=properties.getProperty("url");$    if (host != null) {$      urlCombo.setText(host);$    }$  }$}$
private void generatePatternBitmap(){$  if (getBounds().width() <= 0 || getBounds().height() <= 0)   return;$  mBitmap=Util.allocateBitmap(getBounds().width(),getBounds().height());$  if (mBitmap == null)   return;$  Canvas canvas=new Canvas(mBitmap);$  Rect r=new Rect();$  boolean verticalStartWhite=true;$  for (int i=0; i <= numRectanglesVertical; i++) {$    boolean isWhite=verticalStartWhite;$    for (int j=0; j <= numRectanglesHorizontal; j++) {$      r.top=i * mRectangleSize;$      r.left=j * mRectangleSize;$      r.bottom=r.top + mRectangleSize;$      r.right=r.left + mRectangleSize;$      canvas.drawRect(r,isWhite ? mPaintWhite : mPaintGray);$      isWhite=!isWhite;$    }$    verticalStartWhite=!verticalStartWhite;$  }$}$
public Pair<String,String> next(){$  currentHeaderPosition=nextHeaderPosition;$  Pair<String,String> result=new Pair<>(nextHeader,nextSequence);$  nextHeader=nextNextHeader;$  nextHeaderPosition=nextNextHeaderPosition;$  nextSequence=null;$  nextNextHeader=null;$  if (nextHeader != null) {$    String aLine;$    try {$      while ((aLine=r.readLine()) != null) {$        if (aLine.startsWith(">")) {$          nextNextHeader=aLine;$          nextNextHeaderPosition=position;$          position+=aLine.length() + endOfLineBytes;$          break;$        }$ else {$          position+=aLine.length() + endOfLineBytes;$          parts.add(aLine);$        }$      }$      numberOfSequencesRead++;$    }$ catch (    IOException e) {$      Basic.caught(e);$    }$    nextSequence=Basic.concatenateAndRemoveWhiteSpaces(parts);$    parts.clear();$  }$ else   try {$    close();$  }$ catch (  IOException ex) {$    Basic.caught(ex);$  }$  return result;$}$
@deprecated public static int compare(CharSequence a,CharSequence b){$  int alength=a.length();$  int blength=b.length();$  int min=alength <= blength ? alength : blength;$  for (int i=0; i < min; i++) {$    int diff=a.charAt(i) - b.charAt(i);$    if (diff != 0) {$      return diff;$    }$  }$  return alength - blength;$}$
public long lowestOnBit(){$  return id & -id;$}$
public static int readLTriad(byte[] bytes){$  return (bytes[0] & 0xFF) | ((bytes[1] & 0xFF) << 8) | ((bytes[2] & 0x0F) << 16);$}$
static String encodeHighLevel(String msg,Compaction compaction,Charset encoding) throws WriterException {$  StringBuilder sb=new StringBuilder(msg.length());$  if (encoding == null) {$    encoding=DEFAULT_ENCODING;$  }$ else   if (!DEFAULT_ENCODING.equals(encoding)) {$    CharacterSetECI eci=CharacterSetECI.getCharacterSetECIByName(encoding.name());$    if (eci != null) {$      encodingECI(eci.getValue(),sb);$    }$  }$  int len=msg.length();$  int p=0;$  int textSubMode=SUBMODE_ALPHA;$  if (compaction == Compaction.TEXT) {$    encodeText(msg,p,len,sb,textSubMode);$  }$ else   if (compaction == Compaction.BYTE) {$    byte[] bytes=msg.getBytes(encoding);$    encodeBinary(bytes,p,bytes.length,BYTE_COMPACTION,sb);$  }$ else   if (compaction == Compaction.NUMERIC) {$    sb.append((char)LATCH_TO_NUMERIC);$    encodeNumeric(msg,p,len,sb);$  }$ else {$    int encodingMode=TEXT_COMPACTION;$    while (p < len) {$      int n=determineConsecutiveDigitCount(msg,p);$      if (n >= 13) {$        sb.append((char)LATCH_TO_NUMERIC);$        encodingMode=NUMERIC_COMPACTION;$        textSubMode=SUBMODE_ALPHA;$        encodeNumeric(msg,p,n,sb);$        p+=n;$      }$ else {$        int t=determineConsecutiveTextCount(msg,p);$        if (t >= 5 || n == len) {$          if (encodingMode != TEXT_COMPACTION) {$            sb.append((char)LATCH_TO_TEXT);$            encodingMode=TEXT_COMPACTION;$            textSubMode=SUBMODE_ALPHA;$          }$          textSubMode=encodeText(msg,p,t,sb,textSubMode);$          p+=t;$        }$ else {$          int b=determineConsecutiveBinaryCount(msg,p,encoding);$          if (b == 0) {$            b=1;$          }$          byte[] bytes=msg.substring(p,p + b).getBytes(encoding);$          if (bytes.length == 1 && encodingMode == TEXT_COMPACTION) {$            encodeBinary(bytes,0,1,TEXT_COMPACTION,sb);$          }$ else {$            encodeBinary(bytes,0,bytes.length,encodingMode,sb);$            encodingMode=BYTE_COMPACTION;$            textSubMode=SUBMODE_ALPHA;$          }$          p+=b;$        }$      }$    }$  }$  return sb.toString();$}$
public Builder name(String name){$  this.name=name;$  return this;$}$
public void toString(StringBuffer sb){$  sb.append(getID());$}$
@OPTIONS public Response preflightResponse(){$  return Response.ok().build();$}$
public void testRetrieveVirtualFieldWithoutSort() throws Exception {$  deleteAllDocs();$  send("addDocument","{fields: {id: 0, boost: 1.0}}");$  send("addDocument","{fields: {id: 1, boost: 2.0}}");$  send("search","{query: MatchAllDocsQuery, sort: {fields: [{field: id, reverse: true}]}, retrieveFields: [id, logboost]}");$  assertEquals(2,getInt("totalHits"));$  assertEquals(1,getInt("hits[0].fields.id"));$  assertEquals(0,getInt("hits[1].fields.id"));$  assertEquals(.6931f,getFloat("hits[0].fields.logboost"),.0001f);$  assertEquals(0.0f,getFloat("hits[1].fields.logboost"),.0001f);$}$
private void finalizeDrawables(Array<DrawableData> backup,Array<FileHandle> filesToProcess){$  for (  FileHandle file : filesToProcess) {$    DrawableData data=new DrawableData(file);$    if (!checkIfNameExists(data.name)) {$      AtlasData.getInstance().getDrawables().add(data);$    }$  }$  gatherDrawables();$  Main.instance.showDialogLoading(null);$}$
private boolean mustUpdateCoordinates(){$  boolean mustUpdate=(dataMatrix.size() == 0);$  if (previousTranspose != isTranspose()) {$    mustUpdate=true;$  }$  if (scalingType != ChartViewer.ScalingType.LINEAR)   return mustUpdate;$  if (previousTranspose != isTranspose()) {$    previousTranspose=isTranspose();$    previousClusterAttributes=false;$    previousClusterClasses=false;$  }${$    final ArrayList<String> currentClasses=new ArrayList<>();$    currentClasses.addAll(getChartData().getClassNames());$    if (!previousClasses.equals(currentClasses)) {$      mustUpdate=true;$      previousClasses.clear();$      previousClasses.addAll(currentClasses);$    }$  }${$    final ArrayList<String> currentSamples=new ArrayList<>();$    currentSamples.addAll(getChartData().getSeriesNames());$    if (!previousSamples.equals(currentSamples)) {$      mustUpdate=true;$      previousSamples.clear();$      previousSamples.addAll(currentSamples);$    }$  }${$    final Set<String> currentAttributes=new HashSet<>();$    currentAttributes.addAll(getViewer().getAttributesList().getEnabledLabels());$    if (!previousAttributes.equals(currentAttributes)) {$      mustUpdate=true;$      previousAttributes.clear();$      previousAttributes.addAll(currentAttributes);$    }$  }${$    if (!previousClusterClasses && viewer.getClassesList().isDoClustering())     mustUpdate=true;$  }${$    if (!previousClusterAttributes && viewer.getAttributesList().isDoClustering())     mustUpdate=true;$  }$  if (!mustUpdate) {$    final Set<String> currentAttributes=new HashSet<>();$    currentAttributes.addAll(getViewer().getAttributesList().getAllLabels());$    if (!currentAttributes.equals(viewer.getDir().getDocument().getSampleAttributeTable().getNumericalAttributes())) {$      viewer.getAttributesList().sync(viewer.getDir().getDocument().getSampleAttributeTable().getNumericalAttributes(),null,false);$      mustUpdate=true;$    }$  }$  return mustUpdate;$}$
public void moveFile(String file){$  File f=new File(this.tempFile);$  if (!file.startsWith("/")) {$    if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {$      file=Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + file;$    }$ else {$      file="/data/data/" + handler.cordova.getActivity().getPackageName() + "/cache/"+ file;$    }$  }$  String logMsg="renaming " + this.tempFile + " to "+ file;$  Log.d(LOG_TAG,logMsg);$  if (!f.renameTo(new File(file)))   Log.e(LOG_TAG,"FAILED " + logMsg);$}$
public static char parseNextCharacter(final String source,final ParsePosition pos){$  int index=pos.getIndex();$  final int n=source.length();$  char ret=0;$  if (index < n) {$    char c;$    do {$      c=source.charAt(index++);$    }$ while (Character.isWhitespace(c) && index < n);$    pos.setIndex(index);$    if (index < n) {$      ret=c;$    }$  }$  return ret;$}$
public CounterMovingAverage(){$  this(DEFAULT_NUMBER_OFCOUNTERS);$}$
public boolean removeHouseFromAuction(House house,boolean noSale){$  if (house.getStatus() != HouseStatus.SELL_WAIT) {$    return false;$  }$  HouseBidEntry bidEntry=null;$  HouseBidEntry playerBid=null;$  Integer lastPlayer=null;$synchronized (houseBids) {$    bidEntry=houseBids.remove(house.getObjectId());$    if (bidEntry == null) {$      return false;$    }$    lastPlayer=bidEntry.getLastBiddingPlayer();$    playerBid=playerBids.remove(lastPlayer);$  }$synchronized (bidsByIndex) {$    bidsByIndex.remove(bidEntry.getEntryIndex());$  }$  PlayerCommonData pcd=null;$  if (house.getOwnerId() != 0) {$    if (house.isInGracePeriod()) {$      house.setSellStarted(null);$    }$    pcd=getPlayerData(house.getOwnerId());$    MailFormatter.sendHouseAuctionMail(house,pcd,AuctionResult.CANCELED_BID,System.currentTimeMillis(),bidEntry.getBidPrice() + bidEntry.getRefundKinah());$    house.setStatus(HouseStatus.ACTIVE);$  }$ else {$    house.setStatus(noSale ? HouseStatus.NOSALE : HouseStatus.ACTIVE);$  }$  if (lastPlayer != null) {$    pcd=getPlayerData(lastPlayer);$    MailFormatter.sendHouseAuctionMail(house,pcd,AuctionResult.CANCELED_BID,System.currentTimeMillis(),playerBid.getBidPrice());$  }$  DAOManager.getDAO(HouseBidsDAO.class).deleteHouseBids(house.getObjectId());$  house.save();$  return true;$}$
public static S2Cap empty(){$  return new S2Cap(new S2Point(1,0,0),-1);$}$
private void checkTreeMLSchema(Schema s) throws DataIOException {$  for (int i=0; i < s.getColumnCount(); ++i) {$    Class type=s.getColumnType(i);$    if (TYPES.get(type) == null) {$      throw new DataIOException("Data type unsupported by the " + "TreeML format: " + type.getName());$    }$  }$}$
public void run(){$  double MQE=0.99d * Double.MAX_VALUE;$  double oldMQE=Double.MAX_VALUE;$  double minDistance;$  int clusterIndex=0;$  Matrix curPoint;$  int i=0;$  while (MQE < oldMQE && i < maxIterations) {$    oldMQE=MQE;$    MQE=0;$    if (i != 0) {$      for (int n=0; n < numberClusters; n++)       clusters[n].reset(clusters[n].getMeanOfElements());$    }$    for (int k=0; k < data.size(); k++) {$      curPoint=data.get(k);$      minDistance=Double.MAX_VALUE;$      for (int j=0; j < numberClusters; j++) {$        double d=clusters[j].getDistanceFromCenter(curPoint);$        if (d < minDistance) {$          minDistance=d;$          clusterIndex=j;$        }$      }$      MQE+=minDistance;$      clusters[clusterIndex].add(curPoint);$    }$    i++;$  }$  createFullCovarianceMatrices();$  existsClustering=true;$}$
public static Map<String,Object> addRoleType(DispatchContext ctx,Map<String,? extends Object> context){$  Map<String,Object> result=new HashMap<String,Object>();$  Delegator delegator=ctx.getDelegator();$  String orderId=(String)context.get("orderId");$  String partyId=(String)context.get("partyId");$  String roleTypeId=(String)context.get("roleTypeId");$  Boolean removeOld=(Boolean)context.get("removeOld");$  if (removeOld != null && removeOld.booleanValue()) {$    try {$      delegator.removeByAnd("OrderRole",UtilMisc.toMap("orderId",orderId,"roleTypeId",roleTypeId));$    }$ catch (    GenericEntityException e) {$      result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);$      result.put(ModelService.ERROR_MESSAGE,"ERROR: Could not remove old roles (" + e.getMessage() + ").");$      return result;$    }$  }$  Map<String,String> fields=UtilMisc.<String,String>toMap("orderId",orderId,"partyId",partyId,"roleTypeId",roleTypeId);$  try {$    GenericValue testValue=EntityQuery.use(delegator).from("OrderRole").where(fields).queryOne();$    if (testValue != null) {$      ServiceUtil.returnSuccess();$    }$ else {$      GenericValue value=delegator.makeValue("OrderRole",fields);$      delegator.create(value);$    }$  }$ catch (  GenericEntityException e) {$    result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_ERROR);$    result.put(ModelService.ERROR_MESSAGE,"ERROR: Could not add role to order (" + e.getMessage() + ").");$    return result;$  }$  result.put(ModelService.RESPONSE_MESSAGE,ModelService.RESPOND_SUCCESS);$  return result;$}$
private String makeOTP(){$  StringBuilder stringBuilder=new StringBuilder();$  stringBuilder.append(mOtpOneField.getText().toString());$  stringBuilder.append(mOtpTwoField.getText().toString());$  stringBuilder.append(mOtpThreeField.getText().toString());$  stringBuilder.append(mOtpFourField.getText().toString());$  return stringBuilder.toString();$}$
public void toggle(){$  toggle(false,null,null);$}$
public String toString(){$  StringBuilder strBuf=new StringBuilder();$  Iterator<E> it=iterator();$  boolean b=false;$  strBuf.append("[");$  while (it.hasNext()) {$    if (!b)     b=true;$ else     strBuf.append(", ");$    strBuf.append(it.next().toString());$  }$  strBuf.append("]");$  return strBuf.toString();$}$
private void bookmark(){$  Bookmarks.init(context);$  if (Bookmarks.bookmark(item.getId())) {$    Utils.showSnackBar(context,Utils.colorVariant(color,1.07f),R.id.coordinatorLayout,R.string.bookmarkedPlace,Snackbar.LENGTH_LONG);$    menuToolbar.findItem(R.id.bookmark).setIcon(new IconicsDrawable(this,GoogleMaterial.Icon.gmd_bookmark).paddingDp(1).color(Color.WHITE).sizeDp(24));$  }$ else {$    Utils.showSnackBar(context,Utils.colorVariant(color,1.07f),R.id.coordinatorLayout,R.string.removedPlace,Snackbar.LENGTH_LONG);$    menuToolbar.findItem(R.id.bookmark).setIcon(new IconicsDrawable(this,GoogleMaterial.Icon.gmd_bookmark_border).paddingDp(1).color(Color.WHITE).sizeDp(24));$  }$  FragmentBookmarks.loadBookmarks(context);$  Inquiry.deinit();$}$
public Record deleteRecord(RecordID rid) throws DatabaseException {$  return null;$}$
@SuppressWarnings({"unchecked","cast"}) public ParExpr fullCopy(){$  ParExpr tree=(ParExpr)copy();$  if (children != null) {$    for (int i=0; i < children.length; ++i) {$      ASTNode child=(ASTNode)children[i];$      if (child != null) {$        child=child.fullCopy();$        tree.setChild(child,i);$      }$    }$  }$  return tree;$}$
void findSubmodules(Console console) throws RepoException {$  addBackSubmodules=new ArrayList<>();$  String submoduleStatus=repo.simpleCommand("submodule","status").getStdout();$  for (  String line : Splitter.on('\n').omitEmptyStrings().split(submoduleStatus)) {$    String submoduleName=line.replaceFirst("^-[0-9a-f]{40} ","");$    if (submoduleName.equals(line)) {$      console.warn("Cannot parse line from 'git submodule status': " + line);$      continue;$    }$    if (!destinationFiles.matches(repo.getWorkTree().resolve(submoduleName))) {$      addBackSubmodules.add(submoduleName);$    }$  }$}$
private String printGFormat(double x){$  String sx, sy, sz, ret;$  int savePrecision=precision;$  int i;$  char[] ca4, ca5;$  boolean noDigits=false;$  if (Double.isInfinite(x)) {$    if (x == Double.POSITIVE_INFINITY) {$      if (leadingSign)       ca4="+Inf".toCharArray();$ else       if (leadingSpace)       ca4=" Inf".toCharArray();$ else       ca4="Inf".toCharArray();$    }$ else     ca4="-Inf".toCharArray();$    noDigits=true;$  }$ else   if (Double.isNaN(x)) {$    if (leadingSign)     ca4="+NaN".toCharArray();$ else     if (leadingSpace)     ca4=" NaN".toCharArray();$ else     ca4="NaN".toCharArray();$    noDigits=true;$  }$ else {$    if (!precisionSet)     precision=defaultDigits;$    if (precision == 0)     precision=1;$    int ePos=-1;$    if (conversionCharacter == 'g') {$      sx=eFormatString(x,'e').trim();$      ePos=sx.indexOf('e');$    }$ else {$      sx=eFormatString(x,'E').trim();$      ePos=sx.indexOf('E');$    }$    i=ePos + 1;$    int expon=0;$    if (sx.charAt(i) == '-') {$      for (++i; i < sx.length(); i++)       if (sx.charAt(i) != '0')       break;$      if (i < sx.length())       expon=-Integer.parseInt(sx.substring(i));$    }$ else {$      if (sx.charAt(i) == '+')       ++i;$      for (; i < sx.length(); i++)       if (sx.charAt(i) != '0')       break;$      if (i < sx.length())       expon=Integer.parseInt(sx.substring(i));$    }$    if (!alternateForm) {$      if (expon >= -4 && expon < precision)       sy=fFormatString(x).trim();$ else       sy=sx.substring(0,ePos);$      i=sy.length() - 1;$      for (; i >= 0; i--)       if (sy.charAt(i) != '0')       break;$      if (i >= 0 && sy.charAt(i) == '.')       i--;$      if (i == -1)       sz="0";$ else       if (!Character.isDigit(sy.charAt(i)))       sz=sy.substring(0,i + 1) + "0";$ else       sz=sy.substring(0,i + 1);$      if (expon >= -4 && expon < precision)       ret=sz;$ else       ret=sz + sx.substring(ePos);$    }$ else {$      if (expon >= -4 && expon < precision)       ret=fFormatString(x).trim();$ else       ret=sx;$    }$    if (leadingSpace)     if (x >= 0)     ret=" " + ret;$    ca4=ret.toCharArray();$  }$  ca5=applyFloatPadding(ca4,false);$  precision=savePrecision;$  return new String(ca5);$}$
public DocsSaveQuery title(String value){$  return unsafeParam("title",value);$}$
public void initialize(MediaRouteController controller){$  setRouteSelector(controller.buildMediaRouteSelector());$  setDialogFactory(new ChromeMediaRouteDialogFactory());$}$
public AppsGetFriendsListQuery fields(EnumParam... value){$  return unsafeParam("fields",value);$}$
public static void printUsage(){$  System.out.println("Usage: " + grammarAndContentAnalysis.class.getName() + "[-corpusDir=dir"+ System.getProperty("file.separator")+ "] The base directory"+ " of the corpus including the directory separator character.\n"+ "[-categoriesForGrammar=#] \t The number of categories to use for grammar extraction. Default is 2.\n"+ " -trainPercent=#.## \t The training percent to use for the grammar. Default is 0.66.\n"+ " -minNGram=# \t The min n-gram rank. Default is 3.\n"+ " -maxNGram=# \t The max n-gram rank. Default is 8.\n"+ " -partOfCorpus=#.## \t The percent of corpus to use for all "+ " experiments.\n"+ " -windowSize=# \t The neighbourhood window. Default is max(2*minNGram, maxNGram+1).\n"+ " -cache \t If selected will cache category graphs in memory. NOTE: Very memory consuming.");$}$
public void remove(String key){$  preferences.edit().remove(key).apply();$}$
static Object newInstance(String className,ClassLoader cl,boolean doFallback) throws ConfigurationError {$  try {$    Class providerClass=findProviderClass(className,cl,doFallback);$    Object instance=providerClass.newInstance();$    if (DEBUG)     debugPrintln("created new instance of " + providerClass + " using ClassLoader: "+ cl);$    return instance;$  }$ catch (  ClassNotFoundException x) {$    throw new ConfigurationError("Provider " + className + " not found",x);$  }$catch (  Exception x) {$    throw new ConfigurationError("Provider " + className + " could not be instantiated: "+ x,x);$  }$}$
@Override public double nextDouble(){$  return randomGenerator.nextDouble();$}$
public boolean matchStringConstant(){$  return '\'' == (char)tok.ttype;$}$
public AdsUpdateAdsQuery(VkApiClient client,UserActor actor,int accountId,String data){$  super(client,"ads.updateAds",Utils.buildParametrizedType(List.class,Integer.class));$  accessToken(actor.getAccessToken());$  accountId(accountId);$  data(data);$}$
public BoardGetCommentsQueryWithExtended offset(Integer value){$  return unsafeParam("offset",value);$}$
@Override public void onRequestSingleCollectionSuccess(Call<Collection> call,Response<Collection> response){$  if (response.isSuccessful() && response.body() != null) {$    Mysplash.getInstance().setCollection(response.body());$    view.dismissRequestDialog();$    view.drawBrowsableView();$  }$ else {$    requestCollection();$  }$}$
Collection<? extends ClientRequestResult> handleExecuteCommandRequest(final ClientRequest executeCommandRequest){$  final Collection<CommandReport> commandReports=new ArrayList<CommandReport>(1);$  commandReports.add(commandExecutionManager.execute((CommandExecuteRequest<?>)executeCommandRequest.getObjectParameter()));$  if (LOG.isDebugEnabled()) {$    LOG.debug("Finished executing command - returning report.");$  }$  return commandReports;$}$
public UnknownTransactionException(){$  super();$}$
public BoundingVolume merge(BoundingVolume volume){$  if (volume == null) {$    return this;$  }$switch (volume.getType()) {$case AABB:${$      BoundingBox vBox=(BoundingBox)volume;$      return merge(vBox.center,vBox.xExtent,vBox.yExtent,vBox.zExtent,new BoundingBox(new Vector3f(0,0,0),0,0,0));$    }$default :$  return null;$}$}$
public boolean contains(Object o){$  if (o == null)   return false;$  return map.containsKey(o);$}$
public static FilteredDataTagValueUpdate fromXML(final Element domElement){$  FilteredDataTagValueUpdate result=new FilteredDataTagValueUpdate();$  if (domElement.getNodeName().equals(XML_ROOT_ELEMENT)) {$    try {$      result.processId=Long.valueOf(domElement.getAttribute(XML_ATTRIBUTE_PROCESS_ID));$      if (result.processId != null) {$        Node fieldNode=null;$        NodeList fields=domElement.getChildNodes();$        int fieldsCount=fields.getLength();$        result.values=new ArrayList<>(fieldsCount);$        for (int i=0; i < fieldsCount; i++) {$          fieldNode=fields.item(i);$          if (fieldNode.getNodeType() == Node.ELEMENT_NODE && fieldNode.getNodeName().equals(FilteredDataTagValue.XML_ROOT_ELEMENT)) {$            result.values.add(FilteredDataTagValue.fromXML((Element)fieldNode));$          }$        }$      }$    }$ catch (    NumberFormatException nfe) {$      result=null;$      log.error("Cannot extract valid process-id from FilteredDataTagValueUpdate message. Returning null.");$    }$  }$ else {$    result=null;$    log.error("Cannot decode FilteredDataTagValueUpdate message. Root element is not <FilteredDataTagValueUpdate>");$  }$  return result;$}$
public WriteModifiers(WriteModifiers modifiers1,WriteModifiers modifiers2,WriteModifiers modifiers3){$  super(modifiers1,modifiers2,modifiers3);$}$
public static int floorDiv(final int a,final int b) throws MathRuntimeException {$  if (b == 0) {$    throw new MathRuntimeException(LocalizedCoreFormats.ZERO_DENOMINATOR);$  }$  final int m=a % b;$  if ((a ^ b) >= 0 || m == 0) {$    return a / b;$  }$ else {$    return (a / b) - 1;$  }$}$
private Object readResolve(){$  wakeUpQueue=new ArrayBlockingQueue<SerialMessage>(MAX_BUFFFER_SIZE,true);$  timer=new Timer();$  return this;$}$
public static void writeLines(File file,String encoding,Collection<?> lines,String lineEnding,boolean append) throws IOException {$  FileOutputStream out=null;$  try {$    out=openOutputStream(file,append);$    final BufferedOutputStream buffer=new BufferedOutputStream(out);$    IOUtils.writeLines(lines,lineEnding,buffer,encoding);$    buffer.flush();$    out.close();$  }$  finally {$    IOUtils.closeQuietly(out);$  }$}$
public void simulateMethod(SootMethod method,ReferenceVariable thisVar,ReferenceVariable returnVar,ReferenceVariable params[]){$  String subSignature=method.getSubSignature();$  if (subSignature.equals("java.lang.Object invoke(java.lang.Object,java.lang.Object[])")) {$    java_lang_reflect_Method_invoke(method,thisVar,returnVar,params);$    return;$  }$ else {$    defaultMethod(method,thisVar,returnVar,params);$    return;$  }$}$
public void info(String message){$  addLogEntry(new InfoEntry(message));$}$
public SemiVariance withBiasCorrected(boolean isBiasCorrected){$  return new SemiVariance(isBiasCorrected,this.varianceDirection);$}$
public XmlMerger(File source,File target,File baseDir){$  this.baseDir=baseDir;$  this.sourceFile=source;$  this.destFile=target;$  this.metaDataFile=new File(target.getParent(),target.getName() + ".properties");$}$
public DelegateFileFilter(FilenameFilter filter){$  if (filter == null) {$    throw new IllegalArgumentException("The FilenameFilter must not be null");$  }$  this.filenameFilter=filter;$  this.fileFilter=null;$}$
public RegisterEntriesListenerSpaceOperationRequest(){$}$
private static ImmutableList<Option<?>> buildFrameworkOptions(){$  ImmutableList.Builder<Option<?>> frameworkOptions=new ImmutableList.Builder<Option<?>>();$  frameworkOptions.add(ToolOptions.DESCRIPTOR_SET);$  frameworkOptions.add(ToolOptions.CONFIG_FILES);$  frameworkOptions.add(ConfigGeneratorDriver.BIN_OUT);$  frameworkOptions.add(ConfigGeneratorDriver.TXT_OUT);$  frameworkOptions.add(ConfigGeneratorDriver.JSON_OUT);$  frameworkOptions.add(ConfigGeneratorFromProtoDescriptor.SUPPRESS_WARNINGS);$  frameworkOptions.add(SwaggerImportTool.OPEN_API);$  frameworkOptions.add(SwaggerImportTool.SERVICE_NAME);$  frameworkOptions.add(SwaggerImportTool.METHOD_NAMESPACE);$  frameworkOptions.add(SwaggerImportTool.TYPE_NAMESPACE);$  return frameworkOptions.build();$}$
private void read(InputStream in) throws IOException {$  BufferedReader br=new BufferedReader(new InputStreamReader(in,"UTF8"));$  String line=null;$  String name=null;$  Boolean preference=null;$  isEmpty=true;$  completeNamePrefs=new HashMap(53);$  packagePrefs=new HashMap(23);$  namespacePrefs=new HashMap(11);$  if ((line=readLineTrimComments(br)) != null) {$    if (!line.startsWith(HEADER_TITLE)) {$      throw new IOException("unsupported preferred list header: " + line);$    }$ else {$      String version=line.substring(HEADER_TITLE.length(),line.length()).trim();$      if (!version.startsWith("1.")) {$        throw new IOException("preferred list major version " + "not supported");$      }$    }$    for (line=readLineTrimComments(br); line != null; line=readLineTrimComments(br)) {$      if (line.length() == 0) {$        continue;$      }$ else       if (line.startsWith(NAME_PREFIX)) {$        if (name != null) {$          throw new IOException("Preferred name without " + "preference value");$        }$        name=line.substring(NAME_PREFIX.length()).trim();$        continue;$      }$ else       if (line.startsWith(PREF_PREFIX)) {$        String value=line.substring(PREF_PREFIX.length()).trim();$        if (value.equals("")) {$          throw new IOException("Empty preference value not " + "permitted");$        }$        preference=Boolean.valueOf(value);$      }$ else {$        throw new IOException("unrecognized preference entry: " + line);$      }$      if (name == null) {$        if (preference != null) {$          if (!isEmpty) {$            throw new IOException("default preference must " + "be the first expression and can not " + "be redefined");$          }$          defaultPreference=preference;$          preference=null;$          isEmpty=false;$        }$      }$ else       if (preference != null) {$        if (name.startsWith("/") || name.startsWith("*") || name.startsWith("-")|| name.startsWith(".")) {$          throw new IOException("Invalid character " + "at name beginning: " + name);$        }$ else         if (name.endsWith("/*")) {$          mapPut(packagePrefs,name.substring(0,name.length() - 2),preference);$        }$ else         if (name.endsWith("/-")) {$          mapPut(namespacePrefs,name.substring(0,name.length() - 2),preference);$        }$ else         if (name.endsWith("/")) {$          mapPut(packagePrefs,name.substring(0,name.length() - 1),preference);$        }$ else {$          int state=(preference.booleanValue() ? NAME_PREFERRED : NAME_NOT_PREFERRED);$          mapPut(completeNamePrefs,name,new Integer(state));$        }$        preference=null;$        name=null;$      }$    }$    if (name != null) {$      throw new IOException("Preferred name without " + "preference value");$    }$  }$  if (isEmpty) {$    throw new IOException("Empty preferences list is invalid");$  }$}$
private static boolean isInCenterTargetZone(float x,float y,float left,float top,float right,float bottom){$  if (x > left && x < right && y > top && y < bottom) {$    return true;$  }$  return false;$}$
public static SM_SYSTEM_MESSAGE STR_SKILL_SUCC_DeboostHealAmount_ME_TO_SELF(String skillname){$  return new SM_SYSTEM_MESSAGE(1200347,skillname);$}$
@Override public boolean equals(Object that){$  if (this == that) {$    return true;$  }$  if (that == null) {$    return false;$  }$  if (getClass() != that.getClass()) {$    return false;$  }$  SysRoleMenu other=(SysRoleMenu)that;$  return (this.getRoleId() == null ? other.getRoleId() == null : this.getRoleId().equals(other.getRoleId())) && (this.getMenuId() == null ? other.getMenuId() == null : this.getMenuId().equals(other.getMenuId())) && (this.getPermission() == null ? other.getPermission() == null : this.getPermission().equals(other.getPermission()))&& (this.getEnable() == null ? other.getEnable() == null : this.getEnable().equals(other.getEnable()))&& (this.getRemark() == null ? other.getRemark() == null : this.getRemark().equals(other.getRemark()))&& (this.getCreateBy() == null ? other.getCreateBy() == null : this.getCreateBy().equals(other.getCreateBy()))&& (this.getCreateTime() == null ? other.getCreateTime() == null : this.getCreateTime().equals(other.getCreateTime()))&& (this.getUpdateBy() == null ? other.getUpdateBy() == null : this.getUpdateBy().equals(other.getUpdateBy()))&& (this.getUpdateTime() == null ? other.getUpdateTime() == null : this.getUpdateTime().equals(other.getUpdateTime()));$}$
XSParticleDecl traverseLocal(Element elmDecl,XSDocumentInfo schemaDoc,SchemaGrammar grammar,int allContextFlags,XSObject parent){$  XSParticleDecl particle=null;$  if (fSchemaHandler.fDeclPool != null) {$    particle=fSchemaHandler.fDeclPool.getParticleDecl();$  }$ else {$    particle=new XSParticleDecl();$  }$  if (fDeferTraversingLocalElements) {$    particle.fType=XSParticleDecl.PARTICLE_ELEMENT;$    Attr attr=elmDecl.getAttributeNode(SchemaSymbols.ATT_MINOCCURS);$    if (attr != null) {$      String min=attr.getValue();$      try {$        int m=Integer.parseInt(XMLChar.trim(min));$        if (m >= 0)         particle.fMinOccurs=m;$      }$ catch (      NumberFormatException ex) {$      }$    }$    fSchemaHandler.fillInLocalElemInfo(elmDecl,schemaDoc,allContextFlags,parent,particle);$  }$ else {$    traverseLocal(particle,elmDecl,schemaDoc,grammar,allContextFlags,parent,null);$    if (particle.fType == XSParticleDecl.PARTICLE_EMPTY)     particle=null;$  }$  return particle;$}$
@Override public void endNormalization(Service.Builder builder){$}$
public PrefixFileFilter(List<String> prefixes){$  this(prefixes,IOCase.SENSITIVE);$}$
public void removeScrollingListener(OnWheelScrollListener listener){$  scrollingListeners.remove(listener);$}$
public static long copyLarge(Reader input,Writer output,final long inputOffset,final long length,char[] buffer) throws IOException {$  if (inputOffset > 0) {$    skipFully(input,inputOffset);$  }$  if (length == 0) {$    return 0;$  }$  int bytesToRead=buffer.length;$  if (length > 0 && length < buffer.length) {$    bytesToRead=(int)length;$  }$  int read;$  long totalRead=0;$  while (bytesToRead > 0 && EOF != (read=input.read(buffer,0,bytesToRead))) {$    output.write(buffer,0,read);$    totalRead+=read;$    if (length > 0) {$      bytesToRead=(int)Math.min(length - totalRead,buffer.length);$    }$  }$  return totalRead;$}$
public void schedule(String serviceName,Map<String,? extends Object> context,long startTime,int frequency,int interval,int count,long endTime) throws JobManagerException {$  schedule(null,serviceName,context,startTime,frequency,interval,count,endTime);$}$
public boolean isApplicable(){$  return getViewer().getTabbedIndex() == ClusterViewer.PCoA_TAB_INDEX && getViewer().getPcoaTab().isIs3dMode();$}$
@SuppressFBWarnings("NP_NULL_ON_SOME_PATH") private AddEditBookmarkFragment generateBaseFragment(){$  if (getIntent() == null) {$    throw new IllegalArgumentException("intent can not be null");$  }$  Intent intent=getIntent();$  Uri intentUri=intent.getData();$  Long bookmarkId=null;$  boolean isFolder=false;$  AddEditBookmarkFragment addEditFragment;$  if (intentUri != null && intentUri.getHost().equals("editbookmark")) {$    isFolder=intentUri.getBooleanQueryParameter(BOOKMARK_IS_FOLDER_URI_PARAM,false);$    String bookmarkIdParam=intentUri.getQueryParameter(BOOKMARK_ID_URI_PARAM);$    if (bookmarkIdParam != null)     bookmarkId=Long.parseLong(bookmarkIdParam);$    addEditFragment=AddEditBookmarkFragment.newEditInstance(isFolder,bookmarkId);$  }$ else {$    Bundle extras=intent.getExtras();$    String url=null;$    String name=null;$    if (extras != null) {$      isFolder=extras.getBoolean(BOOKMARK_INTENT_IS_FOLDER,false);$      if (extras.containsKey(BOOKMARK_INTENT_TITLE)) {$        name=extras.getString(BOOKMARK_INTENT_TITLE);$      }$      if (extras.containsKey(BOOKMARK_INTENT_URL)) {$        url=extras.getString(BOOKMARK_INTENT_URL);$        url=DomDistillerUrlUtils.getOriginalUrlFromDistillerUrl(url);$      }$      if (extras.containsKey(BOOKMARK_INTENT_ID)) {$        bookmarkId=extras.getLong(BOOKMARK_INTENT_ID);$      }$    }$    addEditFragment=AddEditBookmarkFragment.newInstance(isFolder,bookmarkId,name,url);$  }$  setActionListenerOnAddEdit(addEditFragment);$  return addEditFragment;$}$
private void initLabels(){$  CompareConfiguration cc=getCompareConfiguration();$  String resourceName=resource.getName();$  setTitle(Policy.bind("SVNCompareRevisionsInput.compareResourceAndVersions",new Object[]{resourceName}));$  cc.setLeftEditable(true);$  cc.setRightEditable(false);$  String leftLabel=Policy.bind("SVNCompareRevisionsInput.workspace",new Object[]{resourceName});$  cc.setLeftLabel(leftLabel);$  String rightLabel=Policy.bind("SVNCompareRevisionsInput.repository",new Object[]{resourceName});$  cc.setRightLabel(rightLabel);$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase("set showAxes=");$  boolean show=np.getBoolean();$  np.matchIgnoreCase(";");$  final ClusterViewer viewer=getViewer();$  viewer.getPcoaTab().setShowAxes(show);$}$
protected void checkIdentityMatrix(RealMatrix m){$  for (int i=0; i < m.getRowDimension(); i++) {$    for (int j=0; j < m.getColumnDimension(); j++) {$      if (i == j) {$        Assert.assertEquals(m.getEntry(i,j),1d,0);$      }$ else {$        Assert.assertEquals(m.getEntry(i,j),0d,0);$      }$    }$  }$}$
@Px private int calculateIndicatorDotStart(){$  final int dotCount=indicatorDots.size();$  final float halfDotCount=dotCount / 2f;$  final int dotWidth=2 * dotRadius;$  final float totalDotWidth=dotWidth * halfDotCount;$  final float halfDotPaddingCount=Math.max(halfDotCount - 0.5f,0);$  final float totalDotPaddingWidth=dotPadding * halfDotPaddingCount;$  int startPosition=getWidth() / 2;$  startPosition-=totalDotWidth + totalDotPaddingWidth;$  return startPosition;$}$
public boolean isUnindexSupported(){$  return true;$}$
public static void changeSpeed(EntityLivingBase entity,UUID speedModifierUUID,String name,double modifier){$  AttributeModifier speedModifier=(new AttributeModifier(speedModifierUUID,name,modifier - 1,2));$  IAttributeInstance iattributeinstance=entity.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED);$  if (iattributeinstance.getModifier(speedModifierUUID) != null) {$    iattributeinstance.removeModifier(speedModifier);$  }$  iattributeinstance.applyModifier(speedModifier);$}$
public synchronized void recover(LogRecovery client) throws LogException {$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.entering(MultiLogManager.class.getName(),"recover",client);$  }$  if (!valid)   throw new InvalidatedLogException("Cannot recover from " + "invalidated log");$  if (client == null)   throw new IllegalArgumentException("Cannot have a <null> " + "client argument.");$  ObjectInputStream in=null;$  ArrayList recList=new ArrayList();$  try {$    if (persistenceLogger.isLoggable(Level.FINEST)) {$      persistenceLogger.log(Level.FINEST,"Recovering from: {0}",name);$    }$    in=new HeaderlessObjectInputStream(new BufferedInputStream(new FileInputStream(name)));$    this.cookie=in.readLong();$    LogRecord rec=null;$    boolean done=false;$    boolean update=true;$    try {$      while (!done) {$        rec=(LogRecord)in.readObject();$        if (rec != null) {$          recList.add(rec);$        }$ else {$          update=false;$          done=true;$          if (persistenceLogger.isLoggable(Levels.HANDLED)) {$            persistenceLogger.log(Levels.HANDLED,"Log for cookie {0} contained a null " + "record object",new Long(cookie));$          }$        }$      }$    }$ catch (    ClassNotFoundException cnfe) {$      update=false;$      if (persistenceLogger.isLoggable(Level.WARNING)) {$        persistenceLogger.log(Level.WARNING,"Problem recovering log file",cnfe);$      }$    }$catch (    ClassCastException cce) {$      update=false;$      if (persistenceLogger.isLoggable(Level.WARNING)) {$        persistenceLogger.log(Level.WARNING,"Problem recovering log file",cce);$      }$    }$catch (    EOFException eofe) {$    }$catch (    IOException ioe) {$      update=false;$      if (persistenceLogger.isLoggable(Level.WARNING)) {$        persistenceLogger.log(Level.WARNING,"Problem recovering log file",ioe);$      }$    }$    if (update) {$      for (int i=0; i < recList.size(); i++) {$        client.recover(cookie,(LogRecord)recList.get(i));$      }$    }$ else {$      if (persistenceLogger.isLoggable(Level.WARNING)) {$        persistenceLogger.log(Level.WARNING,"Skipping log recovery for",name);$      }$    }$  }$ catch (  IOException ioe) {$    if (persistenceLogger.isLoggable(Level.WARNING)) {$      persistenceLogger.log(Level.WARNING,"Problem recovering log file",ioe);$    }$  }$ finally {$    try {$      if (in != null)       in.close();$    }$ catch (    IOException ioe) {$      if (persistenceLogger.isLoggable(Levels.HANDLED)) {$        persistenceLogger.log(Levels.HANDLED,"Problem closing recovered log file",ioe);$      }$    }$    readonly=false;$  }$  if (operationsLogger.isLoggable(Level.FINER)) {$    operationsLogger.exiting(MultiLogManager.class.getName(),"recover");$  }$}$
@Override public void onClick(View v){$  if (v.getId() == R.id.ok) {$    Log_OC.d(TAG,"Clicked MOVE, start movement");$    new MoveFilesTask().execute();$  }$ else   if (v.getId() == R.id.cancel) {$    Log_OC.d(TAG,"Clicked CANCEL, bye");$    finish();$  }$ else {$    Log_OC.e(TAG,"Clicked phantom button, id: " + v.getId());$  }$}$
private static void fatalError(String msg,Throwable e) throws RemoteException {$  System.err.println(msg);$  if (e != null)   e.printStackTrace(System.err);$  throw new RemoteException(msg,e);$}$
@Override public void onRequestInitiated(int code){$  if (code == ConnectAPI.COUPON_CODE) {$    progressDialog.setMessage("Loading coupons...");$    progressDialog.show();$  }$}$
protected boolean checkTextOfOtherToken(String tag,Element currentRulePart,int position,NodeList tokens){$  Element otherToken=null;$  if (tag.equals("nextText")) {$    if (position < tokens.getLength() - 1) {$      otherToken=(Element)tokens.item(position + 1);$    }$  }$  if (nextPlusXTextPattern.matcher(tag).find()) {$    String tempString=tag.replaceAll("nextPlus","");$    String newString=tempString.replaceAll("Text","");$    int num=Integer.parseInt(newString);$    if (position < tokens.getLength() - (num + 1))     otherToken=(Element)tokens.item(position + 1 + num);$  }$  if (tag.equals("previousText")) {$    if (position > 0)     otherToken=(Element)tokens.item(position - 1);$  }$  if (previousMinusXTextPattern.matcher(tag).find()) {$    String tempString=tag.replaceAll("previousMinus","");$    String newString=tempString.replaceAll("Text","");$    int num=Integer.parseInt(newString);$    if (position > num)     otherToken=(Element)tokens.item(position - (num + 1));$  }$  if (otherToken == null)   return false;$  String otherTokenText=MaryDomUtils.tokenText(otherToken);$  return checkText(currentRulePart,otherTokenText);$}$
public SM_SKILL_ACTIVATION(int skillId,boolean isActive){$  this.skillId=skillId;$  this.isActive=isActive;$  this.unk=0;$}$
@Override public void apply(NexusStreamParser np) throws Exception {$  np.matchIgnoreCase("zoom what=");$  String what=np.getWordMatchesIgnoringCase("fit full selection");$  np.matchIgnoreCase(";");$  ClusterViewer viewer=getViewer();$  if (viewer.getSelectedComponent() instanceof ITab) {$    ITab tab=((ITab)viewer.getSelectedComponent());$    if (what.equalsIgnoreCase("fit"))     tab.zoomToFit();$ else     if (what.equalsIgnoreCase("selection")) {$      tab.zoomToSelection();$    }$ else     if (what.equalsIgnoreCase("full")) {$      GraphView graphView=viewer.getGraphView();$      graphView.fitGraphToWindow();$      graphView.trans.setScaleY(1);$    }$  }$}$
public Optional<Double> std(){$  String dataType=checkSelectedResourceTypesHaveCorrectDataType(statisticsResourceTypes);$  if (!selectedTypesHaveInstanceInSubgraph(statisticsResourceTypes,subtypes))   return Optional.empty();$  Set<String> allSubtypes=statisticsResourceTypes.stream().map(null).collect(Collectors.toSet());$  allSubtypes.addAll(subtypes);$  allSubtypes.addAll(statisticsResourceTypes);$  MindmapsComputer computer=Mindmaps.factory(Mindmaps.DEFAULT_URI,keySpace).getGraphComputer();$  ComputerResult result=computer.compute(new DegreeVertexProgram(allSubtypes),new StdMapReduce(statisticsResourceTypes,dataType));$  Map<String,Map<String,Double>> std=result.memory().get(MindmapsMapReduce.MAP_REDUCE_MEMORY_KEY);$  Map<String,Double> stdTuple=std.get(StdMapReduce.MEMORY_KEY);$  double squareSum=stdTuple.get(StdMapReduce.SQUARE_SUM);$  double sum=stdTuple.get(StdMapReduce.SUM);$  double count=stdTuple.get(StdMapReduce.COUNT);$  return Optional.of(Math.sqrt(squareSum / count - (sum / count) * (sum / count)));$}$
@Override public boolean write(Node node,LSOutput destination) throws LSException {$  if (node == null)   return false;$  XMLSerializer ser=null;$  String ver=_getXmlVersion(node);$  if (ver != null && ver.equals("1.1")) {$    if (xml11Serializer == null) {$      xml11Serializer=new XML11Serializer();$      initSerializer(xml11Serializer);$    }$    copySettings(serializer,xml11Serializer);$    ser=xml11Serializer;$  }$ else {$    ser=serializer;$  }$  String encoding=null;$  if ((encoding=destination.getEncoding()) == null) {$    encoding=_getInputEncoding(node);$    if (encoding == null) {$      encoding=_getXmlEncoding(node);$      if (encoding == null) {$        encoding="UTF-8";$      }$    }$  }$  try {$    prepareForSerialization(ser,node);$    ser._format.setEncoding(encoding);$    OutputStream outputStream=destination.getByteStream();$    Writer writer=destination.getCharacterStream();$    String uri=destination.getSystemId();$    if (writer == null) {$      if (outputStream == null) {$        if (uri == null) {$          String msg=DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"no-output-specified",null);$          if (ser.fDOMErrorHandler != null) {$            DOMErrorImpl error=new DOMErrorImpl();$            error.fType="no-output-specified";$            error.fMessage=msg;$            error.fSeverity=DOMError.SEVERITY_FATAL_ERROR;$            ser.fDOMErrorHandler.handleError(error);$          }$          throw new LSException(LSException.SERIALIZE_ERR,msg);$        }$ else {$          ser.setOutputByteStream(XMLEntityManager.createOutputStream(uri));$        }$      }$ else {$        ser.setOutputByteStream(outputStream);$      }$    }$ else {$      ser.setOutputCharStream(writer);$    }$    if (node.getNodeType() == Node.DOCUMENT_NODE)     ser.serialize((Document)node);$ else     if (node.getNodeType() == Node.DOCUMENT_FRAGMENT_NODE)     ser.serialize((DocumentFragment)node);$ else     if (node.getNodeType() == Node.ELEMENT_NODE)     ser.serialize((Element)node);$ else     return false;$  }$ catch (  UnsupportedEncodingException ue) {$    if (ser.fDOMErrorHandler != null) {$      DOMErrorImpl error=new DOMErrorImpl();$      error.fException=ue;$      error.fType="unsupported-encoding";$      error.fMessage=ue.getMessage();$      error.fSeverity=DOMError.SEVERITY_FATAL_ERROR;$      ser.fDOMErrorHandler.handleError(error);$    }$    throw new LSException(LSException.SERIALIZE_ERR,DOMMessageFormatter.formatMessage(DOMMessageFormatter.SERIALIZER_DOMAIN,"unsupported-encoding",null));$  }$catch (  LSException lse) {$    throw lse;$  }$catch (  RuntimeException e) {$    if (e == DOMNormalizer.abort) {$      return false;$    }$    throw (LSException)DOMUtil.createLSException(LSException.SERIALIZE_ERR,e).fillInStackTrace();$  }$catch (  Exception e) {$    if (ser.fDOMErrorHandler != null) {$      DOMErrorImpl error=new DOMErrorImpl();$      error.fException=e;$      error.fMessage=e.getMessage();$      error.fSeverity=DOMError.SEVERITY_ERROR;$      ser.fDOMErrorHandler.handleError(error);$    }$    throw (LSException)DOMUtil.createLSException(LSException.SERIALIZE_ERR,e).fillInStackTrace();$  }$ finally {$    ser.clearDocumentState();$  }$  return true;$}$
public static List<Double> mergeCoords(List<Double> x,List<Double> y){$  if (x.size() != y.size())   throw new IllegalArgumentException("Sample sizes must be the same for each data applyTransformToDestination.");$  List<Double> ret=new ArrayList<>();$  for (int i=0; i < x.size(); i++) {$    ret.add(x.get(i));$    ret.add(y.get(i));$  }$  return ret;$}$
public FeatureVector toFeatureVector(int unitIndex,String featureString){$  String[] featureValues=featureString.split("\\s+");$  if (featureValues.length != numByteFeatures + numShortFeatures + numContinuousFeatures)   throw new IllegalArgumentException("Expected " + (numByteFeatures + numShortFeatures + numContinuousFeatures) + " features, got "+ featureValues.length);$  byte[] bytes=new byte[numByteFeatures];$  short[] shorts=new short[numShortFeatures];$  float[] floats=new float[numContinuousFeatures];$  for (int i=0; i < numByteFeatures; i++) {$    bytes[i]=Byte.parseByte(featureValues[i]);$  }$  for (int i=0; i < numShortFeatures; i++) {$    shorts[i]=Short.parseShort(featureValues[numByteFeatures + i]);$  }$  for (int i=0; i < numContinuousFeatures; i++) {$    floats[i]=Float.parseFloat(featureValues[numByteFeatures + numShortFeatures + i]);$  }$  return new FeatureVector(bytes,shorts,floats,unitIndex);$}$
